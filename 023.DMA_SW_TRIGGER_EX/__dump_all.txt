
.\rom_0x08003000.elf:     file format elf32-littlearm
.\rom_0x08003000.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x08003000

Program Header:
0x70000001 off    0x0000a580 vaddr 0x0800a580 paddr 0x0800a580 align 2**2
         filesz 0x00000008 memsz 0x00000008 flags r--
    LOAD off    0x00000000 vaddr 0x08000000 paddr 0x08000000 align 2**15
         filesz 0x0000aa18 memsz 0x0000aa18 flags r-x
    LOAD off    0x00010000 vaddr 0x20000000 paddr 0x0800aa18 align 2**15
         filesz 0x00000584 memsz 0x0000075c flags rw-
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00007580  08003000  08003000  00003000  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .ARM.exidx    00000008  0800a580  0800a580  0000a580  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  2 .rodata       00000490  0800a588  0800a588  0000a588  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .data         00000584  20000000  0800aa18  00010000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          000001d8  20000584  0800af9c  00010584  2**2
                  ALLOC
  5 .debug_info   0000455f  00000000  00000000  00010584  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00001231  00000000  00000000  00014ae3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000180  00000000  00000000  00015d18  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000df1  00000000  00000000  00015e98  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000010d4  00000000  00000000  00016c89  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      00000030  00000000  00000000  00017d5d  2**0
                  CONTENTS, READONLY
 11 .ARM.attributes 00000031  00000000  00000000  00017d8d  2**0
                  CONTENTS, READONLY
 12 .debug_frame  000012a0  00000000  00000000  00017dc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    00000e6b  00000000  00000000  00019060  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_ranges 00000420  00000000  00000000  00019ecb  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
08003000 l    d  .text	00000000 .text
0800a580 l    d  .ARM.exidx	00000000 .ARM.exidx
0800a588 l    d  .rodata	00000000 .rodata
20000000 l    d  .data	00000000 .data
20000584 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    d  .debug_ranges	00000000 .debug_ranges
00000000 l    df *ABS*	00000000 crt0.o
20004fff l       *ABS*	00000000 RAM_END
20004c00 l       *ABS*	00000000 PSP_BASE
20004c00 l       *ABS*	00000000 MSP_LIMIT
20005000 l       *ABS*	00000000 MSP_BASE
00000400 l       *ABS*	00000000 MSP_SIZE
08003179 l       .text	00000000 _PSR
0800313a l       .text	00000000 _loop
0800316c l       .text	00000000 fmt
0800317d l       .text	00000000 _r0
08003181 l       .text	00000000 _r1
08003185 l       .text	00000000 _r2
08003189 l       .text	00000000 _r3
0800318d l       .text	00000000 _r4
08003191 l       .text	00000000 _r5
08003195 l       .text	00000000 _r6
08003199 l       .text	00000000 _r7
0800319d l       .text	00000000 _r8
080031a1 l       .text	00000000 _r9
080031a5 l       .text	00000000 _r10
080031a9 l       .text	00000000 _r11
080031ad l       .text	00000000 _r12
080031b1 l       .text	00000000 _PSP
00000000 l    df *ABS*	00000000 clock.c
00000000 l    df *ABS*	00000000 core_cm3.c
00000000 l    df *ABS*	00000000 dma.c
20000584 l       .bss	00000000 .LANCHOR0
0800a588 l       .rodata	00000000 .LANCHOR1
0800a588 l     O .rodata	0000001c DMA1_CH
20000584 l     O .bss	0000001c DMA_STATUS
00000000 l    df *ABS*	00000000 key.c
00000000 l    df *ABS*	00000000 led.c
00000000 l    df *ABS*	00000000 main.c
20000000 l       .data	00000000 .LANCHOR1
20000000 l     O .data	00000004 led.4847
00000000 l    df *ABS*	00000000 runtime.c
200006e0 l       .bss	00000000 .LANCHOR0
200006e0 l     O .bss	00000004 heap.4832
00000000 l    df *ABS*	00000000 stm32f10x_it.c
08003774 l     F .text	00000038 Stack_Dump
200006e4 l       .bss	00000000 .LANCHOR1
0800a5a4 l     O .rodata	00000020 Stack_reg
00000000 l    df *ABS*	00000000 systick.c
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 memset.c
00000000 l    df *ABS*	00000000 vsprintf.c
00000000 l    df *ABS*	00000000 impure.c
20000008 l     O .data	000000f0 impure_data
00000000 l    df *ABS*	00000000 vfprintf.c
0800a5c8 l       .rodata	00000000 .LANCHOR0
0800a5c8 l     O .rodata	00000010 blanks.6752
0800a5d8 l     O .rodata	00000010 zeroes.6753
00000000 l    df *ABS*	00000000 dtoa.c
08005ad8 l     F .text	0000014a quorem
00000000 l    df *ABS*	00000000 locale.c
200000f8 l       .data	00000000 .LANCHOR0
200000f8 l     O .data	00000020 lc_ctype_charset
2000011c l     O .data	00000020 lc_message_charset
2000013c l     O .data	00000038 lconv
00000000 l    df *ABS*	00000000 malloc.c
00000000 l    df *ABS*	00000000 mallocr.c
20000174 l       .data	00000000 .LANCHOR0
20000724 l       .bss	00000000 .LANCHOR1
00000000 l    df *ABS*	00000000 memchr-stub.c
00000000 l    df *ABS*	00000000 mlock.c
00000000 l    df *ABS*	00000000 mprec.c
0800a5e8 l       .rodata	00000000 .LANCHOR0
0800a5e8 l     O .rodata	0000000c p05.5301
00000000 l    df *ABS*	00000000 s_fpclassify.c
00000000 l    df *ABS*	00000000 sbrkr.c
00000000 l    df *ABS*	00000000 lib_a-strcmp.o
00000000 l    df *ABS*	00000000 strlen.c
00000000 l    df *ABS*	00000000 vfprintf.c
0800a710 l       .rodata	00000000 .LANCHOR0
0800a710 l     O .rodata	00000010 blanks.6696
0800a720 l     O .rodata	00000010 zeroes.6697
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 memmove.c
00000000 l    df *ABS*	00000000 mallocr.c
00000000 l    df *ABS*	00000000 reent.c
00000000 l    df *ABS*	00000000 _udivsi3.o
080092f0 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l       *ABS*	00000000 shift
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 _arm_addsubdf3.o
00000000 l    df *ABS*	00000000 _arm_muldivdf3.o
00000000 l    df *ABS*	00000000 _arm_cmpdf2.o
00000000 l    df *ABS*	00000000 _arm_fixdfsi.o
00000000 l    df *ABS*	00000000 _arm_fixunsdfsi.o
00000000 l    df *ABS*	00000000 _aeabi_uldivmod.o
00000000 l    df *ABS*	00000000 bpabi.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 libgcc2.c
00000000 l    df *ABS*	00000000 
080039cc g     F .text	00000006 EXTI2_IRQHandler
0800327c g     F .text	00000006 __set_PRIMASK
08007ad0 g     F .text	00000034 _mprec_log10
08007b4c g     F .text	0000005e __any_on
0800a6c0 g     O .rodata	00000028 __mprec_tinytens
08009dd4 g     F .text	00000012 .hidden __aeabi_dcmple
080091fc g     F .text	0000001a cleanup_glue
08009efc g     F .text	00000030 .hidden __gnu_uldivmod_helper
080034a4 g     F .text	00000026 Key_Poll_Init
08009d10 g     F .text	0000007a .hidden __cmpdf2
0800395c g     F .text	00000010 DebugMon_Handler
08009d10 g     F .text	0000007a .hidden __eqdf2
08009f2c g     F .text	00000352 .hidden __divdi3
08009880 g     F .text	0000005a .hidden __floatdidf
08004604 g     F .text	0000001a vsprintf
08003d48 g     F .text	00000006 TIM1_CC_IRQHandler
080037f0 g     F .text	0000012a HardFault_Handler
08006bb0 g     F .text	00000052 _setlocale_r
08007270 g     F .text	00000002 __malloc_unlock
08003284 g     F .text	00000006 __get_FAULTMASK
0800397c g     F .text	0000000e SysTick_Handler
080032a4 g     F .text	00000004 __REV
08003994 g     F .text	00000006 PVD_IRQHandler
08008d40 g     F .text	000000ce memmove
08003478 g     F .text	00000010 DMA1_Set_Status
08003384 g     F .text	0000002c DMA1_Stop
0800396c g     F .text	00000010 PendSV_Handler
080037e0 g     F .text	00000010 NMI_Handler
08007274 g     F .text	0000006c _Balloc
08003488 g     F .text	0000001a DMA1_Get_Status
080039d4 g     F .text	00000006 EXTI3_IRQHandler
080033b0 g     F .text	000000c8 DMA1_ISR_Enable
08009d00 g     F .text	0000008a .hidden __gtdf2
080032e0 g     F .text	00000006 __STREXW
08004474 g     F .text	00000010 Uart1_Wait_for_TX_Complete
080032c8 g     F .text	00000006 __LDREXW
20000758 g     O .bss	00000004 errno
08009d9c g     F .text	00000010 .hidden __aeabi_cdcmple
08003e84 g     F .text	0000000c SysTick_Get_Load_Time
08003670 g     F .text	000000c0 Main
20000710 g     O .bss	00000004 Uart1_Rx_Data
08003ee8 g     F .text	0000003e TIM2_Stopwatch_Start
080039e4 g     F .text	00000058 DMA1_ISR
20000640 g     O .bss	000000a0 dst1_dat
08004488 g     F .text	000000a6 memcpy
08009d8c g     F .text	00000020 .hidden __aeabi_cdrcmple
0800362c g     F .text	0000001c LED_Display
08004620 g     F .text	000014b4 _svfprintf_r
08009810 g     F .text	00000022 .hidden __floatsidf
08009d08 g     F .text	00000082 .hidden __ltdf2
08003cdc g     F .text	00000006 USB_HP_CAN_TX_IRQHandler
080039bc g     F .text	00000006 EXTI0_IRQHandler
0800365c g     F .text	00000012 LED_All_Off
08003da8 g     F .text	00000006 I2C2_EV_IRQHandler
200006e4 g     O .bss	00000004 SysTick_Flag
08009ea0 g     F .text	00000000 .hidden __aeabi_uldivmod
08007bac g     F .text	00000050 __fpclassifyd
08007a70 g     F .text	0000005e __ratio
080032b0 g     F .text	00000006 __RBIT
20000000 g       .data	00000000 __RW_BASE__
08006c4c g     F .text	00000010 malloc
080092f0 g     F .text	0000025c .hidden __udivsi3
0800a5f8 g     O .rodata	000000c8 __mprec_tens
0800393c g     F .text	00000010 UsageFault_Handler
0800328c g     F .text	00000006 __set_FAULTMASK
08006c04 g     F .text	0000000a __locale_charset
08009e60 g     F .text	00000040 .hidden __fixunsdfsi
08003cd4 g     F .text	00000006 ADC1_2_IRQHandler
20000724 g     O .bss	00000004 __malloc_top_pad
20000118 g     O .data	00000004 __mb_cur_max
080097f0 g     F .text	0000001e .hidden __aeabi_ui2d
08006c28 g     F .text	00000008 _localeconv_r
080074d0 g     F .text	00000012 __i2b
08003db8 g     F .text	00000006 SPI1_IRQHandler
08003cf4 g     F .text	00000006 CAN_SCE_IRQHandler
0800956c g     F .text	00000000 .hidden __aeabi_drsub
08007bfc g     F .text	00000026 _sbrk_r
0800399c g     F .text	00000006 TAMPER_IRQHandler
080035fc g     F .text	0000002e LED_Init
08004198 g     F .text	00000022 TIM3_Out_Stop
08009dc0 g     F .text	00000012 .hidden __aeabi_dcmplt
080031ec g     F .text	00000058 Clock_Init
20000750 g     O .bss	00000004 __malloc_max_sbrked_mem
08009834 g     F .text	0000003a .hidden __extendsfdf2
08009b30 g     F .text	000001d0 .hidden __aeabi_ddiv
08009578 g     F .text	00000276 .hidden __adddf3
20000584 g       .data	00000000 __RW_LIMIT__
080043a0 g     F .text	00000060 Uart1_Printf
08007908 g     F .text	000000ac __b2d
080098dc g     F .text	00000254 .hidden __aeabi_dmul
08003294 g     F .text	00000006 __get_CONTROL
0800a5c4 g     O .rodata	00000004 _global_impure_ptr
08008e10 g     F .text	000003ea _realloc_r
0800a280 g     F .text	00000300 .hidden __udivdi3
08003b54 g     F .text	0000005e DMA1_Channel4_IRQHandler
0800a6e8 g     O .rodata	00000028 __mprec_bigtens
080073a4 g     F .text	00000098 __s2b
080097f0 g     F .text	0000001e .hidden __floatunsidf
08003730 g     F .text	00000044 _sbrk
08007794 g     F .text	00000042 __mcmp
08004400 g     F .text	00000016 Uart1_Get_Pressed
200006e8 g     O .bss	00000020 DMA1_CH_DONE
08004430 g     F .text	00000042 Uart1_RX_Interrupt_Enable
08003e00 g     F .text	00000006 USART3_IRQHandler
080039a4 g     F .text	00000006 RTC_IRQHandler
08003244 g     F .text	00000008 __get_PSP
08003558 g     F .text	000000a4 Key_ISR_Enable
0800324c g     F .text	00000006 __set_PSP
08003c74 g     F .text	0000005e DMA1_Channel7_IRQHandler
08009218 g     F .text	000000d6 _reclaim_reent
0800743c g     F .text	0000003c __hi0bits
08009e10 g     F .text	0000004e .hidden __fixdfsi
080040dc g     F .text	00000018 TIM4_Change_Value
08003f28 g     F .text	00000026 TIM2_Stopwatch_Stop
08003d60 g     F .text	00000036 TIM4_IRQHandler
08009578 g     F .text	00000276 .hidden __aeabi_dadd
08009d08 g     F .text	00000082 .hidden __ledf2
08003cec g     F .text	00000006 CAN_RX1_IRQHandler
08007624 g     F .text	000000b8 __pow5mult
08009870 g     F .text	0000006a .hidden __aeabi_ul2d
20000720 g     O .bss	00000004 __nlocale_changed
00000000  w      *UND*	00000000 __sf_fake_stderr
080031b8 g     F .text	00000000 _HardFault_Handler
08003d98 g     F .text	00000006 I2C1_EV_IRQHandler
080030ec g     F .text	00000000 __start
080032b8 g     F .text	00000008 __LDREXB
08009dfc g     F .text	00000012 .hidden __aeabi_dcmpgt
08003c14 g     F .text	0000005e DMA1_Channel6_IRQHandler
080071dc g     F .text	00000090 memchr
08008ba8 g     F .text	00000198 _free_r
08003d58 g     F .text	00000006 TIM3_IRQHandler
080039b4 g     F .text	00000006 RCC_IRQHandler
08006c10 g     F .text	0000000c __locale_mb_cur_max
08009de8 g     F .text	00000012 .hidden __aeabi_dcmpge
08003d40 g     F .text	00000006 TIM1_TRG_COM_IRQHandler
08003a3c g     F .text	0000005a DMA1_Channel1_IRQHandler
08003274 g     F .text	00000006 __get_PRIMASK
2000071c g     O .bss	00000004 __mlocale_changed
08009574 g     F .text	0000027a .hidden __aeabi_dsub
08004098 g     F .text	00000020 TIM4_Check_Timeout
2000057c g     O .data	00000004 __malloc_sbrk_base
00000584 g       *ABS*	00000000 __RW_SIZE__
08009870 g     F .text	0000006a .hidden __floatundidf
080076dc g     F .text	000000b6 __lshift
08007ec0 g     F .text	00000104 __ssprint_r
08003e08 g     F .text	00000006 EXTI15_10_IRQHandler
2000070c g     O .bss	00000004 TIM4_Expired
0800aa18 g       *ABS*	00000000 __RW_LOAD_ADDR__
08003e20 g     F .text	00000048 SysTick_Run
080032ac g     F .text	00000004 __REVSH
080074e4 g     F .text	00000140 __multiply
20000728 g     O .bss	00000028 __malloc_current_mallinfo
080079b4 g     F .text	000000ba __d2b
080034f8 g     F .text	0000002e Key_Wait_Key_Released
200005a0 g     O .bss	000000a0 src1_dat
08009810 g     F .text	00000022 .hidden __aeabi_i2d
0800a588 g       .rodata	00000000 __RO_BASE__
080032e8 g     F .text	00000068 DMA1_Ch_Init
08009568  w    F .text	00000002 .hidden __aeabi_ldiv0
08003cfc g     F .text	00000032 EXTI9_5_IRQHandler
08009b30 g     F .text	000001d0 .hidden __divdf3
08007b04 g     F .text	00000046 __copybits
20000174 g     O .data	00000408 __malloc_av_
080098dc g     F .text	00000254 .hidden __muldf3
0800726c g     F .text	00000002 __malloc_lock
08008aa0 g     F .text	00000062 _calloc_r
08003f50 g     F .text	000000e4 TIM2_Delay
08003dc0 g     F .text	00000006 SPI2_IRQHandler
00000000  w      *UND*	00000000 __sf_fake_stdin
08003ce4 g     F .text	00000006 USB_LP_CAN_RX0_IRQHandler
08004530 g     F .text	0000009e memset
0800391c g     F .text	00000010 MemManage_Handler
20000754 g     O .bss	00000004 __malloc_max_total_mem
20000758 g       .bss	00000000 __ZI_LIMIT__
080092f0 g     F .text	00000000 .hidden __aeabi_uidiv
0800394c g     F .text	00000010 SVC_Handler
08003ea0 g     F .text	00000048 SysTick_OS_Tick
0800329c g     F .text	00000006 __set_CONTROL
08005c24 g     F .text	00000f8a _dtoa_r
08006c6c g     F .text	0000056e _malloc_r
08009880 g     F .text	0000005a .hidden __aeabi_l2d
0800435c g     F .text	00000042 Uart1_Send_String
08004320 g     F .text	0000003a Uart1_Send_Byte
080034cc g     F .text	0000002a Key_Get_Pressed
080040f4 g     F .text	0000004c TIM3_Out_Init
08003648 g     F .text	00000012 LED_All_On
08003bb4 g     F .text	0000005e DMA1_Channel5_IRQHandler
080039dc g     F .text	00000006 EXTI4_IRQHandler
08008b04 g     F .text	000000a2 _malloc_trim_r
08007c24 g     F .text	00000000 strcmp
08003254 g     F .text	00000008 __get_MSP
0800aa18 g       .rodata	00000000 __RO_LIMIT__
08009d10 g     F .text	0000007a .hidden __nedf2
20000708 g     O .bss	00000004 Key_Value
20000718 g     O .bss	00000004 _PathLocale
080045d0 g     F .text	00000032 _vsprintf_r
08003af4 g     F .text	0000005e DMA1_Channel3_IRQHandler
08006c30 g     F .text	00000012 setlocale
080032a8 g     F .text	00000004 __REV16
20000004 g     O .data	00000004 _impure_ptr
08003d38 g     F .text	00000006 TIM1_UP_IRQHandler
08006c24 g     F .text	00000004 __locale_cjk_lang
08007fc4 g     F .text	00000adc _svfiprintf_r
000001d8 g       *ABS*	00000000 __ZI_SIZE__
0800398c g     F .text	00000006 WWDG_IRQHandler
0800325c g     F .text	00000006 __set_MSP
080078c4 g     F .text	00000042 __ulp
08003e90 g     F .text	0000000e SysTick_Stop
08003d50 g     F .text	00000006 TIM2_IRQHandler
08009e60 g     F .text	00000040 .hidden __aeabi_d2uiz
20000584 g       .bss	00000000 __ZI_BASE__
08006c44 g     F .text	00000008 localeconv
08003d30 g     F .text	00000006 TIM1_BRK_IRQHandler
0800954c g     F .text	0000001a .hidden __aeabi_uidivmod
080039c4 g     F .text	00000006 EXTI1_IRQHandler
0800326c g     F .text	00000006 __set_BASEPRI
08009dac g     F .text	00000012 .hidden __aeabi_dcmpeq
080040b8 g     F .text	00000022 TIM4_Stop
08003528 g     F .text	0000002e Key_Wait_Key_Pressed
08004268 g     F .text	000000b8 Uart1_Init
08003e10 g     F .text	00000006 RTCAlarm_IRQHandler
08003df8 g     F .text	00000006 USART2_IRQHandler
20000580 g     O .data	00000004 __malloc_trim_threshold
08006c1c g     F .text	00000008 __locale_msgcharset
080032d8 g     F .text	00000008 __STREXH
080077d8 g     F .text	000000ea __mdiff
08009e10 g     F .text	0000004e .hidden __aeabi_d2iz
080032c0 g     F .text	00000008 __LDREXH
08003db0 g     F .text	00000006 I2C2_ER_IRQHandler
08003a98 g     F .text	0000005c DMA1_Channel2_IRQHandler
00000000  w      *UND*	00000000 __sf_fake_stdout
20000714 g     O .bss	00000004 Uart1_Rx_In
08009568  w    F .text	00000002 .hidden __aeabi_idiv0
08003350 g     F .text	00000032 DMA1_Start
080039ac g     F .text	00000006 FLASH_IRQHandler
0800392c g     F .text	00000010 BusFault_Handler
08003dc8 g     F .text	00000030 USART1_IRQHandler
08003e78 g     F .text	0000000c SysTick_Get_Time
08007e60 g     F .text	0000005e strlen
080041bc g     F .text	000000a8 TIM4_Repeat_Interrupt_Enable
08003264 g     F .text	00000006 __get_BASEPRI
08009d9c g     F .text	00000010 .hidden __aeabi_cdcmpeq
08009d00 g     F .text	0000008a .hidden __gedf2
08004418 g     F .text	00000018 Uart1_Get_Char
08004034 g     F .text	00000062 TIM4_Repeat
08009ecc g     F .text	00000030 .hidden __gnu_ldivmod_helper
08003da0 g     F .text	00000006 I2C1_ER_IRQHandler
08004140 g     F .text	00000058 TIM3_Out_Freq_Generation
08009834 g     F .text	0000003a .hidden __aeabi_f2d
080032d0 g     F .text	00000008 __STREXB
08009574 g     F .text	0000027a .hidden __subdf3
08003126 g     F .text	00000000 _Print_Reg
08007478 g     F .text	00000056 __lo0bits
080037ac g     F .text	00000032 Invalid_ISR
08003e68 g     F .text	00000010 SysTick_Check_Timeout
08003e18 g     F .text	00000006 USBWakeUp_IRQHandler
08006c5c g     F .text	00000010 free
08007318 g     F .text	0000008c __multadd
080072e0 g     F .text	00000036 _Bfree



Disassembly of section .text:

08003000 <__start-0xec>:
 8003000:	20005000 	andcs	r5, r0, r0
 8003004:	080030ed 	stmdaeq	r0, {r0, r2, r3, r5, r6, r7, ip, sp}
 8003008:	00000000 	andeq	r0, r0, r0
 800300c:	080031b9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, ip, sp}
	...
 800303c:	0800397d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r8, fp, ip, sp}
 8003040:	0800398d 	stmdaeq	r0, {r0, r2, r3, r7, r8, fp, ip, sp}
 8003044:	08003995 	stmdaeq	r0, {r0, r2, r4, r7, r8, fp, ip, sp}
 8003048:	0800399d 	stmdaeq	r0, {r0, r2, r3, r4, r7, r8, fp, ip, sp}
 800304c:	080039a5 	stmdaeq	r0, {r0, r2, r5, r7, r8, fp, ip, sp}
 8003050:	080039ad 	stmdaeq	r0, {r0, r2, r3, r5, r7, r8, fp, ip, sp}
 8003054:	080039b5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, fp, ip, sp}
 8003058:	080039bd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r7, r8, fp, ip, sp}
 800305c:	080039c5 	stmdaeq	r0, {r0, r2, r6, r7, r8, fp, ip, sp}
 8003060:	080039cd 	stmdaeq	r0, {r0, r2, r3, r6, r7, r8, fp, ip, sp}
 8003064:	080039d5 	stmdaeq	r0, {r0, r2, r4, r6, r7, r8, fp, ip, sp}
 8003068:	080039dd 	stmdaeq	r0, {r0, r2, r3, r4, r6, r7, r8, fp, ip, sp}
 800306c:	08003a3d 	stmdaeq	r0, {r0, r2, r3, r4, r5, r9, fp, ip, sp}
 8003070:	08003a99 	stmdaeq	r0, {r0, r3, r4, r7, r9, fp, ip, sp}
 8003074:	08003af5 	stmdaeq	r0, {r0, r2, r4, r5, r6, r7, r9, fp, ip, sp}
 8003078:	08003b55 	stmdaeq	r0, {r0, r2, r4, r6, r8, r9, fp, ip, sp}
 800307c:	08003bb5 	stmdaeq	r0, {r0, r2, r4, r5, r7, r8, r9, fp, ip, sp}
 8003080:	08003c15 	stmdaeq	r0, {r0, r2, r4, sl, fp, ip, sp}
 8003084:	08003c75 	stmdaeq	r0, {r0, r2, r4, r5, r6, sl, fp, ip, sp}
 8003088:	08003cd5 	stmdaeq	r0, {r0, r2, r4, r6, r7, sl, fp, ip, sp}
	...
 800309c:	08003cfd 	stmdaeq	r0, {r0, r2, r3, r4, r5, r6, r7, sl, fp, ip, sp}
 80030a0:	08003d31 	stmdaeq	r0, {r0, r4, r5, r8, sl, fp, ip, sp}
 80030a4:	08003d39 	stmdaeq	r0, {r0, r3, r4, r5, r8, sl, fp, ip, sp}
 80030a8:	08003d41 	stmdaeq	r0, {r0, r6, r8, sl, fp, ip, sp}
 80030ac:	08003d49 	stmdaeq	r0, {r0, r3, r6, r8, sl, fp, ip, sp}
 80030b0:	08003d51 	stmdaeq	r0, {r0, r4, r6, r8, sl, fp, ip, sp}
 80030b4:	08003d59 	stmdaeq	r0, {r0, r3, r4, r6, r8, sl, fp, ip, sp}
 80030b8:	08003d61 	stmdaeq	r0, {r0, r5, r6, r8, sl, fp, ip, sp}
 80030bc:	08003d99 	stmdaeq	r0, {r0, r3, r4, r7, r8, sl, fp, ip, sp}
 80030c0:	08003da1 	stmdaeq	r0, {r0, r5, r7, r8, sl, fp, ip, sp}
 80030c4:	08003da9 	stmdaeq	r0, {r0, r3, r5, r7, r8, sl, fp, ip, sp}
 80030c8:	08003db1 	stmdaeq	r0, {r0, r4, r5, r7, r8, sl, fp, ip, sp}
 80030cc:	08003db9 	stmdaeq	r0, {r0, r3, r4, r5, r7, r8, sl, fp, ip, sp}
 80030d0:	08003dc1 	stmdaeq	r0, {r0, r6, r7, r8, sl, fp, ip, sp}
 80030d4:	08003dc9 	stmdaeq	r0, {r0, r3, r6, r7, r8, sl, fp, ip, sp}
 80030d8:	08003df9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, sl, fp, ip, sp}
 80030dc:	08003e01 	stmdaeq	r0, {r0, r9, sl, fp, ip, sp}
 80030e0:	08003e09 	stmdaeq	r0, {r0, r3, r9, sl, fp, ip, sp}
 80030e4:	08003e11 	stmdaeq	r0, {r0, r4, r9, sl, fp, ip, sp}
 80030e8:	08003e19 	stmdaeq	r0, {r0, r3, r4, r9, sl, fp, ip, sp}

080030ec <__start>:
	.extern __RO_LIMIT__
	.extern __RW_BASE__
	.extern __ZI_BASE__
	.extern __ZI_LIMIT__

	ldr		r0, =__RO_LIMIT__
 80030ec:	4837      	ldr	r0, [pc, #220]	; (80031cc <_HardFault_Handler+0x14>)
	ldr		r1, =__RW_BASE__
 80030ee:	4938      	ldr	r1, [pc, #224]	; (80031d0 <_HardFault_Handler+0x18>)
	ldr		r3, =__ZI_BASE__
 80030f0:	4b38      	ldr	r3, [pc, #224]	; (80031d4 <_HardFault_Handler+0x1c>)

	cmp		r0, r1
 80030f2:	4288      	cmp	r0, r1
	beq		2f
 80030f4:	d006      	beq.n	8003104 <__start+0x18>

1:
	cmp		r1, r3
 80030f6:	4299      	cmp	r1, r3
	ittt	lo
 80030f8:	bf3e      	ittt	cc
	ldrlo	r2, [r0], #4
 80030fa:	f850 2b04 	ldrcc.w	r2, [r0], #4
	strlo	r2, [r1], #4
 80030fe:	f841 2b04 	strcc.w	r2, [r1], #4
	blo		1b
 8003102:	e7f8      	bcc.n	80030f6 <__start+0xa>

2:
	ldr		r1, =__ZI_LIMIT__
 8003104:	4934      	ldr	r1, [pc, #208]	; (80031d8 <_HardFault_Handler+0x20>)
	mov		r2, #0x0
 8003106:	f04f 0200 	mov.w	r2, #0
3:
	cmp		r3, r1
 800310a:	428b      	cmp	r3, r1
	itt		lo
 800310c:	bf3c      	itt	cc
	strlo	r2, [r3], #4
 800310e:	f843 2b04 	strcc.w	r2, [r3], #4
	blo		3b
 8003112:	e7fa      	bcc.n	800310a <__start+0x1e>
	.equ PSP_BASE,	(MSP_LIMIT)
	.equ MSP_BASE,	(RAM_END + 1)
	.equ MSP_SIZE,	(1*1024)
	.equ MSP_LIMIT,	(MSP_BASE - MSP_SIZE)

	ldr		r0, =PSP_BASE
 8003114:	4831      	ldr	r0, [pc, #196]	; (80031dc <_HardFault_Handler+0x24>)
	msr		psp, r0
 8003116:	f380 8809 	msr	PSP, r0
	ldr		r0, =(0x1<<1)|(0x0<<0)
 800311a:	4831      	ldr	r0, [pc, #196]	; (80031e0 <_HardFault_Handler+0x28>)
	msr		control, r0
 800311c:	f380 8814 	msr	CONTROL, r0

	bl		Main
 8003120:	f000 faa6 	bl	8003670 <Main>

	b		.
 8003124:	e7fe      	b.n	8003124 <__start+0x38>

08003126 <_Print_Reg>:
    .extern	Uart1_Printf

    .global _Print_Reg
  	.type 	_Print_Reg, %function
_Print_Reg:
    PUSH	{r0-r12,lr}
 8003126:	e92d 5fff 	stmdb	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
    MRS     r1, PSR
 800312a:	f3ef 8103 	mrs	r1, PSR
    PUSH    {r0, r1}
 800312e:	b403      	push	{r0, r1}

    MOV     r6, #14
 8003130:	f04f 060e 	mov.w	r6, #14
    MOV     r4, #4
 8003134:	f04f 0404 	mov.w	r4, #4
    LDR     r5, =_PSR
 8003138:	4d2a      	ldr	r5, [pc, #168]	; (80031e4 <_HardFault_Handler+0x2c>)

0800313a <_loop>:
_loop:
    LDR     r0, =fmt
 800313a:	482b      	ldr	r0, [pc, #172]	; (80031e8 <_HardFault_Handler+0x30>)
    MOV     r1, r5
 800313c:	4629      	mov	r1, r5
    LDR     r2, [sp, r4]
 800313e:	f85d 2004 	ldr.w	r2, [sp, r4]
    BL      Uart1_Printf
 8003142:	f001 f92d 	bl	80043a0 <Uart1_Printf>

    ADD     r4, r4, #4
 8003146:	f104 0404 	add.w	r4, r4, #4
    ADD     r5, r5, #4
 800314a:	f105 0504 	add.w	r5, r5, #4
    SUBS    r6, r6, #1
 800314e:	3e01      	subs	r6, #1
    BGT     _loop
 8003150:	dcf3      	bgt.n	800313a <_loop>

    LDR     r0, =fmt
 8003152:	4825      	ldr	r0, [pc, #148]	; (80031e8 <_HardFault_Handler+0x30>)
    MOV     r1, r5
 8003154:	4629      	mov	r1, r5
    MRS     r2, psp
 8003156:	f3ef 8209 	mrs	r2, PSP
    BL      Uart1_Printf
 800315a:	f001 f921 	bl	80043a0 <Uart1_Printf>

    POP     {r0, r1}
 800315e:	bc03      	pop	{r0, r1}
	MSR     APSR_nzcvq, r1
 8003160:	f381 8800 	msr	CPSR_f, r1
	MSR     IEPSR, r1
 8003164:	f381 8807 	msr	IEPSR, r1
    POP		{r0-r12, pc}
 8003168:	e8bd 9fff 	ldmia.w	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}

0800316c <fmt>:
 800316c:	3a207325 	bcc	881fe08 <__RW_LOAD_ADDR__+0x8153f0>
 8003170:	25783020 	ldrbcs	r3, [r8, #-32]!	; 0xffffffe0
 8003174:	0a58382e 	beq	9611234 <__RW_LOAD_ADDR__+0x160681c>
	...

08003179 <_PSR>:
 8003179:	00525350 	subseq	r5, r2, r0, asr r3

0800317d <_r0>:
 800317d:	00303052 	eorseq	r3, r0, r2, asr r0

08003181 <_r1>:
 8003181:	00313052 	eorseq	r3, r1, r2, asr r0

08003185 <_r2>:
 8003185:	00323052 	eorseq	r3, r2, r2, asr r0

08003189 <_r3>:
 8003189:	00333052 	eorseq	r3, r3, r2, asr r0

0800318d <_r4>:
 800318d:	00343052 	eorseq	r3, r4, r2, asr r0

08003191 <_r5>:
 8003191:	00353052 	eorseq	r3, r5, r2, asr r0

08003195 <_r6>:
 8003195:	00363052 	eorseq	r3, r6, r2, asr r0

08003199 <_r7>:
 8003199:	00373052 	eorseq	r3, r7, r2, asr r0

0800319d <_r8>:
 800319d:	00383052 	eorseq	r3, r8, r2, asr r0

080031a1 <_r9>:
 80031a1:	00393052 	eorseq	r3, r9, r2, asr r0

080031a5 <_r10>:
 80031a5:	00303152 	eorseq	r3, r0, r2, asr r1

080031a9 <_r11>:
 80031a9:	00313152 	eorseq	r3, r1, r2, asr r1

080031ad <_r12>:
 80031ad:	00323152 	eorseq	r3, r2, r2, asr r1

080031b1 <_PSP>:
 80031b1:	00505350 	subseq	r5, r0, r0, asr r3
 80031b5:	01bf0000 			; <UNDEFINED> instruction: 0x01bf0000

080031b8 <_HardFault_Handler>:

    .global _HardFault_Handler
  	.type 	_HardFault_Handler, %function
_HardFault_Handler:

	PUSH	{r0, lr}
 80031b8:	b501      	push	{r0, lr}
	BL    	_Print_Reg
 80031ba:	f7ff ffb4 	bl	8003126 <_Print_Reg>
	ADD   	r0, sp, #8
 80031be:	a802      	add	r0, sp, #8
	LDR   	r1, [sp, #4]
 80031c0:	9901      	ldr	r1, [sp, #4]
	MRS   	r2, psp
 80031c2:	f3ef 8209 	mrs	r2, PSP
	BL    	HardFault_Handler
 80031c6:	f000 fb13 	bl	80037f0 <HardFault_Handler>
	POP	 	{r0, pc}
 80031ca:	bd01      	pop	{r0, pc}
	.extern __RO_LIMIT__
	.extern __RW_BASE__
	.extern __ZI_BASE__
	.extern __ZI_LIMIT__

	ldr		r0, =__RO_LIMIT__
 80031cc:	0800aa18 	stmdaeq	r0, {r3, r4, r9, fp, sp, pc}
	ldr		r1, =__RW_BASE__
 80031d0:	20000000 	andcs	r0, r0, r0
	ldr		r3, =__ZI_BASE__
 80031d4:	20000584 	andcs	r0, r0, r4, lsl #11
	ldrlo	r2, [r0], #4
	strlo	r2, [r1], #4
	blo		1b

2:
	ldr		r1, =__ZI_LIMIT__
 80031d8:	20000758 	andcs	r0, r0, r8, asr r7
	.equ PSP_BASE,	(MSP_LIMIT)
	.equ MSP_BASE,	(RAM_END + 1)
	.equ MSP_SIZE,	(1*1024)
	.equ MSP_LIMIT,	(MSP_BASE - MSP_SIZE)

	ldr		r0, =PSP_BASE
 80031dc:	20004c00 	andcs	r4, r0, r0, lsl #24
	msr		psp, r0
	ldr		r0, =(0x1<<1)|(0x0<<0)
 80031e0:	00000002 	andeq	r0, r0, r2
    MRS     r1, PSR
    PUSH    {r0, r1}

    MOV     r6, #14
    MOV     r4, #4
    LDR     r5, =_PSR
 80031e4:	08003179 	stmdaeq	r0, {r0, r3, r4, r5, r6, r8, ip, sp}
_loop:
    LDR     r0, =fmt
 80031e8:	0800316c 	stmdaeq	r0, {r2, r3, r5, r6, r8, ip, sp}

080031ec <Clock_Init>:
#include "device_driver.h"

void Clock_Init(void)
{
	RCC->CR = 0x1;
 80031ec:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80031f0:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80031f4:	2201      	movs	r2, #1
 80031f6:	601a      	str	r2, [r3, #0]
	Macro_Set_Bit(RCC->CR, 16);
 80031f8:	6819      	ldr	r1, [r3, #0]
	RCC->CFGR = ((9-2)<<18)|(0<<17)|(1<<16)|(0<<11)|(4<<8)|(0<<4)|(0<<0);
 80031fa:	f44f 6280 	mov.w	r2, #1024	; 0x400
#include "device_driver.h"

void Clock_Init(void)
{
	RCC->CR = 0x1;
	Macro_Set_Bit(RCC->CR, 16);
 80031fe:	f441 3180 	orr.w	r1, r1, #65536	; 0x10000
	RCC->CFGR = ((9-2)<<18)|(0<<17)|(1<<16)|(0<<11)|(4<<8)|(0<<4)|(0<<0);
 8003202:	f2c0 021d 	movt	r2, #29
#include "device_driver.h"

void Clock_Init(void)
{
	RCC->CR = 0x1;
	Macro_Set_Bit(RCC->CR, 16);
 8003206:	6019      	str	r1, [r3, #0]
	RCC->CFGR = ((9-2)<<18)|(0<<17)|(1<<16)|(0<<11)|(4<<8)|(0<<4)|(0<<0);
 8003208:	605a      	str	r2, [r3, #4]
	Macro_Set_Bit(RCC->CR, 24);
 800320a:	681a      	ldr	r2, [r3, #0]
	while(!Macro_Check_Bit_Set(RCC->CR, 25));
 800320c:	4619      	mov	r1, r3
void Clock_Init(void)
{
	RCC->CR = 0x1;
	Macro_Set_Bit(RCC->CR, 16);
	RCC->CFGR = ((9-2)<<18)|(0<<17)|(1<<16)|(0<<11)|(4<<8)|(0<<4)|(0<<0);
	Macro_Set_Bit(RCC->CR, 24);
 800320e:	f042 7280 	orr.w	r2, r2, #16777216	; 0x1000000
 8003212:	601a      	str	r2, [r3, #0]
	while(!Macro_Check_Bit_Set(RCC->CR, 25));
 8003214:	680a      	ldr	r2, [r1, #0]
 8003216:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800321a:	0192      	lsls	r2, r2, #6
 800321c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003220:	d5f8      	bpl.n	8003214 <Clock_Init+0x28>
    Macro_Write_Block(FLASH->ACR, 0x3, 0x2, 0);
 8003222:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 8003226:	f2c4 0202 	movt	r2, #16386	; 0x4002
 800322a:	6811      	ldr	r1, [r2, #0]
 800322c:	f021 0103 	bic.w	r1, r1, #3
 8003230:	f041 0102 	orr.w	r1, r1, #2
 8003234:	6011      	str	r1, [r2, #0]
	Macro_Write_Block(RCC->CFGR, 0x3, 0x2, 0);
 8003236:	685a      	ldr	r2, [r3, #4]
 8003238:	f022 0203 	bic.w	r2, r2, #3
 800323c:	f042 0202 	orr.w	r2, r2, #2
 8003240:	605a      	str	r2, [r3, #4]
 8003242:	4770      	bx	lr

08003244 <__get_PSP>:
uint32_t __get_PSP(void) __attribute__( ( naked ) );
uint32_t __get_PSP(void)
{
  uint32_t result=0;

  __ASM volatile ("MRS %0, psp\n\t" 
 8003244:	f3ef 8009 	mrs	r0, PSP
 8003248:	4600      	mov	r0, r0
 800324a:	4770      	bx	lr

0800324c <__set_PSP>:
 * (process stack pointer) Cortex processor register
 */
void __set_PSP(uint32_t topOfProcStack) __attribute__( ( naked ) );
void __set_PSP(uint32_t topOfProcStack)
{
  __ASM volatile ("MSR psp, %0\n\t"
 800324c:	f380 8809 	msr	PSP, r0
 8003250:	4770      	bx	lr
 8003252:	bf00      	nop

08003254 <__get_MSP>:
uint32_t __get_MSP(void) __attribute__( ( naked ) );
uint32_t __get_MSP(void)
{
  uint32_t result=0;

  __ASM volatile ("MRS %0, msp\n\t" 
 8003254:	f3ef 8008 	mrs	r0, MSP
 8003258:	4600      	mov	r0, r0
 800325a:	4770      	bx	lr

0800325c <__set_MSP>:
 * (main stack pointer) Cortex processor register
 */
void __set_MSP(uint32_t topOfMainStack) __attribute__( ( naked ) );
void __set_MSP(uint32_t topOfMainStack)
{
  __ASM volatile ("MSR msp, %0\n\t"
 800325c:	f380 8808 	msr	MSP, r0
 8003260:	4770      	bx	lr
 8003262:	bf00      	nop

08003264 <__get_BASEPRI>:
 */
uint32_t __get_BASEPRI(void)
{
  uint32_t result=0;
  
  __ASM volatile ("MRS %0, basepri_max" : "=r" (result) );
 8003264:	f3ef 8012 	mrs	r0, BASEPRI_MAX
  return(result);
}
 8003268:	4770      	bx	lr
 800326a:	bf00      	nop

0800326c <__set_BASEPRI>:
 *
 * Set the base priority register
 */
void __set_BASEPRI(uint32_t value)
{
  __ASM volatile ("MSR basepri, %0" : : "r" (value) );
 800326c:	f380 8811 	msr	BASEPRI, r0
 8003270:	4770      	bx	lr
 8003272:	bf00      	nop

08003274 <__get_PRIMASK>:
 */
uint32_t __get_PRIMASK(void)
{
  uint32_t result=0;

  __ASM volatile ("MRS %0, primask" : "=r" (result) );
 8003274:	f3ef 8010 	mrs	r0, PRIMASK
  return(result);
}
 8003278:	4770      	bx	lr
 800327a:	bf00      	nop

0800327c <__set_PRIMASK>:
 *
 * Set the priority mask bit in the priority mask register
 */
void __set_PRIMASK(uint32_t priMask)
{
  __ASM volatile ("MSR primask, %0" : : "r" (priMask) );
 800327c:	f380 8810 	msr	PRIMASK, r0
 8003280:	4770      	bx	lr
 8003282:	bf00      	nop

08003284 <__get_FAULTMASK>:
 */
uint32_t __get_FAULTMASK(void)
{
  uint32_t result=0;
  
  __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 8003284:	f3ef 8013 	mrs	r0, FAULTMASK
  return(result);
}
 8003288:	4770      	bx	lr
 800328a:	bf00      	nop

0800328c <__set_FAULTMASK>:
 *
 * Set the fault mask register
 */
void __set_FAULTMASK(uint32_t faultMask)
{
  __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) );
 800328c:	f380 8813 	msr	FAULTMASK, r0
 8003290:	4770      	bx	lr
 8003292:	bf00      	nop

08003294 <__get_CONTROL>:
 */
uint32_t __get_CONTROL(void)
{
  uint32_t result=0;

  __ASM volatile ("MRS %0, control" : "=r" (result) );
 8003294:	f3ef 8014 	mrs	r0, CONTROL
  return(result);
}
 8003298:	4770      	bx	lr
 800329a:	bf00      	nop

0800329c <__set_CONTROL>:
 *
 * Set the control register
 */
void __set_CONTROL(uint32_t control)
{
  __ASM volatile ("MSR control, %0" : : "r" (control) );
 800329c:	f380 8814 	msr	CONTROL, r0
 80032a0:	4770      	bx	lr
 80032a2:	bf00      	nop

080032a4 <__REV>:
 */
uint32_t __REV(uint32_t value)
{
  uint32_t result=0;
  
  __ASM volatile ("rev %0, %1" : "=r" (result) : "r" (value) );
 80032a4:	ba00      	rev	r0, r0
  return(result);
}
 80032a6:	4770      	bx	lr

080032a8 <__REV16>:
 */
uint32_t __REV16(uint16_t value)
{
  uint32_t result=0;
  
  __ASM volatile ("rev16 %0, %1" : "=r" (result) : "r" (value) );
 80032a8:	ba40      	rev16	r0, r0
  return(result);
}
 80032aa:	4770      	bx	lr

080032ac <__REVSH>:
 */
int32_t __REVSH(int16_t value)
{
  uint32_t result=0;
  
  __ASM volatile ("revsh %0, %1" : "=r" (result) : "r" (value) );
 80032ac:	bac0      	revsh	r0, r0
  return(result);
}
 80032ae:	4770      	bx	lr

080032b0 <__RBIT>:
 */
uint32_t __RBIT(uint32_t value)
{
  uint32_t result=0;
  
   __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 80032b0:	fa90 f0a0 	rbit	r0, r0
   return(result);
}
 80032b4:	4770      	bx	lr
 80032b6:	bf00      	nop

080032b8 <__LDREXB>:
 */
uint8_t __LDREXB(uint8_t *addr)
{
    uint8_t result=0;
  
   __ASM volatile ("ldrexb %0, [%1]" : "=r" (result) : "r" (addr) );
 80032b8:	e8d0 0f4f 	ldrexb	r0, [r0]
   return(result);
}
 80032bc:	b2c0      	uxtb	r0, r0
 80032be:	4770      	bx	lr

080032c0 <__LDREXH>:
 */
uint16_t __LDREXH(uint16_t *addr)
{
    uint16_t result=0;
  
   __ASM volatile ("ldrexh %0, [%1]" : "=r" (result) : "r" (addr) );
 80032c0:	e8d0 0f5f 	ldrexh	r0, [r0]
   return(result);
}
 80032c4:	b280      	uxth	r0, r0
 80032c6:	4770      	bx	lr

080032c8 <__LDREXW>:
 */
uint32_t __LDREXW(uint32_t *addr)
{
    uint32_t result=0;
  
   __ASM volatile ("ldrex %0, [%1]" : "=r" (result) : "r" (addr) );
 80032c8:	e850 0f00 	ldrex	r0, [r0]
   return(result);
}
 80032cc:	4770      	bx	lr
 80032ce:	bf00      	nop

080032d0 <__STREXB>:
 */
uint32_t __STREXB(uint8_t value, uint8_t *addr)
{
   uint32_t result=0;
  
   __ASM volatile ("strexb %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
 80032d0:	e8c1 0f43 	strexb	r3, r0, [r1]
 80032d4:	4618      	mov	r0, r3
   return(result);
}
 80032d6:	4770      	bx	lr

080032d8 <__STREXH>:
 */
uint32_t __STREXH(uint16_t value, uint16_t *addr)
{
   uint32_t result=0;
  
   __ASM volatile ("strexh %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
 80032d8:	e8c1 0f53 	strexh	r3, r0, [r1]
 80032dc:	4618      	mov	r0, r3
   return(result);
}
 80032de:	4770      	bx	lr

080032e0 <__STREXW>:
 */
uint32_t __STREXW(uint32_t value, uint32_t *addr)
{
   uint32_t result=0;
  
   __ASM volatile ("strex %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
 80032e0:	e841 0000 	strex	r0, r0, [r1]
   return(result);
}
 80032e4:	4770      	bx	lr
 80032e6:	bf00      	nop

080032e8 <DMA1_Ch_Init>:

static unsigned int DMA_STATUS[7] = {DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY};
static DMA_Channel_TypeDef * DMA1_CH[7] = {DMA1_Channel1,DMA1_Channel2,DMA1_Channel3,DMA1_Channel4,DMA1_Channel5,DMA1_Channel6,DMA1_Channel7};

void DMA1_Ch_Init(int ch, void* maddr, void* paddr, union _DMA_CCR_UNI ccr, unsigned int tr_cnt)
{
 80032e8:	b4f0      	push	{r4, r5, r6, r7}
	Macro_Set_Bit(RCC->AHBENR,0);
 80032ea:	f44f 5480 	mov.w	r4, #4096	; 0x1000
 80032ee:	f2c4 0402 	movt	r4, #16386	; 0x4002
 80032f2:	6967      	ldr	r7, [r4, #20]

	if(DMA_STATUS[ch - 1] != DMA_STATUS_READY) DMA1_Stop(ch);
 80032f4:	f240 5584 	movw	r5, #1412	; 0x584
static unsigned int DMA_STATUS[7] = {DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY};
static DMA_Channel_TypeDef * DMA1_CH[7] = {DMA1_Channel1,DMA1_Channel2,DMA1_Channel3,DMA1_Channel4,DMA1_Channel5,DMA1_Channel6,DMA1_Channel7};

void DMA1_Ch_Init(int ch, void* maddr, void* paddr, union _DMA_CCR_UNI ccr, unsigned int tr_cnt)
{
	Macro_Set_Bit(RCC->AHBENR,0);
 80032f8:	f047 0701 	orr.w	r7, r7, #1

	if(DMA_STATUS[ch - 1] != DMA_STATUS_READY) DMA1_Stop(ch);
 80032fc:	3801      	subs	r0, #1
 80032fe:	f2c2 0500 	movt	r5, #8192	; 0x2000
static unsigned int DMA_STATUS[7] = {DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY,DMA_STATUS_READY};
static DMA_Channel_TypeDef * DMA1_CH[7] = {DMA1_Channel1,DMA1_Channel2,DMA1_Channel3,DMA1_Channel4,DMA1_Channel5,DMA1_Channel6,DMA1_Channel7};

void DMA1_Ch_Init(int ch, void* maddr, void* paddr, union _DMA_CCR_UNI ccr, unsigned int tr_cnt)
{
	Macro_Set_Bit(RCC->AHBENR,0);
 8003302:	6167      	str	r7, [r4, #20]

	if(DMA_STATUS[ch - 1] != DMA_STATUS_READY) DMA1_Stop(ch);
 8003304:	f855 4020 	ldr.w	r4, [r5, r0, lsl #2]
 8003308:	b1dc      	cbz	r4, 8003342 <DMA1_Ch_Init+0x5a>
}

void DMA1_Stop(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_READY;
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 800330a:	f24a 5488 	movw	r4, #42376	; 0xa588
 800330e:	f6c0 0400 	movt	r4, #2048	; 0x800
 8003312:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
	Macro_Set_Bit(DMA1_CH[ch - 1]->CCR, 0);
}

void DMA1_Stop(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_READY;
 8003316:	2600      	movs	r6, #0
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 8003318:	6827      	ldr	r7, [r4, #0]
	Macro_Set_Bit(DMA1_CH[ch - 1]->CCR, 0);
}

void DMA1_Stop(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_READY;
 800331a:	f845 6020 	str.w	r6, [r5, r0, lsl #2]
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 800331e:	f027 0001 	bic.w	r0, r7, #1
 8003322:	6020      	str	r0, [r4, #0]
{
	Macro_Set_Bit(RCC->AHBENR,0);

	if(DMA_STATUS[ch - 1] != DMA_STATUS_READY) DMA1_Stop(ch);

	DMA1_CH[ch - 1]->CMAR = (unsigned int)maddr;
 8003324:	60e1      	str	r1, [r4, #12]
	DMA1_CH[ch - 1]->CPAR = (unsigned int)paddr;
 8003326:	60a2      	str	r2, [r4, #8]
	Macro_Write_Block(DMA1_CH[ch-1]->CCR, 0x7ff, ccr.ui_data>>4, 4);
 8003328:	6822      	ldr	r2, [r4, #0]
	DMA1_CH[ch - 1]->CNDTR = tr_cnt;
 800332a:	9e04      	ldr	r6, [sp, #16]

	if(DMA_STATUS[ch - 1] != DMA_STATUS_READY) DMA1_Stop(ch);

	DMA1_CH[ch - 1]->CMAR = (unsigned int)maddr;
	DMA1_CH[ch - 1]->CPAR = (unsigned int)paddr;
	Macro_Write_Block(DMA1_CH[ch-1]->CCR, 0x7ff, ccr.ui_data>>4, 4);
 800332c:	f422 42ff 	bic.w	r2, r2, #32640	; 0x7f80
 8003330:	f023 030f 	bic.w	r3, r3, #15
 8003334:	f022 0270 	bic.w	r2, r2, #112	; 0x70
 8003338:	4313      	orrs	r3, r2
 800333a:	6023      	str	r3, [r4, #0]
	DMA1_CH[ch - 1]->CNDTR = tr_cnt;
 800333c:	6066      	str	r6, [r4, #4]
}
 800333e:	bcf0      	pop	{r4, r5, r6, r7}
 8003340:	4770      	bx	lr
 8003342:	f24a 5488 	movw	r4, #42376	; 0xa588
 8003346:	f6c0 0400 	movt	r4, #2048	; 0x800
 800334a:	f854 4020 	ldr.w	r4, [r4, r0, lsl #2]
 800334e:	e7e9      	b.n	8003324 <DMA1_Ch_Init+0x3c>

08003350 <DMA1_Start>:

void DMA1_Start(int ch)
{
 8003350:	b410      	push	{r4}
	DMA_STATUS[ch - 1] = DMA_STATUS_RUN;
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 8003352:	f24a 5388 	movw	r3, #42376	; 0xa588
	DMA1_CH[ch - 1]->CNDTR = tr_cnt;
}

void DMA1_Start(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_RUN;
 8003356:	3801      	subs	r0, #1
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 8003358:	f6c0 0300 	movt	r3, #2048	; 0x800
 800335c:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
	DMA1_CH[ch - 1]->CNDTR = tr_cnt;
}

void DMA1_Start(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_RUN;
 8003360:	2401      	movs	r4, #1
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 8003362:	6819      	ldr	r1, [r3, #0]
	DMA1_CH[ch - 1]->CNDTR = tr_cnt;
}

void DMA1_Start(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_RUN;
 8003364:	f240 5284 	movw	r2, #1412	; 0x584
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 8003368:	f021 0101 	bic.w	r1, r1, #1
 800336c:	6019      	str	r1, [r3, #0]
	Macro_Set_Bit(DMA1_CH[ch - 1]->CCR, 0);
 800336e:	6819      	ldr	r1, [r3, #0]
	DMA1_CH[ch - 1]->CNDTR = tr_cnt;
}

void DMA1_Start(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_RUN;
 8003370:	f2c2 0200 	movt	r2, #8192	; 0x2000
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
	Macro_Set_Bit(DMA1_CH[ch - 1]->CCR, 0);
 8003374:	4321      	orrs	r1, r4
	DMA1_CH[ch - 1]->CNDTR = tr_cnt;
}

void DMA1_Start(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_RUN;
 8003376:	f842 4020 	str.w	r4, [r2, r0, lsl #2]
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
	Macro_Set_Bit(DMA1_CH[ch - 1]->CCR, 0);
 800337a:	6019      	str	r1, [r3, #0]
}
 800337c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003380:	4770      	bx	lr
 8003382:	bf00      	nop

08003384 <DMA1_Stop>:

void DMA1_Stop(int ch)
{
 8003384:	b410      	push	{r4}
	DMA_STATUS[ch - 1] = DMA_STATUS_READY;
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 8003386:	f24a 5388 	movw	r3, #42376	; 0xa588
	Macro_Set_Bit(DMA1_CH[ch - 1]->CCR, 0);
}

void DMA1_Stop(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_READY;
 800338a:	3801      	subs	r0, #1
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 800338c:	f6c0 0300 	movt	r3, #2048	; 0x800
 8003390:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
	Macro_Set_Bit(DMA1_CH[ch - 1]->CCR, 0);
}

void DMA1_Stop(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_READY;
 8003394:	f240 5384 	movw	r3, #1412	; 0x584
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 8003398:	6811      	ldr	r1, [r2, #0]
	Macro_Set_Bit(DMA1_CH[ch - 1]->CCR, 0);
}

void DMA1_Stop(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_READY;
 800339a:	2400      	movs	r4, #0
 800339c:	f2c2 0300 	movt	r3, #8192	; 0x2000
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 80033a0:	f021 0101 	bic.w	r1, r1, #1
	Macro_Set_Bit(DMA1_CH[ch - 1]->CCR, 0);
}

void DMA1_Stop(int ch)
{
	DMA_STATUS[ch - 1] = DMA_STATUS_READY;
 80033a4:	f843 4020 	str.w	r4, [r3, r0, lsl #2]
	Macro_Clear_Bit(DMA1_CH[ch - 1]->CCR, 0);
 80033a8:	6011      	str	r1, [r2, #0]
}
 80033aa:	f85d 4b04 	ldr.w	r4, [sp], #4
 80033ae:	4770      	bx	lr

080033b0 <DMA1_ISR_Enable>:

void DMA1_ISR_Enable(int ch, unsigned int tei, unsigned int hti, unsigned int tci)
{
 80033b0:	e92d 01f0 	stmdb	sp!, {r4, r5, r6, r7, r8}
	if(tei || hti || tci)
 80033b4:	ea42 0403 	orr.w	r4, r2, r3
 80033b8:	430c      	orrs	r4, r1
 80033ba:	d03f      	beq.n	800343c <DMA1_ISR_Enable+0x8c>
	{
		Macro_Set_Bit(RCC->AHBENR,0);
		DMA1_CH[ch - 1]->CCR |= (((tei)?(1):(0))<<3)|(((hti)?(1):(0))<<2)|(((tci)?(1):(0))<<1);
		DMA1->IFCR = 0xf<<(4*(ch - 1));
		NVIC_ClearPendingIRQ(10 + ch);
 80033bc:	f100 070a 	add.w	r7, r0, #10
 80033c0:	b2ff      	uxtb	r7, r7
void DMA1_ISR_Enable(int ch, unsigned int tei, unsigned int hti, unsigned int tci)
{
	if(tei || hti || tci)
	{
		Macro_Set_Bit(RCC->AHBENR,0);
		DMA1_CH[ch - 1]->CCR |= (((tei)?(1):(0))<<3)|(((hti)?(1):(0))<<2)|(((tci)?(1):(0))<<1);
 80033c2:	3801      	subs	r0, #1
		DMA1->IFCR = 0xf<<(4*(ch - 1));
 80033c4:	0085      	lsls	r5, r0, #2
 * Clear the pending bit for the specified interrupt. 
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 80033c6:	f007 041f 	and.w	r4, r7, #31
 80033ca:	f04f 0c0f 	mov.w	ip, #15
 80033ce:	2601      	movs	r6, #1
 80033d0:	40a6      	lsls	r6, r4
 80033d2:	fa0c fc05 	lsl.w	ip, ip, r5

void DMA1_ISR_Enable(int ch, unsigned int tei, unsigned int hti, unsigned int tci)
{
	if(tei || hti || tci)
	{
		Macro_Set_Bit(RCC->AHBENR,0);
 80033d6:	f44f 5480 	mov.w	r4, #4096	; 0x1000
 80033da:	f2c4 0402 	movt	r4, #16386	; 0x4002
 80033de:	f8d4 8014 	ldr.w	r8, [r4, #20]
		DMA1_CH[ch - 1]->CCR |= (((tei)?(1):(0))<<3)|(((hti)?(1):(0))<<2)|(((tci)?(1):(0))<<1);
 80033e2:	f24a 5588 	movw	r5, #42376	; 0xa588
 80033e6:	f6c0 0500 	movt	r5, #2048	; 0x800
 80033ea:	2900      	cmp	r1, #0
 80033ec:	f855 5020 	ldr.w	r5, [r5, r0, lsl #2]

void DMA1_ISR_Enable(int ch, unsigned int tei, unsigned int hti, unsigned int tci)
{
	if(tei || hti || tci)
	{
		Macro_Set_Bit(RCC->AHBENR,0);
 80033f0:	f048 0101 	orr.w	r1, r8, #1
 80033f4:	b27f      	sxtb	r7, r7
 80033f6:	6161      	str	r1, [r4, #20]
		DMA1_CH[ch - 1]->CCR |= (((tei)?(1):(0))<<3)|(((hti)?(1):(0))<<2)|(((tci)?(1):(0))<<1);
 80033f8:	bf0c      	ite	eq
 80033fa:	2004      	moveq	r0, #4
 80033fc:	200c      	movne	r0, #12
 80033fe:	bf0c      	ite	eq
 8003400:	2100      	moveq	r1, #0
 8003402:	2108      	movne	r1, #8
 8003404:	097f      	lsrs	r7, r7, #5
 8003406:	682c      	ldr	r4, [r5, #0]
 8003408:	2a00      	cmp	r2, #0
 800340a:	bf18      	it	ne
 800340c:	4601      	movne	r1, r0
 800340e:	2b00      	cmp	r3, #0
 8003410:	bf14      	ite	ne
 8003412:	2302      	movne	r3, #2
 8003414:	2300      	moveq	r3, #0
 8003416:	00ba      	lsls	r2, r7, #2
 8003418:	4319      	orrs	r1, r3
		DMA1->IFCR = 0xf<<(4*(ch - 1));
 800341a:	2000      	movs	r0, #0
 800341c:	f102 4260 	add.w	r2, r2, #3758096384	; 0xe0000000
void DMA1_ISR_Enable(int ch, unsigned int tei, unsigned int hti, unsigned int tci)
{
	if(tei || hti || tci)
	{
		Macro_Set_Bit(RCC->AHBENR,0);
		DMA1_CH[ch - 1]->CCR |= (((tei)?(1):(0))<<3)|(((hti)?(1):(0))<<2)|(((tci)?(1):(0))<<1);
 8003420:	4321      	orrs	r1, r4
 8003422:	f502 4261 	add.w	r2, r2, #57600	; 0xe100
		DMA1->IFCR = 0xf<<(4*(ch - 1));
 8003426:	f2c4 0002 	movt	r0, #16386	; 0x4002
void DMA1_ISR_Enable(int ch, unsigned int tei, unsigned int hti, unsigned int tci)
{
	if(tei || hti || tci)
	{
		Macro_Set_Bit(RCC->AHBENR,0);
		DMA1_CH[ch - 1]->CCR |= (((tei)?(1):(0))<<3)|(((hti)?(1):(0))<<2)|(((tci)?(1):(0))<<1);
 800342a:	6029      	str	r1, [r5, #0]
		DMA1->IFCR = 0xf<<(4*(ch - 1));
 800342c:	f8c0 c004 	str.w	ip, [r0, #4]
 8003430:	f8c2 6180 	str.w	r6, [r2, #384]	; 0x180
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 8003434:	6016      	str	r6, [r2, #0]
	else
	{
		Macro_Clear_Area(DMA1_CH[ch - 1]->CCR, 0x7, 1);
		NVIC_DisableIRQ(10 + ch);
	}
}
 8003436:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
 800343a:	4770      	bx	lr
		NVIC_EnableIRQ(10 + ch);
	}
	else
	{
		Macro_Clear_Area(DMA1_CH[ch - 1]->CCR, 0x7, 1);
		NVIC_DisableIRQ(10 + ch);
 800343c:	f100 010a 	add.w	r1, r0, #10
 8003440:	b2c9      	uxtb	r1, r1
 * Disable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 8003442:	f001 031f 	and.w	r3, r1, #31
 8003446:	2401      	movs	r4, #1
 8003448:	409c      	lsls	r4, r3
		NVIC_ClearPendingIRQ(10 + ch);
		NVIC_EnableIRQ(10 + ch);
	}
	else
	{
		Macro_Clear_Area(DMA1_CH[ch - 1]->CCR, 0x7, 1);
 800344a:	f24a 5388 	movw	r3, #42376	; 0xa588
 800344e:	f6c0 0300 	movt	r3, #2048	; 0x800
 8003452:	3801      	subs	r0, #1
 8003454:	f853 2020 	ldr.w	r2, [r3, r0, lsl #2]
 8003458:	b249      	sxtb	r1, r1
 800345a:	6810      	ldr	r0, [r2, #0]
 800345c:	0949      	lsrs	r1, r1, #5
 800345e:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 8003462:	f020 000e 	bic.w	r0, r0, #14
 8003466:	3120      	adds	r1, #32
 8003468:	f2ce 0300 	movt	r3, #57344	; 0xe000
 800346c:	6010      	str	r0, [r2, #0]
 800346e:	f843 4021 	str.w	r4, [r3, r1, lsl #2]
		NVIC_DisableIRQ(10 + ch);
	}
}
 8003472:	e8bd 01f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8}
 8003476:	4770      	bx	lr

08003478 <DMA1_Set_Status>:

void DMA1_Set_Status(int ch, unsigned int status)
{
	DMA_STATUS[ch - 1] = status;
 8003478:	f240 5384 	movw	r3, #1412	; 0x584
 800347c:	3801      	subs	r0, #1
 800347e:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003482:	f843 1020 	str.w	r1, [r3, r0, lsl #2]
 8003486:	4770      	bx	lr

08003488 <DMA1_Get_Status>:

unsigned int DMA1_Get_Status(int ch)
{
	unsigned int tmp;

	tmp = DMA_STATUS[ch - 1];
 8003488:	f240 5384 	movw	r3, #1412	; 0x584
 800348c:	1e42      	subs	r2, r0, #1
 800348e:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003492:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]

	if(tmp == DMA_STATUS_COMPLETE) DMA_STATUS[ch - 1] = DMA_STATUS_READY;
 8003496:	2802      	cmp	r0, #2
 8003498:	bf04      	itt	eq
 800349a:	2100      	moveq	r1, #0
 800349c:	f843 1022 	streq.w	r1, [r3, r2, lsl #2]
	return tmp;
}
 80034a0:	4770      	bx	lr
 80034a2:	bf00      	nop

080034a4 <Key_Poll_Init>:
#include "device_driver.h"

void Key_Poll_Init(void)
{
	Macro_Set_Bit(RCC->APB2ENR, 3);
 80034a4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80034a8:	f2c4 0202 	movt	r2, #16386	; 0x4002
 80034ac:	6991      	ldr	r1, [r2, #24]
	Macro_Write_Block(GPIOB->CRL, 0xff, 0x44, 24);
 80034ae:	f44f 6340 	mov.w	r3, #3072	; 0xc00
#include "device_driver.h"

void Key_Poll_Init(void)
{
	Macro_Set_Bit(RCC->APB2ENR, 3);
 80034b2:	f041 0108 	orr.w	r1, r1, #8
 80034b6:	6191      	str	r1, [r2, #24]
	Macro_Write_Block(GPIOB->CRL, 0xff, 0x44, 24);
 80034b8:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80034bc:	681a      	ldr	r2, [r3, #0]
 80034be:	f022 427f 	bic.w	r2, r2, #4278190080	; 0xff000000
 80034c2:	f042 4288 	orr.w	r2, r2, #1140850688	; 0x44000000
 80034c6:	601a      	str	r2, [r3, #0]
 80034c8:	4770      	bx	lr
 80034ca:	bf00      	nop

080034cc <Key_Get_Pressed>:

#define COUNT_FOR_CHAT 		20000

static int Key_Check_Input(void)
{
	return ~Macro_Extract_Area(GPIOB->IDR, 0x3, 6) & 0x3;
 80034cc:	f44f 6140 	mov.w	r1, #3072	; 0xc00
 80034d0:	f2c4 0101 	movt	r1, #16385	; 0x4001
 80034d4:	6888      	ldr	r0, [r1, #8]
 80034d6:	f644 6320 	movw	r3, #20000	; 0x4e20
 80034da:	f080 00c0 	eor.w	r0, r0, #192	; 0xc0
 80034de:	f3c0 1081 	ubfx	r0, r0, #6, #2
 80034e2:	688a      	ldr	r2, [r1, #8]
 80034e4:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 80034e8:	f3c2 1281 	ubfx	r2, r2, #6, #2
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
		{
			if(k != Key_Check_Input())
 80034ec:	4290      	cmp	r0, r2
 80034ee:	d1f1      	bne.n	80034d4 <Key_Get_Pressed+0x8>

	for(;;)
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
 80034f0:	3b01      	subs	r3, #1
 80034f2:	d1f6      	bne.n	80034e2 <Key_Get_Pressed+0x16>

		if(i == COUNT_FOR_CHAT) break;
	}

	return k;
}
 80034f4:	4770      	bx	lr
 80034f6:	bf00      	nop

080034f8 <Key_Wait_Key_Released>:

#define COUNT_FOR_CHAT 		20000

static int Key_Check_Input(void)
{
	return ~Macro_Extract_Area(GPIOB->IDR, 0x3, 6) & 0x3;
 80034f8:	f44f 6040 	mov.w	r0, #3072	; 0xc00
 80034fc:	f2c4 0001 	movt	r0, #16385	; 0x4001
 8003500:	6881      	ldr	r1, [r0, #8]
 8003502:	f644 6320 	movw	r3, #20000	; 0x4e20
 8003506:	f081 01c0 	eor.w	r1, r1, #192	; 0xc0
 800350a:	f3c1 1181 	ubfx	r1, r1, #6, #2
 800350e:	6882      	ldr	r2, [r0, #8]
 8003510:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 8003514:	f3c2 1281 	ubfx	r2, r2, #6, #2
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
		{
			if(k != Key_Check_Input())
 8003518:	4291      	cmp	r1, r2
 800351a:	d1f1      	bne.n	8003500 <Key_Wait_Key_Released+0x8>

	for(;;)
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
 800351c:	3b01      	subs	r3, #1
 800351e:	d1f6      	bne.n	800350e <Key_Wait_Key_Released+0x16>
	return k;
}

void Key_Wait_Key_Released(void)
{
	while(Key_Get_Pressed());
 8003520:	2900      	cmp	r1, #0
 8003522:	d1ed      	bne.n	8003500 <Key_Wait_Key_Released+0x8>
}
 8003524:	4770      	bx	lr
 8003526:	bf00      	nop

08003528 <Key_Wait_Key_Pressed>:

#define COUNT_FOR_CHAT 		20000

static int Key_Check_Input(void)
{
	return ~Macro_Extract_Area(GPIOB->IDR, 0x3, 6) & 0x3;
 8003528:	f44f 6140 	mov.w	r1, #3072	; 0xc00
 800352c:	f2c4 0101 	movt	r1, #16385	; 0x4001
 8003530:	6888      	ldr	r0, [r1, #8]
 8003532:	f644 6320 	movw	r3, #20000	; 0x4e20
 8003536:	f080 00c0 	eor.w	r0, r0, #192	; 0xc0
 800353a:	f3c0 1081 	ubfx	r0, r0, #6, #2
 800353e:	688a      	ldr	r2, [r1, #8]
 8003540:	f082 02c0 	eor.w	r2, r2, #192	; 0xc0
 8003544:	f3c2 1281 	ubfx	r2, r2, #6, #2
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
		{
			if(k != Key_Check_Input())
 8003548:	4290      	cmp	r0, r2
 800354a:	d1f1      	bne.n	8003530 <Key_Wait_Key_Pressed+0x8>

	for(;;)
	{
		k = Key_Check_Input();

		for(i=0; i<COUNT_FOR_CHAT; i++)
 800354c:	3b01      	subs	r3, #1
 800354e:	d1f6      	bne.n	800353e <Key_Wait_Key_Pressed+0x16>

int Key_Wait_Key_Pressed(void)
{
	int k;

	while((k = Key_Get_Pressed()) == 0);
 8003550:	2800      	cmp	r0, #0
 8003552:	d0ed      	beq.n	8003530 <Key_Wait_Key_Pressed+0x8>
	return k;
}
 8003554:	4770      	bx	lr
 8003556:	bf00      	nop

08003558 <Key_ISR_Enable>:

void Key_ISR_Enable(int en)
{
 8003558:	b410      	push	{r4}
	if(en)
 800355a:	b9b0      	cbnz	r0, 800358a <Key_ISR_Enable+0x32>
 800355c:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 8003560:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003564:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
	}

	else
	{
		NVIC_DisableIRQ((IRQn_Type)23);
		Macro_Clear_Bit(RCC->APB2ENR,3);
 8003568:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800356c:	f8c2 1080 	str.w	r1, [r2, #128]	; 0x80
 8003570:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003574:	699a      	ldr	r2, [r3, #24]
 8003576:	f022 0208 	bic.w	r2, r2, #8
 800357a:	619a      	str	r2, [r3, #24]
		Macro_Clear_Bit(RCC->APB2ENR,0);
 800357c:	699a      	ldr	r2, [r3, #24]
 800357e:	f022 0201 	bic.w	r2, r2, #1
 8003582:	619a      	str	r2, [r3, #24]
	}
}
 8003584:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003588:	4770      	bx	lr

void Key_ISR_Enable(int en)
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB2ENR,3);
 800358a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800358e:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003592:	699a      	ldr	r2, [r3, #24]
		Macro_Set_Bit(RCC->APB2ENR,0);

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
 8003594:	f44f 6140 	mov.w	r1, #3072	; 0xc00

void Key_ISR_Enable(int en)
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB2ENR,3);
 8003598:	f042 0208 	orr.w	r2, r2, #8
 800359c:	619a      	str	r2, [r3, #24]
		Macro_Set_Bit(RCC->APB2ENR,0);
 800359e:	699a      	ldr	r2, [r3, #24]

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
 80035a0:	f2c4 0101 	movt	r1, #16385	; 0x4001
void Key_ISR_Enable(int en)
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB2ENR,3);
		Macro_Set_Bit(RCC->APB2ENR,0);
 80035a4:	f042 0201 	orr.w	r2, r2, #1
 80035a8:	619a      	str	r2, [r3, #24]

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
 80035aa:	680b      	ldr	r3, [r1, #0]
		Macro_Write_Block(AFIO->EXTICR[1],0xff,0x11,8);
 80035ac:	2200      	movs	r2, #0
	if(en)
	{
		Macro_Set_Bit(RCC->APB2ENR,3);
		Macro_Set_Bit(RCC->APB2ENR,0);

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
 80035ae:	f023 437f 	bic.w	r3, r3, #4278190080	; 0xff000000
 80035b2:	f043 4388 	orr.w	r3, r3, #1140850688	; 0x44000000
 80035b6:	600b      	str	r3, [r1, #0]
		Macro_Write_Block(AFIO->EXTICR[1],0xff,0x11,8);
 80035b8:	f2c4 0201 	movt	r2, #16385	; 0x4001
 80035bc:	68d1      	ldr	r1, [r2, #12]
		Macro_Write_Block(EXTI->FTSR,0x3,0x3,6);
 80035be:	f44f 6380 	mov.w	r3, #1024	; 0x400
	{
		Macro_Set_Bit(RCC->APB2ENR,3);
		Macro_Set_Bit(RCC->APB2ENR,0);

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
		Macro_Write_Block(AFIO->EXTICR[1],0xff,0x11,8);
 80035c2:	f421 417f 	bic.w	r1, r1, #65280	; 0xff00
 80035c6:	f441 5188 	orr.w	r1, r1, #4352	; 0x1100
 80035ca:	60d1      	str	r1, [r2, #12]
		Macro_Write_Block(EXTI->FTSR,0x3,0x3,6);
 80035cc:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80035d0:	68dc      	ldr	r4, [r3, #12]
 * Clear the pending bit for the specified interrupt. 
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 80035d2:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 80035d6:	f044 04c0 	orr.w	r4, r4, #192	; 0xc0
		EXTI->PR = (0x3<<6);
 80035da:	20c0      	movs	r0, #192	; 0xc0
 80035dc:	f2ce 0200 	movt	r2, #57344	; 0xe000
 80035e0:	f44f 0100 	mov.w	r1, #8388608	; 0x800000
		Macro_Set_Bit(RCC->APB2ENR,3);
		Macro_Set_Bit(RCC->APB2ENR,0);

		Macro_Write_Block(GPIOB->CRL,0xff,0x44,24);
		Macro_Write_Block(AFIO->EXTICR[1],0xff,0x11,8);
		Macro_Write_Block(EXTI->FTSR,0x3,0x3,6);
 80035e4:	60dc      	str	r4, [r3, #12]
		EXTI->PR = (0x3<<6);
 80035e6:	6158      	str	r0, [r3, #20]
 80035e8:	f8c2 1180 	str.w	r1, [r2, #384]	; 0x180
		NVIC_ClearPendingIRQ((IRQn_Type)23);
		Macro_Write_Block(EXTI->IMR,0x3,0x3,6);
 80035ec:	6818      	ldr	r0, [r3, #0]
 80035ee:	f040 00c0 	orr.w	r0, r0, #192	; 0xc0
 80035f2:	6018      	str	r0, [r3, #0]
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 80035f4:	6011      	str	r1, [r2, #0]
	{
		NVIC_DisableIRQ((IRQn_Type)23);
		Macro_Clear_Bit(RCC->APB2ENR,3);
		Macro_Clear_Bit(RCC->APB2ENR,0);
	}
}
 80035f6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80035fa:	4770      	bx	lr

080035fc <LED_Init>:
#include "device_driver.h"

void LED_Init(void)
{
	Macro_Set_Bit(RCC->APB2ENR, 3);
 80035fc:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003600:	f2c4 0202 	movt	r2, #16386	; 0x4002
 8003604:	6991      	ldr	r1, [r2, #24]
	Macro_Write_Block(GPIOB->CRH, 0xff, 0x66, 0);
 8003606:	f44f 6340 	mov.w	r3, #3072	; 0xc00
#include "device_driver.h"

void LED_Init(void)
{
	Macro_Set_Bit(RCC->APB2ENR, 3);
 800360a:	f041 0108 	orr.w	r1, r1, #8
 800360e:	6191      	str	r1, [r2, #24]
	Macro_Write_Block(GPIOB->CRH, 0xff, 0x66, 0);
 8003610:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003614:	685a      	ldr	r2, [r3, #4]
 8003616:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 800361a:	f042 0266 	orr.w	r2, r2, #102	; 0x66
 800361e:	605a      	str	r2, [r3, #4]
	Macro_Set_Area(GPIOB->ODR, 0x3, 8);
 8003620:	68da      	ldr	r2, [r3, #12]
 8003622:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 8003626:	60da      	str	r2, [r3, #12]
 8003628:	4770      	bx	lr
 800362a:	bf00      	nop

0800362c <LED_Display>:
}

void LED_Display(unsigned int num)
{
	Macro_Write_Block(GPIOB->ODR, 0x3, (~num & 3), 8);
 800362c:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003630:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003634:	68da      	ldr	r2, [r3, #12]
 8003636:	43c0      	mvns	r0, r0
 8003638:	f000 0003 	and.w	r0, r0, #3
 800363c:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8003640:	ea42 2200 	orr.w	r2, r2, r0, lsl #8
 8003644:	60da      	str	r2, [r3, #12]
 8003646:	4770      	bx	lr

08003648 <LED_All_On>:
}

void LED_All_On(void)
{
	Macro_Clear_Area(GPIOB->ODR, 0x3, 8);
 8003648:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 800364c:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003650:	68da      	ldr	r2, [r3, #12]
 8003652:	f422 7240 	bic.w	r2, r2, #768	; 0x300
 8003656:	60da      	str	r2, [r3, #12]
 8003658:	4770      	bx	lr
 800365a:	bf00      	nop

0800365c <LED_All_Off>:
}

void LED_All_Off(void)
{
	Macro_Set_Area(GPIOB->ODR, 0x3, 8);
 800365c:	f44f 6340 	mov.w	r3, #3072	; 0xc00
 8003660:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003664:	68da      	ldr	r2, [r3, #12]
 8003666:	f442 7240 	orr.w	r2, r2, #768	; 0x300
 800366a:	60da      	str	r2, [r3, #12]
 800366c:	4770      	bx	lr
 800366e:	bf00      	nop

08003670 <Main>:

unsigned int src1_dat[NUM_OF_DATA];
unsigned int dst1_dat[NUM_OF_DATA];

void Main(void)
{
 8003670:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
#include "device_driver.h"

static void Sys_Init(void)
{
	Clock_Init();
 8003672:	f7ff fdbb 	bl	80031ec <Clock_Init>
	LED_Init();
 8003676:	f7ff ffc1 	bl	80035fc <LED_Init>
	Uart_Init(115200);
 800367a:	f44f 30e1 	mov.w	r0, #115200	; 0x1c200
 800367e:	f000 fdf3 	bl	8004268 <Uart1_Init>
	Key_Poll_Init();
 8003682:	f7ff ff0f 	bl	80034a4 <Key_Poll_Init>

	SCB->VTOR = 0x08003000;
 8003686:	f44f 436d 	mov.w	r3, #60672	; 0xed00
 800368a:	f44f 5240 	mov.w	r2, #12288	; 0x3000
 800368e:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8003692:	f6c0 0200 	movt	r2, #2048	; 0x800
	SCB->SHCSR = 0;
 8003696:	2100      	movs	r1, #0
void Main(void)
{
	unsigned int i=0;

	Sys_Init();
	Uart1_Printf("Memory Copy Test\n");
 8003698:	f24a 7030 	movw	r0, #42800	; 0xa730
	Clock_Init();
	LED_Init();
	Uart_Init(115200);
	Key_Poll_Init();

	SCB->VTOR = 0x08003000;
 800369c:	609a      	str	r2, [r3, #8]
void Main(void)
{
	unsigned int i=0;

	Sys_Init();
	Uart1_Printf("Memory Copy Test\n");
 800369e:	f6c0 0000 	movt	r0, #2048	; 0x800
	LED_Init();
	Uart_Init(115200);
	Key_Poll_Init();

	SCB->VTOR = 0x08003000;
	SCB->SHCSR = 0;
 80036a2:	6259      	str	r1, [r3, #36]	; 0x24
void Main(void)
{
	unsigned int i=0;

	Sys_Init();
	Uart1_Printf("Memory Copy Test\n");
 80036a4:	f000 fe7c 	bl	80043a0 <Uart1_Printf>

	TIM4_Repeat_Interrupt_Enable(1, 1000);
 80036a8:	2001      	movs	r0, #1
 80036aa:	f44f 717a 	mov.w	r1, #1000	; 0x3e8
 80036ae:	f000 fd85 	bl	80041bc <TIM4_Repeat_Interrupt_Enable>
 80036b2:	4a1d      	ldr	r2, [pc, #116]	; (8003728 <Main+0xb8>)
 80036b4:	2308      	movs	r3, #8

	for(i=0;i<NUM_OF_DATA;i++)
	{
		src1_dat[i] = i + 8;
 80036b6:	f842 3f04 	str.w	r3, [r2, #4]!
 80036ba:	3301      	adds	r3, #1
	Sys_Init();
	Uart1_Printf("Memory Copy Test\n");

	TIM4_Repeat_Interrupt_Enable(1, 1000);

	for(i=0;i<NUM_OF_DATA;i++)
 80036bc:	2b30      	cmp	r3, #48	; 0x30
 80036be:	d1fa      	bne.n	80036b6 <Main+0x46>
 80036c0:	2100      	movs	r1, #0
 80036c2:	22a0      	movs	r2, #160	; 0xa0
 80036c4:	4819      	ldr	r0, [pc, #100]	; (800372c <Main+0xbc>)
 80036c6:	f000 ff33 	bl	8004530 <memset>
 80036ca:	4818      	ldr	r0, [pc, #96]	; (800372c <Main+0xbc>)
 80036cc:	22a0      	movs	r2, #160	; 0xa0
 80036ce:	f1a0 01a0 	sub.w	r1, r0, #160	; 0xa0
 80036d2:	f000 fed9 	bl	8004488 <memcpy>
 80036d6:	2400      	movs	r4, #0
 80036d8:	4d14      	ldr	r5, [pc, #80]	; (800372c <Main+0xbc>)

	/* Verify */
	for(i=0;i<NUM_OF_DATA;i++)
	{
		Uart1_Printf("dst1_dat[%d] = %d\n",i,dst1_dat[i]);
		dst1_dat[i] = 0;
 80036da:	4626      	mov	r6, r4
	}

	/* Verify */
	for(i=0;i<NUM_OF_DATA;i++)
	{
		Uart1_Printf("dst1_dat[%d] = %d\n",i,dst1_dat[i]);
 80036dc:	f24a 7044 	movw	r0, #42820	; 0xa744
 80036e0:	4621      	mov	r1, r4
 80036e2:	682a      	ldr	r2, [r5, #0]
 80036e4:	f6c0 0000 	movt	r0, #2048	; 0x800
	{
		dst1_dat[i] = src1_dat[i];
	}

	/* Verify */
	for(i=0;i<NUM_OF_DATA;i++)
 80036e8:	3401      	adds	r4, #1
	{
		Uart1_Printf("dst1_dat[%d] = %d\n",i,dst1_dat[i]);
 80036ea:	f000 fe59 	bl	80043a0 <Uart1_Printf>
	{
		dst1_dat[i] = src1_dat[i];
	}

	/* Verify */
	for(i=0;i<NUM_OF_DATA;i++)
 80036ee:	2c28      	cmp	r4, #40	; 0x28
	{
		Uart1_Printf("dst1_dat[%d] = %d\n",i,dst1_dat[i]);
		dst1_dat[i] = 0;
 80036f0:	f845 6b04 	str.w	r6, [r5], #4
	{
		dst1_dat[i] = src1_dat[i];
	}

	/* Verify */
	for(i=0;i<NUM_OF_DATA;i++)
 80036f4:	d1f2      	bne.n	80036dc <Main+0x6c>
 80036f6:	f240 750c 	movw	r5, #1804	; 0x70c
 80036fa:	f240 0600 	movw	r6, #0
 80036fe:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8003702:	f2c2 0600 	movt	r6, #8192	; 0x2000
	{
		if(TIM4_Expired)
		{
			static unsigned int led = 0x2;
			LED_Display(led = led^0x3);
			TIM4_Expired = 0;
 8003706:	2700      	movs	r7, #0
		dst1_dat[i] = 0;
	}

	for(;;)
	{
		if(TIM4_Expired)
 8003708:	682b      	ldr	r3, [r5, #0]
 800370a:	f240 740c 	movw	r4, #1804	; 0x70c
 800370e:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8003712:	2b00      	cmp	r3, #0
 8003714:	d0f8      	beq.n	8003708 <Main+0x98>
		{
			static unsigned int led = 0x2;
			LED_Display(led = led^0x3);
 8003716:	6833      	ldr	r3, [r6, #0]
 8003718:	f083 0303 	eor.w	r3, r3, #3
 800371c:	4618      	mov	r0, r3
 800371e:	6033      	str	r3, [r6, #0]
 8003720:	f7ff ff84 	bl	800362c <LED_Display>
			TIM4_Expired = 0;
 8003724:	6027      	str	r7, [r4, #0]
 8003726:	e7ef      	b.n	8003708 <Main+0x98>
 8003728:	2000059c 	mulcs	r0, ip, r5
 800372c:	20000640 	andcs	r0, r0, r0, asr #12

08003730 <_sbrk>:
#include "device_driver.h"

char * _sbrk(int inc)
{
 8003730:	b410      	push	{r4}
	static char * heap = (char *)0;

	char * prevHeap;
	char * nextHeap;

	if(heap == (char *)0) heap = (char *)HEAP_BASE;
 8003732:	f240 63e0 	movw	r3, #1760	; 0x6e0
 8003736:	f2c2 0300 	movt	r3, #8192	; 0x2000
 800373a:	6819      	ldr	r1, [r3, #0]
#include "device_driver.h"

char * _sbrk(int inc)
{
 800373c:	4602      	mov	r2, r0
	static char * heap = (char *)0;

	char * prevHeap;
	char * nextHeap;

	if(heap == (char *)0) heap = (char *)HEAP_BASE;
 800373e:	b181      	cbz	r1, 8003762 <_sbrk+0x32>
 8003740:	4c0b      	ldr	r4, [pc, #44]	; (8003770 <_sbrk+0x40>)
 8003742:	4608      	mov	r0, r1
 8003744:	f024 0107 	bic.w	r1, r4, #7

	prevHeap = heap;
	nextHeap = (char *)((((unsigned int)heap + inc) + 0x7) & ~0x7);
 8003748:	3207      	adds	r2, #7
 800374a:	4402      	add	r2, r0
 800374c:	f022 0207 	bic.w	r2, r2, #7

	if((unsigned int)nextHeap >= HEAP_LIMIT) return (char *)0;
 8003750:	f501 5180 	add.w	r1, r1, #4096	; 0x1000
 8003754:	428a      	cmp	r2, r1

	heap = nextHeap;
 8003756:	bf34      	ite	cc
 8003758:	601a      	strcc	r2, [r3, #0]
	if(heap == (char *)0) heap = (char *)HEAP_BASE;

	prevHeap = heap;
	nextHeap = (char *)((((unsigned int)heap + inc) + 0x7) & ~0x7);

	if((unsigned int)nextHeap >= HEAP_LIMIT) return (char *)0;
 800375a:	2000      	movcs	r0, #0

	heap = nextHeap;
	return prevHeap;
}
 800375c:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003760:	4770      	bx	lr
	static char * heap = (char *)0;

	char * prevHeap;
	char * nextHeap;

	if(heap == (char *)0) heap = (char *)HEAP_BASE;
 8003762:	4903      	ldr	r1, [pc, #12]	; (8003770 <_sbrk+0x40>)
 8003764:	f021 0107 	bic.w	r1, r1, #7
 8003768:	6019      	str	r1, [r3, #0]
 800376a:	4608      	mov	r0, r1
 800376c:	e7ec      	b.n	8003748 <_sbrk+0x18>
 800376e:	bf00      	nop
 8003770:	2000075f 	andcs	r0, r0, pc, asr r7

08003774 <Stack_Dump>:
}

static char * const Stack_reg[] = {"R0","R1","R2","R3","R12","LR","RA","xPSR"};

static void Stack_Dump(const char * stack, unsigned int * sp)
{
 8003774:	b5f0      	push	{r4, r5, r6, r7, lr}
	int i;

	for(i=0; i<(sizeof(Stack_reg)/sizeof(Stack_reg[0])); i++)
 8003776:	2300      	movs	r3, #0
 8003778:	4d0b      	ldr	r5, [pc, #44]	; (80037a8 <Stack_Dump+0x34>)
}

static char * const Stack_reg[] = {"R0","R1","R2","R3","R12","LR","RA","xPSR"};

static void Stack_Dump(const char * stack, unsigned int * sp)
{
 800377a:	b083      	sub	sp, #12
 800377c:	4606      	mov	r6, r0
 800377e:	460f      	mov	r7, r1
	int i;

	for(i=0; i<(sizeof(Stack_reg)/sizeof(Stack_reg[0])); i++)
 8003780:	461c      	mov	r4, r3
	{
		Uart1_Printf("%s[%d],%s=0x%.8X\n", stack, i, Stack_reg[i], sp[i]);
 8003782:	f857 2023 	ldr.w	r2, [r7, r3, lsl #2]
 8003786:	f24a 7058 	movw	r0, #42840	; 0xa758
 800378a:	f855 3f04 	ldr.w	r3, [r5, #4]!
 800378e:	9200      	str	r2, [sp, #0]
 8003790:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003794:	4622      	mov	r2, r4
 8003796:	4631      	mov	r1, r6

static void Stack_Dump(const char * stack, unsigned int * sp)
{
	int i;

	for(i=0; i<(sizeof(Stack_reg)/sizeof(Stack_reg[0])); i++)
 8003798:	3401      	adds	r4, #1
	{
		Uart1_Printf("%s[%d],%s=0x%.8X\n", stack, i, Stack_reg[i], sp[i]);
 800379a:	f000 fe01 	bl	80043a0 <Uart1_Printf>

static void Stack_Dump(const char * stack, unsigned int * sp)
{
	int i;

	for(i=0; i<(sizeof(Stack_reg)/sizeof(Stack_reg[0])); i++)
 800379e:	2c08      	cmp	r4, #8
 80037a0:	4623      	mov	r3, r4
 80037a2:	d1ee      	bne.n	8003782 <Stack_Dump+0xe>
	{
		Uart1_Printf("%s[%d],%s=0x%.8X\n", stack, i, Stack_reg[i], sp[i]);
	}
}
 80037a4:	b003      	add	sp, #12
 80037a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80037a8:	0800a5a0 	stmdaeq	r0, {r5, r7, r8, sl, sp, pc}

080037ac <Invalid_ISR>:
/* Includes ------------------------------------------------------------------*/

#include "device_driver.h"

void Invalid_ISR(void)
{
 80037ac:	b508      	push	{r3, lr}
  Uart1_Printf("Invalid_Exception: %d!\n", Macro_Extract_Area(SCB->ICSR, 0x1ff, 0));
 80037ae:	f44f 446d 	mov.w	r4, #60672	; 0xed00
 80037b2:	f2ce 0400 	movt	r4, #57344	; 0xe000
 80037b6:	6861      	ldr	r1, [r4, #4]
 80037b8:	f24a 706c 	movw	r0, #42860	; 0xa76c
 80037bc:	f3c1 0108 	ubfx	r1, r1, #0, #9
 80037c0:	f6c0 0000 	movt	r0, #2048	; 0x800
 80037c4:	f000 fdec 	bl	80043a0 <Uart1_Printf>
  Uart1_Printf("Invalid_ISR: %d!\n", Macro_Extract_Area(SCB->ICSR, 0x1ff, 0) - 16);
 80037c8:	6861      	ldr	r1, [r4, #4]
 80037ca:	f24a 7084 	movw	r0, #42884	; 0xa784
 80037ce:	f3c1 0108 	ubfx	r1, r1, #0, #9
 80037d2:	3910      	subs	r1, #16
 80037d4:	f6c0 0000 	movt	r0, #2048	; 0x800
 80037d8:	f000 fde2 	bl	80043a0 <Uart1_Printf>
 80037dc:	e7fe      	b.n	80037dc <Invalid_ISR+0x30>
 80037de:	bf00      	nop

080037e0 <NMI_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void NMI_Handler(void)
{
	Uart1_Printf("NMI!\n");
 80037e0:	f24a 7098 	movw	r0, #42904	; 0xa798
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void NMI_Handler(void)
{
 80037e4:	b508      	push	{r3, lr}
	Uart1_Printf("NMI!\n");
 80037e6:	f6c0 0000 	movt	r0, #2048	; 0x800
 80037ea:	f000 fdd9 	bl	80043a0 <Uart1_Printf>
 80037ee:	e7fe      	b.n	80037ee <NMI_Handler+0xe>

080037f0 <HardFault_Handler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void HardFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 80037f0:	4604      	mov	r4, r0
	Uart1_Printf("Hard Fault!\n");
 80037f2:	f24a 70a0 	movw	r0, #42912	; 0xa7a0
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void HardFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 80037f6:	b508      	push	{r3, lr}
	Uart1_Printf("Hard Fault!\n");
 80037f8:	f6c0 0000 	movt	r0, #2048	; 0x800
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void HardFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 80037fc:	4616      	mov	r6, r2
 80037fe:	460d      	mov	r5, r1
	Uart1_Printf("Hard Fault!\n");
 8003800:	f000 fdce 	bl	80043a0 <Uart1_Printf>
	}
}

static void Fault_Report(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
	Uart1_Printf("LR(EXC_RETURN)=0x%.8X\n", lr);
 8003804:	f24a 70b0 	movw	r0, #42928	; 0xa7b0
 8003808:	4629      	mov	r1, r5
 800380a:	f6c0 0000 	movt	r0, #2048	; 0x800
 800380e:	f000 fdc7 	bl	80043a0 <Uart1_Printf>
	Uart1_Printf("MSP=0x%.8X\n", msp);
 8003812:	f24a 70c8 	movw	r0, #42952	; 0xa7c8
 8003816:	4621      	mov	r1, r4
 8003818:	f6c0 0000 	movt	r0, #2048	; 0x800
 800381c:	f000 fdc0 	bl	80043a0 <Uart1_Printf>
	Uart1_Printf("PSP=0x%.8X\n", psp);
 8003820:	f24a 70d4 	movw	r0, #42964	; 0xa7d4
 8003824:	4631      	mov	r1, r6
 8003826:	f6c0 0000 	movt	r0, #2048	; 0x800
 800382a:	f000 fdb9 	bl	80043a0 <Uart1_Printf>

	switch((lr & (0xF<<28))|(lr & 0xF))
 800382e:	230f      	movs	r3, #15
 8003830:	f2cf 0300 	movt	r3, #61440	; 0xf000
 8003834:	2209      	movs	r2, #9
 8003836:	402b      	ands	r3, r5
 8003838:	f2cf 0200 	movt	r2, #61440	; 0xf000
 800383c:	4293      	cmp	r3, r2
 800383e:	d050      	beq.n	80038e2 <HardFault_Handler+0xf2>
 8003840:	220d      	movs	r2, #13
 8003842:	f2cf 0200 	movt	r2, #61440	; 0xf000
 8003846:	4293      	cmp	r3, r2
 8003848:	d059      	beq.n	80038fe <HardFault_Handler+0x10e>
 800384a:	2201      	movs	r2, #1
 800384c:	f2cf 0200 	movt	r2, #61440	; 0xf000
 8003850:	4293      	cmp	r3, r2
	{
		case 0xF0000001: Uart1_Printf("Exception occurs from handler mode\n"); Stack_Dump("MSP", msp); break;
 8003852:	bf04      	itt	eq
 8003854:	f24a 70e0 	movweq	r0, #42976	; 0xa7e0
 8003858:	f6c0 0000 	movteq	r0, #2048	; 0x800
{
	Uart1_Printf("LR(EXC_RETURN)=0x%.8X\n", lr);
	Uart1_Printf("MSP=0x%.8X\n", msp);
	Uart1_Printf("PSP=0x%.8X\n", psp);

	switch((lr & (0xF<<28))|(lr & 0xF))
 800385c:	d045      	beq.n	80038ea <HardFault_Handler+0xfa>
	{
		case 0xF0000001: Uart1_Printf("Exception occurs from handler mode\n"); Stack_Dump("MSP", msp); break;
		case 0xF0000009: Uart1_Printf("Exception occurs from thread mode with MSP\n"); Stack_Dump("MSP", msp); break;
		case 0xF000000d: Uart1_Printf("Exception occurs from thread mode with PSP\n"); Stack_Dump("PSP", psp); break;
		default: Uart1_Printf("Invalid exception return value => %#.8X\n", lr & 0xf); break;
 800385e:	f64a 0064 	movw	r0, #43108	; 0xa864
 8003862:	f005 010f 	and.w	r1, r5, #15
 8003866:	f6c0 0000 	movt	r0, #2048	; 0x800
 800386a:	f000 fd99 	bl	80043a0 <Uart1_Printf>
	}

	Uart1_Printf("SHCSR => %#.8X\n", SCB->SHCSR);
 800386e:	f44f 446d 	mov.w	r4, #60672	; 0xed00
 8003872:	f2ce 0400 	movt	r4, #57344	; 0xe000
 8003876:	f64a 0090 	movw	r0, #43152	; 0xa890
 800387a:	6a61      	ldr	r1, [r4, #36]	; 0x24
 800387c:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003880:	f000 fd8e 	bl	80043a0 <Uart1_Printf>
	Uart1_Printf("CFSR(Fault Reason) => %#.8X\n", SCB->CFSR);
 8003884:	f64a 00a0 	movw	r0, #43168	; 0xa8a0
 8003888:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 800388a:	f6c0 0000 	movt	r0, #2048	; 0x800
 800388e:	f000 fd87 	bl	80043a0 <Uart1_Printf>
{
	Uart1_Printf("Hard Fault!\n");

	Fault_Report(msp, lr, psp);

	Uart1_Printf("MMFAR Valid => %d\n", Macro_Check_Bit_Set(SCB->CFSR, 7));
 8003892:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 8003894:	f64a 00c0 	movw	r0, #43200	; 0xa8c0
 8003898:	f3c1 11c0 	ubfx	r1, r1, #7, #1
 800389c:	f6c0 0000 	movt	r0, #2048	; 0x800
 80038a0:	f000 fd7e 	bl	80043a0 <Uart1_Printf>
	Uart1_Printf("MMFAR => %#.8X\n", SCB->MMFAR);
 80038a4:	f64a 00d4 	movw	r0, #43220	; 0xa8d4
 80038a8:	6b61      	ldr	r1, [r4, #52]	; 0x34
 80038aa:	f6c0 0000 	movt	r0, #2048	; 0x800
 80038ae:	f000 fd77 	bl	80043a0 <Uart1_Printf>
	Uart1_Printf("BFAR Valid => %d\n", Macro_Check_Bit_Set(SCB->CFSR, 15));
 80038b2:	6aa1      	ldr	r1, [r4, #40]	; 0x28
 80038b4:	f64a 00e4 	movw	r0, #43236	; 0xa8e4
 80038b8:	f3c1 31c0 	ubfx	r1, r1, #15, #1
 80038bc:	f6c0 0000 	movt	r0, #2048	; 0x800
 80038c0:	f000 fd6e 	bl	80043a0 <Uart1_Printf>
	Uart1_Printf("BFAR => %#.8X\n", SCB->BFAR);
 80038c4:	f64a 00f8 	movw	r0, #43256	; 0xa8f8
 80038c8:	6ba1      	ldr	r1, [r4, #56]	; 0x38
 80038ca:	f6c0 0000 	movt	r0, #2048	; 0x800
 80038ce:	f000 fd67 	bl	80043a0 <Uart1_Printf>
	Uart1_Printf("HFSR(Hard Fault Reason) => %#.8X\n", SCB->HFSR);
 80038d2:	f64a 1008 	movw	r0, #43272	; 0xa908
 80038d6:	6ae1      	ldr	r1, [r4, #44]	; 0x2c
 80038d8:	f6c0 0000 	movt	r0, #2048	; 0x800
 80038dc:	f000 fd60 	bl	80043a0 <Uart1_Printf>
 80038e0:	e7fe      	b.n	80038e0 <HardFault_Handler+0xf0>
	Uart1_Printf("PSP=0x%.8X\n", psp);

	switch((lr & (0xF<<28))|(lr & 0xF))
	{
		case 0xF0000001: Uart1_Printf("Exception occurs from handler mode\n"); Stack_Dump("MSP", msp); break;
		case 0xF0000009: Uart1_Printf("Exception occurs from thread mode with MSP\n"); Stack_Dump("MSP", msp); break;
 80038e2:	f64a 0008 	movw	r0, #43016	; 0xa808
 80038e6:	f6c0 0000 	movt	r0, #2048	; 0x800
 80038ea:	f000 fd59 	bl	80043a0 <Uart1_Printf>
 80038ee:	f64a 0004 	movw	r0, #43012	; 0xa804
 80038f2:	4621      	mov	r1, r4
 80038f4:	f6c0 0000 	movt	r0, #2048	; 0x800
 80038f8:	f7ff ff3c 	bl	8003774 <Stack_Dump>
 80038fc:	e7b7      	b.n	800386e <HardFault_Handler+0x7e>
		case 0xF000000d: Uart1_Printf("Exception occurs from thread mode with PSP\n"); Stack_Dump("PSP", psp); break;
 80038fe:	f64a 0034 	movw	r0, #43060	; 0xa834
 8003902:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003906:	f000 fd4b 	bl	80043a0 <Uart1_Printf>
 800390a:	f64a 0060 	movw	r0, #43104	; 0xa860
 800390e:	4631      	mov	r1, r6
 8003910:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003914:	f7ff ff2e 	bl	8003774 <Stack_Dump>
 8003918:	e7a9      	b.n	800386e <HardFault_Handler+0x7e>
 800391a:	bf00      	nop

0800391c <MemManage_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void MemManage_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
	Uart1_Printf("Memory Management Fault!\n");
 800391c:	f64a 102c 	movw	r0, #43308	; 0xa92c
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void MemManage_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 8003920:	b508      	push	{r3, lr}
	Uart1_Printf("Memory Management Fault!\n");
 8003922:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003926:	f000 fd3b 	bl	80043a0 <Uart1_Printf>
 800392a:	e7fe      	b.n	800392a <MemManage_Handler+0xe>

0800392c <BusFault_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void BusFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
	Uart1_Printf("Bus Fault!\n");
 800392c:	f64a 1048 	movw	r0, #43336	; 0xa948
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void BusFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 8003930:	b508      	push	{r3, lr}
	Uart1_Printf("Bus Fault!\n");
 8003932:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003936:	f000 fd33 	bl	80043a0 <Uart1_Printf>
 800393a:	e7fe      	b.n	800393a <BusFault_Handler+0xe>

0800393c <UsageFault_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void UsageFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
	Uart1_Printf("Usage Fault!\n");
 800393c:	f64a 1054 	movw	r0, #43348	; 0xa954
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void UsageFault_Handler(unsigned int * msp, unsigned int lr, unsigned int * psp)
{
 8003940:	b508      	push	{r3, lr}
	Uart1_Printf("Usage Fault!\n");
 8003942:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003946:	f000 fd2b 	bl	80043a0 <Uart1_Printf>
 800394a:	e7fe      	b.n	800394a <UsageFault_Handler+0xe>

0800394c <SVC_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void SVC_Handler(void)
{
	Uart1_Printf("SVC Call\n");
 800394c:	f64a 1064 	movw	r0, #43364	; 0xa964
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void SVC_Handler(void)
{
 8003950:	b508      	push	{r3, lr}
	Uart1_Printf("SVC Call\n");
 8003952:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003956:	f000 fd23 	bl	80043a0 <Uart1_Printf>
 800395a:	e7fe      	b.n	800395a <SVC_Handler+0xe>

0800395c <DebugMon_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DebugMon_Handler(void)
{
	Uart1_Printf("DebugMon Call\n");
 800395c:	f64a 1070 	movw	r0, #43376	; 0xa970
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DebugMon_Handler(void)
{
 8003960:	b508      	push	{r3, lr}
	Uart1_Printf("DebugMon Call\n");
 8003962:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003966:	f000 fd1b 	bl	80043a0 <Uart1_Printf>
 800396a:	e7fe      	b.n	800396a <DebugMon_Handler+0xe>

0800396c <PendSV_Handler>:
 * Output         : None
 * Return         : None
 *******************************************************************************/
void PendSV_Handler(void)
{
	Uart1_Printf("PendSV Call\n");
 800396c:	f64a 1080 	movw	r0, #43392	; 0xa980
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void PendSV_Handler(void)
{
 8003970:	b508      	push	{r3, lr}
	Uart1_Printf("PendSV Call\n");
 8003972:	f6c0 0000 	movt	r0, #2048	; 0x800
 8003976:	f000 fd13 	bl	80043a0 <Uart1_Printf>
 800397a:	e7fe      	b.n	800397a <PendSV_Handler+0xe>

0800397c <SysTick_Handler>:
 *******************************************************************************/
volatile int SysTick_Flag = 0;

void SysTick_Handler(void)
{
	SysTick_Flag = 1;
 800397c:	f240 63e4 	movw	r3, #1764	; 0x6e4
 8003980:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003984:	2201      	movs	r2, #1
 8003986:	601a      	str	r2, [r3, #0]
 8003988:	4770      	bx	lr
 800398a:	bf00      	nop

0800398c <WWDG_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void WWDG_IRQHandler(void)
{
 800398c:	b508      	push	{r3, lr}
  Invalid_ISR();
 800398e:	f7ff ff0d 	bl	80037ac <Invalid_ISR>
 8003992:	bf00      	nop

08003994 <PVD_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void PVD_IRQHandler(void)
{
 8003994:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003996:	f7ff ff09 	bl	80037ac <Invalid_ISR>
 800399a:	bf00      	nop

0800399c <TAMPER_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TAMPER_IRQHandler(void)
{
 800399c:	b508      	push	{r3, lr}
  Invalid_ISR();
 800399e:	f7ff ff05 	bl	80037ac <Invalid_ISR>
 80039a2:	bf00      	nop

080039a4 <RTC_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void RTC_IRQHandler(void)
{
 80039a4:	b508      	push	{r3, lr}
  Invalid_ISR();
 80039a6:	f7ff ff01 	bl	80037ac <Invalid_ISR>
 80039aa:	bf00      	nop

080039ac <FLASH_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void FLASH_IRQHandler(void)
{
 80039ac:	b508      	push	{r3, lr}
  Invalid_ISR();
 80039ae:	f7ff fefd 	bl	80037ac <Invalid_ISR>
 80039b2:	bf00      	nop

080039b4 <RCC_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void RCC_IRQHandler(void)
{
 80039b4:	b508      	push	{r3, lr}
  Invalid_ISR();
 80039b6:	f7ff fef9 	bl	80037ac <Invalid_ISR>
 80039ba:	bf00      	nop

080039bc <EXTI0_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI0_IRQHandler(void)
{
 80039bc:	b508      	push	{r3, lr}
  Invalid_ISR();
 80039be:	f7ff fef5 	bl	80037ac <Invalid_ISR>
 80039c2:	bf00      	nop

080039c4 <EXTI1_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI1_IRQHandler(void)
{
 80039c4:	b508      	push	{r3, lr}
  Invalid_ISR();
 80039c6:	f7ff fef1 	bl	80037ac <Invalid_ISR>
 80039ca:	bf00      	nop

080039cc <EXTI2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI2_IRQHandler(void)
{
 80039cc:	b508      	push	{r3, lr}
  Invalid_ISR();
 80039ce:	f7ff feed 	bl	80037ac <Invalid_ISR>
 80039d2:	bf00      	nop

080039d4 <EXTI3_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI3_IRQHandler(void)
{
 80039d4:	b508      	push	{r3, lr}
  Invalid_ISR();
 80039d6:	f7ff fee9 	bl	80037ac <Invalid_ISR>
 80039da:	bf00      	nop

080039dc <EXTI4_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI4_IRQHandler(void)
{
 80039dc:	b508      	push	{r3, lr}
  Invalid_ISR();
 80039de:	f7ff fee5 	bl	80037ac <Invalid_ISR>
 80039e2:	bf00      	nop

080039e4 <DMA1_ISR>:
 * Return         : None
 *******************************************************************************/
volatile int DMA1_CH_DONE[8] = {0,0,0,0,0,0,0,0};

void DMA1_ISR(int ch)
{
 80039e4:	b570      	push	{r4, r5, r6, lr}
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));
 80039e6:	2300      	movs	r3, #0
 80039e8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80039ec:	681c      	ldr	r4, [r3, #0]
 80039ee:	1e46      	subs	r6, r0, #1
 80039f0:	00b6      	lsls	r6, r6, #2
 80039f2:	40f4      	lsrs	r4, r6

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 80039f4:	0721      	lsls	r1, r4, #28
 * Return         : None
 *******************************************************************************/
volatile int DMA1_CH_DONE[8] = {0,0,0,0,0,0,0,0};

void DMA1_ISR(int ch)
{
 80039f6:	4605      	mov	r5, r0
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 80039f8:	d41c      	bmi.n	8003a34 <DMA1_ISR+0x50>
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 80039fa:	0762      	lsls	r2, r4, #29
 80039fc:	d415      	bmi.n	8003a2a <DMA1_ISR+0x46>
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);
 80039fe:	07a3      	lsls	r3, r4, #30
 8003a00:	d503      	bpl.n	8003a0a <DMA1_ISR+0x26>
 8003a02:	4628      	mov	r0, r5
 8003a04:	2102      	movs	r1, #2
 8003a06:	f7ff fd37 	bl	8003478 <DMA1_Set_Status>

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003a0a:	230f      	movs	r3, #15
 8003a0c:	fa03 f606 	lsl.w	r6, r3, r6
	DMA1_CH_DONE[ch] = 1;
 8003a10:	f240 63e4 	movw	r3, #1764	; 0x6e4

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003a14:	2200      	movs	r2, #0
	DMA1_CH_DONE[ch] = 1;
 8003a16:	f2c2 0300 	movt	r3, #8192	; 0x2000

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003a1a:	f2c4 0202 	movt	r2, #16386	; 0x4002
	DMA1_CH_DONE[ch] = 1;
 8003a1e:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 8003a22:	2101      	movs	r1, #1

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003a24:	6056      	str	r6, [r2, #4]
	DMA1_CH_DONE[ch] = 1;
 8003a26:	6059      	str	r1, [r3, #4]
 8003a28:	bd70      	pop	{r4, r5, r6, pc}
void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003a2a:	4628      	mov	r0, r5
 8003a2c:	2103      	movs	r1, #3
 8003a2e:	f7ff fd23 	bl	8003478 <DMA1_Set_Status>
 8003a32:	e7e4      	b.n	80039fe <DMA1_ISR+0x1a>

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003a34:	2104      	movs	r1, #4
 8003a36:	f7ff fd1f 	bl	8003478 <DMA1_Set_Status>
 8003a3a:	e7de      	b.n	80039fa <DMA1_ISR+0x16>

08003a3c <DMA1_Channel1_IRQHandler>:
	DMA1->IFCR = 0xf << (4*(ch-1));
	DMA1_CH_DONE[ch] = 1;
}

void DMA1_Channel1_IRQHandler(void)
{
 8003a3c:	b538      	push	{r3, r4, r5, lr}
 *******************************************************************************/
volatile int DMA1_CH_DONE[8] = {0,0,0,0,0,0,0,0};

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));
 8003a3e:	2300      	movs	r3, #0
 8003a40:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003a44:	681c      	ldr	r4, [r3, #0]

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003a46:	0723      	lsls	r3, r4, #28
 8003a48:	d420      	bmi.n	8003a8c <DMA1_Channel1_IRQHandler+0x50>
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003a4a:	0765      	lsls	r5, r4, #29
 8003a4c:	d419      	bmi.n	8003a82 <DMA1_Channel1_IRQHandler+0x46>
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);
 8003a4e:	07a0      	lsls	r0, r4, #30
 8003a50:	d503      	bpl.n	8003a5a <DMA1_Channel1_IRQHandler+0x1e>
 8003a52:	2001      	movs	r0, #1
 8003a54:	2102      	movs	r1, #2
 8003a56:	f7ff fd0f 	bl	8003478 <DMA1_Set_Status>

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003a5a:	2100      	movs	r1, #0
	DMA1_CH_DONE[ch] = 1;
 8003a5c:	f240 63e4 	movw	r3, #1764	; 0x6e4
 * Clear the pending bit for the specified interrupt. 
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 8003a60:	f44f 4261 	mov.w	r2, #57600	; 0xe100

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003a64:	f2c4 0102 	movt	r1, #16386	; 0x4002
 8003a68:	250f      	movs	r5, #15
	DMA1_CH_DONE[ch] = 1;
 8003a6a:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003a6e:	2401      	movs	r4, #1
 8003a70:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003a74:	f44f 6000 	mov.w	r0, #2048	; 0x800

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003a78:	604d      	str	r5, [r1, #4]
	DMA1_CH_DONE[ch] = 1;
 8003a7a:	609c      	str	r4, [r3, #8]
 8003a7c:	f8c2 0180 	str.w	r0, [r2, #384]	; 0x180
 8003a80:	bd38      	pop	{r3, r4, r5, pc}
void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003a82:	2001      	movs	r0, #1
 8003a84:	2103      	movs	r1, #3
 8003a86:	f7ff fcf7 	bl	8003478 <DMA1_Set_Status>
 8003a8a:	e7e0      	b.n	8003a4e <DMA1_Channel1_IRQHandler+0x12>

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003a8c:	2001      	movs	r0, #1
 8003a8e:	2104      	movs	r1, #4
 8003a90:	f7ff fcf2 	bl	8003478 <DMA1_Set_Status>
 8003a94:	e7d9      	b.n	8003a4a <DMA1_Channel1_IRQHandler+0xe>
 8003a96:	bf00      	nop

08003a98 <DMA1_Channel2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel2_IRQHandler(void)
{
 8003a98:	b538      	push	{r3, r4, r5, lr}
 *******************************************************************************/
volatile int DMA1_CH_DONE[8] = {0,0,0,0,0,0,0,0};

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));
 8003a9a:	2300      	movs	r3, #0
 8003a9c:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003aa0:	681c      	ldr	r4, [r3, #0]
 8003aa2:	0924      	lsrs	r4, r4, #4

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003aa4:	0720      	lsls	r0, r4, #28
 8003aa6:	d420      	bmi.n	8003aea <DMA1_Channel2_IRQHandler+0x52>
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003aa8:	0761      	lsls	r1, r4, #29
 8003aaa:	d419      	bmi.n	8003ae0 <DMA1_Channel2_IRQHandler+0x48>
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);
 8003aac:	07a2      	lsls	r2, r4, #30
 8003aae:	d503      	bpl.n	8003ab8 <DMA1_Channel2_IRQHandler+0x20>
 8003ab0:	2002      	movs	r0, #2
 8003ab2:	4601      	mov	r1, r0
 8003ab4:	f7ff fce0 	bl	8003478 <DMA1_Set_Status>

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003ab8:	2100      	movs	r1, #0
	DMA1_CH_DONE[ch] = 1;
 8003aba:	f240 63e4 	movw	r3, #1764	; 0x6e4
 8003abe:	f44f 4261 	mov.w	r2, #57600	; 0xe100

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003ac2:	f2c4 0102 	movt	r1, #16386	; 0x4002
 8003ac6:	25f0      	movs	r5, #240	; 0xf0
	DMA1_CH_DONE[ch] = 1;
 8003ac8:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003acc:	2401      	movs	r4, #1
 8003ace:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003ad2:	f44f 5080 	mov.w	r0, #4096	; 0x1000

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003ad6:	604d      	str	r5, [r1, #4]
	DMA1_CH_DONE[ch] = 1;
 8003ad8:	60dc      	str	r4, [r3, #12]
 8003ada:	f8c2 0180 	str.w	r0, [r2, #384]	; 0x180
 8003ade:	bd38      	pop	{r3, r4, r5, pc}
void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003ae0:	2002      	movs	r0, #2
 8003ae2:	2103      	movs	r1, #3
 8003ae4:	f7ff fcc8 	bl	8003478 <DMA1_Set_Status>
 8003ae8:	e7e0      	b.n	8003aac <DMA1_Channel2_IRQHandler+0x14>

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003aea:	2002      	movs	r0, #2
 8003aec:	2104      	movs	r1, #4
 8003aee:	f7ff fcc3 	bl	8003478 <DMA1_Set_Status>
 8003af2:	e7d9      	b.n	8003aa8 <DMA1_Channel2_IRQHandler+0x10>

08003af4 <DMA1_Channel3_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel3_IRQHandler(void)
{
 8003af4:	b538      	push	{r3, r4, r5, lr}
 *******************************************************************************/
volatile int DMA1_CH_DONE[8] = {0,0,0,0,0,0,0,0};

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));
 8003af6:	2300      	movs	r3, #0
 8003af8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003afc:	681c      	ldr	r4, [r3, #0]
 8003afe:	0a24      	lsrs	r4, r4, #8

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003b00:	0723      	lsls	r3, r4, #28
 8003b02:	d421      	bmi.n	8003b48 <DMA1_Channel3_IRQHandler+0x54>
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003b04:	0765      	lsls	r5, r4, #29
 8003b06:	d41a      	bmi.n	8003b3e <DMA1_Channel3_IRQHandler+0x4a>
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);
 8003b08:	07a4      	lsls	r4, r4, #30
 8003b0a:	d503      	bpl.n	8003b14 <DMA1_Channel3_IRQHandler+0x20>
 8003b0c:	2003      	movs	r0, #3
 8003b0e:	2102      	movs	r1, #2
 8003b10:	f7ff fcb2 	bl	8003478 <DMA1_Set_Status>

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003b14:	2100      	movs	r1, #0
	DMA1_CH_DONE[ch] = 1;
 8003b16:	f240 63e4 	movw	r3, #1764	; 0x6e4
 8003b1a:	f44f 4261 	mov.w	r2, #57600	; 0xe100

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003b1e:	f2c4 0102 	movt	r1, #16386	; 0x4002
 8003b22:	f44f 6570 	mov.w	r5, #3840	; 0xf00
	DMA1_CH_DONE[ch] = 1;
 8003b26:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003b2a:	2401      	movs	r4, #1
 8003b2c:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003b30:	f44f 5000 	mov.w	r0, #8192	; 0x2000

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003b34:	604d      	str	r5, [r1, #4]
	DMA1_CH_DONE[ch] = 1;
 8003b36:	611c      	str	r4, [r3, #16]
 8003b38:	f8c2 0180 	str.w	r0, [r2, #384]	; 0x180
 8003b3c:	bd38      	pop	{r3, r4, r5, pc}
void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003b3e:	2003      	movs	r0, #3
 8003b40:	4601      	mov	r1, r0
 8003b42:	f7ff fc99 	bl	8003478 <DMA1_Set_Status>
 8003b46:	e7df      	b.n	8003b08 <DMA1_Channel3_IRQHandler+0x14>

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003b48:	2003      	movs	r0, #3
 8003b4a:	2104      	movs	r1, #4
 8003b4c:	f7ff fc94 	bl	8003478 <DMA1_Set_Status>
 8003b50:	e7d8      	b.n	8003b04 <DMA1_Channel3_IRQHandler+0x10>
 8003b52:	bf00      	nop

08003b54 <DMA1_Channel4_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel4_IRQHandler(void)
{
 8003b54:	b538      	push	{r3, r4, r5, lr}
 *******************************************************************************/
volatile int DMA1_CH_DONE[8] = {0,0,0,0,0,0,0,0};

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));
 8003b56:	2300      	movs	r3, #0
 8003b58:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003b5c:	681c      	ldr	r4, [r3, #0]
 8003b5e:	0b24      	lsrs	r4, r4, #12

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003b60:	0720      	lsls	r0, r4, #28
 8003b62:	d421      	bmi.n	8003ba8 <DMA1_Channel4_IRQHandler+0x54>
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003b64:	0761      	lsls	r1, r4, #29
 8003b66:	d41a      	bmi.n	8003b9e <DMA1_Channel4_IRQHandler+0x4a>
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);
 8003b68:	07a2      	lsls	r2, r4, #30
 8003b6a:	d503      	bpl.n	8003b74 <DMA1_Channel4_IRQHandler+0x20>
 8003b6c:	2004      	movs	r0, #4
 8003b6e:	2102      	movs	r1, #2
 8003b70:	f7ff fc82 	bl	8003478 <DMA1_Set_Status>

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003b74:	2100      	movs	r1, #0
	DMA1_CH_DONE[ch] = 1;
 8003b76:	f240 63e4 	movw	r3, #1764	; 0x6e4
 8003b7a:	f44f 4261 	mov.w	r2, #57600	; 0xe100

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003b7e:	f2c4 0102 	movt	r1, #16386	; 0x4002
 8003b82:	f44f 4570 	mov.w	r5, #61440	; 0xf000
	DMA1_CH_DONE[ch] = 1;
 8003b86:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003b8a:	2401      	movs	r4, #1
 8003b8c:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003b90:	f44f 4080 	mov.w	r0, #16384	; 0x4000

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003b94:	604d      	str	r5, [r1, #4]
	DMA1_CH_DONE[ch] = 1;
 8003b96:	615c      	str	r4, [r3, #20]
 8003b98:	f8c2 0180 	str.w	r0, [r2, #384]	; 0x180
 8003b9c:	bd38      	pop	{r3, r4, r5, pc}
void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003b9e:	2004      	movs	r0, #4
 8003ba0:	2103      	movs	r1, #3
 8003ba2:	f7ff fc69 	bl	8003478 <DMA1_Set_Status>
 8003ba6:	e7df      	b.n	8003b68 <DMA1_Channel4_IRQHandler+0x14>

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003ba8:	2004      	movs	r0, #4
 8003baa:	4601      	mov	r1, r0
 8003bac:	f7ff fc64 	bl	8003478 <DMA1_Set_Status>
 8003bb0:	e7d8      	b.n	8003b64 <DMA1_Channel4_IRQHandler+0x10>
 8003bb2:	bf00      	nop

08003bb4 <DMA1_Channel5_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel5_IRQHandler(void)
{
 8003bb4:	b538      	push	{r3, r4, r5, lr}
 *******************************************************************************/
volatile int DMA1_CH_DONE[8] = {0,0,0,0,0,0,0,0};

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));
 8003bb6:	2300      	movs	r3, #0
 8003bb8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003bbc:	681c      	ldr	r4, [r3, #0]
 8003bbe:	0c24      	lsrs	r4, r4, #16

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003bc0:	0723      	lsls	r3, r4, #28
 8003bc2:	d421      	bmi.n	8003c08 <DMA1_Channel5_IRQHandler+0x54>
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003bc4:	0765      	lsls	r5, r4, #29
 8003bc6:	d41a      	bmi.n	8003bfe <DMA1_Channel5_IRQHandler+0x4a>
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);
 8003bc8:	07a4      	lsls	r4, r4, #30
 8003bca:	d503      	bpl.n	8003bd4 <DMA1_Channel5_IRQHandler+0x20>
 8003bcc:	2005      	movs	r0, #5
 8003bce:	2102      	movs	r1, #2
 8003bd0:	f7ff fc52 	bl	8003478 <DMA1_Set_Status>

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003bd4:	2100      	movs	r1, #0
	DMA1_CH_DONE[ch] = 1;
 8003bd6:	f240 63e4 	movw	r3, #1764	; 0x6e4
 8003bda:	f44f 4261 	mov.w	r2, #57600	; 0xe100

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003bde:	f2c4 0102 	movt	r1, #16386	; 0x4002
 8003be2:	f44f 2570 	mov.w	r5, #983040	; 0xf0000
	DMA1_CH_DONE[ch] = 1;
 8003be6:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003bea:	2401      	movs	r4, #1
 8003bec:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003bf0:	f44f 4000 	mov.w	r0, #32768	; 0x8000

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003bf4:	604d      	str	r5, [r1, #4]
	DMA1_CH_DONE[ch] = 1;
 8003bf6:	619c      	str	r4, [r3, #24]
 8003bf8:	f8c2 0180 	str.w	r0, [r2, #384]	; 0x180
 8003bfc:	bd38      	pop	{r3, r4, r5, pc}
void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003bfe:	2005      	movs	r0, #5
 8003c00:	2103      	movs	r1, #3
 8003c02:	f7ff fc39 	bl	8003478 <DMA1_Set_Status>
 8003c06:	e7df      	b.n	8003bc8 <DMA1_Channel5_IRQHandler+0x14>

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003c08:	2005      	movs	r0, #5
 8003c0a:	2104      	movs	r1, #4
 8003c0c:	f7ff fc34 	bl	8003478 <DMA1_Set_Status>
 8003c10:	e7d8      	b.n	8003bc4 <DMA1_Channel5_IRQHandler+0x10>
 8003c12:	bf00      	nop

08003c14 <DMA1_Channel6_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel6_IRQHandler(void)
{
 8003c14:	b538      	push	{r3, r4, r5, lr}
 *******************************************************************************/
volatile int DMA1_CH_DONE[8] = {0,0,0,0,0,0,0,0};

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));
 8003c16:	2300      	movs	r3, #0
 8003c18:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003c1c:	681c      	ldr	r4, [r3, #0]
 8003c1e:	0d24      	lsrs	r4, r4, #20

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003c20:	0720      	lsls	r0, r4, #28
 8003c22:	d421      	bmi.n	8003c68 <DMA1_Channel6_IRQHandler+0x54>
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003c24:	0761      	lsls	r1, r4, #29
 8003c26:	d41a      	bmi.n	8003c5e <DMA1_Channel6_IRQHandler+0x4a>
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);
 8003c28:	07a2      	lsls	r2, r4, #30
 8003c2a:	d503      	bpl.n	8003c34 <DMA1_Channel6_IRQHandler+0x20>
 8003c2c:	2006      	movs	r0, #6
 8003c2e:	2102      	movs	r1, #2
 8003c30:	f7ff fc22 	bl	8003478 <DMA1_Set_Status>

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003c34:	2100      	movs	r1, #0
	DMA1_CH_DONE[ch] = 1;
 8003c36:	f240 63e4 	movw	r3, #1764	; 0x6e4
 8003c3a:	f44f 4261 	mov.w	r2, #57600	; 0xe100

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003c3e:	f2c4 0102 	movt	r1, #16386	; 0x4002
 8003c42:	f44f 0570 	mov.w	r5, #15728640	; 0xf00000
	DMA1_CH_DONE[ch] = 1;
 8003c46:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003c4a:	2401      	movs	r4, #1
 8003c4c:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003c50:	f44f 3080 	mov.w	r0, #65536	; 0x10000

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003c54:	604d      	str	r5, [r1, #4]
	DMA1_CH_DONE[ch] = 1;
 8003c56:	61dc      	str	r4, [r3, #28]
 8003c58:	f8c2 0180 	str.w	r0, [r2, #384]	; 0x180
 8003c5c:	bd38      	pop	{r3, r4, r5, pc}
void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003c5e:	2006      	movs	r0, #6
 8003c60:	2103      	movs	r1, #3
 8003c62:	f7ff fc09 	bl	8003478 <DMA1_Set_Status>
 8003c66:	e7df      	b.n	8003c28 <DMA1_Channel6_IRQHandler+0x14>

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003c68:	2006      	movs	r0, #6
 8003c6a:	2104      	movs	r1, #4
 8003c6c:	f7ff fc04 	bl	8003478 <DMA1_Set_Status>
 8003c70:	e7d8      	b.n	8003c24 <DMA1_Channel6_IRQHandler+0x10>
 8003c72:	bf00      	nop

08003c74 <DMA1_Channel7_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void DMA1_Channel7_IRQHandler(void)
{
 8003c74:	b538      	push	{r3, r4, r5, lr}
 *******************************************************************************/
volatile int DMA1_CH_DONE[8] = {0,0,0,0,0,0,0,0};

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));
 8003c76:	2300      	movs	r3, #0
 8003c78:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003c7c:	681c      	ldr	r4, [r3, #0]
 8003c7e:	0e24      	lsrs	r4, r4, #24

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003c80:	0723      	lsls	r3, r4, #28
 8003c82:	d421      	bmi.n	8003cc8 <DMA1_Channel7_IRQHandler+0x54>
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003c84:	0765      	lsls	r5, r4, #29
 8003c86:	d41a      	bmi.n	8003cbe <DMA1_Channel7_IRQHandler+0x4a>
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);
 8003c88:	07a4      	lsls	r4, r4, #30
 8003c8a:	d503      	bpl.n	8003c94 <DMA1_Channel7_IRQHandler+0x20>
 8003c8c:	2007      	movs	r0, #7
 8003c8e:	2102      	movs	r1, #2
 8003c90:	f7ff fbf2 	bl	8003478 <DMA1_Set_Status>

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003c94:	2100      	movs	r1, #0
	DMA1_CH_DONE[ch] = 1;
 8003c96:	f240 63e4 	movw	r3, #1764	; 0x6e4
 8003c9a:	f44f 4261 	mov.w	r2, #57600	; 0xe100

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003c9e:	f2c4 0102 	movt	r1, #16386	; 0x4002
 8003ca2:	f04f 6570 	mov.w	r5, #251658240	; 0xf000000
	DMA1_CH_DONE[ch] = 1;
 8003ca6:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8003caa:	2401      	movs	r4, #1
 8003cac:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003cb0:	f44f 3000 	mov.w	r0, #131072	; 0x20000

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
	if(Macro_Check_Bit_Set(flag, 1)) DMA1_Set_Status(ch, DMA_STATUS_COMPLETE);

	DMA1->IFCR = 0xf << (4*(ch-1));
 8003cb4:	604d      	str	r5, [r1, #4]
	DMA1_CH_DONE[ch] = 1;
 8003cb6:	621c      	str	r4, [r3, #32]
 8003cb8:	f8c2 0180 	str.w	r0, [r2, #384]	; 0x180
 8003cbc:	bd38      	pop	{r3, r4, r5, pc}
void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
	if(Macro_Check_Bit_Set(flag, 2)) DMA1_Set_Status(ch, DMA_STATUS_HALFTRANSFERED);
 8003cbe:	2007      	movs	r0, #7
 8003cc0:	2103      	movs	r1, #3
 8003cc2:	f7ff fbd9 	bl	8003478 <DMA1_Set_Status>
 8003cc6:	e7df      	b.n	8003c88 <DMA1_Channel7_IRQHandler+0x14>

void DMA1_ISR(int ch)
{
	unsigned int flag = Macro_Extract_Area(DMA1->ISR, 0xf, 4 * (ch-1));

	if(Macro_Check_Bit_Set(flag, 3)) DMA1_Set_Status(ch, DMA_STATUS_ERROR);
 8003cc8:	2007      	movs	r0, #7
 8003cca:	2104      	movs	r1, #4
 8003ccc:	f7ff fbd4 	bl	8003478 <DMA1_Set_Status>
 8003cd0:	e7d8      	b.n	8003c84 <DMA1_Channel7_IRQHandler+0x10>
 8003cd2:	bf00      	nop

08003cd4 <ADC1_2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void ADC1_2_IRQHandler(void)
{
 8003cd4:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003cd6:	f7ff fd69 	bl	80037ac <Invalid_ISR>
 8003cda:	bf00      	nop

08003cdc <USB_HP_CAN_TX_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void USB_HP_CAN_TX_IRQHandler(void)
{
 8003cdc:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003cde:	f7ff fd65 	bl	80037ac <Invalid_ISR>
 8003ce2:	bf00      	nop

08003ce4 <USB_LP_CAN_RX0_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void USB_LP_CAN_RX0_IRQHandler(void)
{
 8003ce4:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003ce6:	f7ff fd61 	bl	80037ac <Invalid_ISR>
 8003cea:	bf00      	nop

08003cec <CAN_RX1_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void CAN_RX1_IRQHandler(void)
{
 8003cec:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003cee:	f7ff fd5d 	bl	80037ac <Invalid_ISR>
 8003cf2:	bf00      	nop

08003cf4 <CAN_SCE_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void CAN_SCE_IRQHandler(void)
{
 8003cf4:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003cf6:	f7ff fd59 	bl	80037ac <Invalid_ISR>
 8003cfa:	bf00      	nop

08003cfc <EXTI9_5_IRQHandler>:
 * Return         : None
 *******************************************************************************/
volatile int Key_Value = 0;

void EXTI9_5_IRQHandler(void)
{
 8003cfc:	b430      	push	{r4, r5}
	Key_Value = Macro_Extract_Area(EXTI->PR, 0x3, 6);
 8003cfe:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8003d02:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003d06:	695d      	ldr	r5, [r3, #20]
 8003d08:	f240 62e4 	movw	r2, #1764	; 0x6e4
 8003d0c:	f44f 4161 	mov.w	r1, #57600	; 0xe100
 8003d10:	f3c5 1581 	ubfx	r5, r5, #6, #2

	EXTI->PR = 0x3<<6;
 8003d14:	24c0      	movs	r4, #192	; 0xc0
 *******************************************************************************/
volatile int Key_Value = 0;

void EXTI9_5_IRQHandler(void)
{
	Key_Value = Macro_Extract_Area(EXTI->PR, 0x3, 6);
 8003d16:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8003d1a:	f2ce 0100 	movt	r1, #57344	; 0xe000
 8003d1e:	f44f 0000 	mov.w	r0, #8388608	; 0x800000
 8003d22:	6255      	str	r5, [r2, #36]	; 0x24

	EXTI->PR = 0x3<<6;
 8003d24:	615c      	str	r4, [r3, #20]
 8003d26:	f8c1 0180 	str.w	r0, [r1, #384]	; 0x180
	NVIC_ClearPendingIRQ(23);
}
 8003d2a:	bc30      	pop	{r4, r5}
 8003d2c:	4770      	bx	lr
 8003d2e:	bf00      	nop

08003d30 <TIM1_BRK_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM1_BRK_IRQHandler(void)
{
 8003d30:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d32:	f7ff fd3b 	bl	80037ac <Invalid_ISR>
 8003d36:	bf00      	nop

08003d38 <TIM1_UP_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM1_UP_IRQHandler(void)
{
 8003d38:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d3a:	f7ff fd37 	bl	80037ac <Invalid_ISR>
 8003d3e:	bf00      	nop

08003d40 <TIM1_TRG_COM_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM1_TRG_COM_IRQHandler(void)
{
 8003d40:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d42:	f7ff fd33 	bl	80037ac <Invalid_ISR>
 8003d46:	bf00      	nop

08003d48 <TIM1_CC_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM1_CC_IRQHandler(void)
{
 8003d48:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d4a:	f7ff fd2f 	bl	80037ac <Invalid_ISR>
 8003d4e:	bf00      	nop

08003d50 <TIM2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM2_IRQHandler(void)
{
 8003d50:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d52:	f7ff fd2b 	bl	80037ac <Invalid_ISR>
 8003d56:	bf00      	nop

08003d58 <TIM3_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void TIM3_IRQHandler(void)
{
 8003d58:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d5a:	f7ff fd27 	bl	80037ac <Invalid_ISR>
 8003d5e:	bf00      	nop

08003d60 <TIM4_IRQHandler>:
 * Return         : None
 *******************************************************************************/
volatile int TIM4_Expired = 0;

void TIM4_IRQHandler(void)
{
 8003d60:	b430      	push	{r4, r5}
	Macro_Clear_Bit(TIM4->SR, 0);
 8003d62:	f44f 6100 	mov.w	r1, #2048	; 0x800
 8003d66:	f2c4 0100 	movt	r1, #16384	; 0x4000
 8003d6a:	8a0b      	ldrh	r3, [r1, #16]
 8003d6c:	f44f 4061 	mov.w	r0, #57600	; 0xe100
 8003d70:	f023 0301 	bic.w	r3, r3, #1
 8003d74:	041b      	lsls	r3, r3, #16
	NVIC_ClearPendingIRQ(30);
	TIM4_Expired = 1;
 8003d76:	f240 62e4 	movw	r2, #1764	; 0x6e4
 8003d7a:	f04f 4580 	mov.w	r5, #1073741824	; 0x40000000
 8003d7e:	2401      	movs	r4, #1
 *******************************************************************************/
volatile int TIM4_Expired = 0;

void TIM4_IRQHandler(void)
{
	Macro_Clear_Bit(TIM4->SR, 0);
 8003d80:	0c1b      	lsrs	r3, r3, #16
 8003d82:	f2ce 0000 	movt	r0, #57344	; 0xe000
	NVIC_ClearPendingIRQ(30);
	TIM4_Expired = 1;
 8003d86:	f2c2 0200 	movt	r2, #8192	; 0x2000
 *******************************************************************************/
volatile int TIM4_Expired = 0;

void TIM4_IRQHandler(void)
{
	Macro_Clear_Bit(TIM4->SR, 0);
 8003d8a:	820b      	strh	r3, [r1, #16]
 8003d8c:	f8c0 5180 	str.w	r5, [r0, #384]	; 0x180
	NVIC_ClearPendingIRQ(30);
	TIM4_Expired = 1;
 8003d90:	6294      	str	r4, [r2, #40]	; 0x28
}
 8003d92:	bc30      	pop	{r4, r5}
 8003d94:	4770      	bx	lr
 8003d96:	bf00      	nop

08003d98 <I2C1_EV_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void I2C1_EV_IRQHandler(void)
{
 8003d98:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003d9a:	f7ff fd07 	bl	80037ac <Invalid_ISR>
 8003d9e:	bf00      	nop

08003da0 <I2C1_ER_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void I2C1_ER_IRQHandler(void)
{
 8003da0:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003da2:	f7ff fd03 	bl	80037ac <Invalid_ISR>
 8003da6:	bf00      	nop

08003da8 <I2C2_EV_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void I2C2_EV_IRQHandler(void)
{
 8003da8:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003daa:	f7ff fcff 	bl	80037ac <Invalid_ISR>
 8003dae:	bf00      	nop

08003db0 <I2C2_ER_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void I2C2_ER_IRQHandler(void)
{
 8003db0:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003db2:	f7ff fcfb 	bl	80037ac <Invalid_ISR>
 8003db6:	bf00      	nop

08003db8 <SPI1_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void SPI1_IRQHandler(void)
{
 8003db8:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003dba:	f7ff fcf7 	bl	80037ac <Invalid_ISR>
 8003dbe:	bf00      	nop

08003dc0 <SPI2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void SPI2_IRQHandler(void)
{
 8003dc0:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003dc2:	f7ff fcf3 	bl	80037ac <Invalid_ISR>
 8003dc6:	bf00      	nop

08003dc8 <USART1_IRQHandler>:
 *******************************************************************************/
volatile int Uart1_Rx_In = 0;
volatile int Uart1_Rx_Data = 0;

void USART1_IRQHandler(void)
{
 8003dc8:	b410      	push	{r4}
	Uart1_Rx_Data = (unsigned char)USART1->DR;
 8003dca:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8003dce:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8003dd2:	889c      	ldrh	r4, [r3, #4]
 8003dd4:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 8003dd8:	f240 63e4 	movw	r3, #1764	; 0x6e4
 8003ddc:	b2e4      	uxtb	r4, r4
 8003dde:	f2c2 0300 	movt	r3, #8192	; 0x2000
	Uart1_Rx_In = 1;
 8003de2:	2001      	movs	r0, #1
 8003de4:	f2ce 0200 	movt	r2, #57344	; 0xe000
 8003de8:	2120      	movs	r1, #32
volatile int Uart1_Rx_In = 0;
volatile int Uart1_Rx_Data = 0;

void USART1_IRQHandler(void)
{
	Uart1_Rx_Data = (unsigned char)USART1->DR;
 8003dea:	62dc      	str	r4, [r3, #44]	; 0x2c
	Uart1_Rx_In = 1;
 8003dec:	6318      	str	r0, [r3, #48]	; 0x30
 8003dee:	f8c2 1184 	str.w	r1, [r2, #388]	; 0x184
	NVIC_ClearPendingIRQ(37);
}
 8003df2:	f85d 4b04 	ldr.w	r4, [sp], #4
 8003df6:	4770      	bx	lr

08003df8 <USART2_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void USART2_IRQHandler(void)
{
 8003df8:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003dfa:	f7ff fcd7 	bl	80037ac <Invalid_ISR>
 8003dfe:	bf00      	nop

08003e00 <USART3_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void USART3_IRQHandler(void)
{
 8003e00:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003e02:	f7ff fcd3 	bl	80037ac <Invalid_ISR>
 8003e06:	bf00      	nop

08003e08 <EXTI15_10_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void EXTI15_10_IRQHandler(void)
{
 8003e08:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003e0a:	f7ff fccf 	bl	80037ac <Invalid_ISR>
 8003e0e:	bf00      	nop

08003e10 <RTCAlarm_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void RTCAlarm_IRQHandler(void)
{
 8003e10:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003e12:	f7ff fccb 	bl	80037ac <Invalid_ISR>
 8003e16:	bf00      	nop

08003e18 <USBWakeUp_IRQHandler>:
 * Input          : None
 * Output         : None
 * Return         : None
 *******************************************************************************/
void USBWakeUp_IRQHandler(void)
{
 8003e18:	b508      	push	{r3, lr}
  Invalid_ISR();
 8003e1a:	f7ff fcc7 	bl	80037ac <Invalid_ISR>
 8003e1e:	bf00      	nop

08003e20 <SysTick_Run>:
#include "device_driver.h"

void SysTick_Run(unsigned int msec)
{
 8003e20:	b538      	push	{r3, r4, r5, lr}
	SysTick->CTRL = (0<<2)+(0<<1)+(0<<0);
 8003e22:	f24e 0410 	movw	r4, #57360	; 0xe010
 8003e26:	f2ce 0400 	movt	r4, #57344	; 0xe000
 8003e2a:	2500      	movs	r5, #0
 8003e2c:	6025      	str	r5, [r4, #0]
	SysTick->LOAD = (unsigned int)((HCLK/(8.*1000.))*msec+0.5);
 8003e2e:	f005 fcdf 	bl	80097f0 <__aeabi_ui2d>
 8003e32:	a30b      	add	r3, pc, #44	; (adr r3, 8003e60 <SysTick_Run+0x40>)
 8003e34:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003e38:	f005 fd50 	bl	80098dc <__aeabi_dmul>
 8003e3c:	2300      	movs	r3, #0
 8003e3e:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
 8003e42:	2200      	movs	r2, #0
 8003e44:	f005 fb98 	bl	8009578 <__adddf3>
 8003e48:	f006 f80a 	bl	8009e60 <__aeabi_d2uiz>
 8003e4c:	6060      	str	r0, [r4, #4]
	SysTick->VAL = 0;
 8003e4e:	60a5      	str	r5, [r4, #8]
	Macro_Set_Bit(SysTick->CTRL, 0);
 8003e50:	6823      	ldr	r3, [r4, #0]
 8003e52:	f043 0301 	orr.w	r3, r3, #1
 8003e56:	6023      	str	r3, [r4, #0]
 8003e58:	bd38      	pop	{r3, r4, r5, pc}
 8003e5a:	bf00      	nop
 8003e5c:	f3af 8000 	nop.w
 8003e60:	00000000 	andeq	r0, r0, r0
 8003e64:	40c19400 	sbcmi	r9, r1, r0, lsl #8

08003e68 <SysTick_Check_Timeout>:
}

int SysTick_Check_Timeout(void)
{
	return ((SysTick->CTRL >> 16) & 0x1);
 8003e68:	f24e 0310 	movw	r3, #57360	; 0xe010
 8003e6c:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8003e70:	6818      	ldr	r0, [r3, #0]
}
 8003e72:	f3c0 4000 	ubfx	r0, r0, #16, #1
 8003e76:	4770      	bx	lr

08003e78 <SysTick_Get_Time>:

unsigned int SysTick_Get_Time(void)
{
	return SysTick->VAL;
 8003e78:	f24e 0310 	movw	r3, #57360	; 0xe010
 8003e7c:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8003e80:	6898      	ldr	r0, [r3, #8]
}
 8003e82:	4770      	bx	lr

08003e84 <SysTick_Get_Load_Time>:

unsigned int SysTick_Get_Load_Time(void)
{
	return SysTick->LOAD;
 8003e84:	f24e 0310 	movw	r3, #57360	; 0xe010
 8003e88:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8003e8c:	6858      	ldr	r0, [r3, #4]
}
 8003e8e:	4770      	bx	lr

08003e90 <SysTick_Stop>:

void SysTick_Stop(void)
{
	SysTick->CTRL = 0;
 8003e90:	f24e 0310 	movw	r3, #57360	; 0xe010
 8003e94:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8003e98:	2200      	movs	r2, #0
 8003e9a:	601a      	str	r2, [r3, #0]
 8003e9c:	4770      	bx	lr
 8003e9e:	bf00      	nop

08003ea0 <SysTick_OS_Tick>:
}

void SysTick_OS_Tick(unsigned int msec)
{
 8003ea0:	b510      	push	{r4, lr}
  SysTick->CTRL = (0<<2)+(1<<1)+(0<<0);
 8003ea2:	f24e 0410 	movw	r4, #57360	; 0xe010
 8003ea6:	f2ce 0400 	movt	r4, #57344	; 0xe000
 8003eaa:	2302      	movs	r3, #2
 8003eac:	6023      	str	r3, [r4, #0]
  SysTick->LOAD = (unsigned int)((HCLK/(8.*1000.))*msec+0.5);
 8003eae:	f005 fc9f 	bl	80097f0 <__aeabi_ui2d>
 8003eb2:	a30b      	add	r3, pc, #44	; (adr r3, 8003ee0 <SysTick_OS_Tick+0x40>)
 8003eb4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003eb8:	f005 fd10 	bl	80098dc <__aeabi_dmul>
 8003ebc:	2300      	movs	r3, #0
 8003ebe:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
 8003ec2:	2200      	movs	r2, #0
 8003ec4:	f005 fb58 	bl	8009578 <__adddf3>
 8003ec8:	f005 ffca 	bl	8009e60 <__aeabi_d2uiz>
  SysTick->VAL = 0;
 8003ecc:	2300      	movs	r3, #0
}

void SysTick_OS_Tick(unsigned int msec)
{
  SysTick->CTRL = (0<<2)+(1<<1)+(0<<0);
  SysTick->LOAD = (unsigned int)((HCLK/(8.*1000.))*msec+0.5);
 8003ece:	6060      	str	r0, [r4, #4]
  SysTick->VAL = 0;
 8003ed0:	60a3      	str	r3, [r4, #8]
  Macro_Set_Bit(SysTick->CTRL, 0);
 8003ed2:	6823      	ldr	r3, [r4, #0]
 8003ed4:	f043 0301 	orr.w	r3, r3, #1
 8003ed8:	6023      	str	r3, [r4, #0]
 8003eda:	bd10      	pop	{r4, pc}
 8003edc:	f3af 8000 	nop.w
 8003ee0:	00000000 	andeq	r0, r0, r0
 8003ee4:	40c19400 	sbcmi	r9, r1, r0, lsl #8

08003ee8 <TIM2_Stopwatch_Start>:
#define TIM3_FREQ 	  		(8000000) 	      	// Hz
#define TIM3_TICK	  		(1000000/TIM3_FREQ)	// usec
#define TIME3_PLS_OF_1ms  	(1000/TIM3_TICK)

void TIM2_Stopwatch_Start(void)
{
 8003ee8:	b430      	push	{r4, r5}
	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003eea:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8003eee:	f2c4 0202 	movt	r2, #16386	; 0x4002
 8003ef2:	69d5      	ldr	r5, [r2, #28]

	TIM2->CR1 = (1<<4)|(1<<3);
 8003ef4:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
#define TIM3_TICK	  		(1000000/TIM3_FREQ)	// usec
#define TIME3_PLS_OF_1ms  	(1000/TIM3_TICK)

void TIM2_Stopwatch_Start(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003ef8:	f045 0501 	orr.w	r5, r5, #1

	TIM2->CR1 = (1<<4)|(1<<3);
 8003efc:	2418      	movs	r4, #24
	TIM2->PSC = (unsigned int)(TIMXCLK/50000.0 + 0.5)-1;
 8003efe:	f240 509f 	movw	r0, #1439	; 0x59f
	TIM2->ARR = TIM2_MAX;
 8003f02:	f64f 71ff 	movw	r1, #65535	; 0xffff
#define TIM3_TICK	  		(1000000/TIM3_FREQ)	// usec
#define TIME3_PLS_OF_1ms  	(1000/TIM3_TICK)

void TIM2_Stopwatch_Start(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003f06:	61d5      	str	r5, [r2, #28]

	TIM2->CR1 = (1<<4)|(1<<3);
 8003f08:	801c      	strh	r4, [r3, #0]
	TIM2->PSC = (unsigned int)(TIMXCLK/50000.0 + 0.5)-1;
 8003f0a:	8518      	strh	r0, [r3, #40]	; 0x28
	TIM2->ARR = TIM2_MAX;
 8003f0c:	8599      	strh	r1, [r3, #44]	; 0x2c

	Macro_Set_Bit(TIM2->EGR,0);
 8003f0e:	8a9a      	ldrh	r2, [r3, #20]
 8003f10:	b292      	uxth	r2, r2
 8003f12:	f042 0201 	orr.w	r2, r2, #1
 8003f16:	829a      	strh	r2, [r3, #20]
	Macro_Set_Bit(TIM2->CR1, 0);
 8003f18:	881a      	ldrh	r2, [r3, #0]
 8003f1a:	b292      	uxth	r2, r2
 8003f1c:	f042 0201 	orr.w	r2, r2, #1
 8003f20:	801a      	strh	r2, [r3, #0]
}
 8003f22:	bc30      	pop	{r4, r5}
 8003f24:	4770      	bx	lr
 8003f26:	bf00      	nop

08003f28 <TIM2_Stopwatch_Stop>:

unsigned int TIM2_Stopwatch_Stop(void)
{
	unsigned int time;

	Macro_Clear_Bit(TIM2->CR1, 0);
 8003f28:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8003f2c:	8813      	ldrh	r3, [r2, #0]
	time = (TIM2_MAX - TIM2->CNT) * TIM2_TICK;
 8003f2e:	f64f 71ec 	movw	r1, #65516	; 0xffec

unsigned int TIM2_Stopwatch_Stop(void)
{
	unsigned int time;

	Macro_Clear_Bit(TIM2->CR1, 0);
 8003f32:	f023 0301 	bic.w	r3, r3, #1
 8003f36:	041b      	lsls	r3, r3, #16
 8003f38:	0c1b      	lsrs	r3, r3, #16
 8003f3a:	8013      	strh	r3, [r2, #0]
	time = (TIM2_MAX - TIM2->CNT) * TIM2_TICK;
 8003f3c:	8c93      	ldrh	r3, [r2, #36]	; 0x24
 8003f3e:	f2c0 0113 	movt	r1, #19
 8003f42:	b29b      	uxth	r3, r3
 8003f44:	f06f 0013 	mvn.w	r0, #19
	return time;
}
 8003f48:	fb00 1003 	mla	r0, r0, r3, r1
 8003f4c:	4770      	bx	lr
 8003f4e:	bf00      	nop

08003f50 <TIM2_Delay>:
#else

/* Delay Time Extended */

void TIM2_Delay(int time)
{
 8003f50:	b470      	push	{r4, r5, r6}
	int i;
	unsigned int t = TIME2_PLS_OF_1ms * time;

	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003f52:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8003f56:	f2c4 0302 	movt	r3, #16386	; 0x4002
 8003f5a:	69de      	ldr	r6, [r3, #28]

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
 8003f5c:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
	TIM2->CR1 = (1<<4)|(1<<3);
 8003f60:	2418      	movs	r4, #24
	TIM2->ARR = 0xffff;
 8003f62:	f64f 71ff 	movw	r1, #65535	; 0xffff
void TIM2_Delay(int time)
{
	int i;
	unsigned int t = TIME2_PLS_OF_1ms * time;

	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003f66:	f046 0601 	orr.w	r6, r6, #1

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
 8003f6a:	f240 559f 	movw	r5, #1439	; 0x59f
void TIM2_Delay(int time)
{
	int i;
	unsigned int t = TIME2_PLS_OF_1ms * time;

	Macro_Set_Bit(RCC->APB1ENR, 0);
 8003f6e:	61de      	str	r6, [r3, #28]

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
 8003f70:	8515      	strh	r5, [r2, #40]	; 0x28
	TIM2->CR1 = (1<<4)|(1<<3);
 8003f72:	8014      	strh	r4, [r2, #0]
	TIM2->ARR = 0xffff;
 8003f74:	8591      	strh	r1, [r2, #44]	; 0x2c
/* Delay Time Extended */

void TIM2_Delay(int time)
{
	int i;
	unsigned int t = TIME2_PLS_OF_1ms * time;
 8003f76:	2132      	movs	r1, #50	; 0x32
	Macro_Set_Bit(RCC->APB1ENR, 0);

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
 8003f78:	8a93      	ldrh	r3, [r2, #20]
/* Delay Time Extended */

void TIM2_Delay(int time)
{
	int i;
	unsigned int t = TIME2_PLS_OF_1ms * time;
 8003f7a:	fb01 f000 	mul.w	r0, r1, r0
	Macro_Set_Bit(RCC->APB1ENR, 0);

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
 8003f7e:	b29b      	uxth	r3, r3
	Macro_Set_Bit(TIM2->DIER, 0);

	for(i=0; i<(t/0xffffu); i++)
 8003f80:	f248 0401 	movw	r4, #32769	; 0x8001
	Macro_Set_Bit(RCC->APB1ENR, 0);

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
 8003f84:	f043 0301 	orr.w	r3, r3, #1
	Macro_Set_Bit(TIM2->DIER, 0);

	for(i=0; i<(t/0xffffu); i++)
 8003f88:	f2c8 0400 	movt	r4, #32768	; 0x8000
	Macro_Set_Bit(RCC->APB1ENR, 0);

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
 8003f8c:	8293      	strh	r3, [r2, #20]
	Macro_Set_Bit(TIM2->DIER, 0);

	for(i=0; i<(t/0xffffu); i++)
 8003f8e:	fba4 1400 	umull	r1, r4, r4, r0

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
	Macro_Set_Bit(TIM2->DIER, 0);
 8003f92:	8993      	ldrh	r3, [r2, #12]

	for(i=0; i<(t/0xffffu); i++)
 8003f94:	0be4      	lsrs	r4, r4, #15

	TIM2->PSC = (unsigned int)(TIMXCLK/(double)TIM2_FREQ + 0.5)-1;
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
	Macro_Set_Bit(TIM2->DIER, 0);
 8003f96:	b29b      	uxth	r3, r3
 8003f98:	f043 0301 	orr.w	r3, r3, #1
 8003f9c:	8193      	strh	r3, [r2, #12]

	for(i=0; i<(t/0xffffu); i++)
 8003f9e:	bf18      	it	ne
 8003fa0:	2100      	movne	r1, #0
 8003fa2:	d015      	beq.n	8003fd0 <TIM2_Delay+0x80>
	{
		Macro_Set_Bit(TIM2->EGR,0);
 8003fa4:	8a93      	ldrh	r3, [r2, #20]
 8003fa6:	b29b      	uxth	r3, r3
 8003fa8:	f043 0301 	orr.w	r3, r3, #1
 8003fac:	8293      	strh	r3, [r2, #20]
		Macro_Clear_Bit(TIM2->SR, 0);
 8003fae:	8a13      	ldrh	r3, [r2, #16]
 8003fb0:	f023 0301 	bic.w	r3, r3, #1
 8003fb4:	041b      	lsls	r3, r3, #16
 8003fb6:	0c1b      	lsrs	r3, r3, #16
 8003fb8:	8213      	strh	r3, [r2, #16]
		Macro_Set_Bit(TIM2->CR1, 0);
 8003fba:	8813      	ldrh	r3, [r2, #0]
 8003fbc:	b29b      	uxth	r3, r3
 8003fbe:	f043 0301 	orr.w	r3, r3, #1
 8003fc2:	8013      	strh	r3, [r2, #0]
		while(Macro_Check_Bit_Clear(TIM2->SR, 0));
 8003fc4:	8a13      	ldrh	r3, [r2, #16]
 8003fc6:	07dd      	lsls	r5, r3, #31
 8003fc8:	d5fc      	bpl.n	8003fc4 <TIM2_Delay+0x74>
	TIM2->CR1 = (1<<4)|(1<<3);
	TIM2->ARR = 0xffff;
	Macro_Set_Bit(TIM2->EGR,0);
	Macro_Set_Bit(TIM2->DIER, 0);

	for(i=0; i<(t/0xffffu); i++)
 8003fca:	3101      	adds	r1, #1
 8003fcc:	42a1      	cmp	r1, r4
 8003fce:	d1e9      	bne.n	8003fa4 <TIM2_Delay+0x54>
		Macro_Clear_Bit(TIM2->SR, 0);
		Macro_Set_Bit(TIM2->CR1, 0);
		while(Macro_Check_Bit_Clear(TIM2->SR, 0));
	}

	TIM2->ARR = t % 0xffffu;
 8003fd0:	f248 0301 	movw	r3, #32769	; 0x8001
 8003fd4:	f2c8 0300 	movt	r3, #32768	; 0x8000
 8003fd8:	fba3 2300 	umull	r2, r3, r3, r0
 8003fdc:	0bdb      	lsrs	r3, r3, #15
 8003fde:	ebc3 4303 	rsb	r3, r3, r3, lsl #16
 8003fe2:	1ac2      	subs	r2, r0, r3
 8003fe4:	b292      	uxth	r2, r2
 8003fe6:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8003fea:	859a      	strh	r2, [r3, #44]	; 0x2c
	Macro_Set_Bit(TIM2->EGR,0);
 8003fec:	8a9a      	ldrh	r2, [r3, #20]
	Macro_Clear_Bit(TIM2->SR, 0);
	Macro_Set_Bit(TIM2->CR1, 0);
	while (Macro_Check_Bit_Clear(TIM2->SR, 0));
 8003fee:	4619      	mov	r1, r3
		Macro_Set_Bit(TIM2->CR1, 0);
		while(Macro_Check_Bit_Clear(TIM2->SR, 0));
	}

	TIM2->ARR = t % 0xffffu;
	Macro_Set_Bit(TIM2->EGR,0);
 8003ff0:	b292      	uxth	r2, r2
 8003ff2:	f042 0201 	orr.w	r2, r2, #1
 8003ff6:	829a      	strh	r2, [r3, #20]
	Macro_Clear_Bit(TIM2->SR, 0);
 8003ff8:	8a1a      	ldrh	r2, [r3, #16]
 8003ffa:	f022 0201 	bic.w	r2, r2, #1
 8003ffe:	0412      	lsls	r2, r2, #16
 8004000:	0c12      	lsrs	r2, r2, #16
 8004002:	821a      	strh	r2, [r3, #16]
	Macro_Set_Bit(TIM2->CR1, 0);
 8004004:	881a      	ldrh	r2, [r3, #0]
 8004006:	b292      	uxth	r2, r2
 8004008:	f042 0201 	orr.w	r2, r2, #1
 800400c:	801a      	strh	r2, [r3, #0]
	while (Macro_Check_Bit_Clear(TIM2->SR, 0));
 800400e:	8a0b      	ldrh	r3, [r1, #16]
 8004010:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8004014:	07db      	lsls	r3, r3, #31
 8004016:	d5fa      	bpl.n	800400e <TIM2_Delay+0xbe>

	Macro_Clear_Bit(TIM2->CR1, 0);
 8004018:	8813      	ldrh	r3, [r2, #0]
 800401a:	f023 0301 	bic.w	r3, r3, #1
 800401e:	041b      	lsls	r3, r3, #16
 8004020:	0c1b      	lsrs	r3, r3, #16
 8004022:	8013      	strh	r3, [r2, #0]
	Macro_Clear_Bit(TIM2->DIER, 0);
 8004024:	8993      	ldrh	r3, [r2, #12]
 8004026:	f023 0301 	bic.w	r3, r3, #1
 800402a:	041b      	lsls	r3, r3, #16
 800402c:	0c1b      	lsrs	r3, r3, #16
 800402e:	8193      	strh	r3, [r2, #12]
}
 8004030:	bc70      	pop	{r4, r5, r6}
 8004032:	4770      	bx	lr

08004034 <TIM4_Repeat>:

#endif

void TIM4_Repeat(int time)
{
 8004034:	b430      	push	{r4, r5}
	Macro_Set_Bit(RCC->APB1ENR, 2);

	TIM4->CR1 = (1<<4)|(0<<3);
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
	TIM4->ARR = TIME4_PLS_OF_1ms * time - 1;
 8004036:	eb00 0080 	add.w	r0, r0, r0, lsl #2

#endif

void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);
 800403a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800403e:	f2c4 0202 	movt	r2, #16386	; 0x4002

	TIM4->CR1 = (1<<4)|(0<<3);
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
	TIM4->ARR = TIME4_PLS_OF_1ms * time - 1;
 8004042:	eb00 0080 	add.w	r0, r0, r0, lsl #2

#endif

void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);
 8004046:	69d5      	ldr	r5, [r2, #28]

	TIM4->CR1 = (1<<4)|(0<<3);
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
	TIM4->ARR = TIME4_PLS_OF_1ms * time - 1;
 8004048:	0040      	lsls	r0, r0, #1
 800404a:	3801      	subs	r0, #1

void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);

	TIM4->CR1 = (1<<4)|(0<<3);
 800404c:	f44f 6300 	mov.w	r3, #2048	; 0x800
 8004050:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8004054:	2410      	movs	r4, #16

#endif

void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);
 8004056:	f045 0504 	orr.w	r5, r5, #4

	TIM4->CR1 = (1<<4)|(0<<3);
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
	TIM4->ARR = TIME4_PLS_OF_1ms * time - 1;
 800405a:	b280      	uxth	r0, r0
void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);

	TIM4->CR1 = (1<<4)|(0<<3);
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
 800405c:	f240 519f 	movw	r1, #1439	; 0x59f

#endif

void TIM4_Repeat(int time)
{
	Macro_Set_Bit(RCC->APB1ENR, 2);
 8004060:	61d5      	str	r5, [r2, #28]

	TIM4->CR1 = (1<<4)|(0<<3);
 8004062:	801c      	strh	r4, [r3, #0]
	TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
 8004064:	8519      	strh	r1, [r3, #40]	; 0x28
	TIM4->ARR = TIME4_PLS_OF_1ms * time - 1;
 8004066:	8598      	strh	r0, [r3, #44]	; 0x2c

	Macro_Set_Bit(TIM4->EGR,0);
 8004068:	8a9a      	ldrh	r2, [r3, #20]
 800406a:	b292      	uxth	r2, r2
 800406c:	f042 0201 	orr.w	r2, r2, #1
 8004070:	829a      	strh	r2, [r3, #20]
	Macro_Clear_Bit(TIM4->SR, 0);
 8004072:	8a1a      	ldrh	r2, [r3, #16]
 8004074:	f022 0201 	bic.w	r2, r2, #1
 8004078:	40a2      	lsls	r2, r4
 800407a:	40e2      	lsrs	r2, r4
 800407c:	821a      	strh	r2, [r3, #16]
	Macro_Set_Bit(TIM4->DIER, 0);
 800407e:	899a      	ldrh	r2, [r3, #12]
 8004080:	b292      	uxth	r2, r2
 8004082:	f042 0201 	orr.w	r2, r2, #1
 8004086:	819a      	strh	r2, [r3, #12]
	Macro_Set_Bit(TIM4->CR1, 0);
 8004088:	881a      	ldrh	r2, [r3, #0]
 800408a:	b292      	uxth	r2, r2
 800408c:	f042 0201 	orr.w	r2, r2, #1
 8004090:	801a      	strh	r2, [r3, #0]
}
 8004092:	bc30      	pop	{r4, r5}
 8004094:	4770      	bx	lr
 8004096:	bf00      	nop

08004098 <TIM4_Check_Timeout>:

int TIM4_Check_Timeout(void)
{
	if(Macro_Check_Bit_Set(TIM4->SR, 0))
 8004098:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800409c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80040a0:	8a18      	ldrh	r0, [r3, #16]
 80040a2:	f010 0001 	ands.w	r0, r0, #1
 80040a6:	d006      	beq.n	80040b6 <TIM4_Check_Timeout+0x1e>
	{
		Macro_Clear_Bit(TIM4->SR, 0);
 80040a8:	8a1a      	ldrh	r2, [r3, #16]
		return 1;
 80040aa:	2001      	movs	r0, #1

int TIM4_Check_Timeout(void)
{
	if(Macro_Check_Bit_Set(TIM4->SR, 0))
	{
		Macro_Clear_Bit(TIM4->SR, 0);
 80040ac:	f022 0201 	bic.w	r2, r2, #1
 80040b0:	0412      	lsls	r2, r2, #16
 80040b2:	0c12      	lsrs	r2, r2, #16
 80040b4:	821a      	strh	r2, [r3, #16]
	}
	else
	{
		return 0;
	}
}
 80040b6:	4770      	bx	lr

080040b8 <TIM4_Stop>:

void TIM4_Stop(void)
{
	Macro_Clear_Bit(TIM4->CR1, 0);
 80040b8:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80040bc:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80040c0:	881a      	ldrh	r2, [r3, #0]
 80040c2:	f022 0201 	bic.w	r2, r2, #1
 80040c6:	0412      	lsls	r2, r2, #16
 80040c8:	0c12      	lsrs	r2, r2, #16
 80040ca:	801a      	strh	r2, [r3, #0]
	Macro_Clear_Bit(TIM4->DIER, 0);
 80040cc:	899a      	ldrh	r2, [r3, #12]
 80040ce:	f022 0201 	bic.w	r2, r2, #1
 80040d2:	0412      	lsls	r2, r2, #16
 80040d4:	0c12      	lsrs	r2, r2, #16
 80040d6:	819a      	strh	r2, [r3, #12]
 80040d8:	4770      	bx	lr
 80040da:	bf00      	nop

080040dc <TIM4_Change_Value>:
}

void TIM4_Change_Value(int time)
{
	TIM4->ARR = TIME4_PLS_OF_1ms * time;
 80040dc:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80040e0:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 80040e4:	0040      	lsls	r0, r0, #1
 80040e6:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80040ea:	b280      	uxth	r0, r0
 80040ec:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80040f0:	8598      	strh	r0, [r3, #44]	; 0x2c
 80040f2:	4770      	bx	lr

080040f4 <TIM3_Out_Init>:
}

void TIM3_Out_Init(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 1);
 80040f4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80040f8:	f2c4 0302 	movt	r3, #16386	; 0x4002
 80040fc:	69da      	ldr	r2, [r3, #28]
	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Write_Block(GPIOB->CRL,0xf,0xb,0);
 80040fe:	f44f 6140 	mov.w	r1, #3072	; 0xc00
	TIM4->ARR = TIME4_PLS_OF_1ms * time;
}

void TIM3_Out_Init(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 1);
 8004102:	f042 0202 	orr.w	r2, r2, #2
 8004106:	61da      	str	r2, [r3, #28]
	Macro_Set_Bit(RCC->APB2ENR, 3);
 8004108:	699a      	ldr	r2, [r3, #24]
	Macro_Write_Block(GPIOB->CRL,0xf,0xb,0);
 800410a:	f2c4 0101 	movt	r1, #16385	; 0x4001
}

void TIM3_Out_Init(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 1);
	Macro_Set_Bit(RCC->APB2ENR, 3);
 800410e:	f042 0208 	orr.w	r2, r2, #8
 8004112:	619a      	str	r2, [r3, #24]
	Macro_Write_Block(GPIOB->CRL,0xf,0xb,0);
 8004114:	680b      	ldr	r3, [r1, #0]
	Macro_Write_Block(TIM3->CCMR2,0x7,0x6,4);
 8004116:	f44f 6280 	mov.w	r2, #1024	; 0x400

void TIM3_Out_Init(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 1);
	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Write_Block(GPIOB->CRL,0xf,0xb,0);
 800411a:	f023 030f 	bic.w	r3, r3, #15
 800411e:	f043 030b 	orr.w	r3, r3, #11
 8004122:	600b      	str	r3, [r1, #0]
	Macro_Write_Block(TIM3->CCMR2,0x7,0x6,4);
 8004124:	f2c4 0200 	movt	r2, #16384	; 0x4000
 8004128:	8b93      	ldrh	r3, [r2, #28]
	TIM3->CCER = (0<<9)|(1<<8);
 800412a:	f44f 7180 	mov.w	r1, #256	; 0x100
void TIM3_Out_Init(void)
{
	Macro_Set_Bit(RCC->APB1ENR, 1);
	Macro_Set_Bit(RCC->APB2ENR, 3);
	Macro_Write_Block(GPIOB->CRL,0xf,0xb,0);
	Macro_Write_Block(TIM3->CCMR2,0x7,0x6,4);
 800412e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 8004132:	041b      	lsls	r3, r3, #16
 8004134:	0c1b      	lsrs	r3, r3, #16
 8004136:	f043 0360 	orr.w	r3, r3, #96	; 0x60
 800413a:	8393      	strh	r3, [r2, #28]
	TIM3->CCER = (0<<9)|(1<<8);
 800413c:	8411      	strh	r1, [r2, #32]
 800413e:	4770      	bx	lr

08004140 <TIM3_Out_Freq_Generation>:
}

void TIM3_Out_Freq_Generation(unsigned short freq)
{
 8004140:	b510      	push	{r4, lr}
	TIM3->PSC = (unsigned int)(TIMXCLK/(double)TIM3_FREQ + 0.5)-1;
 8004142:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8004146:	f2c4 0400 	movt	r4, #16384	; 0x4000
 800414a:	2308      	movs	r3, #8
 800414c:	8523      	strh	r3, [r4, #40]	; 0x28
	TIM3->ARR = (double)TIM3_FREQ/freq-1;
 800414e:	f005 fb5f 	bl	8009810 <__aeabi_i2d>
 8004152:	4602      	mov	r2, r0
 8004154:	460b      	mov	r3, r1
 8004156:	a10e      	add	r1, pc, #56	; (adr r1, 8004190 <TIM3_Out_Freq_Generation+0x50>)
 8004158:	e9d1 0100 	ldrd	r0, r1, [r1]
 800415c:	f005 fce8 	bl	8009b30 <__aeabi_ddiv>
 8004160:	2300      	movs	r3, #0
 8004162:	2200      	movs	r2, #0
 8004164:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
 8004168:	f005 fa04 	bl	8009574 <__aeabi_dsub>
 800416c:	f005 fe78 	bl	8009e60 <__aeabi_d2uiz>
 8004170:	b280      	uxth	r0, r0
 8004172:	85a0      	strh	r0, [r4, #44]	; 0x2c
	TIM3->CCR3 = TIM3->ARR/2;
 8004174:	8da2      	ldrh	r2, [r4, #44]	; 0x2c

	Macro_Set_Bit(TIM3->EGR,0);
	TIM3->CR1 = (1<<4)|(0<<3)|(0<<1)|(1<<0);
 8004176:	2311      	movs	r3, #17

void TIM3_Out_Freq_Generation(unsigned short freq)
{
	TIM3->PSC = (unsigned int)(TIMXCLK/(double)TIM3_FREQ + 0.5)-1;
	TIM3->ARR = (double)TIM3_FREQ/freq-1;
	TIM3->CCR3 = TIM3->ARR/2;
 8004178:	f3c2 024e 	ubfx	r2, r2, #1, #15
 800417c:	87a2      	strh	r2, [r4, #60]	; 0x3c

	Macro_Set_Bit(TIM3->EGR,0);
 800417e:	8aa2      	ldrh	r2, [r4, #20]
 8004180:	b292      	uxth	r2, r2
 8004182:	f042 0201 	orr.w	r2, r2, #1
 8004186:	82a2      	strh	r2, [r4, #20]
	TIM3->CR1 = (1<<4)|(0<<3)|(0<<1)|(1<<0);
 8004188:	8023      	strh	r3, [r4, #0]
 800418a:	bd10      	pop	{r4, pc}
 800418c:	f3af 8000 	nop.w
 8004190:	00000000 	andeq	r0, r0, r0
 8004194:	415e8480 	cmpmi	lr, r0, lsl #9

08004198 <TIM3_Out_Stop>:
}

void TIM3_Out_Stop(void)
{
	Macro_Clear_Bit(TIM3->CR1, 0);
 8004198:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800419c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80041a0:	881a      	ldrh	r2, [r3, #0]
 80041a2:	f022 0201 	bic.w	r2, r2, #1
 80041a6:	0412      	lsls	r2, r2, #16
 80041a8:	0c12      	lsrs	r2, r2, #16
 80041aa:	801a      	strh	r2, [r3, #0]
	Macro_Clear_Bit(TIM3->DIER, 0);
 80041ac:	899a      	ldrh	r2, [r3, #12]
 80041ae:	f022 0201 	bic.w	r2, r2, #1
 80041b2:	0412      	lsls	r2, r2, #16
 80041b4:	0c12      	lsrs	r2, r2, #16
 80041b6:	819a      	strh	r2, [r3, #12]
 80041b8:	4770      	bx	lr
 80041ba:	bf00      	nop

080041bc <TIM4_Repeat_Interrupt_Enable>:
}

void TIM4_Repeat_Interrupt_Enable(int en, int time)
{
 80041bc:	b430      	push	{r4, r5}
	if(en)
 80041be:	b9c8      	cbnz	r0, 80041f4 <TIM4_Repeat_Interrupt_Enable+0x38>
 * Disable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 80041c0:	f44f 4261 	mov.w	r2, #57600	; 0xe100
 80041c4:	f2ce 0200 	movt	r2, #57344	; 0xe000
 80041c8:	f04f 4180 	mov.w	r1, #1073741824	; 0x40000000
	}

	else
	{
		NVIC_DisableIRQ(30);
		Macro_Clear_Bit(TIM4->CR1, 0);
 80041cc:	f44f 6300 	mov.w	r3, #2048	; 0x800
 80041d0:	f8c2 1080 	str.w	r1, [r2, #128]	; 0x80
 80041d4:	f2c4 0300 	movt	r3, #16384	; 0x4000
 80041d8:	881a      	ldrh	r2, [r3, #0]
 80041da:	f022 0201 	bic.w	r2, r2, #1
 80041de:	0412      	lsls	r2, r2, #16
 80041e0:	0c12      	lsrs	r2, r2, #16
 80041e2:	801a      	strh	r2, [r3, #0]
		Macro_Clear_Bit(TIM4->DIER, 0);
 80041e4:	899a      	ldrh	r2, [r3, #12]
 80041e6:	f022 0201 	bic.w	r2, r2, #1
 80041ea:	0412      	lsls	r2, r2, #16
 80041ec:	0c12      	lsrs	r2, r2, #16
 80041ee:	819a      	strh	r2, [r3, #12]
	}
}
 80041f0:	bc30      	pop	{r4, r5}
 80041f2:	4770      	bx	lr

void TIM4_Repeat_Interrupt_Enable(int en, int time)
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB1ENR, 2);
 80041f4:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 80041f8:	f2c4 0202 	movt	r2, #16386	; 0x4002

		TIM4->CR1 = (1<<4)|(0<<3);
		TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
		TIM4->ARR = TIME4_PLS_OF_1ms * time;
 80041fc:	eb01 0181 	add.w	r1, r1, r1, lsl #2

void TIM4_Repeat_Interrupt_Enable(int en, int time)
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB1ENR, 2);
 8004200:	69d5      	ldr	r5, [r2, #28]

		TIM4->CR1 = (1<<4)|(0<<3);
		TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
		TIM4->ARR = TIME4_PLS_OF_1ms * time;
 8004202:	eb01 0181 	add.w	r1, r1, r1, lsl #2
 8004206:	0049      	lsls	r1, r1, #1
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB1ENR, 2);

		TIM4->CR1 = (1<<4)|(0<<3);
 8004208:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800420c:	f2c4 0300 	movt	r3, #16384	; 0x4000
 8004210:	2410      	movs	r4, #16
		TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
		TIM4->ARR = TIME4_PLS_OF_1ms * time;
 8004212:	b289      	uxth	r1, r1

void TIM4_Repeat_Interrupt_Enable(int en, int time)
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB1ENR, 2);
 8004214:	f045 0504 	orr.w	r5, r5, #4

		TIM4->CR1 = (1<<4)|(0<<3);
		TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
 8004218:	f240 509f 	movw	r0, #1439	; 0x59f

void TIM4_Repeat_Interrupt_Enable(int en, int time)
{
	if(en)
	{
		Macro_Set_Bit(RCC->APB1ENR, 2);
 800421c:	61d5      	str	r5, [r2, #28]

		TIM4->CR1 = (1<<4)|(0<<3);
 800421e:	801c      	strh	r4, [r3, #0]
		TIM4->PSC = (unsigned int)(TIMXCLK/(double)TIM4_FREQ + 0.5)-1;
 8004220:	8518      	strh	r0, [r3, #40]	; 0x28
		TIM4->ARR = TIME4_PLS_OF_1ms * time;
 8004222:	8599      	strh	r1, [r3, #44]	; 0x2c

		Macro_Set_Bit(TIM4->EGR,0);
 8004224:	8a9a      	ldrh	r2, [r3, #20]
 * Clear the pending bit for the specified interrupt. 
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 8004226:	f44f 4161 	mov.w	r1, #57600	; 0xe100
 800422a:	b292      	uxth	r2, r2
 800422c:	f042 0201 	orr.w	r2, r2, #1
 8004230:	829a      	strh	r2, [r3, #20]
		Macro_Clear_Bit(TIM4->SR, 0);
 8004232:	8a1a      	ldrh	r2, [r3, #16]
 8004234:	f2ce 0100 	movt	r1, #57344	; 0xe000
 8004238:	f022 0201 	bic.w	r2, r2, #1
 800423c:	40a2      	lsls	r2, r4
 800423e:	40e2      	lsrs	r2, r4
 8004240:	f04f 4080 	mov.w	r0, #1073741824	; 0x40000000
 8004244:	821a      	strh	r2, [r3, #16]
 8004246:	f8c1 0180 	str.w	r0, [r1, #384]	; 0x180
		NVIC_ClearPendingIRQ(30);
		Macro_Set_Bit(TIM4->DIER, 0);
 800424a:	899a      	ldrh	r2, [r3, #12]
 800424c:	b292      	uxth	r2, r2
 800424e:	f042 0201 	orr.w	r2, r2, #1
 8004252:	819a      	strh	r2, [r3, #12]
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 8004254:	6008      	str	r0, [r1, #0]
		NVIC_EnableIRQ(30);
		Macro_Set_Bit(TIM4->CR1, 0);
 8004256:	881a      	ldrh	r2, [r3, #0]
 8004258:	b292      	uxth	r2, r2
 800425a:	f042 0201 	orr.w	r2, r2, #1
 800425e:	801a      	strh	r2, [r3, #0]
	{
		NVIC_DisableIRQ(30);
		Macro_Clear_Bit(TIM4->CR1, 0);
		Macro_Clear_Bit(TIM4->DIER, 0);
	}
}
 8004260:	bc30      	pop	{r4, r5}
 8004262:	4770      	bx	lr
 8004264:	f3af 8000 	nop.w

08004268 <Uart1_Init>:
#include <string.h>
#include <stdlib.h>
#include <ctype.h>

void Uart1_Init(int baud)
{
 8004268:	b570      	push	{r4, r5, r6, lr}
	double div;
	unsigned int mant;
	unsigned int frac;

	Macro_Set_Bit(RCC->APB2ENR, 2);
 800426a:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 800426e:	f2c4 0202 	movt	r2, #16386	; 0x4002
 8004272:	6991      	ldr	r1, [r2, #24]
	Macro_Set_Bit(RCC->APB2ENR, 14);
	Macro_Write_Block(GPIOA->CRH, 0xff, 0x8a, 4);
 8004274:	f44f 6300 	mov.w	r3, #2048	; 0x800
{
	double div;
	unsigned int mant;
	unsigned int frac;

	Macro_Set_Bit(RCC->APB2ENR, 2);
 8004278:	f041 0104 	orr.w	r1, r1, #4
 800427c:	6191      	str	r1, [r2, #24]
	Macro_Set_Bit(RCC->APB2ENR, 14);
 800427e:	6991      	ldr	r1, [r2, #24]
	Macro_Write_Block(GPIOA->CRH, 0xff, 0x8a, 4);
 8004280:	f2c4 0301 	movt	r3, #16385	; 0x4001
	double div;
	unsigned int mant;
	unsigned int frac;

	Macro_Set_Bit(RCC->APB2ENR, 2);
	Macro_Set_Bit(RCC->APB2ENR, 14);
 8004284:	f441 4180 	orr.w	r1, r1, #16384	; 0x4000
 8004288:	6191      	str	r1, [r2, #24]
	Macro_Write_Block(GPIOA->CRH, 0xff, 0x8a, 4);
 800428a:	685a      	ldr	r2, [r3, #4]
 800428c:	f422 627f 	bic.w	r2, r2, #4080	; 0xff0
 8004290:	f442 620a 	orr.w	r2, r2, #2208	; 0x8a0
 8004294:	605a      	str	r2, [r3, #4]
	Macro_Set_Bit(GPIOA->ODR, 10);
 8004296:	68da      	ldr	r2, [r3, #12]
 8004298:	f442 6280 	orr.w	r2, r2, #1024	; 0x400
 800429c:	60da      	str	r2, [r3, #12]

	div = PCLK2/(16. * baud);
 800429e:	f005 fab7 	bl	8009810 <__aeabi_i2d>
 80042a2:	2300      	movs	r3, #0
 80042a4:	2200      	movs	r2, #0
 80042a6:	f2c4 0330 	movt	r3, #16432	; 0x4030
 80042aa:	f005 fb17 	bl	80098dc <__aeabi_dmul>
 80042ae:	4602      	mov	r2, r0
 80042b0:	460b      	mov	r3, r1
 80042b2:	a119      	add	r1, pc, #100	; (adr r1, 8004318 <Uart1_Init+0xb0>)
 80042b4:	e9d1 0100 	ldrd	r0, r1, [r1]
 80042b8:	f005 fc3a 	bl	8009b30 <__aeabi_ddiv>
 80042bc:	460d      	mov	r5, r1
 80042be:	4604      	mov	r4, r0
	mant = (int)div;
 80042c0:	f005 fda6 	bl	8009e10 <__aeabi_d2iz>
 80042c4:	4606      	mov	r6, r0
	frac = (int)((div - mant) * 16. + 0.5);
 80042c6:	f005 fa93 	bl	80097f0 <__aeabi_ui2d>
 80042ca:	4602      	mov	r2, r0
 80042cc:	460b      	mov	r3, r1
 80042ce:	4620      	mov	r0, r4
 80042d0:	4629      	mov	r1, r5
 80042d2:	f005 f94f 	bl	8009574 <__aeabi_dsub>
 80042d6:	2300      	movs	r3, #0
 80042d8:	2200      	movs	r2, #0
 80042da:	f2c4 0330 	movt	r3, #16432	; 0x4030
 80042de:	f005 fafd 	bl	80098dc <__aeabi_dmul>
 80042e2:	2300      	movs	r3, #0
 80042e4:	2200      	movs	r2, #0
 80042e6:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
 80042ea:	f005 f945 	bl	8009578 <__adddf3>
 80042ee:	f005 fd8f 	bl	8009e10 <__aeabi_d2iz>
	mant += frac >> 4;
 80042f2:	eb06 1610 	add.w	r6, r6, r0, lsr #4
	frac &= 0xf;
 80042f6:	f000 000f 	and.w	r0, r0, #15

	USART1->BRR = (mant<<4)+(frac<<0);
 80042fa:	eb00 1006 	add.w	r0, r0, r6, lsl #4
 80042fe:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8004302:	f2c4 0301 	movt	r3, #16385	; 0x4001
	USART1->CR1 = (1<<13)|(0<<12)|(0<<10)|(1<<3)|(1<<2);
	USART1->CR2 = 0<<12;
 8004306:	2200      	movs	r2, #0
	mant = (int)div;
	frac = (int)((div - mant) * 16. + 0.5);
	mant += frac >> 4;
	frac &= 0xf;

	USART1->BRR = (mant<<4)+(frac<<0);
 8004308:	b280      	uxth	r0, r0
	USART1->CR1 = (1<<13)|(0<<12)|(0<<10)|(1<<3)|(1<<2);
 800430a:	f242 010c 	movw	r1, #8204	; 0x200c
	mant = (int)div;
	frac = (int)((div - mant) * 16. + 0.5);
	mant += frac >> 4;
	frac &= 0xf;

	USART1->BRR = (mant<<4)+(frac<<0);
 800430e:	8118      	strh	r0, [r3, #8]
	USART1->CR1 = (1<<13)|(0<<12)|(0<<10)|(1<<3)|(1<<2);
 8004310:	8199      	strh	r1, [r3, #12]
	USART1->CR2 = 0<<12;
 8004312:	821a      	strh	r2, [r3, #16]
	USART1->CR3 = 0;
 8004314:	829a      	strh	r2, [r3, #20]
 8004316:	bd70      	pop	{r4, r5, r6, pc}
 8004318:	00000000 	andeq	r0, r0, r0
 800431c:	41912a88 	orrsmi	r2, r1, r8, lsl #21

08004320 <Uart1_Send_Byte>:
}

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
 8004320:	280a      	cmp	r0, #10
 8004322:	d00c      	beq.n	800433e <Uart1_Send_Byte+0x1e>
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
		USART1->DR = 0x0d;
	}

	while(Macro_Check_Bit_Clear(USART1->SR, 7));
 8004324:	f44f 5160 	mov.w	r1, #14336	; 0x3800
 8004328:	f2c4 0101 	movt	r1, #16385	; 0x4001
 800432c:	880a      	ldrh	r2, [r1, #0]
 800432e:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8004332:	0612      	lsls	r2, r2, #24
 8004334:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8004338:	d5f8      	bpl.n	800432c <Uart1_Send_Byte+0xc>
	USART1->DR = data;
 800433a:	8098      	strh	r0, [r3, #4]
 800433c:	4770      	bx	lr

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
 800433e:	f44f 5160 	mov.w	r1, #14336	; 0x3800
 8004342:	f2c4 0101 	movt	r1, #16385	; 0x4001
 8004346:	880a      	ldrh	r2, [r1, #0]
 8004348:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 800434c:	0612      	lsls	r2, r2, #24
 800434e:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8004352:	d5f8      	bpl.n	8004346 <Uart1_Send_Byte+0x26>
		USART1->DR = 0x0d;
 8004354:	220d      	movs	r2, #13
 8004356:	809a      	strh	r2, [r3, #4]
 8004358:	e7e4      	b.n	8004324 <Uart1_Send_Byte+0x4>
 800435a:	bf00      	nop

0800435c <Uart1_Send_String>:
	while(Macro_Check_Bit_Clear(USART1->SR, 7));
	USART1->DR = data;
}

void Uart1_Send_String(char *pt)
{
 800435c:	b430      	push	{r4, r5}
	while(*pt!=0)
 800435e:	7804      	ldrb	r4, [r0, #0]
 8004360:	b194      	cbz	r4, 8004388 <Uart1_Send_String+0x2c>

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
 8004362:	f44f 5160 	mov.w	r1, #14336	; 0x3800
 8004366:	f2c4 0101 	movt	r1, #16385	; 0x4001
		USART1->DR = 0x0d;
 800436a:	250d      	movs	r5, #13
	USART1->CR3 = 0;
}

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
 800436c:	2c0a      	cmp	r4, #10
 800436e:	d00d      	beq.n	800438c <Uart1_Send_String+0x30>
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
		USART1->DR = 0x0d;
	}

	while(Macro_Check_Bit_Clear(USART1->SR, 7));
 8004370:	880a      	ldrh	r2, [r1, #0]
 8004372:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8004376:	0612      	lsls	r2, r2, #24
 8004378:	f2c4 0301 	movt	r3, #16385	; 0x4001
 800437c:	d5f8      	bpl.n	8004370 <Uart1_Send_String+0x14>
	USART1->DR = data;
 800437e:	809c      	strh	r4, [r3, #4]
}

void Uart1_Send_String(char *pt)
{
	while(*pt!=0)
 8004380:	f810 4f01 	ldrb.w	r4, [r0, #1]!
 8004384:	2c00      	cmp	r4, #0
 8004386:	d1f1      	bne.n	800436c <Uart1_Send_String+0x10>
	{
		Uart1_Send_Byte(*pt++);
	}
}
 8004388:	bc30      	pop	{r4, r5}
 800438a:	4770      	bx	lr

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
 800438c:	880a      	ldrh	r2, [r1, #0]
 800438e:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8004392:	0612      	lsls	r2, r2, #24
 8004394:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8004398:	d5f8      	bpl.n	800438c <Uart1_Send_String+0x30>
		USART1->DR = 0x0d;
 800439a:	809d      	strh	r5, [r3, #4]
 800439c:	e7e8      	b.n	8004370 <Uart1_Send_String+0x14>
 800439e:	bf00      	nop

080043a0 <Uart1_Printf>:
		Uart1_Send_Byte(*pt++);
	}
}

void Uart1_Printf(char *fmt,...)
{
 80043a0:	b40f      	push	{r0, r1, r2, r3}
 80043a2:	b530      	push	{r4, r5, lr}
 80043a4:	b0c3      	sub	sp, #268	; 0x10c
 80043a6:	ab46      	add	r3, sp, #280	; 0x118
 80043a8:	f853 1b04 	ldr.w	r1, [r3], #4
	va_list ap;
	char string[256];

	va_start(ap,fmt);
	vsprintf(string,fmt,ap);
 80043ac:	a802      	add	r0, sp, #8
 80043ae:	461a      	mov	r2, r3
void Uart1_Printf(char *fmt,...)
{
	va_list ap;
	char string[256];

	va_start(ap,fmt);
 80043b0:	9301      	str	r3, [sp, #4]
	vsprintf(string,fmt,ap);
 80043b2:	f000 f927 	bl	8004604 <vsprintf>
	USART1->DR = data;
}

void Uart1_Send_String(char *pt)
{
	while(*pt!=0)
 80043b6:	f89d 0008 	ldrb.w	r0, [sp, #8]
 80043ba:	b198      	cbz	r0, 80043e4 <Uart1_Printf+0x44>

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
 80043bc:	f44f 5160 	mov.w	r1, #14336	; 0x3800
 80043c0:	ac02      	add	r4, sp, #8
 80043c2:	f2c4 0101 	movt	r1, #16385	; 0x4001
		USART1->DR = 0x0d;
 80043c6:	250d      	movs	r5, #13
	USART1->CR3 = 0;
}

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
 80043c8:	280a      	cmp	r0, #10
 80043ca:	d010      	beq.n	80043ee <Uart1_Printf+0x4e>
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
		USART1->DR = 0x0d;
	}

	while(Macro_Check_Bit_Clear(USART1->SR, 7));
 80043cc:	880a      	ldrh	r2, [r1, #0]
 80043ce:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 80043d2:	0612      	lsls	r2, r2, #24
 80043d4:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80043d8:	d5f8      	bpl.n	80043cc <Uart1_Printf+0x2c>
	USART1->DR = data;
 80043da:	8098      	strh	r0, [r3, #4]
}

void Uart1_Send_String(char *pt)
{
	while(*pt!=0)
 80043dc:	f814 0f01 	ldrb.w	r0, [r4, #1]!
 80043e0:	2800      	cmp	r0, #0
 80043e2:	d1f1      	bne.n	80043c8 <Uart1_Printf+0x28>

	va_start(ap,fmt);
	vsprintf(string,fmt,ap);
	Uart1_Send_String(string);
	va_end(ap);
}
 80043e4:	b043      	add	sp, #268	; 0x10c
 80043e6:	e8bd 4030 	ldmia.w	sp!, {r4, r5, lr}
 80043ea:	b004      	add	sp, #16
 80043ec:	4770      	bx	lr

void Uart1_Send_Byte(char data)
{
	if(data=='\n')
	{
		while(Macro_Check_Bit_Clear(USART1->SR, 7));
 80043ee:	880a      	ldrh	r2, [r1, #0]
 80043f0:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 80043f4:	0612      	lsls	r2, r2, #24
 80043f6:	f2c4 0301 	movt	r3, #16385	; 0x4001
 80043fa:	d5f8      	bpl.n	80043ee <Uart1_Printf+0x4e>
		USART1->DR = 0x0d;
 80043fc:	809d      	strh	r5, [r3, #4]
 80043fe:	e7e5      	b.n	80043cc <Uart1_Printf+0x2c>

08004400 <Uart1_Get_Pressed>:
	va_end(ap);
}

char Uart1_Get_Pressed(void)
{
	if(Macro_Check_Bit_Set(USART1->SR, 5))
 8004400:	f44f 5360 	mov.w	r3, #14336	; 0x3800
 8004404:	f2c4 0301 	movt	r3, #16385	; 0x4001
 8004408:	8818      	ldrh	r0, [r3, #0]
 800440a:	f3c0 1040 	ubfx	r0, r0, #5, #1
 800440e:	b108      	cbz	r0, 8004414 <Uart1_Get_Pressed+0x14>
	{
		return (char)USART1->DR;
 8004410:	8898      	ldrh	r0, [r3, #4]
 8004412:	b2c0      	uxtb	r0, r0

	else
	{
		return (char)0;
	}
}
 8004414:	4770      	bx	lr
 8004416:	bf00      	nop

08004418 <Uart1_Get_Char>:
	va_end(ap);
}

char Uart1_Get_Pressed(void)
{
	if(Macro_Check_Bit_Set(USART1->SR, 5))
 8004418:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 800441c:	f2c4 0201 	movt	r2, #16385	; 0x4001
 8004420:	8813      	ldrh	r3, [r2, #0]
 8004422:	0699      	lsls	r1, r3, #26
 8004424:	d5fc      	bpl.n	8004420 <Uart1_Get_Char+0x8>
	{
		return (char)USART1->DR;
 8004426:	8890      	ldrh	r0, [r2, #4]
 8004428:	b2c0      	uxtb	r0, r0

char Uart1_Get_Char(void)
{
	char rx;

	while((rx = Uart1_Get_Pressed()) == 0);
 800442a:	2800      	cmp	r0, #0
 800442c:	d0f8      	beq.n	8004420 <Uart1_Get_Char+0x8>

	return rx;
}
 800442e:	4770      	bx	lr

08004430 <Uart1_RX_Interrupt_Enable>:

void Uart1_RX_Interrupt_Enable(int en)
{
	if(en)
	{
		Macro_Set_Bit(USART1->CR1, 5);
 8004430:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 8004434:	f2c4 0201 	movt	r2, #16385	; 0x4001
	return rx;
}

void Uart1_RX_Interrupt_Enable(int en)
{
	if(en)
 8004438:	b968      	cbnz	r0, 8004456 <Uart1_RX_Interrupt_Enable+0x26>
		NVIC_EnableIRQ(37);
	}

	else
	{
		Macro_Clear_Bit(USART1->CR1, 5);
 800443a:	8993      	ldrh	r3, [r2, #12]
 * Disable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
{
  NVIC->ICER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* disable interrupt */
 800443c:	f44f 4161 	mov.w	r1, #57600	; 0xe100
 8004440:	f023 0320 	bic.w	r3, r3, #32
 8004444:	041b      	lsls	r3, r3, #16
 8004446:	0c1b      	lsrs	r3, r3, #16
 8004448:	f2ce 0100 	movt	r1, #57344	; 0xe000
 800444c:	2020      	movs	r0, #32
 800444e:	8193      	strh	r3, [r2, #12]
 8004450:	f8c1 0084 	str.w	r0, [r1, #132]	; 0x84
 8004454:	4770      	bx	lr

void Uart1_RX_Interrupt_Enable(int en)
{
	if(en)
	{
		Macro_Set_Bit(USART1->CR1, 5);
 8004456:	8990      	ldrh	r0, [r2, #12]
 * Clear the pending bit for the specified interrupt. 
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
{
  NVIC->ICPR[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* Clear pending interrupt */
 8004458:	f44f 4361 	mov.w	r3, #57600	; 0xe100
 800445c:	b280      	uxth	r0, r0
 800445e:	f2ce 0300 	movt	r3, #57344	; 0xe000
 8004462:	2120      	movs	r1, #32
 8004464:	f040 0020 	orr.w	r0, r0, #32
 8004468:	8190      	strh	r0, [r2, #12]
 800446a:	f8c3 1184 	str.w	r1, [r3, #388]	; 0x184
 * Enable a device specific interupt in the NVIC interrupt controller.
 * The interrupt number cannot be a negative value.
 */
static __INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
  NVIC->ISER[((uint32_t)(IRQn) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F)); /* enable interrupt */
 800446e:	6059      	str	r1, [r3, #4]
 8004470:	4770      	bx	lr
 8004472:	bf00      	nop

08004474 <Uart1_Wait_for_TX_Complete>:
	}
}

void Uart1_Wait_for_TX_Complete(void)
{
	while(Macro_Check_Bit_Clear(USART1->SR, 6));
 8004474:	f44f 5260 	mov.w	r2, #14336	; 0x3800
 8004478:	f2c4 0201 	movt	r2, #16385	; 0x4001
 800447c:	8813      	ldrh	r3, [r2, #0]
 800447e:	0658      	lsls	r0, r3, #25
 8004480:	d5fc      	bpl.n	800447c <Uart1_Wait_for_TX_Complete+0x8>
}
 8004482:	4770      	bx	lr
 8004484:	f3af 8000 	nop.w

08004488 <memcpy>:
 8004488:	2a0f      	cmp	r2, #15
 800448a:	b4f0      	push	{r4, r5, r6, r7}
 800448c:	d945      	bls.n	800451a <memcpy+0x92>
 800448e:	ea40 0301 	orr.w	r3, r0, r1
 8004492:	079b      	lsls	r3, r3, #30
 8004494:	d145      	bne.n	8004522 <memcpy+0x9a>
 8004496:	f1a2 0710 	sub.w	r7, r2, #16
 800449a:	460c      	mov	r4, r1
 800449c:	4603      	mov	r3, r0
 800449e:	093f      	lsrs	r7, r7, #4
 80044a0:	eb00 1607 	add.w	r6, r0, r7, lsl #4
 80044a4:	3610      	adds	r6, #16
 80044a6:	6825      	ldr	r5, [r4, #0]
 80044a8:	3310      	adds	r3, #16
 80044aa:	3410      	adds	r4, #16
 80044ac:	f843 5c10 	str.w	r5, [r3, #-16]
 80044b0:	f854 5c0c 	ldr.w	r5, [r4, #-12]
 80044b4:	f843 5c0c 	str.w	r5, [r3, #-12]
 80044b8:	f854 5c08 	ldr.w	r5, [r4, #-8]
 80044bc:	f843 5c08 	str.w	r5, [r3, #-8]
 80044c0:	f854 5c04 	ldr.w	r5, [r4, #-4]
 80044c4:	f843 5c04 	str.w	r5, [r3, #-4]
 80044c8:	42b3      	cmp	r3, r6
 80044ca:	d1ec      	bne.n	80044a6 <memcpy+0x1e>
 80044cc:	1c7b      	adds	r3, r7, #1
 80044ce:	f002 0c0f 	and.w	ip, r2, #15
 80044d2:	f1bc 0f03 	cmp.w	ip, #3
 80044d6:	ea4f 1303 	mov.w	r3, r3, lsl #4
 80044da:	4419      	add	r1, r3
 80044dc:	4403      	add	r3, r0
 80044de:	d922      	bls.n	8004526 <memcpy+0x9e>
 80044e0:	460e      	mov	r6, r1
 80044e2:	461d      	mov	r5, r3
 80044e4:	4664      	mov	r4, ip
 80044e6:	f856 7b04 	ldr.w	r7, [r6], #4
 80044ea:	3c04      	subs	r4, #4
 80044ec:	2c03      	cmp	r4, #3
 80044ee:	f845 7b04 	str.w	r7, [r5], #4
 80044f2:	d8f8      	bhi.n	80044e6 <memcpy+0x5e>
 80044f4:	f1ac 0404 	sub.w	r4, ip, #4
 80044f8:	f002 0203 	and.w	r2, r2, #3
 80044fc:	f024 0403 	bic.w	r4, r4, #3
 8004500:	3404      	adds	r4, #4
 8004502:	4423      	add	r3, r4
 8004504:	4421      	add	r1, r4
 8004506:	b132      	cbz	r2, 8004516 <memcpy+0x8e>
 8004508:	440a      	add	r2, r1
 800450a:	f811 4b01 	ldrb.w	r4, [r1], #1
 800450e:	4291      	cmp	r1, r2
 8004510:	f803 4b01 	strb.w	r4, [r3], #1
 8004514:	d1f9      	bne.n	800450a <memcpy+0x82>
 8004516:	bcf0      	pop	{r4, r5, r6, r7}
 8004518:	4770      	bx	lr
 800451a:	4603      	mov	r3, r0
 800451c:	2a00      	cmp	r2, #0
 800451e:	d1f3      	bne.n	8004508 <memcpy+0x80>
 8004520:	e7f9      	b.n	8004516 <memcpy+0x8e>
 8004522:	4603      	mov	r3, r0
 8004524:	e7f0      	b.n	8004508 <memcpy+0x80>
 8004526:	4662      	mov	r2, ip
 8004528:	2a00      	cmp	r2, #0
 800452a:	d1ed      	bne.n	8004508 <memcpy+0x80>
 800452c:	e7f3      	b.n	8004516 <memcpy+0x8e>
 800452e:	bf00      	nop

08004530 <memset>:
 8004530:	0783      	lsls	r3, r0, #30
 8004532:	b4f0      	push	{r4, r5, r6, r7}
 8004534:	d048      	beq.n	80045c8 <memset+0x98>
 8004536:	1e54      	subs	r4, r2, #1
 8004538:	2a00      	cmp	r2, #0
 800453a:	d043      	beq.n	80045c4 <memset+0x94>
 800453c:	b2cd      	uxtb	r5, r1
 800453e:	4603      	mov	r3, r0
 8004540:	e002      	b.n	8004548 <memset+0x18>
 8004542:	2c00      	cmp	r4, #0
 8004544:	d03e      	beq.n	80045c4 <memset+0x94>
 8004546:	4614      	mov	r4, r2
 8004548:	f803 5b01 	strb.w	r5, [r3], #1
 800454c:	f013 0f03 	tst.w	r3, #3
 8004550:	f104 32ff 	add.w	r2, r4, #4294967295
 8004554:	d1f5      	bne.n	8004542 <memset+0x12>
 8004556:	2c03      	cmp	r4, #3
 8004558:	d92d      	bls.n	80045b6 <memset+0x86>
 800455a:	b2cd      	uxtb	r5, r1
 800455c:	2c0f      	cmp	r4, #15
 800455e:	ea45 2505 	orr.w	r5, r5, r5, lsl #8
 8004562:	ea45 4505 	orr.w	r5, r5, r5, lsl #16
 8004566:	d918      	bls.n	800459a <memset+0x6a>
 8004568:	f1a4 0710 	sub.w	r7, r4, #16
 800456c:	f103 0610 	add.w	r6, r3, #16
 8004570:	461a      	mov	r2, r3
 8004572:	093f      	lsrs	r7, r7, #4
 8004574:	eb06 1607 	add.w	r6, r6, r7, lsl #4
 8004578:	6015      	str	r5, [r2, #0]
 800457a:	3210      	adds	r2, #16
 800457c:	f842 5c0c 	str.w	r5, [r2, #-12]
 8004580:	f842 5c08 	str.w	r5, [r2, #-8]
 8004584:	f842 5c04 	str.w	r5, [r2, #-4]
 8004588:	42b2      	cmp	r2, r6
 800458a:	d1f5      	bne.n	8004578 <memset+0x48>
 800458c:	f004 040f 	and.w	r4, r4, #15
 8004590:	3701      	adds	r7, #1
 8004592:	2c03      	cmp	r4, #3
 8004594:	eb03 1307 	add.w	r3, r3, r7, lsl #4
 8004598:	d90d      	bls.n	80045b6 <memset+0x86>
 800459a:	461e      	mov	r6, r3
 800459c:	4622      	mov	r2, r4
 800459e:	3a04      	subs	r2, #4
 80045a0:	f846 5b04 	str.w	r5, [r6], #4
 80045a4:	2a03      	cmp	r2, #3
 80045a6:	d8fa      	bhi.n	800459e <memset+0x6e>
 80045a8:	1f22      	subs	r2, r4, #4
 80045aa:	f004 0403 	and.w	r4, r4, #3
 80045ae:	f022 0203 	bic.w	r2, r2, #3
 80045b2:	3204      	adds	r2, #4
 80045b4:	4413      	add	r3, r2
 80045b6:	b12c      	cbz	r4, 80045c4 <memset+0x94>
 80045b8:	b2c9      	uxtb	r1, r1
 80045ba:	441c      	add	r4, r3
 80045bc:	f803 1b01 	strb.w	r1, [r3], #1
 80045c0:	42a3      	cmp	r3, r4
 80045c2:	d1fb      	bne.n	80045bc <memset+0x8c>
 80045c4:	bcf0      	pop	{r4, r5, r6, r7}
 80045c6:	4770      	bx	lr
 80045c8:	4614      	mov	r4, r2
 80045ca:	4603      	mov	r3, r0
 80045cc:	e7c3      	b.n	8004556 <memset+0x26>
 80045ce:	bf00      	nop

080045d0 <_vsprintf_r>:
 80045d0:	b530      	push	{r4, r5, lr}
 80045d2:	b09b      	sub	sp, #108	; 0x6c
 80045d4:	460c      	mov	r4, r1
 80045d6:	4669      	mov	r1, sp
 80045d8:	9400      	str	r4, [sp, #0]
 80045da:	f44f 7502 	mov.w	r5, #520	; 0x208
 80045de:	9404      	str	r4, [sp, #16]
 80045e0:	f06f 4400 	mvn.w	r4, #2147483648	; 0x80000000
 80045e4:	f8ad 500c 	strh.w	r5, [sp, #12]
 80045e8:	f64f 75ff 	movw	r5, #65535	; 0xffff
 80045ec:	9402      	str	r4, [sp, #8]
 80045ee:	9405      	str	r4, [sp, #20]
 80045f0:	f8ad 500e 	strh.w	r5, [sp, #14]
 80045f4:	f000 f814 	bl	8004620 <_svfprintf_r>
 80045f8:	9b00      	ldr	r3, [sp, #0]
 80045fa:	2200      	movs	r2, #0
 80045fc:	701a      	strb	r2, [r3, #0]
 80045fe:	b01b      	add	sp, #108	; 0x6c
 8004600:	bd30      	pop	{r4, r5, pc}
 8004602:	bf00      	nop

08004604 <vsprintf>:
 8004604:	b430      	push	{r4, r5}
 8004606:	f240 0404 	movw	r4, #4
 800460a:	f2c2 0400 	movt	r4, #8192	; 0x2000
 800460e:	460d      	mov	r5, r1
 8004610:	4613      	mov	r3, r2
 8004612:	4601      	mov	r1, r0
 8004614:	462a      	mov	r2, r5
 8004616:	6820      	ldr	r0, [r4, #0]
 8004618:	bc30      	pop	{r4, r5}
 800461a:	f7ff bfd9 	b.w	80045d0 <_vsprintf_r>
 800461e:	bf00      	nop

08004620 <_svfprintf_r>:
 8004620:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8004624:	b0c9      	sub	sp, #292	; 0x124
 8004626:	4691      	mov	r9, r2
 8004628:	9314      	str	r3, [sp, #80]	; 0x50
 800462a:	910b      	str	r1, [sp, #44]	; 0x2c
 800462c:	900e      	str	r0, [sp, #56]	; 0x38
 800462e:	f002 fafb 	bl	8006c28 <_localeconv_r>
 8004632:	6800      	ldr	r0, [r0, #0]
 8004634:	901a      	str	r0, [sp, #104]	; 0x68
 8004636:	f003 fc13 	bl	8007e60 <strlen>
 800463a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800463c:	89a3      	ldrh	r3, [r4, #12]
 800463e:	901d      	str	r0, [sp, #116]	; 0x74
 8004640:	0618      	lsls	r0, r3, #24
 8004642:	d503      	bpl.n	800464c <_svfprintf_r+0x2c>
 8004644:	6923      	ldr	r3, [r4, #16]
 8004646:	2b00      	cmp	r3, #0
 8004648:	f001 8079 	beq.w	800573e <_svfprintf_r+0x111e>
 800464c:	f24a 55c8 	movw	r5, #42440	; 0xa5c8
 8004650:	ac38      	add	r4, sp, #224	; 0xe0
 8004652:	f6c0 0500 	movt	r5, #2048	; 0x800
 8004656:	9515      	str	r5, [sp, #84]	; 0x54
 8004658:	f10d 05df 	add.w	r5, sp, #223	; 0xdf
 800465c:	9508      	str	r5, [sp, #32]
 800465e:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8004660:	af38      	add	r7, sp, #224	; 0xe0
 8004662:	9409      	str	r4, [sp, #36]	; 0x24
 8004664:	f64a 14f8 	movw	r4, #43512	; 0xa9f8
 8004668:	f105 0610 	add.w	r6, r5, #16
 800466c:	9d08      	ldr	r5, [sp, #32]
 800466e:	2300      	movs	r3, #0
 8004670:	f6c0 0400 	movt	r4, #2048	; 0x800
 8004674:	9311      	str	r3, [sp, #68]	; 0x44
 8004676:	9417      	str	r4, [sp, #92]	; 0x5c
 8004678:	1b7c      	subs	r4, r7, r5
 800467a:	931b      	str	r3, [sp, #108]	; 0x6c
 800467c:	931c      	str	r3, [sp, #112]	; 0x70
 800467e:	9319      	str	r3, [sp, #100]	; 0x64
 8004680:	931e      	str	r3, [sp, #120]	; 0x78
 8004682:	9312      	str	r3, [sp, #72]	; 0x48
 8004684:	9421      	str	r4, [sp, #132]	; 0x84
 8004686:	932d      	str	r3, [sp, #180]	; 0xb4
 8004688:	932c      	str	r3, [sp, #176]	; 0xb0
 800468a:	972b      	str	r7, [sp, #172]	; 0xac
 800468c:	f899 3000 	ldrb.w	r3, [r9]
 8004690:	2b25      	cmp	r3, #37	; 0x25
 8004692:	bf18      	it	ne
 8004694:	2b00      	cmpne	r3, #0
 8004696:	f000 80b3 	beq.w	8004800 <_svfprintf_r+0x1e0>
 800469a:	f109 0201 	add.w	r2, r9, #1
 800469e:	4614      	mov	r4, r2
 80046a0:	3201      	adds	r2, #1
 80046a2:	7823      	ldrb	r3, [r4, #0]
 80046a4:	2b25      	cmp	r3, #37	; 0x25
 80046a6:	bf18      	it	ne
 80046a8:	2b00      	cmpne	r3, #0
 80046aa:	d1f8      	bne.n	800469e <_svfprintf_r+0x7e>
 80046ac:	ebb4 0509 	subs.w	r5, r4, r9
 80046b0:	d00f      	beq.n	80046d2 <_svfprintf_r+0xb2>
 80046b2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80046b4:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80046b6:	3301      	adds	r3, #1
 80046b8:	f8c7 9000 	str.w	r9, [r7]
 80046bc:	2b07      	cmp	r3, #7
 80046be:	607d      	str	r5, [r7, #4]
 80046c0:	442a      	add	r2, r5
 80046c2:	932c      	str	r3, [sp, #176]	; 0xb0
 80046c4:	922d      	str	r2, [sp, #180]	; 0xb4
 80046c6:	bfd8      	it	le
 80046c8:	3708      	addle	r7, #8
 80046ca:	dc7f      	bgt.n	80047cc <_svfprintf_r+0x1ac>
 80046cc:	9812      	ldr	r0, [sp, #72]	; 0x48
 80046ce:	4428      	add	r0, r5
 80046d0:	9012      	str	r0, [sp, #72]	; 0x48
 80046d2:	7823      	ldrb	r3, [r4, #0]
 80046d4:	2b00      	cmp	r3, #0
 80046d6:	f000 8081 	beq.w	80047dc <_svfprintf_r+0x1bc>
 80046da:	2300      	movs	r3, #0
 80046dc:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
 80046e0:	461a      	mov	r2, r3
 80046e2:	9313      	str	r3, [sp, #76]	; 0x4c
 80046e4:	930a      	str	r3, [sp, #40]	; 0x28
 80046e6:	f104 0901 	add.w	r9, r4, #1
 80046ea:	7863      	ldrb	r3, [r4, #1]
 80046ec:	f04f 34ff 	mov.w	r4, #4294967295
 80046f0:	940c      	str	r4, [sp, #48]	; 0x30
 80046f2:	f109 0901 	add.w	r9, r9, #1
 80046f6:	f1a3 0120 	sub.w	r1, r3, #32
 80046fa:	2958      	cmp	r1, #88	; 0x58
 80046fc:	f200 840a 	bhi.w	8004f14 <_svfprintf_r+0x8f4>
 8004700:	e8df f011 	tbh	[pc, r1, lsl #1]
 8004704:	0408038e 	streq	r0, [r8], #-910	; 0xfffffc72
 8004708:	03950408 	orrseq	r0, r5, #8, 8	; 0x8000000
 800470c:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004710:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004714:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004718:	0348039c 	movteq	r0, #33692	; 0x839c
 800471c:	005d0408 	subseq	r0, sp, r8, lsl #8
 8004720:	04080235 	streq	r0, [r8], #-565	; 0xfffffdcb
 8004724:	03f603ef 	mvnseq	r0, #-1140850685	; 0xbc000003
 8004728:	03f603f6 	mvnseq	r0, #-671088637	; 0xd8000003
 800472c:	03f603f6 	mvnseq	r0, #-671088637	; 0xd8000003
 8004730:	03f603f6 	mvnseq	r0, #-671088637	; 0xd8000003
 8004734:	03f603f6 	mvnseq	r0, #-671088637	; 0xd8000003
 8004738:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 800473c:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004740:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004744:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004748:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 800474c:	0290026e 	addseq	r0, r0, #-536870906	; 0xe0000006
 8004750:	02900408 	addseq	r0, r0, #8, 8	; 0x8000000
 8004754:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004758:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 800475c:	040802cd 	streq	r0, [r8], #-717	; 0xfffffd33
 8004760:	02d40408 	sbcseq	r0, r4, #8, 8	; 0x8000000
 8004764:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004768:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 800476c:	02550408 	subseq	r0, r5, #8, 8	; 0x8000000
 8004770:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004774:	040803bc 	streq	r0, [r8], #-956	; 0xfffffc44
 8004778:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 800477c:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004780:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004784:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 8004788:	03a80408 			; <UNDEFINED> instruction: 0x03a80408
 800478c:	029003d7 	addseq	r0, r0, #1543503875	; 0x5c000003
 8004790:	02900290 	addseq	r0, r0, #144, 4
 8004794:	03d70387 	bicseq	r0, r7, #469762050	; 0x1c000002
 8004798:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 800479c:	0408034c 	streq	r0, [r8], #-844	; 0xfffffcb4
 80047a0:	0224035e 	eoreq	r0, r4, #2013265921	; 0x78000001
 80047a4:	02f00370 	rscseq	r0, r0, #112, 6	; 0xc0000001
 80047a8:	02f70408 	rscseq	r0, r7, #8, 8	; 0x8000000
 80047ac:	00800408 	addeq	r0, r0, r8, lsl #8
 80047b0:	04080408 	streq	r0, [r8], #-1032	; 0xfffffbf8
 80047b4:	9c130320 	ldcls	3, cr0, [r3], {32}
 80047b8:	9314      	str	r3, [sp, #80]	; 0x50
 80047ba:	4264      	negs	r4, r4
 80047bc:	9413      	str	r4, [sp, #76]	; 0x4c
 80047be:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80047c0:	f045 0504 	orr.w	r5, r5, #4
 80047c4:	950a      	str	r5, [sp, #40]	; 0x28
 80047c6:	f899 3000 	ldrb.w	r3, [r9]
 80047ca:	e792      	b.n	80046f2 <_svfprintf_r+0xd2>
 80047cc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80047ce:	aa2b      	add	r2, sp, #172	; 0xac
 80047d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80047d2:	f003 fb75 	bl	8007ec0 <__ssprint_r>
 80047d6:	b940      	cbnz	r0, 80047ea <_svfprintf_r+0x1ca>
 80047d8:	af38      	add	r7, sp, #224	; 0xe0
 80047da:	e777      	b.n	80046cc <_svfprintf_r+0xac>
 80047dc:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80047de:	b123      	cbz	r3, 80047ea <_svfprintf_r+0x1ca>
 80047e0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80047e2:	aa2b      	add	r2, sp, #172	; 0xac
 80047e4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80047e6:	f003 fb6b 	bl	8007ec0 <__ssprint_r>
 80047ea:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80047ec:	9812      	ldr	r0, [sp, #72]	; 0x48
 80047ee:	89a3      	ldrh	r3, [r4, #12]
 80047f0:	f013 0f40 	tst.w	r3, #64	; 0x40
 80047f4:	bf18      	it	ne
 80047f6:	f04f 30ff 	movne.w	r0, #4294967295
 80047fa:	b049      	add	sp, #292	; 0x124
 80047fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8004800:	464c      	mov	r4, r9
 8004802:	e766      	b.n	80046d2 <_svfprintf_r+0xb2>
 8004804:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004806:	9316      	str	r3, [sp, #88]	; 0x58
 8004808:	06a3      	lsls	r3, r4, #26
 800480a:	f140 81d9 	bpl.w	8004bc0 <_svfprintf_r+0x5a0>
 800480e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004810:	2301      	movs	r3, #1
 8004812:	1dea      	adds	r2, r5, #7
 8004814:	f022 0207 	bic.w	r2, r2, #7
 8004818:	f102 0408 	add.w	r4, r2, #8
 800481c:	9414      	str	r4, [sp, #80]	; 0x50
 800481e:	e9d2 4500 	ldrd	r4, r5, [r2]
 8004822:	f04f 0a00 	mov.w	sl, #0
 8004826:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
 800482a:	980c      	ldr	r0, [sp, #48]	; 0x30
 800482c:	2800      	cmp	r0, #0
 800482e:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004830:	bfa2      	ittt	ge
 8004832:	990a      	ldrge	r1, [sp, #40]	; 0x28
 8004834:	f021 0180 	bicge.w	r1, r1, #128	; 0x80
 8004838:	910a      	strge	r1, [sp, #40]	; 0x28
 800483a:	ea54 0205 	orrs.w	r2, r4, r5
 800483e:	bf0c      	ite	eq
 8004840:	2200      	moveq	r2, #0
 8004842:	2201      	movne	r2, #1
 8004844:	2800      	cmp	r0, #0
 8004846:	bf18      	it	ne
 8004848:	f042 0201 	orrne.w	r2, r2, #1
 800484c:	2a00      	cmp	r2, #0
 800484e:	f000 83e5 	beq.w	800501c <_svfprintf_r+0x9fc>
 8004852:	2b01      	cmp	r3, #1
 8004854:	f000 8509 	beq.w	800526a <_svfprintf_r+0xc4a>
 8004858:	2b02      	cmp	r3, #2
 800485a:	f10d 02df 	add.w	r2, sp, #223	; 0xdf
 800485e:	f040 8159 	bne.w	8004b14 <_svfprintf_r+0x4f4>
 8004862:	f8dd c064 	ldr.w	ip, [sp, #100]	; 0x64
 8004866:	f004 010f 	and.w	r1, r4, #15
 800486a:	0923      	lsrs	r3, r4, #4
 800486c:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
 8004870:	0928      	lsrs	r0, r5, #4
 8004872:	f81c 1001 	ldrb.w	r1, [ip, r1]
 8004876:	461c      	mov	r4, r3
 8004878:	4605      	mov	r5, r0
 800487a:	4690      	mov	r8, r2
 800487c:	ea54 0005 	orrs.w	r0, r4, r5
 8004880:	f102 32ff 	add.w	r2, r2, #4294967295
 8004884:	f888 1000 	strb.w	r1, [r8]
 8004888:	d1ed      	bne.n	8004866 <_svfprintf_r+0x246>
 800488a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800488c:	ebc8 0303 	rsb	r3, r8, r3
 8004890:	9310      	str	r3, [sp, #64]	; 0x40
 8004892:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8004894:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8004896:	42a5      	cmp	r5, r4
 8004898:	bfb8      	it	lt
 800489a:	4625      	movlt	r5, r4
 800489c:	2400      	movs	r4, #0
 800489e:	950d      	str	r5, [sp, #52]	; 0x34
 80048a0:	9418      	str	r4, [sp, #96]	; 0x60
 80048a2:	f1ba 0f00 	cmp.w	sl, #0
 80048a6:	d002      	beq.n	80048ae <_svfprintf_r+0x28e>
 80048a8:	9d0d      	ldr	r5, [sp, #52]	; 0x34
 80048aa:	3501      	adds	r5, #1
 80048ac:	950d      	str	r5, [sp, #52]	; 0x34
 80048ae:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80048b0:	f013 0302 	ands.w	r3, r3, #2
 80048b4:	930f      	str	r3, [sp, #60]	; 0x3c
 80048b6:	bf1e      	ittt	ne
 80048b8:	9c0d      	ldrne	r4, [sp, #52]	; 0x34
 80048ba:	3402      	addne	r4, #2
 80048bc:	940d      	strne	r4, [sp, #52]	; 0x34
 80048be:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80048c0:	f014 0584 	ands.w	r5, r4, #132	; 0x84
 80048c4:	f040 8346 	bne.w	8004f54 <_svfprintf_r+0x934>
 80048c8:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80048ca:	980d      	ldr	r0, [sp, #52]	; 0x34
 80048cc:	ebc0 0b04 	rsb	fp, r0, r4
 80048d0:	f1bb 0f00 	cmp.w	fp, #0
 80048d4:	f340 833e 	ble.w	8004f54 <_svfprintf_r+0x934>
 80048d8:	f1bb 0f10 	cmp.w	fp, #16
 80048dc:	f24a 5ac8 	movw	sl, #42440	; 0xa5c8
 80048e0:	992d      	ldr	r1, [sp, #180]	; 0xb4
 80048e2:	bfdc      	itt	le
 80048e4:	f6c0 0a00 	movtle	sl, #2048	; 0x800
 80048e8:	9a2c      	ldrle	r2, [sp, #176]	; 0xb0
 80048ea:	dd32      	ble.n	8004952 <_svfprintf_r+0x332>
 80048ec:	f6c0 0a00 	movt	sl, #2048	; 0x800
 80048f0:	f8cd 807c 	str.w	r8, [sp, #124]	; 0x7c
 80048f4:	9520      	str	r5, [sp, #128]	; 0x80
 80048f6:	46d8      	mov	r8, fp
 80048f8:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80048fa:	46d3      	mov	fp, sl
 80048fc:	2410      	movs	r4, #16
 80048fe:	46ca      	mov	sl, r9
 8004900:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8004902:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8004906:	e004      	b.n	8004912 <_svfprintf_r+0x2f2>
 8004908:	f1a8 0810 	sub.w	r8, r8, #16
 800490c:	f1b8 0f10 	cmp.w	r8, #16
 8004910:	dd19      	ble.n	8004946 <_svfprintf_r+0x326>
 8004912:	3201      	adds	r2, #1
 8004914:	3110      	adds	r1, #16
 8004916:	2a07      	cmp	r2, #7
 8004918:	603d      	str	r5, [r7, #0]
 800491a:	607c      	str	r4, [r7, #4]
 800491c:	f107 0708 	add.w	r7, r7, #8
 8004920:	922c      	str	r2, [sp, #176]	; 0xb0
 8004922:	912d      	str	r1, [sp, #180]	; 0xb4
 8004924:	ddf0      	ble.n	8004908 <_svfprintf_r+0x2e8>
 8004926:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004928:	4649      	mov	r1, r9
 800492a:	aa2b      	add	r2, sp, #172	; 0xac
 800492c:	af38      	add	r7, sp, #224	; 0xe0
 800492e:	f003 fac7 	bl	8007ec0 <__ssprint_r>
 8004932:	2800      	cmp	r0, #0
 8004934:	f47f af59 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8004938:	f1a8 0810 	sub.w	r8, r8, #16
 800493c:	992d      	ldr	r1, [sp, #180]	; 0xb4
 800493e:	f1b8 0f10 	cmp.w	r8, #16
 8004942:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8004944:	dce5      	bgt.n	8004912 <_svfprintf_r+0x2f2>
 8004946:	46d1      	mov	r9, sl
 8004948:	9d20      	ldr	r5, [sp, #128]	; 0x80
 800494a:	46da      	mov	sl, fp
 800494c:	46c3      	mov	fp, r8
 800494e:	f8dd 807c 	ldr.w	r8, [sp, #124]	; 0x7c
 8004952:	3201      	adds	r2, #1
 8004954:	eb0b 0401 	add.w	r4, fp, r1
 8004958:	2a07      	cmp	r2, #7
 800495a:	922c      	str	r2, [sp, #176]	; 0xb0
 800495c:	942d      	str	r4, [sp, #180]	; 0xb4
 800495e:	e887 0c00 	stmia.w	r7, {sl, fp}
 8004962:	f300 82ec 	bgt.w	8004f3e <_svfprintf_r+0x91e>
 8004966:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 800496a:	3708      	adds	r7, #8
 800496c:	f1ba 0f00 	cmp.w	sl, #0
 8004970:	d00e      	beq.n	8004990 <_svfprintf_r+0x370>
 8004972:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004974:	f10d 028f 	add.w	r2, sp, #143	; 0x8f
 8004978:	3401      	adds	r4, #1
 800497a:	603a      	str	r2, [r7, #0]
 800497c:	3301      	adds	r3, #1
 800497e:	2201      	movs	r2, #1
 8004980:	2b07      	cmp	r3, #7
 8004982:	607a      	str	r2, [r7, #4]
 8004984:	942d      	str	r4, [sp, #180]	; 0xb4
 8004986:	bfd8      	it	le
 8004988:	3708      	addle	r7, #8
 800498a:	932c      	str	r3, [sp, #176]	; 0xb0
 800498c:	f300 8402 	bgt.w	8005194 <_svfprintf_r+0xb74>
 8004990:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8004992:	b16b      	cbz	r3, 80049b0 <_svfprintf_r+0x390>
 8004994:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004996:	aa24      	add	r2, sp, #144	; 0x90
 8004998:	3402      	adds	r4, #2
 800499a:	603a      	str	r2, [r7, #0]
 800499c:	3301      	adds	r3, #1
 800499e:	2202      	movs	r2, #2
 80049a0:	2b07      	cmp	r3, #7
 80049a2:	607a      	str	r2, [r7, #4]
 80049a4:	942d      	str	r4, [sp, #180]	; 0xb4
 80049a6:	bfd8      	it	le
 80049a8:	3708      	addle	r7, #8
 80049aa:	932c      	str	r3, [sp, #176]	; 0xb0
 80049ac:	f300 83fe 	bgt.w	80051ac <_svfprintf_r+0xb8c>
 80049b0:	2d80      	cmp	r5, #128	; 0x80
 80049b2:	f000 8346 	beq.w	8005042 <_svfprintf_r+0xa22>
 80049b6:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80049b8:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80049ba:	ebc3 0a05 	rsb	sl, r3, r5
 80049be:	f1ba 0f00 	cmp.w	sl, #0
 80049c2:	dd43      	ble.n	8004a4c <_svfprintf_r+0x42c>
 80049c4:	f1ba 0f10 	cmp.w	sl, #16
 80049c8:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80049ca:	bfdc      	itt	le
 80049cc:	4d94      	ldrle	r5, [pc, #592]	; (8004c20 <_svfprintf_r+0x600>)
 80049ce:	950f      	strle	r5, [sp, #60]	; 0x3c
 80049d0:	dd27      	ble.n	8004a22 <_svfprintf_r+0x402>
 80049d2:	4893      	ldr	r0, [pc, #588]	; (8004c20 <_svfprintf_r+0x600>)
 80049d4:	4622      	mov	r2, r4
 80049d6:	2510      	movs	r5, #16
 80049d8:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
 80049dc:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80049de:	900f      	str	r0, [sp, #60]	; 0x3c
 80049e0:	e004      	b.n	80049ec <_svfprintf_r+0x3cc>
 80049e2:	f1aa 0a10 	sub.w	sl, sl, #16
 80049e6:	f1ba 0f10 	cmp.w	sl, #16
 80049ea:	dd19      	ble.n	8004a20 <_svfprintf_r+0x400>
 80049ec:	3301      	adds	r3, #1
 80049ee:	3210      	adds	r2, #16
 80049f0:	2b07      	cmp	r3, #7
 80049f2:	603e      	str	r6, [r7, #0]
 80049f4:	607d      	str	r5, [r7, #4]
 80049f6:	f107 0708 	add.w	r7, r7, #8
 80049fa:	932c      	str	r3, [sp, #176]	; 0xb0
 80049fc:	922d      	str	r2, [sp, #180]	; 0xb4
 80049fe:	ddf0      	ble.n	80049e2 <_svfprintf_r+0x3c2>
 8004a00:	4658      	mov	r0, fp
 8004a02:	4621      	mov	r1, r4
 8004a04:	aa2b      	add	r2, sp, #172	; 0xac
 8004a06:	af38      	add	r7, sp, #224	; 0xe0
 8004a08:	f003 fa5a 	bl	8007ec0 <__ssprint_r>
 8004a0c:	2800      	cmp	r0, #0
 8004a0e:	f47f aeec 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8004a12:	f1aa 0a10 	sub.w	sl, sl, #16
 8004a16:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8004a18:	f1ba 0f10 	cmp.w	sl, #16
 8004a1c:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004a1e:	dce5      	bgt.n	80049ec <_svfprintf_r+0x3cc>
 8004a20:	4614      	mov	r4, r2
 8004a22:	3301      	adds	r3, #1
 8004a24:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8004a26:	2b07      	cmp	r3, #7
 8004a28:	4454      	add	r4, sl
 8004a2a:	932c      	str	r3, [sp, #176]	; 0xb0
 8004a2c:	e887 0420 	stmia.w	r7, {r5, sl}
 8004a30:	bfd8      	it	le
 8004a32:	3708      	addle	r7, #8
 8004a34:	942d      	str	r4, [sp, #180]	; 0xb4
 8004a36:	dd09      	ble.n	8004a4c <_svfprintf_r+0x42c>
 8004a38:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004a3a:	aa2b      	add	r2, sp, #172	; 0xac
 8004a3c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004a3e:	f003 fa3f 	bl	8007ec0 <__ssprint_r>
 8004a42:	2800      	cmp	r0, #0
 8004a44:	f47f aed1 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8004a48:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8004a4a:	af38      	add	r7, sp, #224	; 0xe0
 8004a4c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004a4e:	05eb      	lsls	r3, r5, #23
 8004a50:	f100 8282 	bmi.w	8004f58 <_svfprintf_r+0x938>
 8004a54:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004a56:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8004a58:	3301      	adds	r3, #1
 8004a5a:	f8c7 8000 	str.w	r8, [r7]
 8004a5e:	2b07      	cmp	r3, #7
 8004a60:	442c      	add	r4, r5
 8004a62:	607d      	str	r5, [r7, #4]
 8004a64:	942d      	str	r4, [sp, #180]	; 0xb4
 8004a66:	932c      	str	r3, [sp, #176]	; 0xb0
 8004a68:	f300 837a 	bgt.w	8005160 <_svfprintf_r+0xb40>
 8004a6c:	3708      	adds	r7, #8
 8004a6e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004a70:	076b      	lsls	r3, r5, #29
 8004a72:	d540      	bpl.n	8004af6 <_svfprintf_r+0x4d6>
 8004a74:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004a76:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004a78:	1a45      	subs	r5, r0, r1
 8004a7a:	2d00      	cmp	r5, #0
 8004a7c:	dd3b      	ble.n	8004af6 <_svfprintf_r+0x4d6>
 8004a7e:	2d10      	cmp	r5, #16
 8004a80:	f24a 5ac8 	movw	sl, #42440	; 0xa5c8
 8004a84:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004a86:	f6c0 0a00 	movt	sl, #2048	; 0x800
 8004a8a:	dd22      	ble.n	8004ad2 <_svfprintf_r+0x4b2>
 8004a8c:	4622      	mov	r2, r4
 8004a8e:	f04f 0810 	mov.w	r8, #16
 8004a92:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
 8004a96:	9c15      	ldr	r4, [sp, #84]	; 0x54
 8004a98:	e002      	b.n	8004aa0 <_svfprintf_r+0x480>
 8004a9a:	3d10      	subs	r5, #16
 8004a9c:	2d10      	cmp	r5, #16
 8004a9e:	dd17      	ble.n	8004ad0 <_svfprintf_r+0x4b0>
 8004aa0:	3301      	adds	r3, #1
 8004aa2:	3210      	adds	r2, #16
 8004aa4:	2b07      	cmp	r3, #7
 8004aa6:	e887 0110 	stmia.w	r7, {r4, r8}
 8004aaa:	932c      	str	r3, [sp, #176]	; 0xb0
 8004aac:	f107 0708 	add.w	r7, r7, #8
 8004ab0:	922d      	str	r2, [sp, #180]	; 0xb4
 8004ab2:	ddf2      	ble.n	8004a9a <_svfprintf_r+0x47a>
 8004ab4:	4658      	mov	r0, fp
 8004ab6:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004ab8:	aa2b      	add	r2, sp, #172	; 0xac
 8004aba:	af38      	add	r7, sp, #224	; 0xe0
 8004abc:	f003 fa00 	bl	8007ec0 <__ssprint_r>
 8004ac0:	2800      	cmp	r0, #0
 8004ac2:	f47f ae92 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8004ac6:	3d10      	subs	r5, #16
 8004ac8:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8004aca:	2d10      	cmp	r5, #16
 8004acc:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004ace:	dce7      	bgt.n	8004aa0 <_svfprintf_r+0x480>
 8004ad0:	4614      	mov	r4, r2
 8004ad2:	3301      	adds	r3, #1
 8004ad4:	442c      	add	r4, r5
 8004ad6:	2b07      	cmp	r3, #7
 8004ad8:	932c      	str	r3, [sp, #176]	; 0xb0
 8004ada:	942d      	str	r4, [sp, #180]	; 0xb4
 8004adc:	f8c7 a000 	str.w	sl, [r7]
 8004ae0:	607d      	str	r5, [r7, #4]
 8004ae2:	dd08      	ble.n	8004af6 <_svfprintf_r+0x4d6>
 8004ae4:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004ae6:	aa2b      	add	r2, sp, #172	; 0xac
 8004ae8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004aea:	f003 f9e9 	bl	8007ec0 <__ssprint_r>
 8004aee:	2800      	cmp	r0, #0
 8004af0:	f47f ae7b 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8004af4:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8004af6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8004af8:	990d      	ldr	r1, [sp, #52]	; 0x34
 8004afa:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8004afc:	4281      	cmp	r1, r0
 8004afe:	bfac      	ite	ge
 8004b00:	186d      	addge	r5, r5, r1
 8004b02:	182d      	addlt	r5, r5, r0
 8004b04:	9512      	str	r5, [sp, #72]	; 0x48
 8004b06:	2c00      	cmp	r4, #0
 8004b08:	f040 8335 	bne.w	8005176 <_svfprintf_r+0xb56>
 8004b0c:	2300      	movs	r3, #0
 8004b0e:	af38      	add	r7, sp, #224	; 0xe0
 8004b10:	932c      	str	r3, [sp, #176]	; 0xb0
 8004b12:	e5bb      	b.n	800468c <_svfprintf_r+0x6c>
 8004b14:	08e3      	lsrs	r3, r4, #3
 8004b16:	08e9      	lsrs	r1, r5, #3
 8004b18:	ea43 7345 	orr.w	r3, r3, r5, lsl #29
 8004b1c:	4690      	mov	r8, r2
 8004b1e:	460d      	mov	r5, r1
 8004b20:	f004 0207 	and.w	r2, r4, #7
 8004b24:	461c      	mov	r4, r3
 8004b26:	f102 0330 	add.w	r3, r2, #48	; 0x30
 8004b2a:	ea54 0105 	orrs.w	r1, r4, r5
 8004b2e:	f108 32ff 	add.w	r2, r8, #4294967295
 8004b32:	f888 3000 	strb.w	r3, [r8]
 8004b36:	d1ed      	bne.n	8004b14 <_svfprintf_r+0x4f4>
 8004b38:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004b3a:	4641      	mov	r1, r8
 8004b3c:	07e0      	lsls	r0, r4, #31
 8004b3e:	f100 84f5 	bmi.w	800552c <_svfprintf_r+0xf0c>
 8004b42:	9d09      	ldr	r5, [sp, #36]	; 0x24
 8004b44:	ebc8 0505 	rsb	r5, r8, r5
 8004b48:	9510      	str	r5, [sp, #64]	; 0x40
 8004b4a:	e6a2      	b.n	8004892 <_svfprintf_r+0x272>
 8004b4c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004b4e:	9316      	str	r3, [sp, #88]	; 0x58
 8004b50:	f015 0320 	ands.w	r3, r5, #32
 8004b54:	f000 80b4 	beq.w	8004cc0 <_svfprintf_r+0x6a0>
 8004b58:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004b5a:	2300      	movs	r3, #0
 8004b5c:	1de2      	adds	r2, r4, #7
 8004b5e:	f022 0207 	bic.w	r2, r2, #7
 8004b62:	f102 0508 	add.w	r5, r2, #8
 8004b66:	9514      	str	r5, [sp, #80]	; 0x50
 8004b68:	e9d2 4500 	ldrd	r4, r5, [r2]
 8004b6c:	e659      	b.n	8004822 <_svfprintf_r+0x202>
 8004b6e:	f899 3000 	ldrb.w	r3, [r9]
 8004b72:	f109 0401 	add.w	r4, r9, #1
 8004b76:	2b2a      	cmp	r3, #42	; 0x2a
 8004b78:	f000 8791 	beq.w	8005a9e <_svfprintf_r+0x147e>
 8004b7c:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004b80:	2909      	cmp	r1, #9
 8004b82:	bf82      	ittt	hi
 8004b84:	46a1      	movhi	r9, r4
 8004b86:	2400      	movhi	r4, #0
 8004b88:	940c      	strhi	r4, [sp, #48]	; 0x30
 8004b8a:	f63f adb4 	bhi.w	80046f6 <_svfprintf_r+0xd6>
 8004b8e:	2000      	movs	r0, #0
 8004b90:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8004b94:	f814 3b01 	ldrb.w	r3, [r4], #1
 8004b98:	eb01 0040 	add.w	r0, r1, r0, lsl #1
 8004b9c:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004ba0:	2909      	cmp	r1, #9
 8004ba2:	d9f5      	bls.n	8004b90 <_svfprintf_r+0x570>
 8004ba4:	ea40 70e0 	orr.w	r0, r0, r0, asr #31
 8004ba8:	46a1      	mov	r9, r4
 8004baa:	900c      	str	r0, [sp, #48]	; 0x30
 8004bac:	e5a3      	b.n	80046f6 <_svfprintf_r+0xd6>
 8004bae:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004bb0:	9316      	str	r3, [sp, #88]	; 0x58
 8004bb2:	f045 0510 	orr.w	r5, r5, #16
 8004bb6:	950a      	str	r5, [sp, #40]	; 0x28
 8004bb8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004bba:	06a3      	lsls	r3, r4, #26
 8004bbc:	f53f ae27 	bmi.w	800480e <_svfprintf_r+0x1ee>
 8004bc0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004bc2:	06ed      	lsls	r5, r5, #27
 8004bc4:	f100 83c4 	bmi.w	8005350 <_svfprintf_r+0xd30>
 8004bc8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004bca:	0664      	lsls	r4, r4, #25
 8004bcc:	f140 83c0 	bpl.w	8005350 <_svfprintf_r+0xd30>
 8004bd0:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004bd2:	2500      	movs	r5, #0
 8004bd4:	2301      	movs	r3, #1
 8004bd6:	3004      	adds	r0, #4
 8004bd8:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 8004bdc:	9014      	str	r0, [sp, #80]	; 0x50
 8004bde:	e620      	b.n	8004822 <_svfprintf_r+0x202>
 8004be0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004be2:	9316      	str	r3, [sp, #88]	; 0x58
 8004be4:	f044 0410 	orr.w	r4, r4, #16
 8004be8:	940a      	str	r4, [sp, #40]	; 0x28
 8004bea:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004bec:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004bf0:	06a9      	lsls	r1, r5, #26
 8004bf2:	f140 8165 	bpl.w	8004ec0 <_svfprintf_r+0x8a0>
 8004bf6:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004bf8:	1de3      	adds	r3, r4, #7
 8004bfa:	f023 0307 	bic.w	r3, r3, #7
 8004bfe:	f103 0508 	add.w	r5, r3, #8
 8004c02:	9514      	str	r5, [sp, #80]	; 0x50
 8004c04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004c08:	4614      	mov	r4, r2
 8004c0a:	461d      	mov	r5, r3
 8004c0c:	2a00      	cmp	r2, #0
 8004c0e:	f173 0000 	sbcs.w	r0, r3, #0
 8004c12:	f2c0 83bb 	blt.w	800538c <_svfprintf_r+0xd6c>
 8004c16:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8004c1a:	2301      	movs	r3, #1
 8004c1c:	e605      	b.n	800482a <_svfprintf_r+0x20a>
 8004c1e:	bf00      	nop
 8004c20:	0800a5d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, sl, sp, pc}
 8004c24:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004c26:	9316      	str	r3, [sp, #88]	; 0x58
 8004c28:	0725      	lsls	r5, r4, #28
 8004c2a:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004c2e:	f140 84ab 	bpl.w	8005588 <_svfprintf_r+0xf68>
 8004c32:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004c34:	1deb      	adds	r3, r5, #7
 8004c36:	f023 0307 	bic.w	r3, r3, #7
 8004c3a:	f103 0408 	add.w	r4, r3, #8
 8004c3e:	9414      	str	r4, [sp, #80]	; 0x50
 8004c40:	681d      	ldr	r5, [r3, #0]
 8004c42:	951b      	str	r5, [sp, #108]	; 0x6c
 8004c44:	685b      	ldr	r3, [r3, #4]
 8004c46:	931c      	str	r3, [sp, #112]	; 0x70
 8004c48:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004c4a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004c4c:	f002 ffae 	bl	8007bac <__fpclassifyd>
 8004c50:	2801      	cmp	r0, #1
 8004c52:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004c54:	f040 8478 	bne.w	8005548 <_svfprintf_r+0xf28>
 8004c58:	2200      	movs	r2, #0
 8004c5a:	2300      	movs	r3, #0
 8004c5c:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004c5e:	f005 f8af 	bl	8009dc0 <__aeabi_dcmplt>
 8004c62:	2800      	cmp	r0, #0
 8004c64:	f040 864a 	bne.w	80058fc <_svfprintf_r+0x12dc>
 8004c68:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8004c6c:	2503      	movs	r5, #3
 8004c6e:	2400      	movs	r4, #0
 8004c70:	f64a 18bc 	movw	r8, #43452	; 0xa9bc
 8004c74:	f64a 13b8 	movw	r3, #43448	; 0xa9b8
 8004c78:	950d      	str	r5, [sp, #52]	; 0x34
 8004c7a:	f6c0 0800 	movt	r8, #2048	; 0x800
 8004c7e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004c80:	f6c0 0300 	movt	r3, #2048	; 0x800
 8004c84:	940c      	str	r4, [sp, #48]	; 0x30
 8004c86:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8004c88:	f025 0580 	bic.w	r5, r5, #128	; 0x80
 8004c8c:	950a      	str	r5, [sp, #40]	; 0x28
 8004c8e:	2503      	movs	r5, #3
 8004c90:	2c47      	cmp	r4, #71	; 0x47
 8004c92:	bfd8      	it	le
 8004c94:	4698      	movle	r8, r3
 8004c96:	9510      	str	r5, [sp, #64]	; 0x40
 8004c98:	2400      	movs	r4, #0
 8004c9a:	9418      	str	r4, [sp, #96]	; 0x60
 8004c9c:	e601      	b.n	80048a2 <_svfprintf_r+0x282>
 8004c9e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004ca0:	f045 0508 	orr.w	r5, r5, #8
 8004ca4:	950a      	str	r5, [sp, #40]	; 0x28
 8004ca6:	f899 3000 	ldrb.w	r3, [r9]
 8004caa:	e522      	b.n	80046f2 <_svfprintf_r+0xd2>
 8004cac:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004cae:	9316      	str	r3, [sp, #88]	; 0x58
 8004cb0:	f044 0410 	orr.w	r4, r4, #16
 8004cb4:	940a      	str	r4, [sp, #40]	; 0x28
 8004cb6:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004cb8:	f015 0320 	ands.w	r3, r5, #32
 8004cbc:	f47f af4c 	bne.w	8004b58 <_svfprintf_r+0x538>
 8004cc0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004cc2:	f014 0210 	ands.w	r2, r4, #16
 8004cc6:	f040 834c 	bne.w	8005362 <_svfprintf_r+0xd42>
 8004cca:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004ccc:	f014 0340 	ands.w	r3, r4, #64	; 0x40
 8004cd0:	f000 8347 	beq.w	8005362 <_svfprintf_r+0xd42>
 8004cd4:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004cd6:	4613      	mov	r3, r2
 8004cd8:	2500      	movs	r5, #0
 8004cda:	3004      	adds	r0, #4
 8004cdc:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 8004ce0:	9014      	str	r0, [sp, #80]	; 0x50
 8004ce2:	e59e      	b.n	8004822 <_svfprintf_r+0x202>
 8004ce4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004ce6:	f045 0520 	orr.w	r5, r5, #32
 8004cea:	950a      	str	r5, [sp, #40]	; 0x28
 8004cec:	f899 3000 	ldrb.w	r3, [r9]
 8004cf0:	e4ff      	b.n	80046f2 <_svfprintf_r+0xd2>
 8004cf2:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004cf4:	2500      	movs	r5, #0
 8004cf6:	9316      	str	r3, [sp, #88]	; 0x58
 8004cf8:	3404      	adds	r4, #4
 8004cfa:	f88d 508f 	strb.w	r5, [sp, #143]	; 0x8f
 8004cfe:	f854 8c04 	ldr.w	r8, [r4, #-4]
 8004d02:	f1b8 0f00 	cmp.w	r8, #0
 8004d06:	f000 85d9 	beq.w	80058bc <_svfprintf_r+0x129c>
 8004d0a:	980c      	ldr	r0, [sp, #48]	; 0x30
 8004d0c:	2800      	cmp	r0, #0
 8004d0e:	4640      	mov	r0, r8
 8004d10:	f2c0 85ab 	blt.w	800586a <_svfprintf_r+0x124a>
 8004d14:	4629      	mov	r1, r5
 8004d16:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8004d18:	f002 fa60 	bl	80071dc <memchr>
 8004d1c:	2800      	cmp	r0, #0
 8004d1e:	f000 85ff 	beq.w	8005920 <_svfprintf_r+0x1300>
 8004d22:	9414      	str	r4, [sp, #80]	; 0x50
 8004d24:	ebc8 0000 	rsb	r0, r8, r0
 8004d28:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8004d2a:	950c      	str	r5, [sp, #48]	; 0x30
 8004d2c:	42a0      	cmp	r0, r4
 8004d2e:	bfb8      	it	lt
 8004d30:	4604      	movlt	r4, r0
 8004d32:	9410      	str	r4, [sp, #64]	; 0x40
 8004d34:	ea24 75e4 	bic.w	r5, r4, r4, asr #31
 8004d38:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8004d3a:	950d      	str	r5, [sp, #52]	; 0x34
 8004d3c:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8004d40:	9418      	str	r4, [sp, #96]	; 0x60
 8004d42:	e5ae      	b.n	80048a2 <_svfprintf_r+0x282>
 8004d44:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004d46:	f64a 14dc 	movw	r4, #43484	; 0xa9dc
 8004d4a:	f6c0 0400 	movt	r4, #2048	; 0x800
 8004d4e:	9316      	str	r3, [sp, #88]	; 0x58
 8004d50:	06a8      	lsls	r0, r5, #26
 8004d52:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004d56:	9419      	str	r4, [sp, #100]	; 0x64
 8004d58:	f140 809c 	bpl.w	8004e94 <_svfprintf_r+0x874>
 8004d5c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004d5e:	1de3      	adds	r3, r4, #7
 8004d60:	f023 0307 	bic.w	r3, r3, #7
 8004d64:	f103 0508 	add.w	r5, r3, #8
 8004d68:	9514      	str	r5, [sp, #80]	; 0x50
 8004d6a:	e9d3 4500 	ldrd	r4, r5, [r3]
 8004d6e:	980a      	ldr	r0, [sp, #40]	; 0x28
 8004d70:	07c3      	lsls	r3, r0, #31
 8004d72:	f140 8227 	bpl.w	80051c4 <_svfprintf_r+0xba4>
 8004d76:	ea54 0105 	orrs.w	r1, r4, r5
 8004d7a:	f000 8223 	beq.w	80051c4 <_svfprintf_r+0xba4>
 8004d7e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8004d80:	2330      	movs	r3, #48	; 0x30
 8004d82:	f040 0002 	orr.w	r0, r0, #2
 8004d86:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 8004d8a:	900a      	str	r0, [sp, #40]	; 0x28
 8004d8c:	2302      	movs	r3, #2
 8004d8e:	f88d 2091 	strb.w	r2, [sp, #145]	; 0x91
 8004d92:	e546      	b.n	8004822 <_svfprintf_r+0x202>
 8004d94:	f899 3000 	ldrb.w	r3, [r9]
 8004d98:	222b      	movs	r2, #43	; 0x2b
 8004d9a:	e4aa      	b.n	80046f2 <_svfprintf_r+0xd2>
 8004d9c:	f899 3000 	ldrb.w	r3, [r9]
 8004da0:	4649      	mov	r1, r9
 8004da2:	2b6c      	cmp	r3, #108	; 0x6c
 8004da4:	bf05      	ittet	eq
 8004da6:	f109 0901 	addeq.w	r9, r9, #1
 8004daa:	9d0a      	ldreq	r5, [sp, #40]	; 0x28
 8004dac:	9c0a      	ldrne	r4, [sp, #40]	; 0x28
 8004dae:	f045 0520 	orreq.w	r5, r5, #32
 8004db2:	bf0b      	itete	eq
 8004db4:	784b      	ldrbeq	r3, [r1, #1]
 8004db6:	f044 0410 	orrne.w	r4, r4, #16
 8004dba:	950a      	streq	r5, [sp, #40]	; 0x28
 8004dbc:	940a      	strne	r4, [sp, #40]	; 0x28
 8004dbe:	e498      	b.n	80046f2 <_svfprintf_r+0xd2>
 8004dc0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004dc2:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004dc6:	06a9      	lsls	r1, r5, #26
 8004dc8:	f140 83eb 	bpl.w	80055a2 <_svfprintf_r+0xf82>
 8004dcc:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004dce:	6821      	ldr	r1, [r4, #0]
 8004dd0:	9c12      	ldr	r4, [sp, #72]	; 0x48
 8004dd2:	4622      	mov	r2, r4
 8004dd4:	17e5      	asrs	r5, r4, #31
 8004dd6:	462b      	mov	r3, r5
 8004dd8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004dda:	e9c1 2300 	strd	r2, r3, [r1]
 8004dde:	3504      	adds	r5, #4
 8004de0:	9514      	str	r5, [sp, #80]	; 0x50
 8004de2:	e453      	b.n	800468c <_svfprintf_r+0x6c>
 8004de4:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004de6:	f64a 10dc 	movw	r0, #43484	; 0xa9dc
 8004dea:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004dec:	2378      	movs	r3, #120	; 0x78
 8004dee:	f6c0 0000 	movt	r0, #2048	; 0x800
 8004df2:	f88d 3091 	strb.w	r3, [sp, #145]	; 0x91
 8004df6:	f045 0502 	orr.w	r5, r5, #2
 8004dfa:	9316      	str	r3, [sp, #88]	; 0x58
 8004dfc:	950a      	str	r5, [sp, #40]	; 0x28
 8004dfe:	2330      	movs	r3, #48	; 0x30
 8004e00:	1d15      	adds	r5, r2, #4
 8004e02:	f88d 3090 	strb.w	r3, [sp, #144]	; 0x90
 8004e06:	9514      	str	r5, [sp, #80]	; 0x50
 8004e08:	2302      	movs	r3, #2
 8004e0a:	6814      	ldr	r4, [r2, #0]
 8004e0c:	2500      	movs	r5, #0
 8004e0e:	9019      	str	r0, [sp, #100]	; 0x64
 8004e10:	e507      	b.n	8004822 <_svfprintf_r+0x202>
 8004e12:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004e14:	f044 0440 	orr.w	r4, r4, #64	; 0x40
 8004e18:	940a      	str	r4, [sp, #40]	; 0x28
 8004e1a:	f899 3000 	ldrb.w	r3, [r9]
 8004e1e:	e468      	b.n	80046f2 <_svfprintf_r+0xd2>
 8004e20:	f899 3000 	ldrb.w	r3, [r9]
 8004e24:	2a00      	cmp	r2, #0
 8004e26:	f47f ac64 	bne.w	80046f2 <_svfprintf_r+0xd2>
 8004e2a:	2220      	movs	r2, #32
 8004e2c:	e461      	b.n	80046f2 <_svfprintf_r+0xd2>
 8004e2e:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004e30:	f045 0501 	orr.w	r5, r5, #1
 8004e34:	950a      	str	r5, [sp, #40]	; 0x28
 8004e36:	f899 3000 	ldrb.w	r3, [r9]
 8004e3a:	e45a      	b.n	80046f2 <_svfprintf_r+0xd2>
 8004e3c:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8004e3e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004e40:	6824      	ldr	r4, [r4, #0]
 8004e42:	1d2b      	adds	r3, r5, #4
 8004e44:	2c00      	cmp	r4, #0
 8004e46:	9413      	str	r4, [sp, #76]	; 0x4c
 8004e48:	f6ff acb5 	blt.w	80047b6 <_svfprintf_r+0x196>
 8004e4c:	9314      	str	r3, [sp, #80]	; 0x50
 8004e4e:	f899 3000 	ldrb.w	r3, [r9]
 8004e52:	e44e      	b.n	80046f2 <_svfprintf_r+0xd2>
 8004e54:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8004e56:	2401      	movs	r4, #1
 8004e58:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8004e5a:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 8004e5e:	9316      	str	r3, [sp, #88]	; 0x58
 8004e60:	2300      	movs	r3, #0
 8004e62:	6812      	ldr	r2, [r2, #0]
 8004e64:	3504      	adds	r5, #4
 8004e66:	469a      	mov	sl, r3
 8004e68:	940d      	str	r4, [sp, #52]	; 0x34
 8004e6a:	9514      	str	r5, [sp, #80]	; 0x50
 8004e6c:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
 8004e70:	930c      	str	r3, [sp, #48]	; 0x30
 8004e72:	9318      	str	r3, [sp, #96]	; 0x60
 8004e74:	9410      	str	r4, [sp, #64]	; 0x40
 8004e76:	f88d 20b8 	strb.w	r2, [sp, #184]	; 0xb8
 8004e7a:	e518      	b.n	80048ae <_svfprintf_r+0x28e>
 8004e7c:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004e7e:	f64a 14c8 	movw	r4, #43464	; 0xa9c8
 8004e82:	f6c0 0400 	movt	r4, #2048	; 0x800
 8004e86:	9316      	str	r3, [sp, #88]	; 0x58
 8004e88:	06a8      	lsls	r0, r5, #26
 8004e8a:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004e8e:	9419      	str	r4, [sp, #100]	; 0x64
 8004e90:	f53f af64 	bmi.w	8004d5c <_svfprintf_r+0x73c>
 8004e94:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004e96:	06e1      	lsls	r1, r4, #27
 8004e98:	f100 8253 	bmi.w	8005342 <_svfprintf_r+0xd22>
 8004e9c:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004e9e:	0662      	lsls	r2, r4, #25
 8004ea0:	f140 824f 	bpl.w	8005342 <_svfprintf_r+0xd22>
 8004ea4:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004ea6:	2500      	movs	r5, #0
 8004ea8:	3004      	adds	r0, #4
 8004eaa:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 8004eae:	9014      	str	r0, [sp, #80]	; 0x50
 8004eb0:	e75d      	b.n	8004d6e <_svfprintf_r+0x74e>
 8004eb2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004eb4:	9316      	str	r3, [sp, #88]	; 0x58
 8004eb6:	06a9      	lsls	r1, r5, #26
 8004eb8:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004ebc:	f53f ae9b 	bmi.w	8004bf6 <_svfprintf_r+0x5d6>
 8004ec0:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004ec2:	06e2      	lsls	r2, r4, #27
 8004ec4:	f100 8255 	bmi.w	8005372 <_svfprintf_r+0xd52>
 8004ec8:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8004eca:	0663      	lsls	r3, r4, #25
 8004ecc:	f140 8251 	bpl.w	8005372 <_svfprintf_r+0xd52>
 8004ed0:	9814      	ldr	r0, [sp, #80]	; 0x50
 8004ed2:	3004      	adds	r0, #4
 8004ed4:	f930 4c04 	ldrsh.w	r4, [r0, #-4]
 8004ed8:	9014      	str	r0, [sp, #80]	; 0x50
 8004eda:	4622      	mov	r2, r4
 8004edc:	17e5      	asrs	r5, r4, #31
 8004ede:	462b      	mov	r3, r5
 8004ee0:	e694      	b.n	8004c0c <_svfprintf_r+0x5ec>
 8004ee2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004ee4:	f045 0580 	orr.w	r5, r5, #128	; 0x80
 8004ee8:	950a      	str	r5, [sp, #40]	; 0x28
 8004eea:	f899 3000 	ldrb.w	r3, [r9]
 8004eee:	e400      	b.n	80046f2 <_svfprintf_r+0xd2>
 8004ef0:	2400      	movs	r4, #0
 8004ef2:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004ef6:	4620      	mov	r0, r4
 8004ef8:	9413      	str	r4, [sp, #76]	; 0x4c
 8004efa:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8004efe:	f819 3b01 	ldrb.w	r3, [r9], #1
 8004f02:	eb01 0040 	add.w	r0, r1, r0, lsl #1
 8004f06:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 8004f0a:	2909      	cmp	r1, #9
 8004f0c:	d9f5      	bls.n	8004efa <_svfprintf_r+0x8da>
 8004f0e:	9013      	str	r0, [sp, #76]	; 0x4c
 8004f10:	f7ff bbf1 	b.w	80046f6 <_svfprintf_r+0xd6>
 8004f14:	9316      	str	r3, [sp, #88]	; 0x58
 8004f16:	f88d 208f 	strb.w	r2, [sp, #143]	; 0x8f
 8004f1a:	2b00      	cmp	r3, #0
 8004f1c:	f43f ac5e 	beq.w	80047dc <_svfprintf_r+0x1bc>
 8004f20:	9c16      	ldr	r4, [sp, #88]	; 0x58
 8004f22:	2300      	movs	r3, #0
 8004f24:	2501      	movs	r5, #1
 8004f26:	469a      	mov	sl, r3
 8004f28:	950d      	str	r5, [sp, #52]	; 0x34
 8004f2a:	f10d 08b8 	add.w	r8, sp, #184	; 0xb8
 8004f2e:	f88d 40b8 	strb.w	r4, [sp, #184]	; 0xb8
 8004f32:	f88d 308f 	strb.w	r3, [sp, #143]	; 0x8f
 8004f36:	930c      	str	r3, [sp, #48]	; 0x30
 8004f38:	9318      	str	r3, [sp, #96]	; 0x60
 8004f3a:	9510      	str	r5, [sp, #64]	; 0x40
 8004f3c:	e4b7      	b.n	80048ae <_svfprintf_r+0x28e>
 8004f3e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8004f40:	aa2b      	add	r2, sp, #172	; 0xac
 8004f42:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8004f44:	f002 ffbc 	bl	8007ec0 <__ssprint_r>
 8004f48:	2800      	cmp	r0, #0
 8004f4a:	f47f ac4e 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8004f4e:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8004f52:	af38      	add	r7, sp, #224	; 0xe0
 8004f54:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8004f56:	e509      	b.n	800496c <_svfprintf_r+0x34c>
 8004f58:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8004f5a:	2d65      	cmp	r5, #101	; 0x65
 8004f5c:	f340 80b9 	ble.w	80050d2 <_svfprintf_r+0xab2>
 8004f60:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8004f62:	2200      	movs	r2, #0
 8004f64:	2300      	movs	r3, #0
 8004f66:	991c      	ldr	r1, [sp, #112]	; 0x70
 8004f68:	f004 ff20 	bl	8009dac <__aeabi_dcmpeq>
 8004f6c:	2800      	cmp	r0, #0
 8004f6e:	f000 812c 	beq.w	80051ca <_svfprintf_r+0xbaa>
 8004f72:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004f74:	2201      	movs	r2, #1
 8004f76:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 8004f78:	3401      	adds	r4, #1
 8004f7a:	4413      	add	r3, r2
 8004f7c:	607a      	str	r2, [r7, #4]
 8004f7e:	2b07      	cmp	r3, #7
 8004f80:	942d      	str	r4, [sp, #180]	; 0xb4
 8004f82:	603d      	str	r5, [r7, #0]
 8004f84:	bfd8      	it	le
 8004f86:	3708      	addle	r7, #8
 8004f88:	932c      	str	r3, [sp, #176]	; 0xb0
 8004f8a:	f300 8316 	bgt.w	80055ba <_svfprintf_r+0xf9a>
 8004f8e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8004f90:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8004f92:	42ab      	cmp	r3, r5
 8004f94:	db03      	blt.n	8004f9e <_svfprintf_r+0x97e>
 8004f96:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8004f98:	07ed      	lsls	r5, r5, #31
 8004f9a:	f57f ad68 	bpl.w	8004a6e <_svfprintf_r+0x44e>
 8004f9e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8004fa0:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004fa2:	442c      	add	r4, r5
 8004fa4:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8004fa6:	3301      	adds	r3, #1
 8004fa8:	942d      	str	r4, [sp, #180]	; 0xb4
 8004faa:	2b07      	cmp	r3, #7
 8004fac:	932c      	str	r3, [sp, #176]	; 0xb0
 8004fae:	603d      	str	r5, [r7, #0]
 8004fb0:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8004fb2:	607d      	str	r5, [r7, #4]
 8004fb4:	bfd8      	it	le
 8004fb6:	3708      	addle	r7, #8
 8004fb8:	f300 835e 	bgt.w	8005678 <_svfprintf_r+0x1058>
 8004fbc:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8004fbe:	f105 38ff 	add.w	r8, r5, #4294967295
 8004fc2:	f1b8 0f00 	cmp.w	r8, #0
 8004fc6:	f77f ad52 	ble.w	8004a6e <_svfprintf_r+0x44e>
 8004fca:	f1b8 0f10 	cmp.w	r8, #16
 8004fce:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8004fd0:	f340 81aa 	ble.w	8005328 <_svfprintf_r+0xd08>
 8004fd4:	4dac      	ldr	r5, [pc, #688]	; (8005288 <_svfprintf_r+0xc68>)
 8004fd6:	f04f 0a10 	mov.w	sl, #16
 8004fda:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 8004fde:	950f      	str	r5, [sp, #60]	; 0x3c
 8004fe0:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8004fe2:	e005      	b.n	8004ff0 <_svfprintf_r+0x9d0>
 8004fe4:	f1a8 0810 	sub.w	r8, r8, #16
 8004fe8:	f1b8 0f10 	cmp.w	r8, #16
 8004fec:	f340 819e 	ble.w	800532c <_svfprintf_r+0xd0c>
 8004ff0:	3301      	adds	r3, #1
 8004ff2:	3410      	adds	r4, #16
 8004ff4:	2b07      	cmp	r3, #7
 8004ff6:	e887 0440 	stmia.w	r7, {r6, sl}
 8004ffa:	932c      	str	r3, [sp, #176]	; 0xb0
 8004ffc:	f107 0708 	add.w	r7, r7, #8
 8005000:	942d      	str	r4, [sp, #180]	; 0xb4
 8005002:	ddef      	ble.n	8004fe4 <_svfprintf_r+0x9c4>
 8005004:	4628      	mov	r0, r5
 8005006:	4659      	mov	r1, fp
 8005008:	aa2b      	add	r2, sp, #172	; 0xac
 800500a:	af38      	add	r7, sp, #224	; 0xe0
 800500c:	f002 ff58 	bl	8007ec0 <__ssprint_r>
 8005010:	2800      	cmp	r0, #0
 8005012:	f47f abea 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8005016:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8005018:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800501a:	e7e3      	b.n	8004fe4 <_svfprintf_r+0x9c4>
 800501c:	2b00      	cmp	r3, #0
 800501e:	f040 80b4 	bne.w	800518a <_svfprintf_r+0xb6a>
 8005022:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005024:	07e2      	lsls	r2, r4, #31
 8005026:	bf5c      	itt	pl
 8005028:	9310      	strpl	r3, [sp, #64]	; 0x40
 800502a:	f10d 08e0 	addpl.w	r8, sp, #224	; 0xe0
 800502e:	f57f ac30 	bpl.w	8004892 <_svfprintf_r+0x272>
 8005032:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8005034:	2330      	movs	r3, #48	; 0x30
 8005036:	f10d 08df 	add.w	r8, sp, #223	; 0xdf
 800503a:	f88d 30df 	strb.w	r3, [sp, #223]	; 0xdf
 800503e:	9510      	str	r5, [sp, #64]	; 0x40
 8005040:	e427      	b.n	8004892 <_svfprintf_r+0x272>
 8005042:	9813      	ldr	r0, [sp, #76]	; 0x4c
 8005044:	990d      	ldr	r1, [sp, #52]	; 0x34
 8005046:	1a45      	subs	r5, r0, r1
 8005048:	2d00      	cmp	r5, #0
 800504a:	f77f acb4 	ble.w	80049b6 <_svfprintf_r+0x396>
 800504e:	2d10      	cmp	r5, #16
 8005050:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8005052:	bfdc      	itt	le
 8005054:	4a8c      	ldrle	r2, [pc, #560]	; (8005288 <_svfprintf_r+0xc68>)
 8005056:	920f      	strle	r2, [sp, #60]	; 0x3c
 8005058:	dd24      	ble.n	80050a4 <_svfprintf_r+0xa84>
 800505a:	488b      	ldr	r0, [pc, #556]	; (8005288 <_svfprintf_r+0xc68>)
 800505c:	4622      	mov	r2, r4
 800505e:	f04f 0b10 	mov.w	fp, #16
 8005062:	f8dd a038 	ldr.w	sl, [sp, #56]	; 0x38
 8005066:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8005068:	900f      	str	r0, [sp, #60]	; 0x3c
 800506a:	e002      	b.n	8005072 <_svfprintf_r+0xa52>
 800506c:	3d10      	subs	r5, #16
 800506e:	2d10      	cmp	r5, #16
 8005070:	dd17      	ble.n	80050a2 <_svfprintf_r+0xa82>
 8005072:	3301      	adds	r3, #1
 8005074:	3210      	adds	r2, #16
 8005076:	2b07      	cmp	r3, #7
 8005078:	e887 0840 	stmia.w	r7, {r6, fp}
 800507c:	932c      	str	r3, [sp, #176]	; 0xb0
 800507e:	f107 0708 	add.w	r7, r7, #8
 8005082:	922d      	str	r2, [sp, #180]	; 0xb4
 8005084:	ddf2      	ble.n	800506c <_svfprintf_r+0xa4c>
 8005086:	4650      	mov	r0, sl
 8005088:	4621      	mov	r1, r4
 800508a:	aa2b      	add	r2, sp, #172	; 0xac
 800508c:	af38      	add	r7, sp, #224	; 0xe0
 800508e:	f002 ff17 	bl	8007ec0 <__ssprint_r>
 8005092:	2800      	cmp	r0, #0
 8005094:	f47f aba9 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8005098:	3d10      	subs	r5, #16
 800509a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800509c:	2d10      	cmp	r5, #16
 800509e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80050a0:	dce7      	bgt.n	8005072 <_svfprintf_r+0xa52>
 80050a2:	4614      	mov	r4, r2
 80050a4:	3301      	adds	r3, #1
 80050a6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80050a8:	2b07      	cmp	r3, #7
 80050aa:	442c      	add	r4, r5
 80050ac:	932c      	str	r3, [sp, #176]	; 0xb0
 80050ae:	e887 0022 	stmia.w	r7, {r1, r5}
 80050b2:	bfd8      	it	le
 80050b4:	3708      	addle	r7, #8
 80050b6:	942d      	str	r4, [sp, #180]	; 0xb4
 80050b8:	f77f ac7d 	ble.w	80049b6 <_svfprintf_r+0x396>
 80050bc:	980e      	ldr	r0, [sp, #56]	; 0x38
 80050be:	aa2b      	add	r2, sp, #172	; 0xac
 80050c0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80050c2:	f002 fefd 	bl	8007ec0 <__ssprint_r>
 80050c6:	2800      	cmp	r0, #0
 80050c8:	f47f ab8f 	bne.w	80047ea <_svfprintf_r+0x1ca>
 80050cc:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80050ce:	af38      	add	r7, sp, #224	; 0xe0
 80050d0:	e471      	b.n	80049b6 <_svfprintf_r+0x396>
 80050d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80050d4:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80050d6:	2d01      	cmp	r5, #1
 80050d8:	f340 81e2 	ble.w	80054a0 <_svfprintf_r+0xe80>
 80050dc:	2101      	movs	r1, #1
 80050de:	1c62      	adds	r2, r4, #1
 80050e0:	440b      	add	r3, r1
 80050e2:	f8c7 8000 	str.w	r8, [r7]
 80050e6:	2b07      	cmp	r3, #7
 80050e8:	6079      	str	r1, [r7, #4]
 80050ea:	922d      	str	r2, [sp, #180]	; 0xb4
 80050ec:	bfd8      	it	le
 80050ee:	3708      	addle	r7, #8
 80050f0:	932c      	str	r3, [sp, #176]	; 0xb0
 80050f2:	f300 81f4 	bgt.w	80054de <_svfprintf_r+0xebe>
 80050f6:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80050f8:	1c5c      	adds	r4, r3, #1
 80050fa:	f8dd a074 	ldr.w	sl, [sp, #116]	; 0x74
 80050fe:	2c07      	cmp	r4, #7
 8005100:	942c      	str	r4, [sp, #176]	; 0xb0
 8005102:	603d      	str	r5, [r7, #0]
 8005104:	4492      	add	sl, r2
 8005106:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8005108:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
 800510c:	607d      	str	r5, [r7, #4]
 800510e:	bfd8      	it	le
 8005110:	3708      	addle	r7, #8
 8005112:	f300 81d7 	bgt.w	80054c4 <_svfprintf_r+0xea4>
 8005116:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8005118:	2200      	movs	r2, #0
 800511a:	2300      	movs	r3, #0
 800511c:	991c      	ldr	r1, [sp, #112]	; 0x70
 800511e:	f004 fe45 	bl	8009dac <__aeabi_dcmpeq>
 8005122:	2800      	cmp	r0, #0
 8005124:	f040 80b2 	bne.w	800528c <_svfprintf_r+0xc6c>
 8005128:	3401      	adds	r4, #1
 800512a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800512c:	2c07      	cmp	r4, #7
 800512e:	f108 0201 	add.w	r2, r8, #1
 8005132:	f105 33ff 	add.w	r3, r5, #4294967295
 8005136:	942c      	str	r4, [sp, #176]	; 0xb0
 8005138:	449a      	add	sl, r3
 800513a:	603a      	str	r2, [r7, #0]
 800513c:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
 8005140:	607b      	str	r3, [r7, #4]
 8005142:	f300 80e4 	bgt.w	800530e <_svfprintf_r+0xcee>
 8005146:	3708      	adds	r7, #8
 8005148:	1c63      	adds	r3, r4, #1
 800514a:	9d1e      	ldr	r5, [sp, #120]	; 0x78
 800514c:	9c1e      	ldr	r4, [sp, #120]	; 0x78
 800514e:	2b07      	cmp	r3, #7
 8005150:	aa27      	add	r2, sp, #156	; 0x9c
 8005152:	932c      	str	r3, [sp, #176]	; 0xb0
 8005154:	4454      	add	r4, sl
 8005156:	e887 0024 	stmia.w	r7, {r2, r5}
 800515a:	942d      	str	r4, [sp, #180]	; 0xb4
 800515c:	f77f ac86 	ble.w	8004a6c <_svfprintf_r+0x44c>
 8005160:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005162:	aa2b      	add	r2, sp, #172	; 0xac
 8005164:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005166:	f002 feab 	bl	8007ec0 <__ssprint_r>
 800516a:	2800      	cmp	r0, #0
 800516c:	f47f ab3d 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8005170:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8005172:	af38      	add	r7, sp, #224	; 0xe0
 8005174:	e47b      	b.n	8004a6e <_svfprintf_r+0x44e>
 8005176:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005178:	aa2b      	add	r2, sp, #172	; 0xac
 800517a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800517c:	f002 fea0 	bl	8007ec0 <__ssprint_r>
 8005180:	2800      	cmp	r0, #0
 8005182:	f43f acc3 	beq.w	8004b0c <_svfprintf_r+0x4ec>
 8005186:	f7ff bb30 	b.w	80047ea <_svfprintf_r+0x1ca>
 800518a:	9210      	str	r2, [sp, #64]	; 0x40
 800518c:	f10d 08e0 	add.w	r8, sp, #224	; 0xe0
 8005190:	f7ff bb7f 	b.w	8004892 <_svfprintf_r+0x272>
 8005194:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005196:	aa2b      	add	r2, sp, #172	; 0xac
 8005198:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800519a:	f002 fe91 	bl	8007ec0 <__ssprint_r>
 800519e:	2800      	cmp	r0, #0
 80051a0:	f47f ab23 	bne.w	80047ea <_svfprintf_r+0x1ca>
 80051a4:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80051a6:	af38      	add	r7, sp, #224	; 0xe0
 80051a8:	f7ff bbf2 	b.w	8004990 <_svfprintf_r+0x370>
 80051ac:	980e      	ldr	r0, [sp, #56]	; 0x38
 80051ae:	aa2b      	add	r2, sp, #172	; 0xac
 80051b0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80051b2:	f002 fe85 	bl	8007ec0 <__ssprint_r>
 80051b6:	2800      	cmp	r0, #0
 80051b8:	f47f ab17 	bne.w	80047ea <_svfprintf_r+0x1ca>
 80051bc:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80051be:	af38      	add	r7, sp, #224	; 0xe0
 80051c0:	f7ff bbf6 	b.w	80049b0 <_svfprintf_r+0x390>
 80051c4:	2302      	movs	r3, #2
 80051c6:	f7ff bb2c 	b.w	8004822 <_svfprintf_r+0x202>
 80051ca:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80051cc:	2b00      	cmp	r3, #0
 80051ce:	f340 81ff 	ble.w	80055d0 <_svfprintf_r+0xfb0>
 80051d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80051d4:	9818      	ldr	r0, [sp, #96]	; 0x60
 80051d6:	9911      	ldr	r1, [sp, #68]	; 0x44
 80051d8:	4285      	cmp	r5, r0
 80051da:	bfa8      	it	ge
 80051dc:	4605      	movge	r5, r0
 80051de:	2d00      	cmp	r5, #0
 80051e0:	4441      	add	r1, r8
 80051e2:	910c      	str	r1, [sp, #48]	; 0x30
 80051e4:	dd0c      	ble.n	8005200 <_svfprintf_r+0xbe0>
 80051e6:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80051e8:	442c      	add	r4, r5
 80051ea:	f8c7 8000 	str.w	r8, [r7]
 80051ee:	3301      	adds	r3, #1
 80051f0:	607d      	str	r5, [r7, #4]
 80051f2:	2b07      	cmp	r3, #7
 80051f4:	942d      	str	r4, [sp, #180]	; 0xb4
 80051f6:	932c      	str	r3, [sp, #176]	; 0xb0
 80051f8:	bfd8      	it	le
 80051fa:	3708      	addle	r7, #8
 80051fc:	f300 8343 	bgt.w	8005886 <_svfprintf_r+0x1266>
 8005200:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8005202:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8005206:	ebc5 0a02 	rsb	sl, r5, r2
 800520a:	f1ba 0f00 	cmp.w	sl, #0
 800520e:	f340 80dd 	ble.w	80053cc <_svfprintf_r+0xdac>
 8005212:	f1ba 0f10 	cmp.w	sl, #16
 8005216:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8005218:	bfdc      	itt	le
 800521a:	4d1b      	ldrle	r5, [pc, #108]	; (8005288 <_svfprintf_r+0xc68>)
 800521c:	950f      	strle	r5, [sp, #60]	; 0x3c
 800521e:	f340 80c0 	ble.w	80053a2 <_svfprintf_r+0xd82>
 8005222:	4d19      	ldr	r5, [pc, #100]	; (8005288 <_svfprintf_r+0xc68>)
 8005224:	4622      	mov	r2, r4
 8005226:	f04f 0b10 	mov.w	fp, #16
 800522a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800522c:	950f      	str	r5, [sp, #60]	; 0x3c
 800522e:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8005230:	e005      	b.n	800523e <_svfprintf_r+0xc1e>
 8005232:	f1aa 0a10 	sub.w	sl, sl, #16
 8005236:	f1ba 0f10 	cmp.w	sl, #16
 800523a:	f340 80b1 	ble.w	80053a0 <_svfprintf_r+0xd80>
 800523e:	3301      	adds	r3, #1
 8005240:	3210      	adds	r2, #16
 8005242:	2b07      	cmp	r3, #7
 8005244:	e887 0840 	stmia.w	r7, {r6, fp}
 8005248:	932c      	str	r3, [sp, #176]	; 0xb0
 800524a:	f107 0708 	add.w	r7, r7, #8
 800524e:	922d      	str	r2, [sp, #180]	; 0xb4
 8005250:	ddef      	ble.n	8005232 <_svfprintf_r+0xc12>
 8005252:	4628      	mov	r0, r5
 8005254:	4621      	mov	r1, r4
 8005256:	aa2b      	add	r2, sp, #172	; 0xac
 8005258:	af38      	add	r7, sp, #224	; 0xe0
 800525a:	f002 fe31 	bl	8007ec0 <__ssprint_r>
 800525e:	2800      	cmp	r0, #0
 8005260:	f47f aac3 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8005264:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8005266:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8005268:	e7e3      	b.n	8005232 <_svfprintf_r+0xc12>
 800526a:	2d00      	cmp	r5, #0
 800526c:	bf08      	it	eq
 800526e:	2c0a      	cmpeq	r4, #10
 8005270:	f080 8141 	bcs.w	80054f6 <_svfprintf_r+0xed6>
 8005274:	9d21      	ldr	r5, [sp, #132]	; 0x84
 8005276:	3430      	adds	r4, #48	; 0x30
 8005278:	f10d 08df 	add.w	r8, sp, #223	; 0xdf
 800527c:	f88d 40df 	strb.w	r4, [sp, #223]	; 0xdf
 8005280:	9510      	str	r5, [sp, #64]	; 0x40
 8005282:	f7ff bb06 	b.w	8004892 <_svfprintf_r+0x272>
 8005286:	bf00      	nop
 8005288:	0800a5d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, sl, sp, pc}
 800528c:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800528e:	f105 38ff 	add.w	r8, r5, #4294967295
 8005292:	f1b8 0f00 	cmp.w	r8, #0
 8005296:	f77f af57 	ble.w	8005148 <_svfprintf_r+0xb28>
 800529a:	f1b8 0f10 	cmp.w	r8, #16
 800529e:	bfdc      	itt	le
 80052a0:	4ba8      	ldrle	r3, [pc, #672]	; (8005544 <_svfprintf_r+0xf24>)
 80052a2:	930f      	strle	r3, [sp, #60]	; 0x3c
 80052a4:	dd28      	ble.n	80052f8 <_svfprintf_r+0xcd8>
 80052a6:	4da7      	ldr	r5, [pc, #668]	; (8005544 <_svfprintf_r+0xf24>)
 80052a8:	4653      	mov	r3, sl
 80052aa:	f04f 0b10 	mov.w	fp, #16
 80052ae:	f8dd a02c 	ldr.w	sl, [sp, #44]	; 0x2c
 80052b2:	950f      	str	r5, [sp, #60]	; 0x3c
 80052b4:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 80052b6:	e004      	b.n	80052c2 <_svfprintf_r+0xca2>
 80052b8:	f1a8 0810 	sub.w	r8, r8, #16
 80052bc:	f1b8 0f10 	cmp.w	r8, #16
 80052c0:	dd19      	ble.n	80052f6 <_svfprintf_r+0xcd6>
 80052c2:	3401      	adds	r4, #1
 80052c4:	3310      	adds	r3, #16
 80052c6:	2c07      	cmp	r4, #7
 80052c8:	e887 0840 	stmia.w	r7, {r6, fp}
 80052cc:	942c      	str	r4, [sp, #176]	; 0xb0
 80052ce:	f107 0708 	add.w	r7, r7, #8
 80052d2:	932d      	str	r3, [sp, #180]	; 0xb4
 80052d4:	ddf0      	ble.n	80052b8 <_svfprintf_r+0xc98>
 80052d6:	4628      	mov	r0, r5
 80052d8:	4651      	mov	r1, sl
 80052da:	aa2b      	add	r2, sp, #172	; 0xac
 80052dc:	af38      	add	r7, sp, #224	; 0xe0
 80052de:	f002 fdef 	bl	8007ec0 <__ssprint_r>
 80052e2:	2800      	cmp	r0, #0
 80052e4:	f47f aa81 	bne.w	80047ea <_svfprintf_r+0x1ca>
 80052e8:	f1a8 0810 	sub.w	r8, r8, #16
 80052ec:	9b2d      	ldr	r3, [sp, #180]	; 0xb4
 80052ee:	f1b8 0f10 	cmp.w	r8, #16
 80052f2:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80052f4:	dce5      	bgt.n	80052c2 <_svfprintf_r+0xca2>
 80052f6:	469a      	mov	sl, r3
 80052f8:	3401      	adds	r4, #1
 80052fa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80052fc:	2c07      	cmp	r4, #7
 80052fe:	44c2      	add	sl, r8
 8005300:	942c      	str	r4, [sp, #176]	; 0xb0
 8005302:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
 8005306:	e887 0108 	stmia.w	r7, {r3, r8}
 800530a:	f77f af1c 	ble.w	8005146 <_svfprintf_r+0xb26>
 800530e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005310:	aa2b      	add	r2, sp, #172	; 0xac
 8005312:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005314:	f002 fdd4 	bl	8007ec0 <__ssprint_r>
 8005318:	2800      	cmp	r0, #0
 800531a:	f47f aa66 	bne.w	80047ea <_svfprintf_r+0x1ca>
 800531e:	f8dd a0b4 	ldr.w	sl, [sp, #180]	; 0xb4
 8005322:	af38      	add	r7, sp, #224	; 0xe0
 8005324:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 8005326:	e70f      	b.n	8005148 <_svfprintf_r+0xb28>
 8005328:	4d86      	ldr	r5, [pc, #536]	; (8005544 <_svfprintf_r+0xf24>)
 800532a:	950f      	str	r5, [sp, #60]	; 0x3c
 800532c:	3301      	adds	r3, #1
 800532e:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8005330:	2b07      	cmp	r3, #7
 8005332:	4444      	add	r4, r8
 8005334:	932c      	str	r3, [sp, #176]	; 0xb0
 8005336:	942d      	str	r4, [sp, #180]	; 0xb4
 8005338:	e887 0120 	stmia.w	r7, {r5, r8}
 800533c:	f77f ab96 	ble.w	8004a6c <_svfprintf_r+0x44c>
 8005340:	e70e      	b.n	8005160 <_svfprintf_r+0xb40>
 8005342:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8005344:	3504      	adds	r5, #4
 8005346:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800534a:	9514      	str	r5, [sp, #80]	; 0x50
 800534c:	2500      	movs	r5, #0
 800534e:	e50e      	b.n	8004d6e <_svfprintf_r+0x74e>
 8005350:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8005352:	2301      	movs	r3, #1
 8005354:	3504      	adds	r5, #4
 8005356:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800535a:	9514      	str	r5, [sp, #80]	; 0x50
 800535c:	2500      	movs	r5, #0
 800535e:	f7ff ba60 	b.w	8004822 <_svfprintf_r+0x202>
 8005362:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8005364:	3504      	adds	r5, #4
 8005366:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800536a:	9514      	str	r5, [sp, #80]	; 0x50
 800536c:	2500      	movs	r5, #0
 800536e:	f7ff ba58 	b.w	8004822 <_svfprintf_r+0x202>
 8005372:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8005374:	3504      	adds	r5, #4
 8005376:	f855 4c04 	ldr.w	r4, [r5, #-4]
 800537a:	9514      	str	r5, [sp, #80]	; 0x50
 800537c:	4622      	mov	r2, r4
 800537e:	17e5      	asrs	r5, r4, #31
 8005380:	462b      	mov	r3, r5
 8005382:	2a00      	cmp	r2, #0
 8005384:	f173 0000 	sbcs.w	r0, r3, #0
 8005388:	f6bf ac45 	bge.w	8004c16 <_svfprintf_r+0x5f6>
 800538c:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
 8005390:	4264      	negs	r4, r4
 8005392:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 8005396:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
 800539a:	2301      	movs	r3, #1
 800539c:	f7ff ba45 	b.w	800482a <_svfprintf_r+0x20a>
 80053a0:	4614      	mov	r4, r2
 80053a2:	3301      	adds	r3, #1
 80053a4:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80053a6:	2b07      	cmp	r3, #7
 80053a8:	4454      	add	r4, sl
 80053aa:	932c      	str	r3, [sp, #176]	; 0xb0
 80053ac:	e887 0420 	stmia.w	r7, {r5, sl}
 80053b0:	bfd8      	it	le
 80053b2:	3708      	addle	r7, #8
 80053b4:	942d      	str	r4, [sp, #180]	; 0xb4
 80053b6:	dd09      	ble.n	80053cc <_svfprintf_r+0xdac>
 80053b8:	980e      	ldr	r0, [sp, #56]	; 0x38
 80053ba:	aa2b      	add	r2, sp, #172	; 0xac
 80053bc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80053be:	f002 fd7f 	bl	8007ec0 <__ssprint_r>
 80053c2:	2800      	cmp	r0, #0
 80053c4:	f47f aa11 	bne.w	80047ea <_svfprintf_r+0x1ca>
 80053c8:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80053ca:	af38      	add	r7, sp, #224	; 0xe0
 80053cc:	9d18      	ldr	r5, [sp, #96]	; 0x60
 80053ce:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80053d0:	44a8      	add	r8, r5
 80053d2:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80053d4:	42ab      	cmp	r3, r5
 80053d6:	db49      	blt.n	800546c <_svfprintf_r+0xe4c>
 80053d8:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80053da:	07e9      	lsls	r1, r5, #31
 80053dc:	d446      	bmi.n	800546c <_svfprintf_r+0xe4c>
 80053de:	980c      	ldr	r0, [sp, #48]	; 0x30
 80053e0:	9911      	ldr	r1, [sp, #68]	; 0x44
 80053e2:	ebc8 0500 	rsb	r5, r8, r0
 80053e6:	1acb      	subs	r3, r1, r3
 80053e8:	42ab      	cmp	r3, r5
 80053ea:	bfb8      	it	lt
 80053ec:	461d      	movlt	r5, r3
 80053ee:	2d00      	cmp	r5, #0
 80053f0:	dd0c      	ble.n	800540c <_svfprintf_r+0xdec>
 80053f2:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80053f4:	442c      	add	r4, r5
 80053f6:	f8c7 8000 	str.w	r8, [r7]
 80053fa:	3201      	adds	r2, #1
 80053fc:	607d      	str	r5, [r7, #4]
 80053fe:	2a07      	cmp	r2, #7
 8005400:	942d      	str	r4, [sp, #180]	; 0xb4
 8005402:	922c      	str	r2, [sp, #176]	; 0xb0
 8005404:	bfd8      	it	le
 8005406:	3708      	addle	r7, #8
 8005408:	f300 824a 	bgt.w	80058a0 <_svfprintf_r+0x1280>
 800540c:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8005410:	ebc5 0803 	rsb	r8, r5, r3
 8005414:	f1b8 0f00 	cmp.w	r8, #0
 8005418:	f77f ab29 	ble.w	8004a6e <_svfprintf_r+0x44e>
 800541c:	f1b8 0f10 	cmp.w	r8, #16
 8005420:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8005422:	dd81      	ble.n	8005328 <_svfprintf_r+0xd08>
 8005424:	4d47      	ldr	r5, [pc, #284]	; (8005544 <_svfprintf_r+0xf24>)
 8005426:	f04f 0a10 	mov.w	sl, #16
 800542a:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 800542e:	950f      	str	r5, [sp, #60]	; 0x3c
 8005430:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8005432:	e005      	b.n	8005440 <_svfprintf_r+0xe20>
 8005434:	f1a8 0810 	sub.w	r8, r8, #16
 8005438:	f1b8 0f10 	cmp.w	r8, #16
 800543c:	f77f af76 	ble.w	800532c <_svfprintf_r+0xd0c>
 8005440:	3301      	adds	r3, #1
 8005442:	3410      	adds	r4, #16
 8005444:	2b07      	cmp	r3, #7
 8005446:	e887 0440 	stmia.w	r7, {r6, sl}
 800544a:	932c      	str	r3, [sp, #176]	; 0xb0
 800544c:	f107 0708 	add.w	r7, r7, #8
 8005450:	942d      	str	r4, [sp, #180]	; 0xb4
 8005452:	ddef      	ble.n	8005434 <_svfprintf_r+0xe14>
 8005454:	4628      	mov	r0, r5
 8005456:	4659      	mov	r1, fp
 8005458:	aa2b      	add	r2, sp, #172	; 0xac
 800545a:	af38      	add	r7, sp, #224	; 0xe0
 800545c:	f002 fd30 	bl	8007ec0 <__ssprint_r>
 8005460:	2800      	cmp	r0, #0
 8005462:	f47f a9c2 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8005466:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8005468:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 800546a:	e7e3      	b.n	8005434 <_svfprintf_r+0xe14>
 800546c:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 800546e:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 8005470:	442c      	add	r4, r5
 8005472:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 8005474:	3201      	adds	r2, #1
 8005476:	942d      	str	r4, [sp, #180]	; 0xb4
 8005478:	2a07      	cmp	r2, #7
 800547a:	922c      	str	r2, [sp, #176]	; 0xb0
 800547c:	603d      	str	r5, [r7, #0]
 800547e:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8005480:	607d      	str	r5, [r7, #4]
 8005482:	bfd8      	it	le
 8005484:	3708      	addle	r7, #8
 8005486:	ddaa      	ble.n	80053de <_svfprintf_r+0xdbe>
 8005488:	980e      	ldr	r0, [sp, #56]	; 0x38
 800548a:	aa2b      	add	r2, sp, #172	; 0xac
 800548c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800548e:	f002 fd17 	bl	8007ec0 <__ssprint_r>
 8005492:	2800      	cmp	r0, #0
 8005494:	f47f a9a9 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8005498:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800549a:	af38      	add	r7, sp, #224	; 0xe0
 800549c:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 800549e:	e79e      	b.n	80053de <_svfprintf_r+0xdbe>
 80054a0:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80054a2:	07ea      	lsls	r2, r5, #31
 80054a4:	f53f ae1a 	bmi.w	80050dc <_svfprintf_r+0xabc>
 80054a8:	2201      	movs	r2, #1
 80054aa:	f104 0a01 	add.w	sl, r4, #1
 80054ae:	189c      	adds	r4, r3, r2
 80054b0:	f8c7 8000 	str.w	r8, [r7]
 80054b4:	2c07      	cmp	r4, #7
 80054b6:	f8cd a0b4 	str.w	sl, [sp, #180]	; 0xb4
 80054ba:	942c      	str	r4, [sp, #176]	; 0xb0
 80054bc:	607a      	str	r2, [r7, #4]
 80054be:	f77f ae42 	ble.w	8005146 <_svfprintf_r+0xb26>
 80054c2:	e724      	b.n	800530e <_svfprintf_r+0xcee>
 80054c4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80054c6:	aa2b      	add	r2, sp, #172	; 0xac
 80054c8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80054ca:	f002 fcf9 	bl	8007ec0 <__ssprint_r>
 80054ce:	2800      	cmp	r0, #0
 80054d0:	f47f a98b 	bne.w	80047ea <_svfprintf_r+0x1ca>
 80054d4:	f8dd a0b4 	ldr.w	sl, [sp, #180]	; 0xb4
 80054d8:	af38      	add	r7, sp, #224	; 0xe0
 80054da:	9c2c      	ldr	r4, [sp, #176]	; 0xb0
 80054dc:	e61b      	b.n	8005116 <_svfprintf_r+0xaf6>
 80054de:	980e      	ldr	r0, [sp, #56]	; 0x38
 80054e0:	aa2b      	add	r2, sp, #172	; 0xac
 80054e2:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80054e4:	f002 fcec 	bl	8007ec0 <__ssprint_r>
 80054e8:	2800      	cmp	r0, #0
 80054ea:	f47f a97e 	bne.w	80047ea <_svfprintf_r+0x1ca>
 80054ee:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80054f0:	af38      	add	r7, sp, #224	; 0xe0
 80054f2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80054f4:	e5ff      	b.n	80050f6 <_svfprintf_r+0xad6>
 80054f6:	f10d 0bdf 	add.w	fp, sp, #223	; 0xdf
 80054fa:	4620      	mov	r0, r4
 80054fc:	4629      	mov	r1, r5
 80054fe:	220a      	movs	r2, #10
 8005500:	2300      	movs	r3, #0
 8005502:	f004 fccd 	bl	8009ea0 <__aeabi_uldivmod>
 8005506:	46d8      	mov	r8, fp
 8005508:	4620      	mov	r0, r4
 800550a:	4629      	mov	r1, r5
 800550c:	2300      	movs	r3, #0
 800550e:	f10b 3bff 	add.w	fp, fp, #4294967295
 8005512:	3230      	adds	r2, #48	; 0x30
 8005514:	f888 2000 	strb.w	r2, [r8]
 8005518:	220a      	movs	r2, #10
 800551a:	f004 fcc1 	bl	8009ea0 <__aeabi_uldivmod>
 800551e:	4604      	mov	r4, r0
 8005520:	460d      	mov	r5, r1
 8005522:	ea54 0005 	orrs.w	r0, r4, r5
 8005526:	d1e8      	bne.n	80054fa <_svfprintf_r+0xeda>
 8005528:	f7ff b9af 	b.w	800488a <_svfprintf_r+0x26a>
 800552c:	2b30      	cmp	r3, #48	; 0x30
 800552e:	f43f a9ac 	beq.w	800488a <_svfprintf_r+0x26a>
 8005532:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8005534:	2330      	movs	r3, #48	; 0x30
 8005536:	4690      	mov	r8, r2
 8005538:	f801 3c01 	strb.w	r3, [r1, #-1]
 800553c:	1aa4      	subs	r4, r4, r2
 800553e:	9410      	str	r4, [sp, #64]	; 0x40
 8005540:	f7ff b9a7 	b.w	8004892 <_svfprintf_r+0x272>
 8005544:	0800a5d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, sl, sp, pc}
 8005548:	991c      	ldr	r1, [sp, #112]	; 0x70
 800554a:	f002 fb2f 	bl	8007bac <__fpclassifyd>
 800554e:	2800      	cmp	r0, #0
 8005550:	f040 80ab 	bne.w	80056aa <_svfprintf_r+0x108a>
 8005554:	2503      	movs	r5, #3
 8005556:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005558:	f64a 18c4 	movw	r8, #43460	; 0xa9c4
 800555c:	f64a 13c0 	movw	r3, #43456	; 0xa9c0
 8005560:	950d      	str	r5, [sp, #52]	; 0x34
 8005562:	f6c0 0800 	movt	r8, #2048	; 0x800
 8005566:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8005568:	f6c0 0300 	movt	r3, #2048	; 0x800
 800556c:	f024 0480 	bic.w	r4, r4, #128	; 0x80
 8005570:	900c      	str	r0, [sp, #48]	; 0x30
 8005572:	940a      	str	r4, [sp, #40]	; 0x28
 8005574:	2d47      	cmp	r5, #71	; 0x47
 8005576:	bfd8      	it	le
 8005578:	4698      	movle	r8, r3
 800557a:	2403      	movs	r4, #3
 800557c:	9018      	str	r0, [sp, #96]	; 0x60
 800557e:	9410      	str	r4, [sp, #64]	; 0x40
 8005580:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8005584:	f7ff b98d 	b.w	80048a2 <_svfprintf_r+0x282>
 8005588:	9c14      	ldr	r4, [sp, #80]	; 0x50
 800558a:	1de3      	adds	r3, r4, #7
 800558c:	f023 0307 	bic.w	r3, r3, #7
 8005590:	f103 0508 	add.w	r5, r3, #8
 8005594:	9514      	str	r5, [sp, #80]	; 0x50
 8005596:	681c      	ldr	r4, [r3, #0]
 8005598:	941b      	str	r4, [sp, #108]	; 0x6c
 800559a:	685b      	ldr	r3, [r3, #4]
 800559c:	931c      	str	r3, [sp, #112]	; 0x70
 800559e:	f7ff bb53 	b.w	8004c48 <_svfprintf_r+0x628>
 80055a2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80055a4:	06e2      	lsls	r2, r4, #27
 80055a6:	d572      	bpl.n	800568e <_svfprintf_r+0x106e>
 80055a8:	9d14      	ldr	r5, [sp, #80]	; 0x50
 80055aa:	9c12      	ldr	r4, [sp, #72]	; 0x48
 80055ac:	3504      	adds	r5, #4
 80055ae:	f855 3c04 	ldr.w	r3, [r5, #-4]
 80055b2:	9514      	str	r5, [sp, #80]	; 0x50
 80055b4:	601c      	str	r4, [r3, #0]
 80055b6:	f7ff b869 	b.w	800468c <_svfprintf_r+0x6c>
 80055ba:	980e      	ldr	r0, [sp, #56]	; 0x38
 80055bc:	aa2b      	add	r2, sp, #172	; 0xac
 80055be:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80055c0:	f002 fc7e 	bl	8007ec0 <__ssprint_r>
 80055c4:	2800      	cmp	r0, #0
 80055c6:	f47f a910 	bne.w	80047ea <_svfprintf_r+0x1ca>
 80055ca:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80055cc:	af38      	add	r7, sp, #224	; 0xe0
 80055ce:	e4de      	b.n	8004f8e <_svfprintf_r+0x96e>
 80055d0:	9a2c      	ldr	r2, [sp, #176]	; 0xb0
 80055d2:	2101      	movs	r1, #1
 80055d4:	9d17      	ldr	r5, [sp, #92]	; 0x5c
 80055d6:	3401      	adds	r4, #1
 80055d8:	440a      	add	r2, r1
 80055da:	942d      	str	r4, [sp, #180]	; 0xb4
 80055dc:	2a07      	cmp	r2, #7
 80055de:	922c      	str	r2, [sp, #176]	; 0xb0
 80055e0:	603d      	str	r5, [r7, #0]
 80055e2:	6079      	str	r1, [r7, #4]
 80055e4:	f300 8112 	bgt.w	800580c <_svfprintf_r+0x11ec>
 80055e8:	3708      	adds	r7, #8
 80055ea:	4619      	mov	r1, r3
 80055ec:	b929      	cbnz	r1, 80055fa <_svfprintf_r+0xfda>
 80055ee:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80055f0:	b91d      	cbnz	r5, 80055fa <_svfprintf_r+0xfda>
 80055f2:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80055f4:	07e8      	lsls	r0, r5, #31
 80055f6:	f57f aa3a 	bpl.w	8004a6e <_svfprintf_r+0x44e>
 80055fa:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80055fc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80055fe:	3301      	adds	r3, #1
 8005600:	9d1d      	ldr	r5, [sp, #116]	; 0x74
 8005602:	4422      	add	r2, r4
 8005604:	9c1a      	ldr	r4, [sp, #104]	; 0x68
 8005606:	2b07      	cmp	r3, #7
 8005608:	922d      	str	r2, [sp, #180]	; 0xb4
 800560a:	607d      	str	r5, [r7, #4]
 800560c:	603c      	str	r4, [r7, #0]
 800560e:	bfd8      	it	le
 8005610:	3708      	addle	r7, #8
 8005612:	932c      	str	r3, [sp, #176]	; 0xb0
 8005614:	f300 81ba 	bgt.w	800598c <_svfprintf_r+0x136c>
 8005618:	f1c1 0a00 	rsb	sl, r1, #0
 800561c:	f1ba 0f00 	cmp.w	sl, #0
 8005620:	f340 8116 	ble.w	8005850 <_svfprintf_r+0x1230>
 8005624:	f1ba 0f10 	cmp.w	sl, #16
 8005628:	bfdc      	itt	le
 800562a:	4c9c      	ldrle	r4, [pc, #624]	; (800589c <_svfprintf_r+0x127c>)
 800562c:	940f      	strle	r4, [sp, #60]	; 0x3c
 800562e:	f340 80f9 	ble.w	8005824 <_svfprintf_r+0x1204>
 8005632:	4d9a      	ldr	r5, [pc, #616]	; (800589c <_svfprintf_r+0x127c>)
 8005634:	2410      	movs	r4, #16
 8005636:	f8dd b02c 	ldr.w	fp, [sp, #44]	; 0x2c
 800563a:	950f      	str	r5, [sp, #60]	; 0x3c
 800563c:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 800563e:	e005      	b.n	800564c <_svfprintf_r+0x102c>
 8005640:	f1aa 0a10 	sub.w	sl, sl, #16
 8005644:	f1ba 0f10 	cmp.w	sl, #16
 8005648:	f340 80ec 	ble.w	8005824 <_svfprintf_r+0x1204>
 800564c:	3301      	adds	r3, #1
 800564e:	3210      	adds	r2, #16
 8005650:	2b07      	cmp	r3, #7
 8005652:	603e      	str	r6, [r7, #0]
 8005654:	607c      	str	r4, [r7, #4]
 8005656:	f107 0708 	add.w	r7, r7, #8
 800565a:	932c      	str	r3, [sp, #176]	; 0xb0
 800565c:	922d      	str	r2, [sp, #180]	; 0xb4
 800565e:	ddef      	ble.n	8005640 <_svfprintf_r+0x1020>
 8005660:	4628      	mov	r0, r5
 8005662:	4659      	mov	r1, fp
 8005664:	aa2b      	add	r2, sp, #172	; 0xac
 8005666:	af38      	add	r7, sp, #224	; 0xe0
 8005668:	f002 fc2a 	bl	8007ec0 <__ssprint_r>
 800566c:	2800      	cmp	r0, #0
 800566e:	f47f a8bc 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8005672:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 8005674:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8005676:	e7e3      	b.n	8005640 <_svfprintf_r+0x1020>
 8005678:	980e      	ldr	r0, [sp, #56]	; 0x38
 800567a:	aa2b      	add	r2, sp, #172	; 0xac
 800567c:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800567e:	f002 fc1f 	bl	8007ec0 <__ssprint_r>
 8005682:	2800      	cmp	r0, #0
 8005684:	f47f a8b1 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8005688:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 800568a:	af38      	add	r7, sp, #224	; 0xe0
 800568c:	e496      	b.n	8004fbc <_svfprintf_r+0x99c>
 800568e:	9c14      	ldr	r4, [sp, #80]	; 0x50
 8005690:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8005692:	3404      	adds	r4, #4
 8005694:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8005698:	f015 0f40 	tst.w	r5, #64	; 0x40
 800569c:	9d12      	ldr	r5, [sp, #72]	; 0x48
 800569e:	9414      	str	r4, [sp, #80]	; 0x50
 80056a0:	bf14      	ite	ne
 80056a2:	801d      	strhne	r5, [r3, #0]
 80056a4:	601d      	streq	r5, [r3, #0]
 80056a6:	f7fe bff1 	b.w	800468c <_svfprintf_r+0x6c>
 80056aa:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80056ac:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80056ae:	3501      	adds	r5, #1
 80056b0:	f024 0520 	bic.w	r5, r4, #32
 80056b4:	bf04      	itt	eq
 80056b6:	2406      	moveq	r4, #6
 80056b8:	940c      	streq	r4, [sp, #48]	; 0x30
 80056ba:	d006      	beq.n	80056ca <_svfprintf_r+0x10aa>
 80056bc:	2d47      	cmp	r5, #71	; 0x47
 80056be:	d104      	bne.n	80056ca <_svfprintf_r+0x10aa>
 80056c0:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80056c2:	2c00      	cmp	r4, #0
 80056c4:	bf08      	it	eq
 80056c6:	2401      	moveq	r4, #1
 80056c8:	940c      	str	r4, [sp, #48]	; 0x30
 80056ca:	9b1c      	ldr	r3, [sp, #112]	; 0x70
 80056cc:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80056ce:	2b00      	cmp	r3, #0
 80056d0:	f444 7480 	orr.w	r4, r4, #256	; 0x100
 80056d4:	940f      	str	r4, [sp, #60]	; 0x3c
 80056d6:	bfbd      	ittte	lt
 80056d8:	461c      	movlt	r4, r3
 80056da:	f04f 0b2d 	movlt.w	fp, #45	; 0x2d
 80056de:	f104 4a00 	addlt.w	sl, r4, #2147483648	; 0x80000000
 80056e2:	f8dd a070 	ldrge.w	sl, [sp, #112]	; 0x70
 80056e6:	bfa8      	it	ge
 80056e8:	f04f 0b00 	movge.w	fp, #0
 80056ec:	f1b5 0446 	subs.w	r4, r5, #70	; 0x46
 80056f0:	4261      	negs	r1, r4
 80056f2:	4161      	adcs	r1, r4
 80056f4:	2900      	cmp	r1, #0
 80056f6:	d030      	beq.n	800575a <_svfprintf_r+0x113a>
 80056f8:	2003      	movs	r0, #3
 80056fa:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80056fc:	4653      	mov	r3, sl
 80056fe:	9000      	str	r0, [sp, #0]
 8005700:	a825      	add	r0, sp, #148	; 0x94
 8005702:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8005704:	9002      	str	r0, [sp, #8]
 8005706:	a826      	add	r0, sp, #152	; 0x98
 8005708:	9401      	str	r4, [sp, #4]
 800570a:	9003      	str	r0, [sp, #12]
 800570c:	a829      	add	r0, sp, #164	; 0xa4
 800570e:	9004      	str	r0, [sp, #16]
 8005710:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005712:	9107      	str	r1, [sp, #28]
 8005714:	f000 fa86 	bl	8005c24 <_dtoa_r>
 8005718:	2d47      	cmp	r5, #71	; 0x47
 800571a:	9907      	ldr	r1, [sp, #28]
 800571c:	4680      	mov	r8, r0
 800571e:	d103      	bne.n	8005728 <_svfprintf_r+0x1108>
 8005720:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005722:	07e0      	lsls	r0, r4, #31
 8005724:	f140 80f0 	bpl.w	8005908 <_svfprintf_r+0x12e8>
 8005728:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800572a:	4444      	add	r4, r8
 800572c:	b351      	cbz	r1, 8005784 <_svfprintf_r+0x1164>
 800572e:	f898 3000 	ldrb.w	r3, [r8]
 8005732:	2b30      	cmp	r3, #48	; 0x30
 8005734:	f000 8184 	beq.w	8005a40 <_svfprintf_r+0x1420>
 8005738:	9b25      	ldr	r3, [sp, #148]	; 0x94
 800573a:	441c      	add	r4, r3
 800573c:	e022      	b.n	8005784 <_svfprintf_r+0x1164>
 800573e:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005740:	2140      	movs	r1, #64	; 0x40
 8005742:	f001 fa93 	bl	8006c6c <_malloc_r>
 8005746:	6020      	str	r0, [r4, #0]
 8005748:	6120      	str	r0, [r4, #16]
 800574a:	2800      	cmp	r0, #0
 800574c:	f000 81b6 	beq.w	8005abc <_svfprintf_r+0x149c>
 8005750:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8005752:	2340      	movs	r3, #64	; 0x40
 8005754:	6163      	str	r3, [r4, #20]
 8005756:	f7fe bf79 	b.w	800464c <_svfprintf_r+0x2c>
 800575a:	2d45      	cmp	r5, #69	; 0x45
 800575c:	f040 8131 	bne.w	80059c2 <_svfprintf_r+0x13a2>
 8005760:	980c      	ldr	r0, [sp, #48]	; 0x30
 8005762:	2102      	movs	r1, #2
 8005764:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 8005766:	4653      	mov	r3, sl
 8005768:	1c44      	adds	r4, r0, #1
 800576a:	9100      	str	r1, [sp, #0]
 800576c:	9401      	str	r4, [sp, #4]
 800576e:	a925      	add	r1, sp, #148	; 0x94
 8005770:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005772:	9102      	str	r1, [sp, #8]
 8005774:	a926      	add	r1, sp, #152	; 0x98
 8005776:	9103      	str	r1, [sp, #12]
 8005778:	a929      	add	r1, sp, #164	; 0xa4
 800577a:	9104      	str	r1, [sp, #16]
 800577c:	f000 fa52 	bl	8005c24 <_dtoa_r>
 8005780:	4680      	mov	r8, r0
 8005782:	4404      	add	r4, r0
 8005784:	2300      	movs	r3, #0
 8005786:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8005788:	2200      	movs	r2, #0
 800578a:	4651      	mov	r1, sl
 800578c:	f004 fb0e 	bl	8009dac <__aeabi_dcmpeq>
 8005790:	4623      	mov	r3, r4
 8005792:	b948      	cbnz	r0, 80057a8 <_svfprintf_r+0x1188>
 8005794:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 8005796:	429c      	cmp	r4, r3
 8005798:	d906      	bls.n	80057a8 <_svfprintf_r+0x1188>
 800579a:	2130      	movs	r1, #48	; 0x30
 800579c:	1c5a      	adds	r2, r3, #1
 800579e:	9229      	str	r2, [sp, #164]	; 0xa4
 80057a0:	7019      	strb	r1, [r3, #0]
 80057a2:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 80057a4:	429c      	cmp	r4, r3
 80057a6:	d8f9      	bhi.n	800579c <_svfprintf_r+0x117c>
 80057a8:	2d47      	cmp	r5, #71	; 0x47
 80057aa:	ebc8 0303 	rsb	r3, r8, r3
 80057ae:	9311      	str	r3, [sp, #68]	; 0x44
 80057b0:	f000 80ae 	beq.w	8005910 <_svfprintf_r+0x12f0>
 80057b4:	9c16      	ldr	r4, [sp, #88]	; 0x58
 80057b6:	2c65      	cmp	r4, #101	; 0x65
 80057b8:	f340 818a 	ble.w	8005ad0 <_svfprintf_r+0x14b0>
 80057bc:	9d16      	ldr	r5, [sp, #88]	; 0x58
 80057be:	2d66      	cmp	r5, #102	; 0x66
 80057c0:	f000 8101 	beq.w	80059c6 <_svfprintf_r+0x13a6>
 80057c4:	9c25      	ldr	r4, [sp, #148]	; 0x94
 80057c6:	9418      	str	r4, [sp, #96]	; 0x60
 80057c8:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80057ca:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80057cc:	42ac      	cmp	r4, r5
 80057ce:	f2c0 80ea 	blt.w	80059a6 <_svfprintf_r+0x1386>
 80057d2:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80057d4:	9d18      	ldr	r5, [sp, #96]	; 0x60
 80057d6:	07e0      	lsls	r0, r4, #31
 80057d8:	bf4b      	itete	mi
 80057da:	3501      	addmi	r5, #1
 80057dc:	ea25 73e5 	bicpl.w	r3, r5, r5, asr #31
 80057e0:	ea25 73e5 	bicmi.w	r3, r5, r5, asr #31
 80057e4:	2467      	movpl	r4, #103	; 0x67
 80057e6:	bf4d      	iteet	mi
 80057e8:	2467      	movmi	r4, #103	; 0x67
 80057ea:	9510      	strpl	r5, [sp, #64]	; 0x40
 80057ec:	9416      	strpl	r4, [sp, #88]	; 0x58
 80057ee:	9510      	strmi	r5, [sp, #64]	; 0x40
 80057f0:	bf48      	it	mi
 80057f2:	9416      	strmi	r4, [sp, #88]	; 0x58
 80057f4:	f1bb 0f00 	cmp.w	fp, #0
 80057f8:	d175      	bne.n	80058e6 <_svfprintf_r+0x12c6>
 80057fa:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 80057fc:	930d      	str	r3, [sp, #52]	; 0x34
 80057fe:	f8cd b030 	str.w	fp, [sp, #48]	; 0x30
 8005802:	940a      	str	r4, [sp, #40]	; 0x28
 8005804:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8005808:	f7ff b84b 	b.w	80048a2 <_svfprintf_r+0x282>
 800580c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800580e:	aa2b      	add	r2, sp, #172	; 0xac
 8005810:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005812:	f002 fb55 	bl	8007ec0 <__ssprint_r>
 8005816:	2800      	cmp	r0, #0
 8005818:	f47e afe7 	bne.w	80047ea <_svfprintf_r+0x1ca>
 800581c:	9925      	ldr	r1, [sp, #148]	; 0x94
 800581e:	af38      	add	r7, sp, #224	; 0xe0
 8005820:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8005822:	e6e3      	b.n	80055ec <_svfprintf_r+0xfcc>
 8005824:	3301      	adds	r3, #1
 8005826:	9c0f      	ldr	r4, [sp, #60]	; 0x3c
 8005828:	2b07      	cmp	r3, #7
 800582a:	4452      	add	r2, sl
 800582c:	932c      	str	r3, [sp, #176]	; 0xb0
 800582e:	e887 0410 	stmia.w	r7, {r4, sl}
 8005832:	bfd8      	it	le
 8005834:	3708      	addle	r7, #8
 8005836:	922d      	str	r2, [sp, #180]	; 0xb4
 8005838:	dd0a      	ble.n	8005850 <_svfprintf_r+0x1230>
 800583a:	980e      	ldr	r0, [sp, #56]	; 0x38
 800583c:	aa2b      	add	r2, sp, #172	; 0xac
 800583e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005840:	f002 fb3e 	bl	8007ec0 <__ssprint_r>
 8005844:	2800      	cmp	r0, #0
 8005846:	f47e afd0 	bne.w	80047ea <_svfprintf_r+0x1ca>
 800584a:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 800584c:	af38      	add	r7, sp, #224	; 0xe0
 800584e:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 8005850:	3301      	adds	r3, #1
 8005852:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8005854:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8005856:	2b07      	cmp	r3, #7
 8005858:	932c      	str	r3, [sp, #176]	; 0xb0
 800585a:	4414      	add	r4, r2
 800585c:	f8c7 8000 	str.w	r8, [r7]
 8005860:	942d      	str	r4, [sp, #180]	; 0xb4
 8005862:	607d      	str	r5, [r7, #4]
 8005864:	f77f a902 	ble.w	8004a6c <_svfprintf_r+0x44c>
 8005868:	e47a      	b.n	8005160 <_svfprintf_r+0xb40>
 800586a:	950c      	str	r5, [sp, #48]	; 0x30
 800586c:	f002 faf8 	bl	8007e60 <strlen>
 8005870:	9414      	str	r4, [sp, #80]	; 0x50
 8005872:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8005874:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8005878:	9418      	str	r4, [sp, #96]	; 0x60
 800587a:	ea20 75e0 	bic.w	r5, r0, r0, asr #31
 800587e:	9010      	str	r0, [sp, #64]	; 0x40
 8005880:	950d      	str	r5, [sp, #52]	; 0x34
 8005882:	f7ff b80e 	b.w	80048a2 <_svfprintf_r+0x282>
 8005886:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005888:	aa2b      	add	r2, sp, #172	; 0xac
 800588a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 800588c:	f002 fb18 	bl	8007ec0 <__ssprint_r>
 8005890:	2800      	cmp	r0, #0
 8005892:	f47e afaa 	bne.w	80047ea <_svfprintf_r+0x1ca>
 8005896:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 8005898:	af38      	add	r7, sp, #224	; 0xe0
 800589a:	e4b1      	b.n	8005200 <_svfprintf_r+0xbe0>
 800589c:	0800a5d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, sl, sp, pc}
 80058a0:	980e      	ldr	r0, [sp, #56]	; 0x38
 80058a2:	aa2b      	add	r2, sp, #172	; 0xac
 80058a4:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80058a6:	f002 fb0b 	bl	8007ec0 <__ssprint_r>
 80058aa:	2800      	cmp	r0, #0
 80058ac:	f47e af9d 	bne.w	80047ea <_svfprintf_r+0x1ca>
 80058b0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80058b2:	af38      	add	r7, sp, #224	; 0xe0
 80058b4:	9a11      	ldr	r2, [sp, #68]	; 0x44
 80058b6:	9c2d      	ldr	r4, [sp, #180]	; 0xb4
 80058b8:	1ad3      	subs	r3, r2, r3
 80058ba:	e5a7      	b.n	800540c <_svfprintf_r+0xdec>
 80058bc:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 80058be:	46c2      	mov	sl, r8
 80058c0:	f64a 18f0 	movw	r8, #43504	; 0xa9f0
 80058c4:	9414      	str	r4, [sp, #80]	; 0x50
 80058c6:	2d06      	cmp	r5, #6
 80058c8:	bf28      	it	cs
 80058ca:	2506      	movcs	r5, #6
 80058cc:	f8cd a030 	str.w	sl, [sp, #48]	; 0x30
 80058d0:	9510      	str	r5, [sp, #64]	; 0x40
 80058d2:	4654      	mov	r4, sl
 80058d4:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 80058d8:	f8cd a060 	str.w	sl, [sp, #96]	; 0x60
 80058dc:	950d      	str	r5, [sp, #52]	; 0x34
 80058de:	f6c0 0800 	movt	r8, #2048	; 0x800
 80058e2:	f7fe bfde 	b.w	80048a2 <_svfprintf_r+0x282>
 80058e6:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 80058e8:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
 80058ec:	2400      	movs	r4, #0
 80058ee:	930d      	str	r3, [sp, #52]	; 0x34
 80058f0:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
 80058f4:	950a      	str	r5, [sp, #40]	; 0x28
 80058f6:	940c      	str	r4, [sp, #48]	; 0x30
 80058f8:	f7fe bfd6 	b.w	80048a8 <_svfprintf_r+0x288>
 80058fc:	f04f 0a2d 	mov.w	sl, #45	; 0x2d
 8005900:	f88d a08f 	strb.w	sl, [sp, #143]	; 0x8f
 8005904:	f7ff b9b2 	b.w	8004c6c <_svfprintf_r+0x64c>
 8005908:	9b29      	ldr	r3, [sp, #164]	; 0xa4
 800590a:	ebc8 0303 	rsb	r3, r8, r3
 800590e:	9311      	str	r3, [sp, #68]	; 0x44
 8005910:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8005912:	1cda      	adds	r2, r3, #3
 8005914:	db11      	blt.n	800593a <_svfprintf_r+0x131a>
 8005916:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 8005918:	429c      	cmp	r4, r3
 800591a:	db0e      	blt.n	800593a <_svfprintf_r+0x131a>
 800591c:	9318      	str	r3, [sp, #96]	; 0x60
 800591e:	e753      	b.n	80057c8 <_svfprintf_r+0x11a8>
 8005920:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005922:	9414      	str	r4, [sp, #80]	; 0x50
 8005924:	ea25 75e5 	bic.w	r5, r5, r5, asr #31
 8005928:	950d      	str	r5, [sp, #52]	; 0x34
 800592a:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 800592c:	9018      	str	r0, [sp, #96]	; 0x60
 800592e:	900c      	str	r0, [sp, #48]	; 0x30
 8005930:	9510      	str	r5, [sp, #64]	; 0x40
 8005932:	f89d a08f 	ldrb.w	sl, [sp, #143]	; 0x8f
 8005936:	f7fe bfb4 	b.w	80048a2 <_svfprintf_r+0x282>
 800593a:	9d16      	ldr	r5, [sp, #88]	; 0x58
 800593c:	3d02      	subs	r5, #2
 800593e:	9516      	str	r5, [sp, #88]	; 0x58
 8005940:	3b01      	subs	r3, #1
 8005942:	9d16      	ldr	r5, [sp, #88]	; 0x58
 8005944:	2b00      	cmp	r3, #0
 8005946:	9325      	str	r3, [sp, #148]	; 0x94
 8005948:	bfba      	itte	lt
 800594a:	425b      	neglt	r3, r3
 800594c:	222d      	movlt	r2, #45	; 0x2d
 800594e:	222b      	movge	r2, #43	; 0x2b
 8005950:	2b09      	cmp	r3, #9
 8005952:	f88d 509c 	strb.w	r5, [sp, #156]	; 0x9c
 8005956:	f88d 209d 	strb.w	r2, [sp, #157]	; 0x9d
 800595a:	dc43      	bgt.n	80059e4 <_svfprintf_r+0x13c4>
 800595c:	3330      	adds	r3, #48	; 0x30
 800595e:	f88d 309f 	strb.w	r3, [sp, #159]	; 0x9f
 8005962:	2330      	movs	r3, #48	; 0x30
 8005964:	f88d 309e 	strb.w	r3, [sp, #158]	; 0x9e
 8005968:	ab28      	add	r3, sp, #160	; 0xa0
 800596a:	9d11      	ldr	r5, [sp, #68]	; 0x44
 800596c:	aa27      	add	r2, sp, #156	; 0x9c
 800596e:	9c11      	ldr	r4, [sp, #68]	; 0x44
 8005970:	1a9a      	subs	r2, r3, r2
 8005972:	2d01      	cmp	r5, #1
 8005974:	921e      	str	r2, [sp, #120]	; 0x78
 8005976:	4414      	add	r4, r2
 8005978:	9410      	str	r4, [sp, #64]	; 0x40
 800597a:	dd78      	ble.n	8005a6e <_svfprintf_r+0x144e>
 800597c:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800597e:	2400      	movs	r4, #0
 8005980:	9418      	str	r4, [sp, #96]	; 0x60
 8005982:	3301      	adds	r3, #1
 8005984:	9310      	str	r3, [sp, #64]	; 0x40
 8005986:	ea23 73e3 	bic.w	r3, r3, r3, asr #31
 800598a:	e733      	b.n	80057f4 <_svfprintf_r+0x11d4>
 800598c:	980e      	ldr	r0, [sp, #56]	; 0x38
 800598e:	aa2b      	add	r2, sp, #172	; 0xac
 8005990:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005992:	f002 fa95 	bl	8007ec0 <__ssprint_r>
 8005996:	2800      	cmp	r0, #0
 8005998:	f47e af27 	bne.w	80047ea <_svfprintf_r+0x1ca>
 800599c:	9925      	ldr	r1, [sp, #148]	; 0x94
 800599e:	af38      	add	r7, sp, #224	; 0xe0
 80059a0:	9a2d      	ldr	r2, [sp, #180]	; 0xb4
 80059a2:	9b2c      	ldr	r3, [sp, #176]	; 0xb0
 80059a4:	e638      	b.n	8005618 <_svfprintf_r+0xff8>
 80059a6:	9d18      	ldr	r5, [sp, #96]	; 0x60
 80059a8:	9c11      	ldr	r4, [sp, #68]	; 0x44
 80059aa:	2d00      	cmp	r5, #0
 80059ac:	bfd4      	ite	le
 80059ae:	f1c5 0302 	rsble	r3, r5, #2
 80059b2:	2301      	movgt	r3, #1
 80059b4:	441c      	add	r4, r3
 80059b6:	2567      	movs	r5, #103	; 0x67
 80059b8:	9410      	str	r4, [sp, #64]	; 0x40
 80059ba:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 80059be:	9516      	str	r5, [sp, #88]	; 0x58
 80059c0:	e718      	b.n	80057f4 <_svfprintf_r+0x11d4>
 80059c2:	2002      	movs	r0, #2
 80059c4:	e699      	b.n	80056fa <_svfprintf_r+0x10da>
 80059c6:	9d25      	ldr	r5, [sp, #148]	; 0x94
 80059c8:	2d00      	cmp	r5, #0
 80059ca:	9518      	str	r5, [sp, #96]	; 0x60
 80059cc:	dd58      	ble.n	8005a80 <_svfprintf_r+0x1460>
 80059ce:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 80059d0:	2c00      	cmp	r4, #0
 80059d2:	d144      	bne.n	8005a5e <_svfprintf_r+0x143e>
 80059d4:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 80059d6:	07ed      	lsls	r5, r5, #31
 80059d8:	d441      	bmi.n	8005a5e <_svfprintf_r+0x143e>
 80059da:	9c18      	ldr	r4, [sp, #96]	; 0x60
 80059dc:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 80059e0:	9410      	str	r4, [sp, #64]	; 0x40
 80059e2:	e707      	b.n	80057f4 <_svfprintf_r+0x11d4>
 80059e4:	f246 6167 	movw	r1, #26215	; 0x6667
 80059e8:	f10d 05aa 	add.w	r5, sp, #170	; 0xaa
 80059ec:	f2c6 6166 	movt	r1, #26214	; 0x6666
 80059f0:	fb81 2003 	smull	r2, r0, r1, r3
 80059f4:	17da      	asrs	r2, r3, #31
 80059f6:	462c      	mov	r4, r5
 80059f8:	3d01      	subs	r5, #1
 80059fa:	ebc2 02a0 	rsb	r2, r2, r0, asr #2
 80059fe:	eb02 0082 	add.w	r0, r2, r2, lsl #2
 8005a02:	eba3 0040 	sub.w	r0, r3, r0, lsl #1
 8005a06:	4613      	mov	r3, r2
 8005a08:	2b09      	cmp	r3, #9
 8005a0a:	f100 0230 	add.w	r2, r0, #48	; 0x30
 8005a0e:	7022      	strb	r2, [r4, #0]
 8005a10:	dcee      	bgt.n	80059f0 <_svfprintf_r+0x13d0>
 8005a12:	f10d 00ab 	add.w	r0, sp, #171	; 0xab
 8005a16:	3330      	adds	r3, #48	; 0x30
 8005a18:	42a8      	cmp	r0, r5
 8005a1a:	b2da      	uxtb	r2, r3
 8005a1c:	f804 2c01 	strb.w	r2, [r4, #-1]
 8005a20:	d953      	bls.n	8005aca <_svfprintf_r+0x14aa>
 8005a22:	f10d 019d 	add.w	r1, sp, #157	; 0x9d
 8005a26:	4623      	mov	r3, r4
 8005a28:	e001      	b.n	8005a2e <_svfprintf_r+0x140e>
 8005a2a:	f813 2b01 	ldrb.w	r2, [r3], #1
 8005a2e:	4283      	cmp	r3, r0
 8005a30:	f801 2f01 	strb.w	r2, [r1, #1]!
 8005a34:	d1f9      	bne.n	8005a2a <_svfprintf_r+0x140a>
 8005a36:	ad48      	add	r5, sp, #288	; 0x120
 8005a38:	ebc4 0345 	rsb	r3, r4, r5, lsl #1
 8005a3c:	3bf6      	subs	r3, #246	; 0xf6
 8005a3e:	e794      	b.n	800596a <_svfprintf_r+0x134a>
 8005a40:	981b      	ldr	r0, [sp, #108]	; 0x6c
 8005a42:	2200      	movs	r2, #0
 8005a44:	2300      	movs	r3, #0
 8005a46:	4651      	mov	r1, sl
 8005a48:	f004 f9b0 	bl	8009dac <__aeabi_dcmpeq>
 8005a4c:	2800      	cmp	r0, #0
 8005a4e:	f47f ae73 	bne.w	8005738 <_svfprintf_r+0x1118>
 8005a52:	980c      	ldr	r0, [sp, #48]	; 0x30
 8005a54:	f1c0 0301 	rsb	r3, r0, #1
 8005a58:	9325      	str	r3, [sp, #148]	; 0x94
 8005a5a:	441c      	add	r4, r3
 8005a5c:	e692      	b.n	8005784 <_svfprintf_r+0x1164>
 8005a5e:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005a60:	9c18      	ldr	r4, [sp, #96]	; 0x60
 8005a62:	1c6b      	adds	r3, r5, #1
 8005a64:	441c      	add	r4, r3
 8005a66:	9410      	str	r4, [sp, #64]	; 0x40
 8005a68:	ea24 73e4 	bic.w	r3, r4, r4, asr #31
 8005a6c:	e6c2      	b.n	80057f4 <_svfprintf_r+0x11d4>
 8005a6e:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005a70:	f014 0301 	ands.w	r3, r4, #1
 8005a74:	d182      	bne.n	800597c <_svfprintf_r+0x135c>
 8005a76:	9d10      	ldr	r5, [sp, #64]	; 0x40
 8005a78:	9318      	str	r3, [sp, #96]	; 0x60
 8005a7a:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
 8005a7e:	e6b9      	b.n	80057f4 <_svfprintf_r+0x11d4>
 8005a80:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005a82:	b935      	cbnz	r5, 8005a92 <_svfprintf_r+0x1472>
 8005a84:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8005a86:	07e4      	lsls	r4, r4, #31
 8005a88:	bf5c      	itt	pl
 8005a8a:	2301      	movpl	r3, #1
 8005a8c:	9310      	strpl	r3, [sp, #64]	; 0x40
 8005a8e:	f57f aeb1 	bpl.w	80057f4 <_svfprintf_r+0x11d4>
 8005a92:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005a94:	3502      	adds	r5, #2
 8005a96:	9510      	str	r5, [sp, #64]	; 0x40
 8005a98:	ea25 73e5 	bic.w	r3, r5, r5, asr #31
 8005a9c:	e6aa      	b.n	80057f4 <_svfprintf_r+0x11d4>
 8005a9e:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8005aa0:	f899 3001 	ldrb.w	r3, [r9, #1]
 8005aa4:	46a1      	mov	r9, r4
 8005aa6:	682d      	ldr	r5, [r5, #0]
 8005aa8:	950c      	str	r5, [sp, #48]	; 0x30
 8005aaa:	9d14      	ldr	r5, [sp, #80]	; 0x50
 8005aac:	1d29      	adds	r1, r5, #4
 8005aae:	9d0c      	ldr	r5, [sp, #48]	; 0x30
 8005ab0:	9114      	str	r1, [sp, #80]	; 0x50
 8005ab2:	2d00      	cmp	r5, #0
 8005ab4:	f6be ae1d 	bge.w	80046f2 <_svfprintf_r+0xd2>
 8005ab8:	f7fe be18 	b.w	80046ec <_svfprintf_r+0xcc>
 8005abc:	9d0e      	ldr	r5, [sp, #56]	; 0x38
 8005abe:	230c      	movs	r3, #12
 8005ac0:	f04f 30ff 	mov.w	r0, #4294967295
 8005ac4:	602b      	str	r3, [r5, #0]
 8005ac6:	f7fe be98 	b.w	80047fa <_svfprintf_r+0x1da>
 8005aca:	f10d 039e 	add.w	r3, sp, #158	; 0x9e
 8005ace:	e74c      	b.n	800596a <_svfprintf_r+0x134a>
 8005ad0:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8005ad2:	e735      	b.n	8005940 <_svfprintf_r+0x1320>
 8005ad4:	0000      	movs	r0, r0
	...

08005ad8 <quorem>:
 8005ad8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005adc:	468c      	mov	ip, r1
 8005ade:	6903      	ldr	r3, [r0, #16]
 8005ae0:	4683      	mov	fp, r0
 8005ae2:	690d      	ldr	r5, [r1, #16]
 8005ae4:	b085      	sub	sp, #20
 8005ae6:	429d      	cmp	r5, r3
 8005ae8:	bfc8      	it	gt
 8005aea:	2000      	movgt	r0, #0
 8005aec:	f300 8096 	bgt.w	8005c1c <quorem+0x144>
 8005af0:	3d01      	subs	r5, #1
 8005af2:	f101 0414 	add.w	r4, r1, #20
 8005af6:	f10b 0a14 	add.w	sl, fp, #20
 8005afa:	f854 1025 	ldr.w	r1, [r4, r5, lsl #2]
 8005afe:	00aa      	lsls	r2, r5, #2
 8005b00:	f85a 0025 	ldr.w	r0, [sl, r5, lsl #2]
 8005b04:	4691      	mov	r9, r2
 8005b06:	3101      	adds	r1, #1
 8005b08:	9202      	str	r2, [sp, #8]
 8005b0a:	f8cd c004 	str.w	ip, [sp, #4]
 8005b0e:	4452      	add	r2, sl
 8005b10:	9203      	str	r2, [sp, #12]
 8005b12:	f003 fbed 	bl	80092f0 <__aeabi_uidiv>
 8005b16:	44a1      	add	r9, r4
 8005b18:	f8dd c004 	ldr.w	ip, [sp, #4]
 8005b1c:	4680      	mov	r8, r0
 8005b1e:	2800      	cmp	r0, #0
 8005b20:	d041      	beq.n	8005ba6 <quorem+0xce>
 8005b22:	2100      	movs	r1, #0
 8005b24:	4622      	mov	r2, r4
 8005b26:	4608      	mov	r0, r1
 8005b28:	4653      	mov	r3, sl
 8005b2a:	460f      	mov	r7, r1
 8005b2c:	f852 1b04 	ldr.w	r1, [r2], #4
 8005b30:	681e      	ldr	r6, [r3, #0]
 8005b32:	4591      	cmp	r9, r2
 8005b34:	fa1f fe81 	uxth.w	lr, r1
 8005b38:	ea4f 4111 	mov.w	r1, r1, lsr #16
 8005b3c:	fb0e 7708 	mla	r7, lr, r8, r7
 8005b40:	fa1f fe86 	uxth.w	lr, r6
 8005b44:	fb01 f108 	mul.w	r1, r1, r8
 8005b48:	eb01 4117 	add.w	r1, r1, r7, lsr #16
 8005b4c:	b2bf      	uxth	r7, r7
 8005b4e:	ebc7 0000 	rsb	r0, r7, r0
 8005b52:	4486      	add	lr, r0
 8005b54:	b288      	uxth	r0, r1
 8005b56:	ebc0 4016 	rsb	r0, r0, r6, lsr #16
 8005b5a:	ea4f 4711 	mov.w	r7, r1, lsr #16
 8005b5e:	eb00 402e 	add.w	r0, r0, lr, asr #16
 8005b62:	fa1f fe8e 	uxth.w	lr, lr
 8005b66:	ea4e 4100 	orr.w	r1, lr, r0, lsl #16
 8005b6a:	ea4f 4020 	mov.w	r0, r0, asr #16
 8005b6e:	f843 1b04 	str.w	r1, [r3], #4
 8005b72:	d2db      	bcs.n	8005b2c <quorem+0x54>
 8005b74:	9a02      	ldr	r2, [sp, #8]
 8005b76:	f85a 3002 	ldr.w	r3, [sl, r2]
 8005b7a:	b9a3      	cbnz	r3, 8005ba6 <quorem+0xce>
 8005b7c:	9a03      	ldr	r2, [sp, #12]
 8005b7e:	1f13      	subs	r3, r2, #4
 8005b80:	459a      	cmp	sl, r3
 8005b82:	d20e      	bcs.n	8005ba2 <quorem+0xca>
 8005b84:	f852 3c04 	ldr.w	r3, [r2, #-4]
 8005b88:	b95b      	cbnz	r3, 8005ba2 <quorem+0xca>
 8005b8a:	f1a2 0308 	sub.w	r3, r2, #8
 8005b8e:	e001      	b.n	8005b94 <quorem+0xbc>
 8005b90:	6812      	ldr	r2, [r2, #0]
 8005b92:	b932      	cbnz	r2, 8005ba2 <quorem+0xca>
 8005b94:	459a      	cmp	sl, r3
 8005b96:	461a      	mov	r2, r3
 8005b98:	f105 35ff 	add.w	r5, r5, #4294967295
 8005b9c:	f1a3 0304 	sub.w	r3, r3, #4
 8005ba0:	d3f6      	bcc.n	8005b90 <quorem+0xb8>
 8005ba2:	f8cb 5010 	str.w	r5, [fp, #16]
 8005ba6:	4661      	mov	r1, ip
 8005ba8:	4658      	mov	r0, fp
 8005baa:	f001 fdf3 	bl	8007794 <__mcmp>
 8005bae:	2800      	cmp	r0, #0
 8005bb0:	db33      	blt.n	8005c1a <quorem+0x142>
 8005bb2:	f108 0801 	add.w	r8, r8, #1
 8005bb6:	4653      	mov	r3, sl
 8005bb8:	2200      	movs	r2, #0
 8005bba:	f854 6b04 	ldr.w	r6, [r4], #4
 8005bbe:	6818      	ldr	r0, [r3, #0]
 8005bc0:	45a1      	cmp	r9, r4
 8005bc2:	b2b1      	uxth	r1, r6
 8005bc4:	ea4f 4616 	mov.w	r6, r6, lsr #16
 8005bc8:	ebc1 0202 	rsb	r2, r1, r2
 8005bcc:	b287      	uxth	r7, r0
 8005bce:	eb02 0107 	add.w	r1, r2, r7
 8005bd2:	ebc6 4210 	rsb	r2, r6, r0, lsr #16
 8005bd6:	eb02 4221 	add.w	r2, r2, r1, asr #16
 8005bda:	b289      	uxth	r1, r1
 8005bdc:	ea41 4102 	orr.w	r1, r1, r2, lsl #16
 8005be0:	ea4f 4222 	mov.w	r2, r2, asr #16
 8005be4:	f843 1b04 	str.w	r1, [r3], #4
 8005be8:	d2e7      	bcs.n	8005bba <quorem+0xe2>
 8005bea:	f85a 2025 	ldr.w	r2, [sl, r5, lsl #2]
 8005bee:	eb0a 0385 	add.w	r3, sl, r5, lsl #2
 8005bf2:	b992      	cbnz	r2, 8005c1a <quorem+0x142>
 8005bf4:	1f1a      	subs	r2, r3, #4
 8005bf6:	4592      	cmp	sl, r2
 8005bf8:	d20d      	bcs.n	8005c16 <quorem+0x13e>
 8005bfa:	f853 2c04 	ldr.w	r2, [r3, #-4]
 8005bfe:	b952      	cbnz	r2, 8005c16 <quorem+0x13e>
 8005c00:	3b08      	subs	r3, #8
 8005c02:	e001      	b.n	8005c08 <quorem+0x130>
 8005c04:	6812      	ldr	r2, [r2, #0]
 8005c06:	b932      	cbnz	r2, 8005c16 <quorem+0x13e>
 8005c08:	459a      	cmp	sl, r3
 8005c0a:	461a      	mov	r2, r3
 8005c0c:	f105 35ff 	add.w	r5, r5, #4294967295
 8005c10:	f1a3 0304 	sub.w	r3, r3, #4
 8005c14:	d3f6      	bcc.n	8005c04 <quorem+0x12c>
 8005c16:	f8cb 5010 	str.w	r5, [fp, #16]
 8005c1a:	4640      	mov	r0, r8
 8005c1c:	b005      	add	sp, #20
 8005c1e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005c22:	bf00      	nop

08005c24 <_dtoa_r>:
 8005c24:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8005c28:	b09b      	sub	sp, #108	; 0x6c
 8005c2a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 8005c2c:	4604      	mov	r4, r0
 8005c2e:	4692      	mov	sl, r2
 8005c30:	469b      	mov	fp, r3
 8005c32:	9d27      	ldr	r5, [sp, #156]	; 0x9c
 8005c34:	2e00      	cmp	r6, #0
 8005c36:	f000 82bb 	beq.w	80061b0 <_dtoa_r+0x58c>
 8005c3a:	6833      	ldr	r3, [r6, #0]
 8005c3c:	b153      	cbz	r3, 8005c54 <_dtoa_r+0x30>
 8005c3e:	6872      	ldr	r2, [r6, #4]
 8005c40:	2601      	movs	r6, #1
 8005c42:	4619      	mov	r1, r3
 8005c44:	4096      	lsls	r6, r2
 8005c46:	609e      	str	r6, [r3, #8]
 8005c48:	605a      	str	r2, [r3, #4]
 8005c4a:	f001 fb49 	bl	80072e0 <_Bfree>
 8005c4e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005c50:	2200      	movs	r2, #0
 8005c52:	601a      	str	r2, [r3, #0]
 8005c54:	f1bb 0f00 	cmp.w	fp, #0
 8005c58:	bfb4      	ite	lt
 8005c5a:	2301      	movlt	r3, #1
 8005c5c:	2300      	movge	r3, #0
 8005c5e:	602b      	str	r3, [r5, #0]
 8005c60:	f04f 0300 	mov.w	r3, #0
 8005c64:	bfb4      	ite	lt
 8005c66:	f02b 4900 	biclt.w	r9, fp, #2147483648	; 0x80000000
 8005c6a:	46d9      	movge	r9, fp
 8005c6c:	461a      	mov	r2, r3
 8005c6e:	f6c7 73f0 	movt	r3, #32752	; 0x7ff0
 8005c72:	f6c7 72f0 	movt	r2, #32752	; 0x7ff0
 8005c76:	ea09 0303 	and.w	r3, r9, r3
 8005c7a:	bfb8      	it	lt
 8005c7c:	46cb      	movlt	fp, r9
 8005c7e:	4293      	cmp	r3, r2
 8005c80:	d014      	beq.n	8005cac <_dtoa_r+0x88>
 8005c82:	2200      	movs	r2, #0
 8005c84:	2300      	movs	r3, #0
 8005c86:	4650      	mov	r0, sl
 8005c88:	4659      	mov	r1, fp
 8005c8a:	f004 f88f 	bl	8009dac <__aeabi_dcmpeq>
 8005c8e:	4680      	mov	r8, r0
 8005c90:	b328      	cbz	r0, 8005cde <_dtoa_r+0xba>
 8005c92:	9e26      	ldr	r6, [sp, #152]	; 0x98
 8005c94:	2301      	movs	r3, #1
 8005c96:	6033      	str	r3, [r6, #0]
 8005c98:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8005c9a:	2e00      	cmp	r6, #0
 8005c9c:	f000 80dc 	beq.w	8005e58 <_dtoa_r+0x234>
 8005ca0:	4baf      	ldr	r3, [pc, #700]	; (8005f60 <_dtoa_r+0x33c>)
 8005ca2:	1e58      	subs	r0, r3, #1
 8005ca4:	6033      	str	r3, [r6, #0]
 8005ca6:	b01b      	add	sp, #108	; 0x6c
 8005ca8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005cac:	9e26      	ldr	r6, [sp, #152]	; 0x98
 8005cae:	f64a 2008 	movw	r0, #43528	; 0xaa08
 8005cb2:	f242 730f 	movw	r3, #9999	; 0x270f
 8005cb6:	f6c0 0000 	movt	r0, #2048	; 0x800
 8005cba:	6033      	str	r3, [r6, #0]
 8005cbc:	f1ba 0f00 	cmp.w	sl, #0
 8005cc0:	f000 80aa 	beq.w	8005e18 <_dtoa_r+0x1f4>
 8005cc4:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8005cc6:	2e00      	cmp	r6, #0
 8005cc8:	d0ed      	beq.n	8005ca6 <_dtoa_r+0x82>
 8005cca:	78c3      	ldrb	r3, [r0, #3]
 8005ccc:	2b00      	cmp	r3, #0
 8005cce:	f040 80b2 	bne.w	8005e36 <_dtoa_r+0x212>
 8005cd2:	1cc3      	adds	r3, r0, #3
 8005cd4:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 8005cd6:	6033      	str	r3, [r6, #0]
 8005cd8:	b01b      	add	sp, #108	; 0x6c
 8005cda:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8005cde:	aa19      	add	r2, sp, #100	; 0x64
 8005ce0:	ab18      	add	r3, sp, #96	; 0x60
 8005ce2:	9200      	str	r2, [sp, #0]
 8005ce4:	4620      	mov	r0, r4
 8005ce6:	9301      	str	r3, [sp, #4]
 8005ce8:	4652      	mov	r2, sl
 8005cea:	465b      	mov	r3, fp
 8005cec:	f001 fe62 	bl	80079b4 <__d2b>
 8005cf0:	ea5f 5519 	movs.w	r5, r9, lsr #20
 8005cf4:	900b      	str	r0, [sp, #44]	; 0x2c
 8005cf6:	f040 80a1 	bne.w	8005e3c <_dtoa_r+0x218>
 8005cfa:	9f18      	ldr	r7, [sp, #96]	; 0x60
 8005cfc:	f46f 6382 	mvn.w	r3, #1040	; 0x410
 8005d00:	9d19      	ldr	r5, [sp, #100]	; 0x64
 8005d02:	443d      	add	r5, r7
 8005d04:	429d      	cmp	r5, r3
 8005d06:	f2c0 8278 	blt.w	80061fa <_dtoa_r+0x5d6>
 8005d0a:	f64f 430e 	movw	r3, #64526	; 0xfc0e
 8005d0e:	f205 4212 	addw	r2, r5, #1042	; 0x412
 8005d12:	f6cf 73ff 	movt	r3, #65535	; 0xffff
 8005d16:	fa2a f202 	lsr.w	r2, sl, r2
 8005d1a:	1b5b      	subs	r3, r3, r5
 8005d1c:	fa09 f003 	lsl.w	r0, r9, r3
 8005d20:	4310      	orrs	r0, r2
 8005d22:	f003 fd65 	bl	80097f0 <__aeabi_ui2d>
 8005d26:	3d01      	subs	r5, #1
 8005d28:	46b8      	mov	r8, r7
 8005d2a:	2601      	movs	r6, #1
 8005d2c:	9615      	str	r6, [sp, #84]	; 0x54
 8005d2e:	f1a1 71f8 	sub.w	r1, r1, #32505856	; 0x1f00000
 8005d32:	2300      	movs	r3, #0
 8005d34:	2200      	movs	r2, #0
 8005d36:	f6c3 73f8 	movt	r3, #16376	; 0x3ff8
 8005d3a:	f003 fc1b 	bl	8009574 <__aeabi_dsub>
 8005d3e:	a382      	add	r3, pc, #520	; (adr r3, 8005f48 <_dtoa_r+0x324>)
 8005d40:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d44:	f003 fdca 	bl	80098dc <__aeabi_dmul>
 8005d48:	a381      	add	r3, pc, #516	; (adr r3, 8005f50 <_dtoa_r+0x32c>)
 8005d4a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d4e:	f003 fc13 	bl	8009578 <__adddf3>
 8005d52:	4606      	mov	r6, r0
 8005d54:	4628      	mov	r0, r5
 8005d56:	460f      	mov	r7, r1
 8005d58:	f003 fd5a 	bl	8009810 <__aeabi_i2d>
 8005d5c:	a37e      	add	r3, pc, #504	; (adr r3, 8005f58 <_dtoa_r+0x334>)
 8005d5e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8005d62:	f003 fdbb 	bl	80098dc <__aeabi_dmul>
 8005d66:	4602      	mov	r2, r0
 8005d68:	460b      	mov	r3, r1
 8005d6a:	4630      	mov	r0, r6
 8005d6c:	4639      	mov	r1, r7
 8005d6e:	f003 fc03 	bl	8009578 <__adddf3>
 8005d72:	4606      	mov	r6, r0
 8005d74:	460f      	mov	r7, r1
 8005d76:	f004 f84b 	bl	8009e10 <__aeabi_d2iz>
 8005d7a:	4639      	mov	r1, r7
 8005d7c:	2200      	movs	r2, #0
 8005d7e:	2300      	movs	r3, #0
 8005d80:	9004      	str	r0, [sp, #16]
 8005d82:	4630      	mov	r0, r6
 8005d84:	f004 f81c 	bl	8009dc0 <__aeabi_dcmplt>
 8005d88:	2800      	cmp	r0, #0
 8005d8a:	f040 8226 	bne.w	80061da <_dtoa_r+0x5b6>
 8005d8e:	9e04      	ldr	r6, [sp, #16]
 8005d90:	2e16      	cmp	r6, #22
 8005d92:	bf84      	itt	hi
 8005d94:	2601      	movhi	r6, #1
 8005d96:	960f      	strhi	r6, [sp, #60]	; 0x3c
 8005d98:	d812      	bhi.n	8005dc0 <_dtoa_r+0x19c>
 8005d9a:	f24a 51f8 	movw	r1, #42488	; 0xa5f8
 8005d9e:	4652      	mov	r2, sl
 8005da0:	f6c0 0100 	movt	r1, #2048	; 0x800
 8005da4:	465b      	mov	r3, fp
 8005da6:	eb01 01c6 	add.w	r1, r1, r6, lsl #3
 8005daa:	e9d1 0100 	ldrd	r0, r1, [r1]
 8005dae:	f004 f825 	bl	8009dfc <__aeabi_dcmpgt>
 8005db2:	2800      	cmp	r0, #0
 8005db4:	f000 821f 	beq.w	80061f6 <_dtoa_r+0x5d2>
 8005db8:	3e01      	subs	r6, #1
 8005dba:	9604      	str	r6, [sp, #16]
 8005dbc:	2600      	movs	r6, #0
 8005dbe:	960f      	str	r6, [sp, #60]	; 0x3c
 8005dc0:	ebc5 0508 	rsb	r5, r5, r8
 8005dc4:	3d01      	subs	r5, #1
 8005dc6:	9506      	str	r5, [sp, #24]
 8005dc8:	bf49      	itett	mi
 8005dca:	426e      	negmi	r6, r5
 8005dcc:	2600      	movpl	r6, #0
 8005dce:	960a      	strmi	r6, [sp, #40]	; 0x28
 8005dd0:	2600      	movmi	r6, #0
 8005dd2:	bf54      	ite	pl
 8005dd4:	960a      	strpl	r6, [sp, #40]	; 0x28
 8005dd6:	9606      	strmi	r6, [sp, #24]
 8005dd8:	9e04      	ldr	r6, [sp, #16]
 8005dda:	2e00      	cmp	r6, #0
 8005ddc:	f2c0 81f1 	blt.w	80061c2 <_dtoa_r+0x59e>
 8005de0:	f8dd e018 	ldr.w	lr, [sp, #24]
 8005de4:	960e      	str	r6, [sp, #56]	; 0x38
 8005de6:	44b6      	add	lr, r6
 8005de8:	2600      	movs	r6, #0
 8005dea:	f8cd e018 	str.w	lr, [sp, #24]
 8005dee:	960c      	str	r6, [sp, #48]	; 0x30
 8005df0:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8005df2:	2e09      	cmp	r6, #9
 8005df4:	d835      	bhi.n	8005e62 <_dtoa_r+0x23e>
 8005df6:	2e05      	cmp	r6, #5
 8005df8:	bfc4      	itt	gt
 8005dfa:	3e04      	subgt	r6, #4
 8005dfc:	9624      	strgt	r6, [sp, #144]	; 0x90
 8005dfe:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8005e00:	bfcc      	ite	gt
 8005e02:	2500      	movgt	r5, #0
 8005e04:	2501      	movle	r5, #1
 8005e06:	1eb3      	subs	r3, r6, #2
 8005e08:	2b03      	cmp	r3, #3
 8005e0a:	d82c      	bhi.n	8005e66 <_dtoa_r+0x242>
 8005e0c:	e8df f013 	tbh	[pc, r3, lsl #1]
 8005e10:	02290361 	eoreq	r0, r9, #-2080374783	; 0x84000001
 8005e14:	058d0370 	streq	r0, [sp, #880]	; 0x370
 8005e18:	f64a 12fc 	movw	r2, #43516	; 0xa9fc
 8005e1c:	f64a 2308 	movw	r3, #43528	; 0xaa08
 8005e20:	f3c9 0013 	ubfx	r0, r9, #0, #20
 8005e24:	f6c0 0200 	movt	r2, #2048	; 0x800
 8005e28:	f6c0 0300 	movt	r3, #2048	; 0x800
 8005e2c:	2800      	cmp	r0, #0
 8005e2e:	bf0c      	ite	eq
 8005e30:	4610      	moveq	r0, r2
 8005e32:	4618      	movne	r0, r3
 8005e34:	e746      	b.n	8005cc4 <_dtoa_r+0xa0>
 8005e36:	f100 0308 	add.w	r3, r0, #8
 8005e3a:	e74b      	b.n	8005cd4 <_dtoa_r+0xb0>
 8005e3c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8005e40:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
 8005e44:	f043 537f 	orr.w	r3, r3, #1069547520	; 0x3fc00000
 8005e48:	4650      	mov	r0, sl
 8005e4a:	f2a5 35ff 	subw	r5, r5, #1023	; 0x3ff
 8005e4e:	f8dd 8060 	ldr.w	r8, [sp, #96]	; 0x60
 8005e52:	f443 1140 	orr.w	r1, r3, #3145728	; 0x300000
 8005e56:	e76c      	b.n	8005d32 <_dtoa_r+0x10e>
 8005e58:	f64a 10f8 	movw	r0, #43512	; 0xa9f8
 8005e5c:	f6c0 0000 	movt	r0, #2048	; 0x800
 8005e60:	e721      	b.n	8005ca6 <_dtoa_r+0x82>
 8005e62:	2600      	movs	r6, #0
 8005e64:	9624      	str	r6, [sp, #144]	; 0x90
 8005e66:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8005e68:	2300      	movs	r3, #0
 8005e6a:	4619      	mov	r1, r3
 8005e6c:	4620      	mov	r0, r4
 8005e6e:	f04f 36ff 	mov.w	r6, #4294967295
 8005e72:	9325      	str	r3, [sp, #148]	; 0x94
 8005e74:	606b      	str	r3, [r5, #4]
 8005e76:	9609      	str	r6, [sp, #36]	; 0x24
 8005e78:	9614      	str	r6, [sp, #80]	; 0x50
 8005e7a:	f001 f9fb 	bl	8007274 <_Balloc>
 8005e7e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8005e80:	2601      	movs	r6, #1
 8005e82:	960d      	str	r6, [sp, #52]	; 0x34
 8005e84:	6028      	str	r0, [r5, #0]
 8005e86:	681b      	ldr	r3, [r3, #0]
 8005e88:	9308      	str	r3, [sp, #32]
 8005e8a:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8005e8c:	2b00      	cmp	r3, #0
 8005e8e:	f2c0 80c7 	blt.w	8006020 <_dtoa_r+0x3fc>
 8005e92:	9e04      	ldr	r6, [sp, #16]
 8005e94:	2e0e      	cmp	r6, #14
 8005e96:	f300 80c3 	bgt.w	8006020 <_dtoa_r+0x3fc>
 8005e9a:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
 8005e9e:	f24a 53f8 	movw	r3, #42488	; 0xa5f8
 8005ea2:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8005ea4:	f6c0 0300 	movt	r3, #2048	; 0x800
 8005ea8:	ea4f 72de 	mov.w	r2, lr, lsr #31
 8005eac:	2e00      	cmp	r6, #0
 8005eae:	bfcc      	ite	gt
 8005eb0:	2200      	movgt	r2, #0
 8005eb2:	f002 0201 	andle.w	r2, r2, #1
 8005eb6:	9e04      	ldr	r6, [sp, #16]
 8005eb8:	eb03 03c6 	add.w	r3, r3, r6, lsl #3
 8005ebc:	e9d3 0100 	ldrd	r0, r1, [r3]
 8005ec0:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8005ec4:	2a00      	cmp	r2, #0
 8005ec6:	f040 846e 	bne.w	80067a6 <_dtoa_r+0xb82>
 8005eca:	4602      	mov	r2, r0
 8005ecc:	460b      	mov	r3, r1
 8005ece:	4650      	mov	r0, sl
 8005ed0:	4659      	mov	r1, fp
 8005ed2:	f003 fe2d 	bl	8009b30 <__aeabi_ddiv>
 8005ed6:	9e08      	ldr	r6, [sp, #32]
 8005ed8:	f003 ff9a 	bl	8009e10 <__aeabi_d2iz>
 8005edc:	1c75      	adds	r5, r6, #1
 8005ede:	4680      	mov	r8, r0
 8005ee0:	f003 fc96 	bl	8009810 <__aeabi_i2d>
 8005ee4:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8005ee8:	f003 fcf8 	bl	80098dc <__aeabi_dmul>
 8005eec:	4602      	mov	r2, r0
 8005eee:	460b      	mov	r3, r1
 8005ef0:	4650      	mov	r0, sl
 8005ef2:	4659      	mov	r1, fp
 8005ef4:	f003 fb3e 	bl	8009574 <__aeabi_dsub>
 8005ef8:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8005efa:	f8dd e020 	ldr.w	lr, [sp, #32]
 8005efe:	f108 0330 	add.w	r3, r8, #48	; 0x30
 8005f02:	2a01      	cmp	r2, #1
 8005f04:	f88e 3000 	strb.w	r3, [lr]
 8005f08:	4606      	mov	r6, r0
 8005f0a:	460f      	mov	r7, r1
 8005f0c:	d05b      	beq.n	8005fc6 <_dtoa_r+0x3a2>
 8005f0e:	2300      	movs	r3, #0
 8005f10:	2200      	movs	r2, #0
 8005f12:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8005f16:	f003 fce1 	bl	80098dc <__aeabi_dmul>
 8005f1a:	2200      	movs	r2, #0
 8005f1c:	2300      	movs	r3, #0
 8005f1e:	4606      	mov	r6, r0
 8005f20:	460f      	mov	r7, r1
 8005f22:	f003 ff43 	bl	8009dac <__aeabi_dcmpeq>
 8005f26:	2800      	cmp	r0, #0
 8005f28:	f040 8519 	bne.w	800695e <_dtoa_r+0xd3a>
 8005f2c:	f8dd a020 	ldr.w	sl, [sp, #32]
 8005f30:	9809      	ldr	r0, [sp, #36]	; 0x24
 8005f32:	9908      	ldr	r1, [sp, #32]
 8005f34:	4482      	add	sl, r0
 8005f36:	f8cd a00c 	str.w	sl, [sp, #12]
 8005f3a:	f101 0902 	add.w	r9, r1, #2
 8005f3e:	e9dd ab06 	ldrd	sl, fp, [sp, #24]
 8005f42:	e01a      	b.n	8005f7a <_dtoa_r+0x356>
 8005f44:	f3af 8000 	nop.w
 8005f48:	636f4361 	cmnvs	pc, #-2080374783	; 0x84000001
 8005f4c:	3fd287a7 	svccc	0x00d287a7
 8005f50:	8b60c8b3 	blhi	9838224 <__RW_LOAD_ADDR__+0x182d80c>
 8005f54:	3fc68a28 	svccc	0x00c68a28
 8005f58:	509f79fb 			; <UNDEFINED> instruction: 0x509f79fb
 8005f5c:	3fd34413 	svccc	0x00d34413
 8005f60:	0800a9f9 	stmdaeq	r0, {r0, r3, r4, r5, r6, r7, r8, fp, sp, pc}
 8005f64:	f003 fcba 	bl	80098dc <__aeabi_dmul>
 8005f68:	2200      	movs	r2, #0
 8005f6a:	2300      	movs	r3, #0
 8005f6c:	4606      	mov	r6, r0
 8005f6e:	460f      	mov	r7, r1
 8005f70:	f003 ff1c 	bl	8009dac <__aeabi_dcmpeq>
 8005f74:	2800      	cmp	r0, #0
 8005f76:	f040 84f2 	bne.w	800695e <_dtoa_r+0xd3a>
 8005f7a:	4652      	mov	r2, sl
 8005f7c:	465b      	mov	r3, fp
 8005f7e:	4630      	mov	r0, r6
 8005f80:	4639      	mov	r1, r7
 8005f82:	f003 fdd5 	bl	8009b30 <__aeabi_ddiv>
 8005f86:	464d      	mov	r5, r9
 8005f88:	f003 ff42 	bl	8009e10 <__aeabi_d2iz>
 8005f8c:	4680      	mov	r8, r0
 8005f8e:	f003 fc3f 	bl	8009810 <__aeabi_i2d>
 8005f92:	4652      	mov	r2, sl
 8005f94:	465b      	mov	r3, fp
 8005f96:	f003 fca1 	bl	80098dc <__aeabi_dmul>
 8005f9a:	4602      	mov	r2, r0
 8005f9c:	460b      	mov	r3, r1
 8005f9e:	4630      	mov	r0, r6
 8005fa0:	4639      	mov	r1, r7
 8005fa2:	f003 fae7 	bl	8009574 <__aeabi_dsub>
 8005fa6:	f108 0e30 	add.w	lr, r8, #48	; 0x30
 8005faa:	f809 ec01 	strb.w	lr, [r9, #-1]
 8005fae:	2300      	movs	r3, #0
 8005fb0:	f8dd e00c 	ldr.w	lr, [sp, #12]
 8005fb4:	2200      	movs	r2, #0
 8005fb6:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8005fba:	45f1      	cmp	r9, lr
 8005fbc:	f109 0901 	add.w	r9, r9, #1
 8005fc0:	4606      	mov	r6, r0
 8005fc2:	460f      	mov	r7, r1
 8005fc4:	d1ce      	bne.n	8005f64 <_dtoa_r+0x340>
 8005fc6:	4632      	mov	r2, r6
 8005fc8:	463b      	mov	r3, r7
 8005fca:	4630      	mov	r0, r6
 8005fcc:	4639      	mov	r1, r7
 8005fce:	f003 fad3 	bl	8009578 <__adddf3>
 8005fd2:	4606      	mov	r6, r0
 8005fd4:	460f      	mov	r7, r1
 8005fd6:	4632      	mov	r2, r6
 8005fd8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8005fdc:	463b      	mov	r3, r7
 8005fde:	f003 feef 	bl	8009dc0 <__aeabi_dcmplt>
 8005fe2:	2800      	cmp	r0, #0
 8005fe4:	f000 8570 	beq.w	8006ac8 <_dtoa_r+0xea4>
 8005fe8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8005fec:	9e04      	ldr	r6, [sp, #16]
 8005fee:	462a      	mov	r2, r5
 8005ff0:	f815 8c01 	ldrb.w	r8, [r5, #-1]
 8005ff4:	9508      	str	r5, [sp, #32]
 8005ff6:	9616      	str	r6, [sp, #88]	; 0x58
 8005ff8:	e005      	b.n	8006006 <_dtoa_r+0x3e2>
 8005ffa:	454b      	cmp	r3, r9
 8005ffc:	f000 84b8 	beq.w	8006970 <_dtoa_r+0xd4c>
 8006000:	f813 8c01 	ldrb.w	r8, [r3, #-1]
 8006004:	461a      	mov	r2, r3
 8006006:	f1b8 0f39 	cmp.w	r8, #57	; 0x39
 800600a:	f102 33ff 	add.w	r3, r2, #4294967295
 800600e:	d0f4      	beq.n	8005ffa <_dtoa_r+0x3d6>
 8006010:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8006012:	9208      	str	r2, [sp, #32]
 8006014:	f108 0201 	add.w	r2, r8, #1
 8006018:	9604      	str	r6, [sp, #16]
 800601a:	b2d2      	uxtb	r2, r2
 800601c:	701a      	strb	r2, [r3, #0]
 800601e:	e0b1      	b.n	8006184 <_dtoa_r+0x560>
 8006020:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8006022:	2e00      	cmp	r6, #0
 8006024:	f040 80f1 	bne.w	800620a <_dtoa_r+0x5e6>
 8006028:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 800602a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800602c:	f8dd 8034 	ldr.w	r8, [sp, #52]	; 0x34
 8006030:	9806      	ldr	r0, [sp, #24]
 8006032:	2800      	cmp	r0, #0
 8006034:	bfc8      	it	gt
 8006036:	2d00      	cmpgt	r5, #0
 8006038:	dd09      	ble.n	800604e <_dtoa_r+0x42a>
 800603a:	4603      	mov	r3, r0
 800603c:	990a      	ldr	r1, [sp, #40]	; 0x28
 800603e:	42ab      	cmp	r3, r5
 8006040:	bfa8      	it	ge
 8006042:	462b      	movge	r3, r5
 8006044:	1aed      	subs	r5, r5, r3
 8006046:	1ac9      	subs	r1, r1, r3
 8006048:	1ac0      	subs	r0, r0, r3
 800604a:	910a      	str	r1, [sp, #40]	; 0x28
 800604c:	9006      	str	r0, [sp, #24]
 800604e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006050:	2a00      	cmp	r2, #0
 8006052:	dd1c      	ble.n	800608e <_dtoa_r+0x46a>
 8006054:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006056:	2b00      	cmp	r3, #0
 8006058:	f000 8479 	beq.w	800694e <_dtoa_r+0xd2a>
 800605c:	2e00      	cmp	r6, #0
 800605e:	dd10      	ble.n	8006082 <_dtoa_r+0x45e>
 8006060:	4641      	mov	r1, r8
 8006062:	4632      	mov	r2, r6
 8006064:	4620      	mov	r0, r4
 8006066:	f001 fadd 	bl	8007624 <__pow5mult>
 800606a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 800606c:	4680      	mov	r8, r0
 800606e:	4620      	mov	r0, r4
 8006070:	4641      	mov	r1, r8
 8006072:	f001 fa37 	bl	80074e4 <__multiply>
 8006076:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006078:	4607      	mov	r7, r0
 800607a:	4620      	mov	r0, r4
 800607c:	f001 f930 	bl	80072e0 <_Bfree>
 8006080:	970b      	str	r7, [sp, #44]	; 0x2c
 8006082:	f8dd e030 	ldr.w	lr, [sp, #48]	; 0x30
 8006086:	ebbe 0206 	subs.w	r2, lr, r6
 800608a:	f040 84a7 	bne.w	80069dc <_dtoa_r+0xdb8>
 800608e:	4620      	mov	r0, r4
 8006090:	2101      	movs	r1, #1
 8006092:	f001 fa1d 	bl	80074d0 <__i2b>
 8006096:	4606      	mov	r6, r0
 8006098:	980e      	ldr	r0, [sp, #56]	; 0x38
 800609a:	2800      	cmp	r0, #0
 800609c:	dd05      	ble.n	80060aa <_dtoa_r+0x486>
 800609e:	4631      	mov	r1, r6
 80060a0:	4620      	mov	r0, r4
 80060a2:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80060a4:	f001 fabe 	bl	8007624 <__pow5mult>
 80060a8:	4606      	mov	r6, r0
 80060aa:	9924      	ldr	r1, [sp, #144]	; 0x90
 80060ac:	2901      	cmp	r1, #1
 80060ae:	f340 8390 	ble.w	80067d2 <_dtoa_r+0xbae>
 80060b2:	2700      	movs	r7, #0
 80060b4:	980e      	ldr	r0, [sp, #56]	; 0x38
 80060b6:	2800      	cmp	r0, #0
 80060b8:	f040 836c 	bne.w	8006794 <_dtoa_r+0xb70>
 80060bc:	2001      	movs	r0, #1
 80060be:	9b06      	ldr	r3, [sp, #24]
 80060c0:	4403      	add	r3, r0
 80060c2:	f013 031f 	ands.w	r3, r3, #31
 80060c6:	f000 8293 	beq.w	80065f0 <_dtoa_r+0x9cc>
 80060ca:	f1c3 0220 	rsb	r2, r3, #32
 80060ce:	2a04      	cmp	r2, #4
 80060d0:	f340 8568 	ble.w	8006ba4 <_dtoa_r+0xf80>
 80060d4:	f1c3 031c 	rsb	r3, r3, #28
 80060d8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80060da:	9a06      	ldr	r2, [sp, #24]
 80060dc:	441d      	add	r5, r3
 80060de:	4419      	add	r1, r3
 80060e0:	910a      	str	r1, [sp, #40]	; 0x28
 80060e2:	441a      	add	r2, r3
 80060e4:	9206      	str	r2, [sp, #24]
 80060e6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80060e8:	2900      	cmp	r1, #0
 80060ea:	dd05      	ble.n	80060f8 <_dtoa_r+0x4d4>
 80060ec:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80060ee:	4620      	mov	r0, r4
 80060f0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80060f2:	f001 faf3 	bl	80076dc <__lshift>
 80060f6:	900b      	str	r0, [sp, #44]	; 0x2c
 80060f8:	9a06      	ldr	r2, [sp, #24]
 80060fa:	2a00      	cmp	r2, #0
 80060fc:	dd04      	ble.n	8006108 <_dtoa_r+0x4e4>
 80060fe:	4631      	mov	r1, r6
 8006100:	4620      	mov	r0, r4
 8006102:	f001 faeb 	bl	80076dc <__lshift>
 8006106:	4606      	mov	r6, r0
 8006108:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800610a:	2b00      	cmp	r3, #0
 800610c:	f040 8321 	bne.w	8006752 <_dtoa_r+0xb2e>
 8006110:	9824      	ldr	r0, [sp, #144]	; 0x90
 8006112:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006114:	2802      	cmp	r0, #2
 8006116:	bfd4      	ite	le
 8006118:	2300      	movle	r3, #0
 800611a:	2301      	movgt	r3, #1
 800611c:	2900      	cmp	r1, #0
 800611e:	bfc8      	it	gt
 8006120:	2300      	movgt	r3, #0
 8006122:	2b00      	cmp	r3, #0
 8006124:	f000 821a 	beq.w	800655c <_dtoa_r+0x938>
 8006128:	9809      	ldr	r0, [sp, #36]	; 0x24
 800612a:	2800      	cmp	r0, #0
 800612c:	f040 820f 	bne.w	800654e <_dtoa_r+0x92a>
 8006130:	4631      	mov	r1, r6
 8006132:	4603      	mov	r3, r0
 8006134:	2205      	movs	r2, #5
 8006136:	4620      	mov	r0, r4
 8006138:	f001 f8ee 	bl	8007318 <__multadd>
 800613c:	4606      	mov	r6, r0
 800613e:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8006140:	4631      	mov	r1, r6
 8006142:	f001 fb27 	bl	8007794 <__mcmp>
 8006146:	2800      	cmp	r0, #0
 8006148:	f340 8201 	ble.w	800654e <_dtoa_r+0x92a>
 800614c:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006150:	2500      	movs	r5, #0
 8006152:	9a04      	ldr	r2, [sp, #16]
 8006154:	2331      	movs	r3, #49	; 0x31
 8006156:	3201      	adds	r2, #1
 8006158:	f889 3000 	strb.w	r3, [r9]
 800615c:	9204      	str	r2, [sp, #16]
 800615e:	f109 0301 	add.w	r3, r9, #1
 8006162:	9308      	str	r3, [sp, #32]
 8006164:	4631      	mov	r1, r6
 8006166:	4620      	mov	r0, r4
 8006168:	f001 f8ba 	bl	80072e0 <_Bfree>
 800616c:	f1b8 0f00 	cmp.w	r8, #0
 8006170:	d008      	beq.n	8006184 <_dtoa_r+0x560>
 8006172:	4545      	cmp	r5, r8
 8006174:	bf18      	it	ne
 8006176:	2d00      	cmpne	r5, #0
 8006178:	f040 824a 	bne.w	8006610 <_dtoa_r+0x9ec>
 800617c:	4641      	mov	r1, r8
 800617e:	4620      	mov	r0, r4
 8006180:	f001 f8ae 	bl	80072e0 <_Bfree>
 8006184:	4620      	mov	r0, r4
 8006186:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006188:	f001 f8aa 	bl	80072e0 <_Bfree>
 800618c:	9e04      	ldr	r6, [sp, #16]
 800618e:	2200      	movs	r2, #0
 8006190:	4648      	mov	r0, r9
 8006192:	1c73      	adds	r3, r6, #1
 8006194:	9e08      	ldr	r6, [sp, #32]
 8006196:	7032      	strb	r2, [r6, #0]
 8006198:	9e26      	ldr	r6, [sp, #152]	; 0x98
 800619a:	6033      	str	r3, [r6, #0]
 800619c:	9e28      	ldr	r6, [sp, #160]	; 0xa0
 800619e:	2e00      	cmp	r6, #0
 80061a0:	f43f ad81 	beq.w	8005ca6 <_dtoa_r+0x82>
 80061a4:	9808      	ldr	r0, [sp, #32]
 80061a6:	6030      	str	r0, [r6, #0]
 80061a8:	4648      	mov	r0, r9
 80061aa:	b01b      	add	sp, #108	; 0x6c
 80061ac:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80061b0:	2010      	movs	r0, #16
 80061b2:	f000 fd4b 	bl	8006c4c <malloc>
 80061b6:	6260      	str	r0, [r4, #36]	; 0x24
 80061b8:	6046      	str	r6, [r0, #4]
 80061ba:	6086      	str	r6, [r0, #8]
 80061bc:	6006      	str	r6, [r0, #0]
 80061be:	60c6      	str	r6, [r0, #12]
 80061c0:	e548      	b.n	8005c54 <_dtoa_r+0x30>
 80061c2:	9e0a      	ldr	r6, [sp, #40]	; 0x28
 80061c4:	f8dd e010 	ldr.w	lr, [sp, #16]
 80061c8:	ebce 0606 	rsb	r6, lr, r6
 80061cc:	960a      	str	r6, [sp, #40]	; 0x28
 80061ce:	f1ce 0600 	rsb	r6, lr, #0
 80061d2:	960c      	str	r6, [sp, #48]	; 0x30
 80061d4:	2600      	movs	r6, #0
 80061d6:	960e      	str	r6, [sp, #56]	; 0x38
 80061d8:	e60a      	b.n	8005df0 <_dtoa_r+0x1cc>
 80061da:	9804      	ldr	r0, [sp, #16]
 80061dc:	f003 fb18 	bl	8009810 <__aeabi_i2d>
 80061e0:	4632      	mov	r2, r6
 80061e2:	463b      	mov	r3, r7
 80061e4:	f003 fde2 	bl	8009dac <__aeabi_dcmpeq>
 80061e8:	2800      	cmp	r0, #0
 80061ea:	f47f add0 	bne.w	8005d8e <_dtoa_r+0x16a>
 80061ee:	9e04      	ldr	r6, [sp, #16]
 80061f0:	3e01      	subs	r6, #1
 80061f2:	9604      	str	r6, [sp, #16]
 80061f4:	e5cb      	b.n	8005d8e <_dtoa_r+0x16a>
 80061f6:	900f      	str	r0, [sp, #60]	; 0x3c
 80061f8:	e5e2      	b.n	8005dc0 <_dtoa_r+0x19c>
 80061fa:	f64f 30ee 	movw	r0, #64494	; 0xfbee
 80061fe:	f6cf 70ff 	movt	r0, #65535	; 0xffff
 8006202:	1b40      	subs	r0, r0, r5
 8006204:	fa0a f000 	lsl.w	r0, sl, r0
 8006208:	e58b      	b.n	8005d22 <_dtoa_r+0xfe>
 800620a:	9e24      	ldr	r6, [sp, #144]	; 0x90
 800620c:	2e01      	cmp	r6, #1
 800620e:	f340 8415 	ble.w	8006a3c <_dtoa_r+0xe18>
 8006212:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006214:	990c      	ldr	r1, [sp, #48]	; 0x30
 8006216:	1e46      	subs	r6, r0, #1
 8006218:	9809      	ldr	r0, [sp, #36]	; 0x24
 800621a:	42b1      	cmp	r1, r6
 800621c:	bfaf      	iteee	ge
 800621e:	ebc6 0601 	rsbge	r6, r6, r1
 8006222:	9a0c      	ldrlt	r2, [sp, #48]	; 0x30
 8006224:	960c      	strlt	r6, [sp, #48]	; 0x30
 8006226:	ebc2 0306 	rsblt	r3, r2, r6
 800622a:	bfbf      	itttt	lt
 800622c:	9e0e      	ldrlt	r6, [sp, #56]	; 0x38
 800622e:	18f6      	addlt	r6, r6, r3
 8006230:	960e      	strlt	r6, [sp, #56]	; 0x38
 8006232:	2600      	movlt	r6, #0
 8006234:	2800      	cmp	r0, #0
 8006236:	bfb9      	ittee	lt
 8006238:	2300      	movlt	r3, #0
 800623a:	990a      	ldrlt	r1, [sp, #40]	; 0x28
 800623c:	9d0a      	ldrge	r5, [sp, #40]	; 0x28
 800623e:	9b09      	ldrge	r3, [sp, #36]	; 0x24
 8006240:	bfb8      	it	lt
 8006242:	ebc0 0501 	rsblt	r5, r0, r1
 8006246:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8006248:	4620      	mov	r0, r4
 800624a:	f8dd e018 	ldr.w	lr, [sp, #24]
 800624e:	2101      	movs	r1, #1
 8006250:	441a      	add	r2, r3
 8006252:	920a      	str	r2, [sp, #40]	; 0x28
 8006254:	449e      	add	lr, r3
 8006256:	f8cd e018 	str.w	lr, [sp, #24]
 800625a:	f001 f939 	bl	80074d0 <__i2b>
 800625e:	4680      	mov	r8, r0
 8006260:	e6e6      	b.n	8006030 <_dtoa_r+0x40c>
 8006262:	2600      	movs	r6, #0
 8006264:	960d      	str	r6, [sp, #52]	; 0x34
 8006266:	9e04      	ldr	r6, [sp, #16]
 8006268:	f8dd e094 	ldr.w	lr, [sp, #148]	; 0x94
 800626c:	44b6      	add	lr, r6
 800626e:	f8cd e050 	str.w	lr, [sp, #80]	; 0x50
 8006272:	f10e 0601 	add.w	r6, lr, #1
 8006276:	9609      	str	r6, [sp, #36]	; 0x24
 8006278:	2e00      	cmp	r6, #0
 800627a:	f340 8359 	ble.w	8006930 <_dtoa_r+0xd0c>
 800627e:	9e09      	ldr	r6, [sp, #36]	; 0x24
 8006280:	2e0e      	cmp	r6, #14
 8006282:	bf8c      	ite	hi
 8006284:	2500      	movhi	r5, #0
 8006286:	f005 0501 	andls.w	r5, r5, #1
 800628a:	4637      	mov	r7, r6
 800628c:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800628e:	2f17      	cmp	r7, #23
 8006290:	f04f 0100 	mov.w	r1, #0
 8006294:	6071      	str	r1, [r6, #4]
 8006296:	d909      	bls.n	80062ac <_dtoa_r+0x688>
 8006298:	2201      	movs	r2, #1
 800629a:	2304      	movs	r3, #4
 800629c:	005b      	lsls	r3, r3, #1
 800629e:	4611      	mov	r1, r2
 80062a0:	f103 0014 	add.w	r0, r3, #20
 80062a4:	3201      	adds	r2, #1
 80062a6:	42b8      	cmp	r0, r7
 80062a8:	d9f8      	bls.n	800629c <_dtoa_r+0x678>
 80062aa:	6071      	str	r1, [r6, #4]
 80062ac:	4620      	mov	r0, r4
 80062ae:	f000 ffe1 	bl	8007274 <_Balloc>
 80062b2:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80062b4:	6030      	str	r0, [r6, #0]
 80062b6:	681b      	ldr	r3, [r3, #0]
 80062b8:	9308      	str	r3, [sp, #32]
 80062ba:	2d00      	cmp	r5, #0
 80062bc:	f43f ade5 	beq.w	8005e8a <_dtoa_r+0x266>
 80062c0:	9e04      	ldr	r6, [sp, #16]
 80062c2:	e9cd ab12 	strd	sl, fp, [sp, #72]	; 0x48
 80062c6:	2e00      	cmp	r6, #0
 80062c8:	f340 81ab 	ble.w	8006622 <_dtoa_r+0x9fe>
 80062cc:	f006 020f 	and.w	r2, r6, #15
 80062d0:	f24a 53f8 	movw	r3, #42488	; 0xa5f8
 80062d4:	1135      	asrs	r5, r6, #4
 80062d6:	f6c0 0300 	movt	r3, #2048	; 0x800
 80062da:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 80062de:	06e9      	lsls	r1, r5, #27
 80062e0:	e9d3 6700 	ldrd	r6, r7, [r3]
 80062e4:	f140 818f 	bpl.w	8006606 <_dtoa_r+0x9e2>
 80062e8:	f24a 63e8 	movw	r3, #42728	; 0xa6e8
 80062ec:	4650      	mov	r0, sl
 80062ee:	f6c0 0300 	movt	r3, #2048	; 0x800
 80062f2:	4659      	mov	r1, fp
 80062f4:	f005 050f 	and.w	r5, r5, #15
 80062f8:	f04f 0803 	mov.w	r8, #3
 80062fc:	e9d3 2308 	ldrd	r2, r3, [r3, #32]
 8006300:	f003 fc16 	bl	8009b30 <__aeabi_ddiv>
 8006304:	4682      	mov	sl, r0
 8006306:	468b      	mov	fp, r1
 8006308:	b19d      	cbz	r5, 8006332 <_dtoa_r+0x70e>
 800630a:	f24a 69e8 	movw	r9, #42728	; 0xa6e8
 800630e:	f6c0 0900 	movt	r9, #2048	; 0x800
 8006312:	07ea      	lsls	r2, r5, #31
 8006314:	4630      	mov	r0, r6
 8006316:	4639      	mov	r1, r7
 8006318:	d507      	bpl.n	800632a <_dtoa_r+0x706>
 800631a:	e9d9 2300 	ldrd	r2, r3, [r9]
 800631e:	f108 0801 	add.w	r8, r8, #1
 8006322:	f003 fadb 	bl	80098dc <__aeabi_dmul>
 8006326:	4606      	mov	r6, r0
 8006328:	460f      	mov	r7, r1
 800632a:	106d      	asrs	r5, r5, #1
 800632c:	f109 0908 	add.w	r9, r9, #8
 8006330:	d1ef      	bne.n	8006312 <_dtoa_r+0x6ee>
 8006332:	4632      	mov	r2, r6
 8006334:	463b      	mov	r3, r7
 8006336:	4650      	mov	r0, sl
 8006338:	4659      	mov	r1, fp
 800633a:	f003 fbf9 	bl	8009b30 <__aeabi_ddiv>
 800633e:	4606      	mov	r6, r0
 8006340:	460f      	mov	r7, r1
 8006342:	980f      	ldr	r0, [sp, #60]	; 0x3c
 8006344:	b150      	cbz	r0, 800635c <_dtoa_r+0x738>
 8006346:	2300      	movs	r3, #0
 8006348:	4630      	mov	r0, r6
 800634a:	4639      	mov	r1, r7
 800634c:	2200      	movs	r2, #0
 800634e:	f6c3 73f0 	movt	r3, #16368	; 0x3ff0
 8006352:	f003 fd35 	bl	8009dc0 <__aeabi_dcmplt>
 8006356:	2800      	cmp	r0, #0
 8006358:	f040 8315 	bne.w	8006986 <_dtoa_r+0xd62>
 800635c:	4640      	mov	r0, r8
 800635e:	f003 fa57 	bl	8009810 <__aeabi_i2d>
 8006362:	4632      	mov	r2, r6
 8006364:	463b      	mov	r3, r7
 8006366:	f003 fab9 	bl	80098dc <__aeabi_dmul>
 800636a:	2300      	movs	r3, #0
 800636c:	2200      	movs	r2, #0
 800636e:	f2c4 031c 	movt	r3, #16412	; 0x401c
 8006372:	f003 f901 	bl	8009578 <__adddf3>
 8006376:	4680      	mov	r8, r0
 8006378:	9809      	ldr	r0, [sp, #36]	; 0x24
 800637a:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 800637e:	2800      	cmp	r0, #0
 8006380:	f000 80c9 	beq.w	8006516 <_dtoa_r+0x8f2>
 8006384:	9904      	ldr	r1, [sp, #16]
 8006386:	f8dd c024 	ldr.w	ip, [sp, #36]	; 0x24
 800638a:	9116      	str	r1, [sp, #88]	; 0x58
 800638c:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 800638e:	2a00      	cmp	r2, #0
 8006390:	f000 8179 	beq.w	8006686 <_dtoa_r+0xa62>
 8006394:	f24a 53f8 	movw	r3, #42488	; 0xa5f8
 8006398:	9a08      	ldr	r2, [sp, #32]
 800639a:	f6c0 0300 	movt	r3, #2048	; 0x800
 800639e:	2100      	movs	r1, #0
 80063a0:	eb03 03cc 	add.w	r3, r3, ip, lsl #3
 80063a4:	2000      	movs	r0, #0
 80063a6:	f6c3 71e0 	movt	r1, #16352	; 0x3fe0
 80063aa:	1c55      	adds	r5, r2, #1
 80063ac:	e953 2302 	ldrd	r2, r3, [r3, #-8]
 80063b0:	f8cd c008 	str.w	ip, [sp, #8]
 80063b4:	f003 fbbc 	bl	8009b30 <__aeabi_ddiv>
 80063b8:	4642      	mov	r2, r8
 80063ba:	464b      	mov	r3, r9
 80063bc:	f003 f8da 	bl	8009574 <__aeabi_dsub>
 80063c0:	4682      	mov	sl, r0
 80063c2:	468b      	mov	fp, r1
 80063c4:	4630      	mov	r0, r6
 80063c6:	4639      	mov	r1, r7
 80063c8:	f003 fd22 	bl	8009e10 <__aeabi_d2iz>
 80063cc:	4680      	mov	r8, r0
 80063ce:	f003 fa1f 	bl	8009810 <__aeabi_i2d>
 80063d2:	f108 0830 	add.w	r8, r8, #48	; 0x30
 80063d6:	fa5f f888 	uxtb.w	r8, r8
 80063da:	4602      	mov	r2, r0
 80063dc:	460b      	mov	r3, r1
 80063de:	4630      	mov	r0, r6
 80063e0:	4639      	mov	r1, r7
 80063e2:	f003 f8c7 	bl	8009574 <__aeabi_dsub>
 80063e6:	f8dd e020 	ldr.w	lr, [sp, #32]
 80063ea:	f88e 8000 	strb.w	r8, [lr]
 80063ee:	4606      	mov	r6, r0
 80063f0:	460f      	mov	r7, r1
 80063f2:	4650      	mov	r0, sl
 80063f4:	4659      	mov	r1, fp
 80063f6:	4632      	mov	r2, r6
 80063f8:	463b      	mov	r3, r7
 80063fa:	f003 fcff 	bl	8009dfc <__aeabi_dcmpgt>
 80063fe:	2800      	cmp	r0, #0
 8006400:	f040 83c2 	bne.w	8006b88 <_dtoa_r+0xf64>
 8006404:	2100      	movs	r1, #0
 8006406:	4632      	mov	r2, r6
 8006408:	463b      	mov	r3, r7
 800640a:	2000      	movs	r0, #0
 800640c:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
 8006410:	f003 f8b0 	bl	8009574 <__aeabi_dsub>
 8006414:	4602      	mov	r2, r0
 8006416:	460b      	mov	r3, r1
 8006418:	4650      	mov	r0, sl
 800641a:	4659      	mov	r1, fp
 800641c:	f003 fcee 	bl	8009dfc <__aeabi_dcmpgt>
 8006420:	f8dd c008 	ldr.w	ip, [sp, #8]
 8006424:	2800      	cmp	r0, #0
 8006426:	f040 8314 	bne.w	8006a52 <_dtoa_r+0xe2e>
 800642a:	f1bc 0f01 	cmp.w	ip, #1
 800642e:	f340 80f5 	ble.w	800661c <_dtoa_r+0x9f8>
 8006432:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006436:	9417      	str	r4, [sp, #92]	; 0x5c
 8006438:	44e1      	add	r9, ip
 800643a:	f8cd 9040 	str.w	r9, [sp, #64]	; 0x40
 800643e:	46a9      	mov	r9, r5
 8006440:	e010      	b.n	8006464 <_dtoa_r+0x840>
 8006442:	2100      	movs	r1, #0
 8006444:	2000      	movs	r0, #0
 8006446:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
 800644a:	f003 f893 	bl	8009574 <__aeabi_dsub>
 800644e:	4652      	mov	r2, sl
 8006450:	465b      	mov	r3, fp
 8006452:	f003 fcb5 	bl	8009dc0 <__aeabi_dcmplt>
 8006456:	2800      	cmp	r0, #0
 8006458:	f040 82f9 	bne.w	8006a4e <_dtoa_r+0xe2a>
 800645c:	9810      	ldr	r0, [sp, #64]	; 0x40
 800645e:	4581      	cmp	r9, r0
 8006460:	f000 80db 	beq.w	800661a <_dtoa_r+0x9f6>
 8006464:	2300      	movs	r3, #0
 8006466:	4650      	mov	r0, sl
 8006468:	4659      	mov	r1, fp
 800646a:	2200      	movs	r2, #0
 800646c:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8006470:	f003 fa34 	bl	80098dc <__aeabi_dmul>
 8006474:	2300      	movs	r3, #0
 8006476:	2200      	movs	r2, #0
 8006478:	f2c4 0324 	movt	r3, #16420	; 0x4024
 800647c:	4682      	mov	sl, r0
 800647e:	468b      	mov	fp, r1
 8006480:	4630      	mov	r0, r6
 8006482:	4639      	mov	r1, r7
 8006484:	f003 fa2a 	bl	80098dc <__aeabi_dmul>
 8006488:	460d      	mov	r5, r1
 800648a:	4604      	mov	r4, r0
 800648c:	f003 fcc0 	bl	8009e10 <__aeabi_d2iz>
 8006490:	4680      	mov	r8, r0
 8006492:	f003 f9bd 	bl	8009810 <__aeabi_i2d>
 8006496:	f108 0830 	add.w	r8, r8, #48	; 0x30
 800649a:	fa5f f888 	uxtb.w	r8, r8
 800649e:	4602      	mov	r2, r0
 80064a0:	460b      	mov	r3, r1
 80064a2:	4620      	mov	r0, r4
 80064a4:	4629      	mov	r1, r5
 80064a6:	f003 f865 	bl	8009574 <__aeabi_dsub>
 80064aa:	4652      	mov	r2, sl
 80064ac:	465b      	mov	r3, fp
 80064ae:	f809 8b01 	strb.w	r8, [r9], #1
 80064b2:	4606      	mov	r6, r0
 80064b4:	460f      	mov	r7, r1
 80064b6:	f003 fc83 	bl	8009dc0 <__aeabi_dcmplt>
 80064ba:	4632      	mov	r2, r6
 80064bc:	463b      	mov	r3, r7
 80064be:	2800      	cmp	r0, #0
 80064c0:	d0bf      	beq.n	8006442 <_dtoa_r+0x81e>
 80064c2:	9e16      	ldr	r6, [sp, #88]	; 0x58
 80064c4:	464d      	mov	r5, r9
 80064c6:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 80064c8:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80064cc:	9604      	str	r6, [sp, #16]
 80064ce:	9508      	str	r5, [sp, #32]
 80064d0:	e658      	b.n	8006184 <_dtoa_r+0x560>
 80064d2:	2600      	movs	r6, #0
 80064d4:	960d      	str	r6, [sp, #52]	; 0x34
 80064d6:	9825      	ldr	r0, [sp, #148]	; 0x94
 80064d8:	2800      	cmp	r0, #0
 80064da:	f340 8233 	ble.w	8006944 <_dtoa_r+0xd20>
 80064de:	280e      	cmp	r0, #14
 80064e0:	bf8c      	ite	hi
 80064e2:	2500      	movhi	r5, #0
 80064e4:	f005 0501 	andls.w	r5, r5, #1
 80064e8:	4607      	mov	r7, r0
 80064ea:	9014      	str	r0, [sp, #80]	; 0x50
 80064ec:	9009      	str	r0, [sp, #36]	; 0x24
 80064ee:	e6cd      	b.n	800628c <_dtoa_r+0x668>
 80064f0:	2601      	movs	r6, #1
 80064f2:	960d      	str	r6, [sp, #52]	; 0x34
 80064f4:	e7ef      	b.n	80064d6 <_dtoa_r+0x8b2>
 80064f6:	4640      	mov	r0, r8
 80064f8:	f003 f98a 	bl	8009810 <__aeabi_i2d>
 80064fc:	4632      	mov	r2, r6
 80064fe:	463b      	mov	r3, r7
 8006500:	f003 f9ec 	bl	80098dc <__aeabi_dmul>
 8006504:	2300      	movs	r3, #0
 8006506:	2200      	movs	r2, #0
 8006508:	f2c4 031c 	movt	r3, #16412	; 0x401c
 800650c:	f003 f834 	bl	8009578 <__adddf3>
 8006510:	4680      	mov	r8, r0
 8006512:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 8006516:	2300      	movs	r3, #0
 8006518:	4630      	mov	r0, r6
 800651a:	2200      	movs	r2, #0
 800651c:	f2c4 0314 	movt	r3, #16404	; 0x4014
 8006520:	4639      	mov	r1, r7
 8006522:	f003 f827 	bl	8009574 <__aeabi_dsub>
 8006526:	4642      	mov	r2, r8
 8006528:	464b      	mov	r3, r9
 800652a:	4682      	mov	sl, r0
 800652c:	468b      	mov	fp, r1
 800652e:	f003 fc65 	bl	8009dfc <__aeabi_dcmpgt>
 8006532:	4606      	mov	r6, r0
 8006534:	2800      	cmp	r0, #0
 8006536:	f040 80a3 	bne.w	8006680 <_dtoa_r+0xa5c>
 800653a:	4642      	mov	r2, r8
 800653c:	4650      	mov	r0, sl
 800653e:	4659      	mov	r1, fp
 8006540:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8006544:	f003 fc3c 	bl	8009dc0 <__aeabi_dcmplt>
 8006548:	2800      	cmp	r0, #0
 800654a:	d067      	beq.n	800661c <_dtoa_r+0x9f8>
 800654c:	46b0      	mov	r8, r6
 800654e:	9925      	ldr	r1, [sp, #148]	; 0x94
 8006550:	2500      	movs	r5, #0
 8006552:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006556:	43c9      	mvns	r1, r1
 8006558:	9104      	str	r1, [sp, #16]
 800655a:	e603      	b.n	8006164 <_dtoa_r+0x540>
 800655c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800655e:	2800      	cmp	r0, #0
 8006560:	f040 8164 	bne.w	800682c <_dtoa_r+0xc08>
 8006564:	2500      	movs	r5, #0
 8006566:	f8dd a024 	ldr.w	sl, [sp, #36]	; 0x24
 800656a:	f8dd b020 	ldr.w	fp, [sp, #32]
 800656e:	f8dd 902c 	ldr.w	r9, [sp, #44]	; 0x2c
 8006572:	e002      	b.n	800657a <_dtoa_r+0x956>
 8006574:	f000 fed0 	bl	8007318 <__multadd>
 8006578:	4681      	mov	r9, r0
 800657a:	4631      	mov	r1, r6
 800657c:	4648      	mov	r0, r9
 800657e:	f7ff faab 	bl	8005ad8 <quorem>
 8006582:	4649      	mov	r1, r9
 8006584:	220a      	movs	r2, #10
 8006586:	2300      	movs	r3, #0
 8006588:	f100 0730 	add.w	r7, r0, #48	; 0x30
 800658c:	f80b 7005 	strb.w	r7, [fp, r5]
 8006590:	3501      	adds	r5, #1
 8006592:	4620      	mov	r0, r4
 8006594:	4555      	cmp	r5, sl
 8006596:	dbed      	blt.n	8006574 <_dtoa_r+0x950>
 8006598:	f8dd b020 	ldr.w	fp, [sp, #32]
 800659c:	461d      	mov	r5, r3
 800659e:	9809      	ldr	r0, [sp, #36]	; 0x24
 80065a0:	f8cd 902c 	str.w	r9, [sp, #44]	; 0x2c
 80065a4:	2801      	cmp	r0, #1
 80065a6:	bfac      	ite	ge
 80065a8:	4483      	addge	fp, r0
 80065aa:	f10b 0b01 	addlt.w	fp, fp, #1
 80065ae:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80065b0:	2201      	movs	r2, #1
 80065b2:	4620      	mov	r0, r4
 80065b4:	f001 f892 	bl	80076dc <__lshift>
 80065b8:	4631      	mov	r1, r6
 80065ba:	900b      	str	r0, [sp, #44]	; 0x2c
 80065bc:	f001 f8ea 	bl	8007794 <__mcmp>
 80065c0:	2800      	cmp	r0, #0
 80065c2:	f340 826f 	ble.w	8006aa4 <_dtoa_r+0xe80>
 80065c6:	f81b 2c01 	ldrb.w	r2, [fp, #-1]
 80065ca:	9908      	ldr	r1, [sp, #32]
 80065cc:	e005      	b.n	80065da <_dtoa_r+0x9b6>
 80065ce:	428b      	cmp	r3, r1
 80065d0:	f000 8228 	beq.w	8006a24 <_dtoa_r+0xe00>
 80065d4:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 80065d8:	469b      	mov	fp, r3
 80065da:	2a39      	cmp	r2, #57	; 0x39
 80065dc:	f10b 33ff 	add.w	r3, fp, #4294967295
 80065e0:	d0f5      	beq.n	80065ce <_dtoa_r+0x9aa>
 80065e2:	3201      	adds	r2, #1
 80065e4:	f8dd 9020 	ldr.w	r9, [sp, #32]
 80065e8:	701a      	strb	r2, [r3, #0]
 80065ea:	f8cd b020 	str.w	fp, [sp, #32]
 80065ee:	e5b9      	b.n	8006164 <_dtoa_r+0x540>
 80065f0:	231c      	movs	r3, #28
 80065f2:	f8dd e028 	ldr.w	lr, [sp, #40]	; 0x28
 80065f6:	441d      	add	r5, r3
 80065f8:	9806      	ldr	r0, [sp, #24]
 80065fa:	449e      	add	lr, r3
 80065fc:	f8cd e028 	str.w	lr, [sp, #40]	; 0x28
 8006600:	4418      	add	r0, r3
 8006602:	9006      	str	r0, [sp, #24]
 8006604:	e56f      	b.n	80060e6 <_dtoa_r+0x4c2>
 8006606:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
 800660a:	f04f 0802 	mov.w	r8, #2
 800660e:	e67b      	b.n	8006308 <_dtoa_r+0x6e4>
 8006610:	4629      	mov	r1, r5
 8006612:	4620      	mov	r0, r4
 8006614:	f000 fe64 	bl	80072e0 <_Bfree>
 8006618:	e5b0      	b.n	800617c <_dtoa_r+0x558>
 800661a:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 800661c:	e9dd ab12 	ldrd	sl, fp, [sp, #72]	; 0x48
 8006620:	e433      	b.n	8005e8a <_dtoa_r+0x266>
 8006622:	9e04      	ldr	r6, [sp, #16]
 8006624:	4275      	negs	r5, r6
 8006626:	2d00      	cmp	r5, #0
 8006628:	f000 819d 	beq.w	8006966 <_dtoa_r+0xd42>
 800662c:	f005 020f 	and.w	r2, r5, #15
 8006630:	f24a 53f8 	movw	r3, #42488	; 0xa5f8
 8006634:	f6c0 0300 	movt	r3, #2048	; 0x800
 8006638:	e9dd 0112 	ldrd	r0, r1, [sp, #72]	; 0x48
 800663c:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8006640:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006644:	f003 f94a 	bl	80098dc <__aeabi_dmul>
 8006648:	112d      	asrs	r5, r5, #4
 800664a:	4606      	mov	r6, r0
 800664c:	460f      	mov	r7, r1
 800664e:	f000 8297 	beq.w	8006b80 <_dtoa_r+0xf5c>
 8006652:	f24a 69e8 	movw	r9, #42728	; 0xa6e8
 8006656:	f04f 0802 	mov.w	r8, #2
 800665a:	f6c0 0900 	movt	r9, #2048	; 0x800
 800665e:	07eb      	lsls	r3, r5, #31
 8006660:	4630      	mov	r0, r6
 8006662:	4639      	mov	r1, r7
 8006664:	d507      	bpl.n	8006676 <_dtoa_r+0xa52>
 8006666:	e9d9 2300 	ldrd	r2, r3, [r9]
 800666a:	f108 0801 	add.w	r8, r8, #1
 800666e:	f003 f935 	bl	80098dc <__aeabi_dmul>
 8006672:	4606      	mov	r6, r0
 8006674:	460f      	mov	r7, r1
 8006676:	106d      	asrs	r5, r5, #1
 8006678:	f109 0908 	add.w	r9, r9, #8
 800667c:	d1ef      	bne.n	800665e <_dtoa_r+0xa3a>
 800667e:	e660      	b.n	8006342 <_dtoa_r+0x71e>
 8006680:	2600      	movs	r6, #0
 8006682:	46b0      	mov	r8, r6
 8006684:	e562      	b.n	800614c <_dtoa_r+0x528>
 8006686:	f10c 3bff 	add.w	fp, ip, #4294967295
 800668a:	f24a 51f8 	movw	r1, #42488	; 0xa5f8
 800668e:	f6c0 0100 	movt	r1, #2048	; 0x800
 8006692:	9808      	ldr	r0, [sp, #32]
 8006694:	eb01 01cb 	add.w	r1, r1, fp, lsl #3
 8006698:	4642      	mov	r2, r8
 800669a:	464b      	mov	r3, r9
 800669c:	f100 0a01 	add.w	sl, r0, #1
 80066a0:	e9d1 0100 	ldrd	r0, r1, [r1]
 80066a4:	f8cd c008 	str.w	ip, [sp, #8]
 80066a8:	f003 f918 	bl	80098dc <__aeabi_dmul>
 80066ac:	e9cd 0110 	strd	r0, r1, [sp, #64]	; 0x40
 80066b0:	4639      	mov	r1, r7
 80066b2:	4630      	mov	r0, r6
 80066b4:	f003 fbac 	bl	8009e10 <__aeabi_d2iz>
 80066b8:	4605      	mov	r5, r0
 80066ba:	f003 f8a9 	bl	8009810 <__aeabi_i2d>
 80066be:	3530      	adds	r5, #48	; 0x30
 80066c0:	4602      	mov	r2, r0
 80066c2:	460b      	mov	r3, r1
 80066c4:	4630      	mov	r0, r6
 80066c6:	4639      	mov	r1, r7
 80066c8:	f002 ff54 	bl	8009574 <__aeabi_dsub>
 80066cc:	460f      	mov	r7, r1
 80066ce:	9908      	ldr	r1, [sp, #32]
 80066d0:	4606      	mov	r6, r0
 80066d2:	700d      	strb	r5, [r1, #0]
 80066d4:	f8dd c008 	ldr.w	ip, [sp, #8]
 80066d8:	f1bc 0f01 	cmp.w	ip, #1
 80066dc:	d022      	beq.n	8006724 <_dtoa_r+0xb00>
 80066de:	9a08      	ldr	r2, [sp, #32]
 80066e0:	4630      	mov	r0, r6
 80066e2:	4639      	mov	r1, r7
 80066e4:	f102 39ff 	add.w	r9, r2, #4294967295
 80066e8:	4615      	mov	r5, r2
 80066ea:	44e1      	add	r9, ip
 80066ec:	2300      	movs	r3, #0
 80066ee:	2200      	movs	r2, #0
 80066f0:	f2c4 0324 	movt	r3, #16420	; 0x4024
 80066f4:	f003 f8f2 	bl	80098dc <__aeabi_dmul>
 80066f8:	460f      	mov	r7, r1
 80066fa:	4606      	mov	r6, r0
 80066fc:	f003 fb88 	bl	8009e10 <__aeabi_d2iz>
 8006700:	4680      	mov	r8, r0
 8006702:	f003 f885 	bl	8009810 <__aeabi_i2d>
 8006706:	f108 0830 	add.w	r8, r8, #48	; 0x30
 800670a:	4602      	mov	r2, r0
 800670c:	460b      	mov	r3, r1
 800670e:	4630      	mov	r0, r6
 8006710:	4639      	mov	r1, r7
 8006712:	f002 ff2f 	bl	8009574 <__aeabi_dsub>
 8006716:	f805 8f01 	strb.w	r8, [r5, #1]!
 800671a:	454d      	cmp	r5, r9
 800671c:	d1e6      	bne.n	80066ec <_dtoa_r+0xac8>
 800671e:	4606      	mov	r6, r0
 8006720:	460f      	mov	r7, r1
 8006722:	44da      	add	sl, fp
 8006724:	2300      	movs	r3, #0
 8006726:	2200      	movs	r2, #0
 8006728:	f6c3 73e0 	movt	r3, #16352	; 0x3fe0
 800672c:	e9dd 0110 	ldrd	r0, r1, [sp, #64]	; 0x40
 8006730:	f002 ff22 	bl	8009578 <__adddf3>
 8006734:	4632      	mov	r2, r6
 8006736:	463b      	mov	r3, r7
 8006738:	f003 fb42 	bl	8009dc0 <__aeabi_dcmplt>
 800673c:	2800      	cmp	r0, #0
 800673e:	f000 8154 	beq.w	80069ea <_dtoa_r+0xdc6>
 8006742:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006746:	4652      	mov	r2, sl
 8006748:	f81a 8c01 	ldrb.w	r8, [sl, #-1]
 800674c:	f8cd a020 	str.w	sl, [sp, #32]
 8006750:	e459      	b.n	8006006 <_dtoa_r+0x3e2>
 8006752:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8006754:	4631      	mov	r1, r6
 8006756:	f001 f81d 	bl	8007794 <__mcmp>
 800675a:	2800      	cmp	r0, #0
 800675c:	f6bf acd8 	bge.w	8006110 <_dtoa_r+0x4ec>
 8006760:	f8dd e010 	ldr.w	lr, [sp, #16]
 8006764:	4620      	mov	r0, r4
 8006766:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006768:	220a      	movs	r2, #10
 800676a:	2300      	movs	r3, #0
 800676c:	f10e 3eff 	add.w	lr, lr, #4294967295
 8006770:	f8cd e010 	str.w	lr, [sp, #16]
 8006774:	f000 fdd0 	bl	8007318 <__multadd>
 8006778:	900b      	str	r0, [sp, #44]	; 0x2c
 800677a:	980d      	ldr	r0, [sp, #52]	; 0x34
 800677c:	2800      	cmp	r0, #0
 800677e:	d141      	bne.n	8006804 <_dtoa_r+0xbe0>
 8006780:	9914      	ldr	r1, [sp, #80]	; 0x50
 8006782:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8006784:	2900      	cmp	r1, #0
 8006786:	dc03      	bgt.n	8006790 <_dtoa_r+0xb6c>
 8006788:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800678a:	2a02      	cmp	r2, #2
 800678c:	f300 8207 	bgt.w	8006b9e <_dtoa_r+0xf7a>
 8006790:	9309      	str	r3, [sp, #36]	; 0x24
 8006792:	e6e7      	b.n	8006564 <_dtoa_r+0x940>
 8006794:	6933      	ldr	r3, [r6, #16]
 8006796:	eb06 0383 	add.w	r3, r6, r3, lsl #2
 800679a:	6918      	ldr	r0, [r3, #16]
 800679c:	f000 fe4e 	bl	800743c <__hi0bits>
 80067a0:	f1c0 0020 	rsb	r0, r0, #32
 80067a4:	e48b      	b.n	80060be <_dtoa_r+0x49a>
 80067a6:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80067a8:	2e00      	cmp	r6, #0
 80067aa:	f040 818b 	bne.w	8006ac4 <_dtoa_r+0xea0>
 80067ae:	2300      	movs	r3, #0
 80067b0:	2200      	movs	r2, #0
 80067b2:	f2c4 0314 	movt	r3, #16404	; 0x4014
 80067b6:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80067ba:	f003 f88f 	bl	80098dc <__aeabi_dmul>
 80067be:	4652      	mov	r2, sl
 80067c0:	465b      	mov	r3, fp
 80067c2:	f003 fb11 	bl	8009de8 <__aeabi_dcmpge>
 80067c6:	9e09      	ldr	r6, [sp, #36]	; 0x24
 80067c8:	46b0      	mov	r8, r6
 80067ca:	2800      	cmp	r0, #0
 80067cc:	f47f aebf 	bne.w	800654e <_dtoa_r+0x92a>
 80067d0:	e4bc      	b.n	800614c <_dtoa_r+0x528>
 80067d2:	f1ba 0f00 	cmp.w	sl, #0
 80067d6:	f47f ac6c 	bne.w	80060b2 <_dtoa_r+0x48e>
 80067da:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80067de:	4657      	mov	r7, sl
 80067e0:	2b00      	cmp	r3, #0
 80067e2:	f47f ac67 	bne.w	80060b4 <_dtoa_r+0x490>
 80067e6:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 80067ea:	0d3f      	lsrs	r7, r7, #20
 80067ec:	053f      	lsls	r7, r7, #20
 80067ee:	2f00      	cmp	r7, #0
 80067f0:	f43f ac60 	beq.w	80060b4 <_dtoa_r+0x490>
 80067f4:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80067f6:	2701      	movs	r7, #1
 80067f8:	9b06      	ldr	r3, [sp, #24]
 80067fa:	3201      	adds	r2, #1
 80067fc:	920a      	str	r2, [sp, #40]	; 0x28
 80067fe:	3301      	adds	r3, #1
 8006800:	9306      	str	r3, [sp, #24]
 8006802:	e457      	b.n	80060b4 <_dtoa_r+0x490>
 8006804:	2300      	movs	r3, #0
 8006806:	4641      	mov	r1, r8
 8006808:	220a      	movs	r2, #10
 800680a:	4620      	mov	r0, r4
 800680c:	f000 fd84 	bl	8007318 <__multadd>
 8006810:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006812:	9924      	ldr	r1, [sp, #144]	; 0x90
 8006814:	2a00      	cmp	r2, #0
 8006816:	bfcc      	ite	gt
 8006818:	2300      	movgt	r3, #0
 800681a:	2301      	movle	r3, #1
 800681c:	2902      	cmp	r1, #2
 800681e:	bfd8      	it	le
 8006820:	2300      	movle	r3, #0
 8006822:	4680      	mov	r8, r0
 8006824:	2b00      	cmp	r3, #0
 8006826:	f040 81b6 	bne.w	8006b96 <_dtoa_r+0xf72>
 800682a:	9209      	str	r2, [sp, #36]	; 0x24
 800682c:	2d00      	cmp	r5, #0
 800682e:	dd05      	ble.n	800683c <_dtoa_r+0xc18>
 8006830:	4641      	mov	r1, r8
 8006832:	462a      	mov	r2, r5
 8006834:	4620      	mov	r0, r4
 8006836:	f000 ff51 	bl	80076dc <__lshift>
 800683a:	4680      	mov	r8, r0
 800683c:	46c4      	mov	ip, r8
 800683e:	2f00      	cmp	r7, #0
 8006840:	f040 8153 	bne.w	8006aea <_dtoa_r+0xec6>
 8006844:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006846:	f00a 0301 	and.w	r3, sl, #1
 800684a:	9a08      	ldr	r2, [sp, #32]
 800684c:	4637      	mov	r7, r6
 800684e:	9808      	ldr	r0, [sp, #32]
 8006850:	46e1      	mov	r9, ip
 8006852:	440a      	add	r2, r1
 8006854:	9309      	str	r3, [sp, #36]	; 0x24
 8006856:	920a      	str	r2, [sp, #40]	; 0x28
 8006858:	1c45      	adds	r5, r0, #1
 800685a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 800685c:	e00a      	b.n	8006874 <_dtoa_r+0xc50>
 800685e:	f000 fd5b 	bl	8007318 <__multadd>
 8006862:	4649      	mov	r1, r9
 8006864:	220a      	movs	r2, #10
 8006866:	2300      	movs	r3, #0
 8006868:	4680      	mov	r8, r0
 800686a:	4620      	mov	r0, r4
 800686c:	f000 fd54 	bl	8007318 <__multadd>
 8006870:	4681      	mov	r9, r0
 8006872:	3501      	adds	r5, #1
 8006874:	4639      	mov	r1, r7
 8006876:	4630      	mov	r0, r6
 8006878:	f7ff f92e 	bl	8005ad8 <quorem>
 800687c:	4641      	mov	r1, r8
 800687e:	4682      	mov	sl, r0
 8006880:	4630      	mov	r0, r6
 8006882:	f000 ff87 	bl	8007794 <__mcmp>
 8006886:	464a      	mov	r2, r9
 8006888:	4639      	mov	r1, r7
 800688a:	4683      	mov	fp, r0
 800688c:	4620      	mov	r0, r4
 800688e:	f000 ffa3 	bl	80077d8 <__mdiff>
 8006892:	f10a 0230 	add.w	r2, sl, #48	; 0x30
 8006896:	9205      	str	r2, [sp, #20]
 8006898:	f105 3eff 	add.w	lr, r5, #4294967295
 800689c:	f8cd e018 	str.w	lr, [sp, #24]
 80068a0:	68c2      	ldr	r2, [r0, #12]
 80068a2:	4603      	mov	r3, r0
 80068a4:	2a00      	cmp	r2, #0
 80068a6:	d13e      	bne.n	8006926 <_dtoa_r+0xd02>
 80068a8:	4619      	mov	r1, r3
 80068aa:	4630      	mov	r0, r6
 80068ac:	9302      	str	r3, [sp, #8]
 80068ae:	f000 ff71 	bl	8007794 <__mcmp>
 80068b2:	9b02      	ldr	r3, [sp, #8]
 80068b4:	4602      	mov	r2, r0
 80068b6:	4620      	mov	r0, r4
 80068b8:	4619      	mov	r1, r3
 80068ba:	9202      	str	r2, [sp, #8]
 80068bc:	f000 fd10 	bl	80072e0 <_Bfree>
 80068c0:	9a02      	ldr	r2, [sp, #8]
 80068c2:	9824      	ldr	r0, [sp, #144]	; 0x90
 80068c4:	4310      	orrs	r0, r2
 80068c6:	d103      	bne.n	80068d0 <_dtoa_r+0xcac>
 80068c8:	9909      	ldr	r1, [sp, #36]	; 0x24
 80068ca:	2900      	cmp	r1, #0
 80068cc:	f000 814a 	beq.w	8006b64 <_dtoa_r+0xf40>
 80068d0:	f1bb 0f00 	cmp.w	fp, #0
 80068d4:	f2c0 80c3 	blt.w	8006a5e <_dtoa_r+0xe3a>
 80068d8:	9924      	ldr	r1, [sp, #144]	; 0x90
 80068da:	ea5b 0101 	orrs.w	r1, fp, r1
 80068de:	d103      	bne.n	80068e8 <_dtoa_r+0xcc4>
 80068e0:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80068e2:	2b00      	cmp	r3, #0
 80068e4:	f000 80bb 	beq.w	8006a5e <_dtoa_r+0xe3a>
 80068e8:	2a00      	cmp	r2, #0
 80068ea:	f300 811b 	bgt.w	8006b24 <_dtoa_r+0xf00>
 80068ee:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80068f0:	46ab      	mov	fp, r5
 80068f2:	9a05      	ldr	r2, [sp, #20]
 80068f4:	429d      	cmp	r5, r3
 80068f6:	f805 2c01 	strb.w	r2, [r5, #-1]
 80068fa:	f000 8124 	beq.w	8006b46 <_dtoa_r+0xf22>
 80068fe:	4631      	mov	r1, r6
 8006900:	220a      	movs	r2, #10
 8006902:	2300      	movs	r3, #0
 8006904:	4620      	mov	r0, r4
 8006906:	f000 fd07 	bl	8007318 <__multadd>
 800690a:	45c8      	cmp	r8, r9
 800690c:	4641      	mov	r1, r8
 800690e:	f04f 020a 	mov.w	r2, #10
 8006912:	f04f 0300 	mov.w	r3, #0
 8006916:	4606      	mov	r6, r0
 8006918:	4620      	mov	r0, r4
 800691a:	d1a0      	bne.n	800685e <_dtoa_r+0xc3a>
 800691c:	f000 fcfc 	bl	8007318 <__multadd>
 8006920:	4680      	mov	r8, r0
 8006922:	4681      	mov	r9, r0
 8006924:	e7a5      	b.n	8006872 <_dtoa_r+0xc4e>
 8006926:	2201      	movs	r2, #1
 8006928:	e7c5      	b.n	80068b6 <_dtoa_r+0xc92>
 800692a:	2601      	movs	r6, #1
 800692c:	960d      	str	r6, [sp, #52]	; 0x34
 800692e:	e49a      	b.n	8006266 <_dtoa_r+0x642>
 8006930:	2e0e      	cmp	r6, #14
 8006932:	bf8c      	ite	hi
 8006934:	2200      	movhi	r2, #0
 8006936:	2201      	movls	r2, #1
 8006938:	6a66      	ldr	r6, [r4, #36]	; 0x24
 800693a:	2300      	movs	r3, #0
 800693c:	4015      	ands	r5, r2
 800693e:	4619      	mov	r1, r3
 8006940:	6073      	str	r3, [r6, #4]
 8006942:	e4b3      	b.n	80062ac <_dtoa_r+0x688>
 8006944:	2201      	movs	r2, #1
 8006946:	9225      	str	r2, [sp, #148]	; 0x94
 8006948:	9214      	str	r2, [sp, #80]	; 0x50
 800694a:	9209      	str	r2, [sp, #36]	; 0x24
 800694c:	e7f4      	b.n	8006938 <_dtoa_r+0xd14>
 800694e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006950:	4620      	mov	r0, r4
 8006952:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006954:	f000 fe66 	bl	8007624 <__pow5mult>
 8006958:	900b      	str	r0, [sp, #44]	; 0x2c
 800695a:	f7ff bb98 	b.w	800608e <_dtoa_r+0x46a>
 800695e:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006962:	9508      	str	r5, [sp, #32]
 8006964:	e40e      	b.n	8006184 <_dtoa_r+0x560>
 8006966:	e9dd 6712 	ldrd	r6, r7, [sp, #72]	; 0x48
 800696a:	f04f 0802 	mov.w	r8, #2
 800696e:	e4e8      	b.n	8006342 <_dtoa_r+0x71e>
 8006970:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8006972:	2130      	movs	r1, #48	; 0x30
 8006974:	9208      	str	r2, [sp, #32]
 8006976:	2231      	movs	r2, #49	; 0x31
 8006978:	3601      	adds	r6, #1
 800697a:	f889 1000 	strb.w	r1, [r9]
 800697e:	9604      	str	r6, [sp, #16]
 8006980:	701a      	strb	r2, [r3, #0]
 8006982:	f7ff bbff 	b.w	8006184 <_dtoa_r+0x560>
 8006986:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006988:	2900      	cmp	r1, #0
 800698a:	f43f adb4 	beq.w	80064f6 <_dtoa_r+0x8d2>
 800698e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006990:	2a00      	cmp	r2, #0
 8006992:	f77f ae43 	ble.w	800661c <_dtoa_r+0x9f8>
 8006996:	2300      	movs	r3, #0
 8006998:	2200      	movs	r2, #0
 800699a:	4630      	mov	r0, r6
 800699c:	4639      	mov	r1, r7
 800699e:	f2c4 0324 	movt	r3, #16420	; 0x4024
 80069a2:	f002 ff9b 	bl	80098dc <__aeabi_dmul>
 80069a6:	9b04      	ldr	r3, [sp, #16]
 80069a8:	3b01      	subs	r3, #1
 80069aa:	9316      	str	r3, [sp, #88]	; 0x58
 80069ac:	4606      	mov	r6, r0
 80069ae:	f108 0001 	add.w	r0, r8, #1
 80069b2:	460f      	mov	r7, r1
 80069b4:	f002 ff2c 	bl	8009810 <__aeabi_i2d>
 80069b8:	4602      	mov	r2, r0
 80069ba:	460b      	mov	r3, r1
 80069bc:	4630      	mov	r0, r6
 80069be:	4639      	mov	r1, r7
 80069c0:	f002 ff8c 	bl	80098dc <__aeabi_dmul>
 80069c4:	2300      	movs	r3, #0
 80069c6:	2200      	movs	r2, #0
 80069c8:	f2c4 031c 	movt	r3, #16412	; 0x401c
 80069cc:	f002 fdd4 	bl	8009578 <__adddf3>
 80069d0:	f8dd c050 	ldr.w	ip, [sp, #80]	; 0x50
 80069d4:	4680      	mov	r8, r0
 80069d6:	f1a1 7950 	sub.w	r9, r1, #54525952	; 0x3400000
 80069da:	e4d7      	b.n	800638c <_dtoa_r+0x768>
 80069dc:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80069de:	4620      	mov	r0, r4
 80069e0:	f000 fe20 	bl	8007624 <__pow5mult>
 80069e4:	900b      	str	r0, [sp, #44]	; 0x2c
 80069e6:	f7ff bb52 	b.w	800608e <_dtoa_r+0x46a>
 80069ea:	2100      	movs	r1, #0
 80069ec:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 80069f0:	2000      	movs	r0, #0
 80069f2:	f6c3 71e0 	movt	r1, #16352	; 0x3fe0
 80069f6:	f002 fdbd 	bl	8009574 <__aeabi_dsub>
 80069fa:	4632      	mov	r2, r6
 80069fc:	463b      	mov	r3, r7
 80069fe:	f003 f9fd 	bl	8009dfc <__aeabi_dcmpgt>
 8006a02:	2800      	cmp	r0, #0
 8006a04:	f43f ae0a 	beq.w	800661c <_dtoa_r+0x9f8>
 8006a08:	4653      	mov	r3, sl
 8006a0a:	f10a 3aff 	add.w	sl, sl, #4294967295
 8006a0e:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 8006a12:	2a30      	cmp	r2, #48	; 0x30
 8006a14:	d0f8      	beq.n	8006a08 <_dtoa_r+0xde4>
 8006a16:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8006a18:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006a1c:	9308      	str	r3, [sp, #32]
 8006a1e:	9604      	str	r6, [sp, #16]
 8006a20:	f7ff bbb0 	b.w	8006184 <_dtoa_r+0x560>
 8006a24:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006a28:	2331      	movs	r3, #49	; 0x31
 8006a2a:	9904      	ldr	r1, [sp, #16]
 8006a2c:	f8cd b020 	str.w	fp, [sp, #32]
 8006a30:	3101      	adds	r1, #1
 8006a32:	f889 3000 	strb.w	r3, [r9]
 8006a36:	9104      	str	r1, [sp, #16]
 8006a38:	f7ff bb94 	b.w	8006164 <_dtoa_r+0x540>
 8006a3c:	9e15      	ldr	r6, [sp, #84]	; 0x54
 8006a3e:	2e00      	cmp	r6, #0
 8006a40:	d069      	beq.n	8006b16 <_dtoa_r+0xef2>
 8006a42:	f203 4333 	addw	r3, r3, #1075	; 0x433
 8006a46:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006a48:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8006a4a:	f7ff bbfc 	b.w	8006246 <_dtoa_r+0x622>
 8006a4e:	9c17      	ldr	r4, [sp, #92]	; 0x5c
 8006a50:	464d      	mov	r5, r9
 8006a52:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006a56:	462a      	mov	r2, r5
 8006a58:	9508      	str	r5, [sp, #32]
 8006a5a:	f7ff bad4 	b.w	8006006 <_dtoa_r+0x3e2>
 8006a5e:	2a00      	cmp	r2, #0
 8006a60:	960b      	str	r6, [sp, #44]	; 0x2c
 8006a62:	46cc      	mov	ip, r9
 8006a64:	463e      	mov	r6, r7
 8006a66:	9f05      	ldr	r7, [sp, #20]
 8006a68:	dd12      	ble.n	8006a90 <_dtoa_r+0xe6c>
 8006a6a:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8006a6c:	2201      	movs	r2, #1
 8006a6e:	4620      	mov	r0, r4
 8006a70:	f8cd 9008 	str.w	r9, [sp, #8]
 8006a74:	f000 fe32 	bl	80076dc <__lshift>
 8006a78:	4631      	mov	r1, r6
 8006a7a:	900b      	str	r0, [sp, #44]	; 0x2c
 8006a7c:	f000 fe8a 	bl	8007794 <__mcmp>
 8006a80:	f8dd c008 	ldr.w	ip, [sp, #8]
 8006a84:	2800      	cmp	r0, #0
 8006a86:	dd77      	ble.n	8006b78 <_dtoa_r+0xf54>
 8006a88:	2f39      	cmp	r7, #57	; 0x39
 8006a8a:	d062      	beq.n	8006b52 <_dtoa_r+0xf2e>
 8006a8c:	f10a 0731 	add.w	r7, sl, #49	; 0x31
 8006a90:	9b06      	ldr	r3, [sp, #24]
 8006a92:	4645      	mov	r5, r8
 8006a94:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006a98:	46e0      	mov	r8, ip
 8006a9a:	1c58      	adds	r0, r3, #1
 8006a9c:	701f      	strb	r7, [r3, #0]
 8006a9e:	9008      	str	r0, [sp, #32]
 8006aa0:	f7ff bb60 	b.w	8006164 <_dtoa_r+0x540>
 8006aa4:	d102      	bne.n	8006aac <_dtoa_r+0xe88>
 8006aa6:	07fb      	lsls	r3, r7, #31
 8006aa8:	f53f ad8d 	bmi.w	80065c6 <_dtoa_r+0x9a2>
 8006aac:	465b      	mov	r3, fp
 8006aae:	f10b 3bff 	add.w	fp, fp, #4294967295
 8006ab2:	f813 2c01 	ldrb.w	r2, [r3, #-1]
 8006ab6:	2a30      	cmp	r2, #48	; 0x30
 8006ab8:	d0f8      	beq.n	8006aac <_dtoa_r+0xe88>
 8006aba:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006abe:	9308      	str	r3, [sp, #32]
 8006ac0:	f7ff bb50 	b.w	8006164 <_dtoa_r+0x540>
 8006ac4:	2600      	movs	r6, #0
 8006ac6:	e541      	b.n	800654c <_dtoa_r+0x928>
 8006ac8:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8006acc:	4632      	mov	r2, r6
 8006ace:	463b      	mov	r3, r7
 8006ad0:	f003 f96c 	bl	8009dac <__aeabi_dcmpeq>
 8006ad4:	2800      	cmp	r0, #0
 8006ad6:	f43f af42 	beq.w	800695e <_dtoa_r+0xd3a>
 8006ada:	f018 0f01 	tst.w	r8, #1
 8006ade:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006ae2:	f43f af3e 	beq.w	8006962 <_dtoa_r+0xd3e>
 8006ae6:	f7ff ba81 	b.w	8005fec <_dtoa_r+0x3c8>
 8006aea:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8006aee:	4620      	mov	r0, r4
 8006af0:	f000 fbc0 	bl	8007274 <_Balloc>
 8006af4:	f8d8 3010 	ldr.w	r3, [r8, #16]
 8006af8:	f108 010c 	add.w	r1, r8, #12
 8006afc:	1c9a      	adds	r2, r3, #2
 8006afe:	0092      	lsls	r2, r2, #2
 8006b00:	4605      	mov	r5, r0
 8006b02:	300c      	adds	r0, #12
 8006b04:	f7fd fcc0 	bl	8004488 <memcpy>
 8006b08:	4620      	mov	r0, r4
 8006b0a:	4629      	mov	r1, r5
 8006b0c:	2201      	movs	r2, #1
 8006b0e:	f000 fde5 	bl	80076dc <__lshift>
 8006b12:	4684      	mov	ip, r0
 8006b14:	e696      	b.n	8006844 <_dtoa_r+0xc20>
 8006b16:	9b18      	ldr	r3, [sp, #96]	; 0x60
 8006b18:	9e0c      	ldr	r6, [sp, #48]	; 0x30
 8006b1a:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8006b1c:	f1c3 0336 	rsb	r3, r3, #54	; 0x36
 8006b20:	f7ff bb91 	b.w	8006246 <_dtoa_r+0x622>
 8006b24:	960b      	str	r6, [sp, #44]	; 0x2c
 8006b26:	463e      	mov	r6, r7
 8006b28:	9f05      	ldr	r7, [sp, #20]
 8006b2a:	46cc      	mov	ip, r9
 8006b2c:	2f39      	cmp	r7, #57	; 0x39
 8006b2e:	d010      	beq.n	8006b52 <_dtoa_r+0xf2e>
 8006b30:	9b06      	ldr	r3, [sp, #24]
 8006b32:	3701      	adds	r7, #1
 8006b34:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006b38:	4645      	mov	r5, r8
 8006b3a:	1c58      	adds	r0, r3, #1
 8006b3c:	46e0      	mov	r8, ip
 8006b3e:	701f      	strb	r7, [r3, #0]
 8006b40:	9008      	str	r0, [sp, #32]
 8006b42:	f7ff bb0f 	b.w	8006164 <_dtoa_r+0x540>
 8006b46:	960b      	str	r6, [sp, #44]	; 0x2c
 8006b48:	4645      	mov	r5, r8
 8006b4a:	463e      	mov	r6, r7
 8006b4c:	46c8      	mov	r8, r9
 8006b4e:	9f05      	ldr	r7, [sp, #20]
 8006b50:	e52d      	b.n	80065ae <_dtoa_r+0x98a>
 8006b52:	9b06      	ldr	r3, [sp, #24]
 8006b54:	2239      	movs	r2, #57	; 0x39
 8006b56:	4645      	mov	r5, r8
 8006b58:	9908      	ldr	r1, [sp, #32]
 8006b5a:	46e0      	mov	r8, ip
 8006b5c:	f103 0b01 	add.w	fp, r3, #1
 8006b60:	701a      	strb	r2, [r3, #0]
 8006b62:	e53a      	b.n	80065da <_dtoa_r+0x9b6>
 8006b64:	960b      	str	r6, [sp, #44]	; 0x2c
 8006b66:	463e      	mov	r6, r7
 8006b68:	9f05      	ldr	r7, [sp, #20]
 8006b6a:	46cc      	mov	ip, r9
 8006b6c:	2f39      	cmp	r7, #57	; 0x39
 8006b6e:	d0f0      	beq.n	8006b52 <_dtoa_r+0xf2e>
 8006b70:	f1bb 0f00 	cmp.w	fp, #0
 8006b74:	dc8a      	bgt.n	8006a8c <_dtoa_r+0xe68>
 8006b76:	e78b      	b.n	8006a90 <_dtoa_r+0xe6c>
 8006b78:	d18a      	bne.n	8006a90 <_dtoa_r+0xe6c>
 8006b7a:	07fa      	lsls	r2, r7, #31
 8006b7c:	d588      	bpl.n	8006a90 <_dtoa_r+0xe6c>
 8006b7e:	e783      	b.n	8006a88 <_dtoa_r+0xe64>
 8006b80:	f04f 0802 	mov.w	r8, #2
 8006b84:	f7ff bbdd 	b.w	8006342 <_dtoa_r+0x71e>
 8006b88:	9e16      	ldr	r6, [sp, #88]	; 0x58
 8006b8a:	f8dd 9020 	ldr.w	r9, [sp, #32]
 8006b8e:	9508      	str	r5, [sp, #32]
 8006b90:	9604      	str	r6, [sp, #16]
 8006b92:	f7ff baf7 	b.w	8006184 <_dtoa_r+0x560>
 8006b96:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8006b98:	9209      	str	r2, [sp, #36]	; 0x24
 8006b9a:	f7ff bac5 	b.w	8006128 <_dtoa_r+0x504>
 8006b9e:	9309      	str	r3, [sp, #36]	; 0x24
 8006ba0:	f7ff bac2 	b.w	8006128 <_dtoa_r+0x504>
 8006ba4:	f43f aa9f 	beq.w	80060e6 <_dtoa_r+0x4c2>
 8006ba8:	f1c3 033c 	rsb	r3, r3, #60	; 0x3c
 8006bac:	e521      	b.n	80065f2 <_dtoa_r+0x9ce>
 8006bae:	bf00      	nop

08006bb0 <_setlocale_r>:
 8006bb0:	b510      	push	{r4, lr}
 8006bb2:	4614      	mov	r4, r2
 8006bb4:	b13a      	cbz	r2, 8006bc6 <_setlocale_r+0x16>
 8006bb6:	f64a 210c 	movw	r1, #43532	; 0xaa0c
 8006bba:	4610      	mov	r0, r2
 8006bbc:	f6c0 0100 	movt	r1, #2048	; 0x800
 8006bc0:	f001 f830 	bl	8007c24 <strcmp>
 8006bc4:	b920      	cbnz	r0, 8006bd0 <_setlocale_r+0x20>
 8006bc6:	f64a 10b4 	movw	r0, #43444	; 0xa9b4
 8006bca:	f6c0 0000 	movt	r0, #2048	; 0x800
 8006bce:	bd10      	pop	{r4, pc}
 8006bd0:	f64a 11b4 	movw	r1, #43444	; 0xa9b4
 8006bd4:	4620      	mov	r0, r4
 8006bd6:	f6c0 0100 	movt	r1, #2048	; 0x800
 8006bda:	f001 f823 	bl	8007c24 <strcmp>
 8006bde:	2800      	cmp	r0, #0
 8006be0:	d0f1      	beq.n	8006bc6 <_setlocale_r+0x16>
 8006be2:	f24a 71ac 	movw	r1, #42924	; 0xa7ac
 8006be6:	4620      	mov	r0, r4
 8006be8:	f6c0 0100 	movt	r1, #2048	; 0x800
 8006bec:	f001 f81a 	bl	8007c24 <strcmp>
 8006bf0:	f64a 13b4 	movw	r3, #43444	; 0xa9b4
 8006bf4:	f6c0 0300 	movt	r3, #2048	; 0x800
 8006bf8:	2800      	cmp	r0, #0
 8006bfa:	bf0c      	ite	eq
 8006bfc:	4618      	moveq	r0, r3
 8006bfe:	2000      	movne	r0, #0
 8006c00:	bd10      	pop	{r4, pc}
 8006c02:	bf00      	nop

08006c04 <__locale_charset>:
 8006c04:	f240 00f8 	movw	r0, #248	; 0xf8
 8006c08:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8006c0c:	4770      	bx	lr
 8006c0e:	bf00      	nop

08006c10 <__locale_mb_cur_max>:
 8006c10:	f240 03f8 	movw	r3, #248	; 0xf8
 8006c14:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8006c18:	6a18      	ldr	r0, [r3, #32]
 8006c1a:	4770      	bx	lr

08006c1c <__locale_msgcharset>:
 8006c1c:	4800      	ldr	r0, [pc, #0]	; (8006c20 <__locale_msgcharset+0x4>)
 8006c1e:	4770      	bx	lr
 8006c20:	2000011c 	andcs	r0, r0, ip, lsl r1

08006c24 <__locale_cjk_lang>:
 8006c24:	2000      	movs	r0, #0
 8006c26:	4770      	bx	lr

08006c28 <_localeconv_r>:
 8006c28:	4800      	ldr	r0, [pc, #0]	; (8006c2c <_localeconv_r+0x4>)
 8006c2a:	4770      	bx	lr
 8006c2c:	2000013c 	andcs	r0, r0, ip, lsr r1

08006c30 <setlocale>:
 8006c30:	f240 0304 	movw	r3, #4
 8006c34:	460a      	mov	r2, r1
 8006c36:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8006c3a:	4601      	mov	r1, r0
 8006c3c:	6818      	ldr	r0, [r3, #0]
 8006c3e:	f7ff bfb7 	b.w	8006bb0 <_setlocale_r>
 8006c42:	bf00      	nop

08006c44 <localeconv>:
 8006c44:	4800      	ldr	r0, [pc, #0]	; (8006c48 <localeconv+0x4>)
 8006c46:	4770      	bx	lr
 8006c48:	2000013c 	andcs	r0, r0, ip, lsr r1

08006c4c <malloc>:
 8006c4c:	f240 0304 	movw	r3, #4
 8006c50:	4601      	mov	r1, r0
 8006c52:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8006c56:	6818      	ldr	r0, [r3, #0]
 8006c58:	f000 b808 	b.w	8006c6c <_malloc_r>

08006c5c <free>:
 8006c5c:	f240 0304 	movw	r3, #4
 8006c60:	4601      	mov	r1, r0
 8006c62:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8006c66:	6818      	ldr	r0, [r3, #0]
 8006c68:	f001 bf9e 	b.w	8008ba8 <_free_r>

08006c6c <_malloc_r>:
 8006c6c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8006c70:	f101 040b 	add.w	r4, r1, #11
 8006c74:	2c16      	cmp	r4, #22
 8006c76:	b083      	sub	sp, #12
 8006c78:	bf8e      	itee	hi
 8006c7a:	f024 0407 	bichi.w	r4, r4, #7
 8006c7e:	2300      	movls	r3, #0
 8006c80:	2410      	movls	r4, #16
 8006c82:	4607      	mov	r7, r0
 8006c84:	bf88      	it	hi
 8006c86:	0fe3      	lsrhi	r3, r4, #31
 8006c88:	428c      	cmp	r4, r1
 8006c8a:	bf2c      	ite	cs
 8006c8c:	4619      	movcs	r1, r3
 8006c8e:	f043 0101 	orrcc.w	r1, r3, #1
 8006c92:	2900      	cmp	r1, #0
 8006c94:	f040 80ba 	bne.w	8006e0c <_malloc_r+0x1a0>
 8006c98:	f000 fae8 	bl	800726c <__malloc_lock>
 8006c9c:	f5b4 7ffc 	cmp.w	r4, #504	; 0x1f8
 8006ca0:	d220      	bcs.n	8006ce4 <_malloc_r+0x78>
 8006ca2:	f240 1674 	movw	r6, #372	; 0x174
 8006ca6:	ea4f 0cd4 	mov.w	ip, r4, lsr #3
 8006caa:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8006cae:	eb06 02cc 	add.w	r2, r6, ip, lsl #3
 8006cb2:	68d3      	ldr	r3, [r2, #12]
 8006cb4:	4293      	cmp	r3, r2
 8006cb6:	f000 81f7 	beq.w	80070a8 <_malloc_r+0x43c>
 8006cba:	6859      	ldr	r1, [r3, #4]
 8006cbc:	f103 0808 	add.w	r8, r3, #8
 8006cc0:	68da      	ldr	r2, [r3, #12]
 8006cc2:	4638      	mov	r0, r7
 8006cc4:	f021 0403 	bic.w	r4, r1, #3
 8006cc8:	6899      	ldr	r1, [r3, #8]
 8006cca:	4423      	add	r3, r4
 8006ccc:	685c      	ldr	r4, [r3, #4]
 8006cce:	60ca      	str	r2, [r1, #12]
 8006cd0:	f044 0401 	orr.w	r4, r4, #1
 8006cd4:	6091      	str	r1, [r2, #8]
 8006cd6:	605c      	str	r4, [r3, #4]
 8006cd8:	f000 faca 	bl	8007270 <__malloc_unlock>
 8006cdc:	4640      	mov	r0, r8
 8006cde:	b003      	add	sp, #12
 8006ce0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ce4:	ea5f 2c54 	movs.w	ip, r4, lsr #9
 8006ce8:	bf04      	itt	eq
 8006cea:	257e      	moveq	r5, #126	; 0x7e
 8006cec:	f04f 0c3f 	moveq.w	ip, #63	; 0x3f
 8006cf0:	f040 8094 	bne.w	8006e1c <_malloc_r+0x1b0>
 8006cf4:	f240 1674 	movw	r6, #372	; 0x174
 8006cf8:	f2c2 0600 	movt	r6, #8192	; 0x2000
 8006cfc:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 8006d00:	68eb      	ldr	r3, [r5, #12]
 8006d02:	429d      	cmp	r5, r3
 8006d04:	d106      	bne.n	8006d14 <_malloc_r+0xa8>
 8006d06:	e00d      	b.n	8006d24 <_malloc_r+0xb8>
 8006d08:	2a00      	cmp	r2, #0
 8006d0a:	f280 8164 	bge.w	8006fd6 <_malloc_r+0x36a>
 8006d0e:	68db      	ldr	r3, [r3, #12]
 8006d10:	429d      	cmp	r5, r3
 8006d12:	d007      	beq.n	8006d24 <_malloc_r+0xb8>
 8006d14:	6859      	ldr	r1, [r3, #4]
 8006d16:	f021 0103 	bic.w	r1, r1, #3
 8006d1a:	1b0a      	subs	r2, r1, r4
 8006d1c:	2a0f      	cmp	r2, #15
 8006d1e:	ddf3      	ble.n	8006d08 <_malloc_r+0x9c>
 8006d20:	f10c 3cff 	add.w	ip, ip, #4294967295
 8006d24:	f10c 0c01 	add.w	ip, ip, #1
 8006d28:	f240 1274 	movw	r2, #372	; 0x174
 8006d2c:	6933      	ldr	r3, [r6, #16]
 8006d2e:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8006d32:	f102 0e08 	add.w	lr, r2, #8
 8006d36:	4573      	cmp	r3, lr
 8006d38:	bf08      	it	eq
 8006d3a:	6851      	ldreq	r1, [r2, #4]
 8006d3c:	d023      	beq.n	8006d86 <_malloc_r+0x11a>
 8006d3e:	6858      	ldr	r0, [r3, #4]
 8006d40:	f020 0003 	bic.w	r0, r0, #3
 8006d44:	1b01      	subs	r1, r0, r4
 8006d46:	290f      	cmp	r1, #15
 8006d48:	f300 8192 	bgt.w	8007070 <_malloc_r+0x404>
 8006d4c:	2900      	cmp	r1, #0
 8006d4e:	f8c2 e014 	str.w	lr, [r2, #20]
 8006d52:	f8c2 e010 	str.w	lr, [r2, #16]
 8006d56:	da6c      	bge.n	8006e32 <_malloc_r+0x1c6>
 8006d58:	f5b0 7f00 	cmp.w	r0, #512	; 0x200
 8006d5c:	f080 8161 	bcs.w	8007022 <_malloc_r+0x3b6>
 8006d60:	08c0      	lsrs	r0, r0, #3
 8006d62:	f04f 0801 	mov.w	r8, #1
 8006d66:	6851      	ldr	r1, [r2, #4]
 8006d68:	eb02 05c0 	add.w	r5, r2, r0, lsl #3
 8006d6c:	1080      	asrs	r0, r0, #2
 8006d6e:	fa08 f800 	lsl.w	r8, r8, r0
 8006d72:	ea48 0801 	orr.w	r8, r8, r1
 8006d76:	68a8      	ldr	r0, [r5, #8]
 8006d78:	4641      	mov	r1, r8
 8006d7a:	60dd      	str	r5, [r3, #12]
 8006d7c:	f8c2 8004 	str.w	r8, [r2, #4]
 8006d80:	6098      	str	r0, [r3, #8]
 8006d82:	60ab      	str	r3, [r5, #8]
 8006d84:	60c3      	str	r3, [r0, #12]
 8006d86:	2201      	movs	r2, #1
 8006d88:	ea4f 03ac 	mov.w	r3, ip, asr #2
 8006d8c:	fa02 f303 	lsl.w	r3, r2, r3
 8006d90:	428b      	cmp	r3, r1
 8006d92:	d85c      	bhi.n	8006e4e <_malloc_r+0x1e2>
 8006d94:	4219      	tst	r1, r3
 8006d96:	d10b      	bne.n	8006db0 <_malloc_r+0x144>
 8006d98:	4093      	lsls	r3, r2
 8006d9a:	f02c 0c03 	bic.w	ip, ip, #3
 8006d9e:	4219      	tst	r1, r3
 8006da0:	f10c 0c04 	add.w	ip, ip, #4
 8006da4:	d104      	bne.n	8006db0 <_malloc_r+0x144>
 8006da6:	005b      	lsls	r3, r3, #1
 8006da8:	f10c 0c04 	add.w	ip, ip, #4
 8006dac:	4219      	tst	r1, r3
 8006dae:	d0fa      	beq.n	8006da6 <_malloc_r+0x13a>
 8006db0:	eb06 08cc 	add.w	r8, r6, ip, lsl #3
 8006db4:	46e1      	mov	r9, ip
 8006db6:	4640      	mov	r0, r8
 8006db8:	68c2      	ldr	r2, [r0, #12]
 8006dba:	4290      	cmp	r0, r2
 8006dbc:	d107      	bne.n	8006dce <_malloc_r+0x162>
 8006dbe:	e16b      	b.n	8007098 <_malloc_r+0x42c>
 8006dc0:	2900      	cmp	r1, #0
 8006dc2:	f280 817b 	bge.w	80070bc <_malloc_r+0x450>
 8006dc6:	68d2      	ldr	r2, [r2, #12]
 8006dc8:	4290      	cmp	r0, r2
 8006dca:	f000 8165 	beq.w	8007098 <_malloc_r+0x42c>
 8006dce:	6855      	ldr	r5, [r2, #4]
 8006dd0:	f025 0503 	bic.w	r5, r5, #3
 8006dd4:	1b29      	subs	r1, r5, r4
 8006dd6:	290f      	cmp	r1, #15
 8006dd8:	ddf2      	ble.n	8006dc0 <_malloc_r+0x154>
 8006dda:	4690      	mov	r8, r2
 8006ddc:	68d5      	ldr	r5, [r2, #12]
 8006dde:	4638      	mov	r0, r7
 8006de0:	1913      	adds	r3, r2, r4
 8006de2:	f858 7f08 	ldr.w	r7, [r8, #8]!
 8006de6:	f044 0c01 	orr.w	ip, r4, #1
 8006dea:	f041 0401 	orr.w	r4, r1, #1
 8006dee:	f8c2 c004 	str.w	ip, [r2, #4]
 8006df2:	60fd      	str	r5, [r7, #12]
 8006df4:	60af      	str	r7, [r5, #8]
 8006df6:	6173      	str	r3, [r6, #20]
 8006df8:	6133      	str	r3, [r6, #16]
 8006dfa:	f8c3 e00c 	str.w	lr, [r3, #12]
 8006dfe:	f8c3 e008 	str.w	lr, [r3, #8]
 8006e02:	605c      	str	r4, [r3, #4]
 8006e04:	5059      	str	r1, [r3, r1]
 8006e06:	f000 fa33 	bl	8007270 <__malloc_unlock>
 8006e0a:	e767      	b.n	8006cdc <_malloc_r+0x70>
 8006e0c:	f04f 0800 	mov.w	r8, #0
 8006e10:	230c      	movs	r3, #12
 8006e12:	6003      	str	r3, [r0, #0]
 8006e14:	4640      	mov	r0, r8
 8006e16:	b003      	add	sp, #12
 8006e18:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e1c:	f1bc 0f04 	cmp.w	ip, #4
 8006e20:	f200 80eb 	bhi.w	8006ffa <_malloc_r+0x38e>
 8006e24:	ea4f 1c94 	mov.w	ip, r4, lsr #6
 8006e28:	f10c 0c38 	add.w	ip, ip, #56	; 0x38
 8006e2c:	ea4f 054c 	mov.w	r5, ip, lsl #1
 8006e30:	e760      	b.n	8006cf4 <_malloc_r+0x88>
 8006e32:	181a      	adds	r2, r3, r0
 8006e34:	f103 0808 	add.w	r8, r3, #8
 8006e38:	4638      	mov	r0, r7
 8006e3a:	6853      	ldr	r3, [r2, #4]
 8006e3c:	f043 0301 	orr.w	r3, r3, #1
 8006e40:	6053      	str	r3, [r2, #4]
 8006e42:	f000 fa15 	bl	8007270 <__malloc_unlock>
 8006e46:	4640      	mov	r0, r8
 8006e48:	b003      	add	sp, #12
 8006e4a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006e4e:	68b5      	ldr	r5, [r6, #8]
 8006e50:	686b      	ldr	r3, [r5, #4]
 8006e52:	f023 0a03 	bic.w	sl, r3, #3
 8006e56:	4554      	cmp	r4, sl
 8006e58:	d804      	bhi.n	8006e64 <_malloc_r+0x1f8>
 8006e5a:	ebc4 030a 	rsb	r3, r4, sl
 8006e5e:	2b0f      	cmp	r3, #15
 8006e60:	f300 80a8 	bgt.w	8006fb4 <_malloc_r+0x348>
 8006e64:	f240 7924 	movw	r9, #1828	; 0x724
 8006e68:	f8d6 1408 	ldr.w	r1, [r6, #1032]	; 0x408
 8006e6c:	f2c2 0900 	movt	r9, #8192	; 0x2000
 8006e70:	4638      	mov	r0, r7
 8006e72:	3101      	adds	r1, #1
 8006e74:	eb05 020a 	add.w	r2, r5, sl
 8006e78:	f8d9 3000 	ldr.w	r3, [r9]
 8006e7c:	9201      	str	r2, [sp, #4]
 8006e7e:	4423      	add	r3, r4
 8006e80:	bf17      	itett	ne
 8006e82:	f503 5380 	addne.w	r3, r3, #4096	; 0x1000
 8006e86:	f103 0b10 	addeq.w	fp, r3, #16
 8006e8a:	330f      	addne	r3, #15
 8006e8c:	f423 637f 	bicne.w	r3, r3, #4080	; 0xff0
 8006e90:	bf18      	it	ne
 8006e92:	f023 0b0f 	bicne.w	fp, r3, #15
 8006e96:	4659      	mov	r1, fp
 8006e98:	f000 feb0 	bl	8007bfc <_sbrk_r>
 8006e9c:	9a01      	ldr	r2, [sp, #4]
 8006e9e:	f1b0 3fff 	cmp.w	r0, #4294967295
 8006ea2:	4680      	mov	r8, r0
 8006ea4:	f000 8120 	beq.w	80070e8 <_malloc_r+0x47c>
 8006ea8:	4282      	cmp	r2, r0
 8006eaa:	f200 811a 	bhi.w	80070e2 <_malloc_r+0x476>
 8006eae:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8006eb2:	4542      	cmp	r2, r8
 8006eb4:	445b      	add	r3, fp
 8006eb6:	f8c9 3004 	str.w	r3, [r9, #4]
 8006eba:	f000 8165 	beq.w	8007188 <_malloc_r+0x51c>
 8006ebe:	f8d6 1408 	ldr.w	r1, [r6, #1032]	; 0x408
 8006ec2:	f240 1074 	movw	r0, #372	; 0x174
 8006ec6:	f2c2 0000 	movt	r0, #8192	; 0x2000
 8006eca:	3101      	adds	r1, #1
 8006ecc:	bf17      	itett	ne
 8006ece:	ebc2 0208 	rsbne	r2, r2, r8
 8006ed2:	f8c0 8408 	streq.w	r8, [r0, #1032]	; 0x408
 8006ed6:	189b      	addne	r3, r3, r2
 8006ed8:	f8c9 3004 	strne.w	r3, [r9, #4]
 8006edc:	f018 0307 	ands.w	r3, r8, #7
 8006ee0:	4638      	mov	r0, r7
 8006ee2:	bf1f      	itttt	ne
 8006ee4:	f1c3 0208 	rsbne	r2, r3, #8
 8006ee8:	f5c3 5380 	rsbne	r3, r3, #4096	; 0x1000
 8006eec:	4490      	addne	r8, r2
 8006eee:	f103 0208 	addne.w	r2, r3, #8
 8006ef2:	eb08 030b 	add.w	r3, r8, fp
 8006ef6:	bf08      	it	eq
 8006ef8:	f44f 5280 	moveq.w	r2, #4096	; 0x1000
 8006efc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 8006f00:	ebc3 0b02 	rsb	fp, r3, r2
 8006f04:	4659      	mov	r1, fp
 8006f06:	f000 fe79 	bl	8007bfc <_sbrk_r>
 8006f0a:	f240 7224 	movw	r2, #1828	; 0x724
 8006f0e:	f8c6 8008 	str.w	r8, [r6, #8]
 8006f12:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8006f16:	1c43      	adds	r3, r0, #1
 8006f18:	f8d9 3004 	ldr.w	r3, [r9, #4]
 8006f1c:	bf15      	itete	ne
 8006f1e:	ebc8 0100 	rsbne	r1, r8, r0
 8006f22:	2101      	moveq	r1, #1
 8006f24:	4459      	addne	r1, fp
 8006f26:	f04f 0b00 	moveq.w	fp, #0
 8006f2a:	bf18      	it	ne
 8006f2c:	f041 0101 	orrne.w	r1, r1, #1
 8006f30:	42b5      	cmp	r5, r6
 8006f32:	445b      	add	r3, fp
 8006f34:	f8c8 1004 	str.w	r1, [r8, #4]
 8006f38:	f8c9 3004 	str.w	r3, [r9, #4]
 8006f3c:	d018      	beq.n	8006f70 <_malloc_r+0x304>
 8006f3e:	f1ba 0f0f 	cmp.w	sl, #15
 8006f42:	f240 8100 	bls.w	8007146 <_malloc_r+0x4da>
 8006f46:	f1aa 000c 	sub.w	r0, sl, #12
 8006f4a:	6869      	ldr	r1, [r5, #4]
 8006f4c:	f020 0007 	bic.w	r0, r0, #7
 8006f50:	f04f 0c05 	mov.w	ip, #5
 8006f54:	eb05 0e00 	add.w	lr, r5, r0
 8006f58:	280f      	cmp	r0, #15
 8006f5a:	f001 0101 	and.w	r1, r1, #1
 8006f5e:	ea40 0101 	orr.w	r1, r0, r1
 8006f62:	6069      	str	r1, [r5, #4]
 8006f64:	f8ce c004 	str.w	ip, [lr, #4]
 8006f68:	f8ce c008 	str.w	ip, [lr, #8]
 8006f6c:	f200 8118 	bhi.w	80071a0 <_malloc_r+0x534>
 8006f70:	f240 7224 	movw	r2, #1828	; 0x724
 8006f74:	f8d9 102c 	ldr.w	r1, [r9, #44]	; 0x2c
 8006f78:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8006f7c:	68b5      	ldr	r5, [r6, #8]
 8006f7e:	428b      	cmp	r3, r1
 8006f80:	f8d9 1030 	ldr.w	r1, [r9, #48]	; 0x30
 8006f84:	bf88      	it	hi
 8006f86:	62d3      	strhi	r3, [r2, #44]	; 0x2c
 8006f88:	f240 7224 	movw	r2, #1828	; 0x724
 8006f8c:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8006f90:	428b      	cmp	r3, r1
 8006f92:	bf88      	it	hi
 8006f94:	6313      	strhi	r3, [r2, #48]	; 0x30
 8006f96:	686a      	ldr	r2, [r5, #4]
 8006f98:	f022 0203 	bic.w	r2, r2, #3
 8006f9c:	4294      	cmp	r4, r2
 8006f9e:	ebc4 0302 	rsb	r3, r4, r2
 8006fa2:	d801      	bhi.n	8006fa8 <_malloc_r+0x33c>
 8006fa4:	2b0f      	cmp	r3, #15
 8006fa6:	dc05      	bgt.n	8006fb4 <_malloc_r+0x348>
 8006fa8:	4638      	mov	r0, r7
 8006faa:	f04f 0800 	mov.w	r8, #0
 8006fae:	f000 f95f 	bl	8007270 <__malloc_unlock>
 8006fb2:	e693      	b.n	8006cdc <_malloc_r+0x70>
 8006fb4:	192a      	adds	r2, r5, r4
 8006fb6:	f043 0301 	orr.w	r3, r3, #1
 8006fba:	4638      	mov	r0, r7
 8006fbc:	f044 0401 	orr.w	r4, r4, #1
 8006fc0:	606c      	str	r4, [r5, #4]
 8006fc2:	f105 0808 	add.w	r8, r5, #8
 8006fc6:	60b2      	str	r2, [r6, #8]
 8006fc8:	6053      	str	r3, [r2, #4]
 8006fca:	f000 f951 	bl	8007270 <__malloc_unlock>
 8006fce:	4640      	mov	r0, r8
 8006fd0:	b003      	add	sp, #12
 8006fd2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006fd6:	4419      	add	r1, r3
 8006fd8:	68da      	ldr	r2, [r3, #12]
 8006fda:	689c      	ldr	r4, [r3, #8]
 8006fdc:	4638      	mov	r0, r7
 8006fde:	684d      	ldr	r5, [r1, #4]
 8006fe0:	f103 0808 	add.w	r8, r3, #8
 8006fe4:	60e2      	str	r2, [r4, #12]
 8006fe6:	f045 0501 	orr.w	r5, r5, #1
 8006fea:	6094      	str	r4, [r2, #8]
 8006fec:	604d      	str	r5, [r1, #4]
 8006fee:	f000 f93f 	bl	8007270 <__malloc_unlock>
 8006ff2:	4640      	mov	r0, r8
 8006ff4:	b003      	add	sp, #12
 8006ff6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8006ffa:	f1bc 0f14 	cmp.w	ip, #20
 8006ffe:	bf9c      	itt	ls
 8007000:	f10c 0c5b 	addls.w	ip, ip, #91	; 0x5b
 8007004:	ea4f 054c 	movls.w	r5, ip, lsl #1
 8007008:	f67f ae74 	bls.w	8006cf4 <_malloc_r+0x88>
 800700c:	f1bc 0f54 	cmp.w	ip, #84	; 0x54
 8007010:	f200 808f 	bhi.w	8007132 <_malloc_r+0x4c6>
 8007014:	ea4f 3c14 	mov.w	ip, r4, lsr #12
 8007018:	f10c 0c6e 	add.w	ip, ip, #110	; 0x6e
 800701c:	ea4f 054c 	mov.w	r5, ip, lsl #1
 8007020:	e668      	b.n	8006cf4 <_malloc_r+0x88>
 8007022:	0a42      	lsrs	r2, r0, #9
 8007024:	2a04      	cmp	r2, #4
 8007026:	d958      	bls.n	80070da <_malloc_r+0x46e>
 8007028:	2a14      	cmp	r2, #20
 800702a:	bf9c      	itt	ls
 800702c:	f102 015b 	addls.w	r1, r2, #91	; 0x5b
 8007030:	004d      	lslls	r5, r1, #1
 8007032:	d905      	bls.n	8007040 <_malloc_r+0x3d4>
 8007034:	2a54      	cmp	r2, #84	; 0x54
 8007036:	f200 80bc 	bhi.w	80071b2 <_malloc_r+0x546>
 800703a:	0b01      	lsrs	r1, r0, #12
 800703c:	316e      	adds	r1, #110	; 0x6e
 800703e:	004d      	lsls	r5, r1, #1
 8007040:	eb06 0585 	add.w	r5, r6, r5, lsl #2
 8007044:	f240 1874 	movw	r8, #372	; 0x174
 8007048:	f2c2 0800 	movt	r8, #8192	; 0x2000
 800704c:	68aa      	ldr	r2, [r5, #8]
 800704e:	42aa      	cmp	r2, r5
 8007050:	d07f      	beq.n	8007152 <_malloc_r+0x4e6>
 8007052:	6851      	ldr	r1, [r2, #4]
 8007054:	f021 0103 	bic.w	r1, r1, #3
 8007058:	4288      	cmp	r0, r1
 800705a:	d202      	bcs.n	8007062 <_malloc_r+0x3f6>
 800705c:	6892      	ldr	r2, [r2, #8]
 800705e:	4295      	cmp	r5, r2
 8007060:	d1f7      	bne.n	8007052 <_malloc_r+0x3e6>
 8007062:	68d0      	ldr	r0, [r2, #12]
 8007064:	6871      	ldr	r1, [r6, #4]
 8007066:	60d8      	str	r0, [r3, #12]
 8007068:	609a      	str	r2, [r3, #8]
 800706a:	6083      	str	r3, [r0, #8]
 800706c:	60d3      	str	r3, [r2, #12]
 800706e:	e68a      	b.n	8006d86 <_malloc_r+0x11a>
 8007070:	191d      	adds	r5, r3, r4
 8007072:	f041 0601 	orr.w	r6, r1, #1
 8007076:	f044 0401 	orr.w	r4, r4, #1
 800707a:	4638      	mov	r0, r7
 800707c:	605c      	str	r4, [r3, #4]
 800707e:	f103 0808 	add.w	r8, r3, #8
 8007082:	6155      	str	r5, [r2, #20]
 8007084:	6115      	str	r5, [r2, #16]
 8007086:	f8c5 e00c 	str.w	lr, [r5, #12]
 800708a:	f8c5 e008 	str.w	lr, [r5, #8]
 800708e:	606e      	str	r6, [r5, #4]
 8007090:	5069      	str	r1, [r5, r1]
 8007092:	f000 f8ed 	bl	8007270 <__malloc_unlock>
 8007096:	e621      	b.n	8006cdc <_malloc_r+0x70>
 8007098:	f109 0901 	add.w	r9, r9, #1
 800709c:	3008      	adds	r0, #8
 800709e:	f019 0f03 	tst.w	r9, #3
 80070a2:	f47f ae89 	bne.w	8006db8 <_malloc_r+0x14c>
 80070a6:	e028      	b.n	80070fa <_malloc_r+0x48e>
 80070a8:	f103 0208 	add.w	r2, r3, #8
 80070ac:	695b      	ldr	r3, [r3, #20]
 80070ae:	429a      	cmp	r2, r3
 80070b0:	bf08      	it	eq
 80070b2:	f10c 0c02 	addeq.w	ip, ip, #2
 80070b6:	f43f ae37 	beq.w	8006d28 <_malloc_r+0xbc>
 80070ba:	e5fe      	b.n	8006cba <_malloc_r+0x4e>
 80070bc:	4690      	mov	r8, r2
 80070be:	4415      	add	r5, r2
 80070c0:	68d3      	ldr	r3, [r2, #12]
 80070c2:	4638      	mov	r0, r7
 80070c4:	f858 2f08 	ldr.w	r2, [r8, #8]!
 80070c8:	6869      	ldr	r1, [r5, #4]
 80070ca:	f041 0101 	orr.w	r1, r1, #1
 80070ce:	6069      	str	r1, [r5, #4]
 80070d0:	60d3      	str	r3, [r2, #12]
 80070d2:	609a      	str	r2, [r3, #8]
 80070d4:	f000 f8cc 	bl	8007270 <__malloc_unlock>
 80070d8:	e600      	b.n	8006cdc <_malloc_r+0x70>
 80070da:	0981      	lsrs	r1, r0, #6
 80070dc:	3138      	adds	r1, #56	; 0x38
 80070de:	004d      	lsls	r5, r1, #1
 80070e0:	e7ae      	b.n	8007040 <_malloc_r+0x3d4>
 80070e2:	42b5      	cmp	r5, r6
 80070e4:	f43f aee3 	beq.w	8006eae <_malloc_r+0x242>
 80070e8:	68b5      	ldr	r5, [r6, #8]
 80070ea:	686a      	ldr	r2, [r5, #4]
 80070ec:	f022 0203 	bic.w	r2, r2, #3
 80070f0:	e754      	b.n	8006f9c <_malloc_r+0x330>
 80070f2:	f8d8 8000 	ldr.w	r8, [r8]
 80070f6:	4590      	cmp	r8, r2
 80070f8:	d16d      	bne.n	80071d6 <_malloc_r+0x56a>
 80070fa:	f01c 0f03 	tst.w	ip, #3
 80070fe:	f1a8 0208 	sub.w	r2, r8, #8
 8007102:	f10c 3cff 	add.w	ip, ip, #4294967295
 8007106:	d1f4      	bne.n	80070f2 <_malloc_r+0x486>
 8007108:	6872      	ldr	r2, [r6, #4]
 800710a:	ea22 0203 	bic.w	r2, r2, r3
 800710e:	6072      	str	r2, [r6, #4]
 8007110:	005b      	lsls	r3, r3, #1
 8007112:	4293      	cmp	r3, r2
 8007114:	f63f ae9b 	bhi.w	8006e4e <_malloc_r+0x1e2>
 8007118:	2b00      	cmp	r3, #0
 800711a:	f43f ae98 	beq.w	8006e4e <_malloc_r+0x1e2>
 800711e:	421a      	tst	r2, r3
 8007120:	46cc      	mov	ip, r9
 8007122:	f47f ae45 	bne.w	8006db0 <_malloc_r+0x144>
 8007126:	005b      	lsls	r3, r3, #1
 8007128:	f10c 0c04 	add.w	ip, ip, #4
 800712c:	421a      	tst	r2, r3
 800712e:	d0fa      	beq.n	8007126 <_malloc_r+0x4ba>
 8007130:	e63e      	b.n	8006db0 <_malloc_r+0x144>
 8007132:	f5bc 7faa 	cmp.w	ip, #340	; 0x154
 8007136:	d818      	bhi.n	800716a <_malloc_r+0x4fe>
 8007138:	ea4f 3cd4 	mov.w	ip, r4, lsr #15
 800713c:	f10c 0c77 	add.w	ip, ip, #119	; 0x77
 8007140:	ea4f 054c 	mov.w	r5, ip, lsl #1
 8007144:	e5d6      	b.n	8006cf4 <_malloc_r+0x88>
 8007146:	2301      	movs	r3, #1
 8007148:	4645      	mov	r5, r8
 800714a:	f8c8 3004 	str.w	r3, [r8, #4]
 800714e:	2200      	movs	r2, #0
 8007150:	e724      	b.n	8006f9c <_malloc_r+0x330>
 8007152:	f04f 0901 	mov.w	r9, #1
 8007156:	108d      	asrs	r5, r1, #2
 8007158:	f8d8 1004 	ldr.w	r1, [r8, #4]
 800715c:	4610      	mov	r0, r2
 800715e:	fa09 f505 	lsl.w	r5, r9, r5
 8007162:	4329      	orrs	r1, r5
 8007164:	f8c8 1004 	str.w	r1, [r8, #4]
 8007168:	e77d      	b.n	8007066 <_malloc_r+0x3fa>
 800716a:	f240 5354 	movw	r3, #1364	; 0x554
 800716e:	459c      	cmp	ip, r3
 8007170:	bf95      	itete	ls
 8007172:	ea4f 4c94 	movls.w	ip, r4, lsr #18
 8007176:	25fc      	movhi	r5, #252	; 0xfc
 8007178:	f10c 0c7c 	addls.w	ip, ip, #124	; 0x7c
 800717c:	f04f 0c7e 	movhi.w	ip, #126	; 0x7e
 8007180:	bf98      	it	ls
 8007182:	ea4f 054c 	movls.w	r5, ip, lsl #1
 8007186:	e5b5      	b.n	8006cf4 <_malloc_r+0x88>
 8007188:	f3c2 010b 	ubfx	r1, r2, #0, #12
 800718c:	2900      	cmp	r1, #0
 800718e:	f47f ae96 	bne.w	8006ebe <_malloc_r+0x252>
 8007192:	68b2      	ldr	r2, [r6, #8]
 8007194:	eb0b 010a 	add.w	r1, fp, sl
 8007198:	f041 0101 	orr.w	r1, r1, #1
 800719c:	6051      	str	r1, [r2, #4]
 800719e:	e6e7      	b.n	8006f70 <_malloc_r+0x304>
 80071a0:	f105 0108 	add.w	r1, r5, #8
 80071a4:	4638      	mov	r0, r7
 80071a6:	9201      	str	r2, [sp, #4]
 80071a8:	f001 fcfe 	bl	8008ba8 <_free_r>
 80071ac:	9a01      	ldr	r2, [sp, #4]
 80071ae:	6853      	ldr	r3, [r2, #4]
 80071b0:	e6de      	b.n	8006f70 <_malloc_r+0x304>
 80071b2:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 80071b6:	d803      	bhi.n	80071c0 <_malloc_r+0x554>
 80071b8:	0bc1      	lsrs	r1, r0, #15
 80071ba:	3177      	adds	r1, #119	; 0x77
 80071bc:	004d      	lsls	r5, r1, #1
 80071be:	e73f      	b.n	8007040 <_malloc_r+0x3d4>
 80071c0:	f240 5154 	movw	r1, #1364	; 0x554
 80071c4:	428a      	cmp	r2, r1
 80071c6:	bf95      	itete	ls
 80071c8:	0c81      	lsrls	r1, r0, #18
 80071ca:	25fc      	movhi	r5, #252	; 0xfc
 80071cc:	317c      	addls	r1, #124	; 0x7c
 80071ce:	217e      	movhi	r1, #126	; 0x7e
 80071d0:	bf98      	it	ls
 80071d2:	004d      	lslls	r5, r1, #1
 80071d4:	e734      	b.n	8007040 <_malloc_r+0x3d4>
 80071d6:	6872      	ldr	r2, [r6, #4]
 80071d8:	e79a      	b.n	8007110 <_malloc_r+0x4a4>
 80071da:	bf00      	nop

080071dc <memchr>:
 80071dc:	0783      	lsls	r3, r0, #30
 80071de:	b2c9      	uxtb	r1, r1
 80071e0:	b470      	push	{r4, r5, r6}
 80071e2:	d03f      	beq.n	8007264 <memchr+0x88>
 80071e4:	1e54      	subs	r4, r2, #1
 80071e6:	b32a      	cbz	r2, 8007234 <memchr+0x58>
 80071e8:	7803      	ldrb	r3, [r0, #0]
 80071ea:	428b      	cmp	r3, r1
 80071ec:	d023      	beq.n	8007236 <memchr+0x5a>
 80071ee:	1c43      	adds	r3, r0, #1
 80071f0:	e004      	b.n	80071fc <memchr+0x20>
 80071f2:	b1fc      	cbz	r4, 8007234 <memchr+0x58>
 80071f4:	7805      	ldrb	r5, [r0, #0]
 80071f6:	4614      	mov	r4, r2
 80071f8:	428d      	cmp	r5, r1
 80071fa:	d01c      	beq.n	8007236 <memchr+0x5a>
 80071fc:	f013 0f03 	tst.w	r3, #3
 8007200:	4618      	mov	r0, r3
 8007202:	f104 32ff 	add.w	r2, r4, #4294967295
 8007206:	f103 0301 	add.w	r3, r3, #1
 800720a:	d1f2      	bne.n	80071f2 <memchr+0x16>
 800720c:	2c03      	cmp	r4, #3
 800720e:	d814      	bhi.n	800723a <memchr+0x5e>
 8007210:	1e65      	subs	r5, r4, #1
 8007212:	b34c      	cbz	r4, 8007268 <memchr+0x8c>
 8007214:	7803      	ldrb	r3, [r0, #0]
 8007216:	428b      	cmp	r3, r1
 8007218:	d00d      	beq.n	8007236 <memchr+0x5a>
 800721a:	1c42      	adds	r2, r0, #1
 800721c:	2300      	movs	r3, #0
 800721e:	e002      	b.n	8007226 <memchr+0x4a>
 8007220:	7804      	ldrb	r4, [r0, #0]
 8007222:	428c      	cmp	r4, r1
 8007224:	d007      	beq.n	8007236 <memchr+0x5a>
 8007226:	42ab      	cmp	r3, r5
 8007228:	4610      	mov	r0, r2
 800722a:	f103 0301 	add.w	r3, r3, #1
 800722e:	f102 0201 	add.w	r2, r2, #1
 8007232:	d1f5      	bne.n	8007220 <memchr+0x44>
 8007234:	2000      	movs	r0, #0
 8007236:	bc70      	pop	{r4, r5, r6}
 8007238:	4770      	bx	lr
 800723a:	ea41 2601 	orr.w	r6, r1, r1, lsl #8
 800723e:	4603      	mov	r3, r0
 8007240:	ea46 4606 	orr.w	r6, r6, r6, lsl #16
 8007244:	4618      	mov	r0, r3
 8007246:	3304      	adds	r3, #4
 8007248:	6802      	ldr	r2, [r0, #0]
 800724a:	4072      	eors	r2, r6
 800724c:	f1a2 3501 	sub.w	r5, r2, #16843009	; 0x1010101
 8007250:	ea25 0202 	bic.w	r2, r5, r2
 8007254:	f012 3f80 	tst.w	r2, #2155905152	; 0x80808080
 8007258:	d1da      	bne.n	8007210 <memchr+0x34>
 800725a:	3c04      	subs	r4, #4
 800725c:	4618      	mov	r0, r3
 800725e:	2c03      	cmp	r4, #3
 8007260:	d8f0      	bhi.n	8007244 <memchr+0x68>
 8007262:	e7d5      	b.n	8007210 <memchr+0x34>
 8007264:	4614      	mov	r4, r2
 8007266:	e7d1      	b.n	800720c <memchr+0x30>
 8007268:	4620      	mov	r0, r4
 800726a:	e7e4      	b.n	8007236 <memchr+0x5a>

0800726c <__malloc_lock>:
 800726c:	4770      	bx	lr
 800726e:	bf00      	nop

08007270 <__malloc_unlock>:
 8007270:	4770      	bx	lr
 8007272:	bf00      	nop

08007274 <_Balloc>:
 8007274:	b570      	push	{r4, r5, r6, lr}
 8007276:	4606      	mov	r6, r0
 8007278:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800727a:	460d      	mov	r5, r1
 800727c:	b164      	cbz	r4, 8007298 <_Balloc+0x24>
 800727e:	68e2      	ldr	r2, [r4, #12]
 8007280:	b19a      	cbz	r2, 80072aa <_Balloc+0x36>
 8007282:	f852 3025 	ldr.w	r3, [r2, r5, lsl #2]
 8007286:	b1e3      	cbz	r3, 80072c2 <_Balloc+0x4e>
 8007288:	6819      	ldr	r1, [r3, #0]
 800728a:	f842 1025 	str.w	r1, [r2, r5, lsl #2]
 800728e:	2200      	movs	r2, #0
 8007290:	4618      	mov	r0, r3
 8007292:	611a      	str	r2, [r3, #16]
 8007294:	60da      	str	r2, [r3, #12]
 8007296:	bd70      	pop	{r4, r5, r6, pc}
 8007298:	2010      	movs	r0, #16
 800729a:	f7ff fcd7 	bl	8006c4c <malloc>
 800729e:	6270      	str	r0, [r6, #36]	; 0x24
 80072a0:	6044      	str	r4, [r0, #4]
 80072a2:	6084      	str	r4, [r0, #8]
 80072a4:	6004      	str	r4, [r0, #0]
 80072a6:	60c4      	str	r4, [r0, #12]
 80072a8:	4604      	mov	r4, r0
 80072aa:	2221      	movs	r2, #33	; 0x21
 80072ac:	4630      	mov	r0, r6
 80072ae:	2104      	movs	r1, #4
 80072b0:	f001 fbf6 	bl	8008aa0 <_calloc_r>
 80072b4:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80072b6:	60e0      	str	r0, [r4, #12]
 80072b8:	68da      	ldr	r2, [r3, #12]
 80072ba:	2a00      	cmp	r2, #0
 80072bc:	d1e1      	bne.n	8007282 <_Balloc+0xe>
 80072be:	2000      	movs	r0, #0
 80072c0:	bd70      	pop	{r4, r5, r6, pc}
 80072c2:	2301      	movs	r3, #1
 80072c4:	4630      	mov	r0, r6
 80072c6:	4619      	mov	r1, r3
 80072c8:	fa03 f405 	lsl.w	r4, r3, r5
 80072cc:	1d62      	adds	r2, r4, #5
 80072ce:	0092      	lsls	r2, r2, #2
 80072d0:	f001 fbe6 	bl	8008aa0 <_calloc_r>
 80072d4:	4603      	mov	r3, r0
 80072d6:	2800      	cmp	r0, #0
 80072d8:	d0f1      	beq.n	80072be <_Balloc+0x4a>
 80072da:	6045      	str	r5, [r0, #4]
 80072dc:	6084      	str	r4, [r0, #8]
 80072de:	e7d6      	b.n	800728e <_Balloc+0x1a>

080072e0 <_Bfree>:
 80072e0:	b530      	push	{r4, r5, lr}
 80072e2:	4604      	mov	r4, r0
 80072e4:	6a45      	ldr	r5, [r0, #36]	; 0x24
 80072e6:	b083      	sub	sp, #12
 80072e8:	b155      	cbz	r5, 8007300 <_Bfree+0x20>
 80072ea:	b139      	cbz	r1, 80072fc <_Bfree+0x1c>
 80072ec:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80072ee:	684a      	ldr	r2, [r1, #4]
 80072f0:	68db      	ldr	r3, [r3, #12]
 80072f2:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 80072f6:	6008      	str	r0, [r1, #0]
 80072f8:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 80072fc:	b003      	add	sp, #12
 80072fe:	bd30      	pop	{r4, r5, pc}
 8007300:	2010      	movs	r0, #16
 8007302:	9101      	str	r1, [sp, #4]
 8007304:	f7ff fca2 	bl	8006c4c <malloc>
 8007308:	9901      	ldr	r1, [sp, #4]
 800730a:	6260      	str	r0, [r4, #36]	; 0x24
 800730c:	6045      	str	r5, [r0, #4]
 800730e:	6085      	str	r5, [r0, #8]
 8007310:	6005      	str	r5, [r0, #0]
 8007312:	60c5      	str	r5, [r0, #12]
 8007314:	e7e9      	b.n	80072ea <_Bfree+0xa>
 8007316:	bf00      	nop

08007318 <__multadd>:
 8007318:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 800731c:	4688      	mov	r8, r1
 800731e:	f8d1 a010 	ldr.w	sl, [r1, #16]
 8007322:	b082      	sub	sp, #8
 8007324:	4681      	mov	r9, r0
 8007326:	f101 0514 	add.w	r5, r1, #20
 800732a:	2400      	movs	r4, #0
 800732c:	682f      	ldr	r7, [r5, #0]
 800732e:	3401      	adds	r4, #1
 8007330:	45a2      	cmp	sl, r4
 8007332:	b2be      	uxth	r6, r7
 8007334:	ea4f 4717 	mov.w	r7, r7, lsr #16
 8007338:	fb02 3606 	mla	r6, r2, r6, r3
 800733c:	fb02 f307 	mul.w	r3, r2, r7
 8007340:	eb03 4316 	add.w	r3, r3, r6, lsr #16
 8007344:	b2b6      	uxth	r6, r6
 8007346:	eb06 4603 	add.w	r6, r6, r3, lsl #16
 800734a:	ea4f 4313 	mov.w	r3, r3, lsr #16
 800734e:	f845 6b04 	str.w	r6, [r5], #4
 8007352:	dceb      	bgt.n	800732c <__multadd+0x14>
 8007354:	b153      	cbz	r3, 800736c <__multadd+0x54>
 8007356:	f8d8 2008 	ldr.w	r2, [r8, #8]
 800735a:	4592      	cmp	sl, r2
 800735c:	da0a      	bge.n	8007374 <__multadd+0x5c>
 800735e:	eb08 018a 	add.w	r1, r8, sl, lsl #2
 8007362:	f10a 0201 	add.w	r2, sl, #1
 8007366:	614b      	str	r3, [r1, #20]
 8007368:	f8c8 2010 	str.w	r2, [r8, #16]
 800736c:	4640      	mov	r0, r8
 800736e:	b002      	add	sp, #8
 8007370:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8007374:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8007378:	4648      	mov	r0, r9
 800737a:	9301      	str	r3, [sp, #4]
 800737c:	3101      	adds	r1, #1
 800737e:	f7ff ff79 	bl	8007274 <_Balloc>
 8007382:	f8d8 2010 	ldr.w	r2, [r8, #16]
 8007386:	f108 010c 	add.w	r1, r8, #12
 800738a:	3202      	adds	r2, #2
 800738c:	0092      	lsls	r2, r2, #2
 800738e:	4604      	mov	r4, r0
 8007390:	300c      	adds	r0, #12
 8007392:	f7fd f879 	bl	8004488 <memcpy>
 8007396:	4641      	mov	r1, r8
 8007398:	4648      	mov	r0, r9
 800739a:	46a0      	mov	r8, r4
 800739c:	f7ff ffa0 	bl	80072e0 <_Bfree>
 80073a0:	9b01      	ldr	r3, [sp, #4]
 80073a2:	e7dc      	b.n	800735e <__multadd+0x46>

080073a4 <__s2b>:
 80073a4:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 80073a8:	4699      	mov	r9, r3
 80073aa:	f648 6339 	movw	r3, #36409	; 0x8e39
 80073ae:	f109 0508 	add.w	r5, r9, #8
 80073b2:	f6c3 03e3 	movt	r3, #14563	; 0x38e3
 80073b6:	460c      	mov	r4, r1
 80073b8:	4607      	mov	r7, r0
 80073ba:	4690      	mov	r8, r2
 80073bc:	fb83 1305 	smull	r1, r3, r3, r5
 80073c0:	17ed      	asrs	r5, r5, #31
 80073c2:	9e08      	ldr	r6, [sp, #32]
 80073c4:	ebc5 0363 	rsb	r3, r5, r3, asr #1
 80073c8:	2b01      	cmp	r3, #1
 80073ca:	dd35      	ble.n	8007438 <__s2b+0x94>
 80073cc:	2501      	movs	r5, #1
 80073ce:	2100      	movs	r1, #0
 80073d0:	006d      	lsls	r5, r5, #1
 80073d2:	3101      	adds	r1, #1
 80073d4:	42ab      	cmp	r3, r5
 80073d6:	dcfb      	bgt.n	80073d0 <__s2b+0x2c>
 80073d8:	4638      	mov	r0, r7
 80073da:	f7ff ff4b 	bl	8007274 <_Balloc>
 80073de:	f1b8 0f09 	cmp.w	r8, #9
 80073e2:	f04f 0301 	mov.w	r3, #1
 80073e6:	bfdc      	itt	le
 80073e8:	340a      	addle	r4, #10
 80073ea:	f04f 0809 	movle.w	r8, #9
 80073ee:	6146      	str	r6, [r0, #20]
 80073f0:	6103      	str	r3, [r0, #16]
 80073f2:	dd10      	ble.n	8007416 <__s2b+0x72>
 80073f4:	f104 0609 	add.w	r6, r4, #9
 80073f8:	4444      	add	r4, r8
 80073fa:	4635      	mov	r5, r6
 80073fc:	f815 3b01 	ldrb.w	r3, [r5], #1
 8007400:	4601      	mov	r1, r0
 8007402:	220a      	movs	r2, #10
 8007404:	4638      	mov	r0, r7
 8007406:	3b30      	subs	r3, #48	; 0x30
 8007408:	f7ff ff86 	bl	8007318 <__multadd>
 800740c:	42a5      	cmp	r5, r4
 800740e:	d1f5      	bne.n	80073fc <__s2b+0x58>
 8007410:	eb06 0408 	add.w	r4, r6, r8
 8007414:	3c08      	subs	r4, #8
 8007416:	45c1      	cmp	r9, r8
 8007418:	dd0c      	ble.n	8007434 <__s2b+0x90>
 800741a:	ebc8 0809 	rsb	r8, r8, r9
 800741e:	44a0      	add	r8, r4
 8007420:	f814 3b01 	ldrb.w	r3, [r4], #1
 8007424:	4601      	mov	r1, r0
 8007426:	220a      	movs	r2, #10
 8007428:	4638      	mov	r0, r7
 800742a:	3b30      	subs	r3, #48	; 0x30
 800742c:	f7ff ff74 	bl	8007318 <__multadd>
 8007430:	4544      	cmp	r4, r8
 8007432:	d1f5      	bne.n	8007420 <__s2b+0x7c>
 8007434:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8007438:	2100      	movs	r1, #0
 800743a:	e7cd      	b.n	80073d8 <__s2b+0x34>

0800743c <__hi0bits>:
 800743c:	0c03      	lsrs	r3, r0, #16
 800743e:	bf06      	itte	eq
 8007440:	0400      	lsleq	r0, r0, #16
 8007442:	2310      	moveq	r3, #16
 8007444:	2300      	movne	r3, #0
 8007446:	f010 4f7f 	tst.w	r0, #4278190080	; 0xff000000
 800744a:	bf04      	itt	eq
 800744c:	0200      	lsleq	r0, r0, #8
 800744e:	3308      	addeq	r3, #8
 8007450:	f010 4f70 	tst.w	r0, #4026531840	; 0xf0000000
 8007454:	bf04      	itt	eq
 8007456:	0100      	lsleq	r0, r0, #4
 8007458:	3304      	addeq	r3, #4
 800745a:	f010 4f40 	tst.w	r0, #3221225472	; 0xc0000000
 800745e:	bf04      	itt	eq
 8007460:	0080      	lsleq	r0, r0, #2
 8007462:	3302      	addeq	r3, #2
 8007464:	2800      	cmp	r0, #0
 8007466:	db05      	blt.n	8007474 <__hi0bits+0x38>
 8007468:	0042      	lsls	r2, r0, #1
 800746a:	d401      	bmi.n	8007470 <__hi0bits+0x34>
 800746c:	2020      	movs	r0, #32
 800746e:	4770      	bx	lr
 8007470:	1c58      	adds	r0, r3, #1
 8007472:	4770      	bx	lr
 8007474:	4618      	mov	r0, r3
 8007476:	4770      	bx	lr

08007478 <__lo0bits>:
 8007478:	6803      	ldr	r3, [r0, #0]
 800747a:	4602      	mov	r2, r0
 800747c:	f013 0007 	ands.w	r0, r3, #7
 8007480:	d009      	beq.n	8007496 <__lo0bits+0x1e>
 8007482:	07d9      	lsls	r1, r3, #31
 8007484:	d421      	bmi.n	80074ca <__lo0bits+0x52>
 8007486:	0798      	lsls	r0, r3, #30
 8007488:	bf4b      	itete	mi
 800748a:	085b      	lsrmi	r3, r3, #1
 800748c:	089b      	lsrpl	r3, r3, #2
 800748e:	2001      	movmi	r0, #1
 8007490:	2002      	movpl	r0, #2
 8007492:	6013      	str	r3, [r2, #0]
 8007494:	4770      	bx	lr
 8007496:	b299      	uxth	r1, r3
 8007498:	b909      	cbnz	r1, 800749e <__lo0bits+0x26>
 800749a:	0c1b      	lsrs	r3, r3, #16
 800749c:	2010      	movs	r0, #16
 800749e:	f013 0fff 	tst.w	r3, #255	; 0xff
 80074a2:	bf04      	itt	eq
 80074a4:	0a1b      	lsreq	r3, r3, #8
 80074a6:	3008      	addeq	r0, #8
 80074a8:	0719      	lsls	r1, r3, #28
 80074aa:	bf04      	itt	eq
 80074ac:	091b      	lsreq	r3, r3, #4
 80074ae:	3004      	addeq	r0, #4
 80074b0:	0799      	lsls	r1, r3, #30
 80074b2:	bf04      	itt	eq
 80074b4:	089b      	lsreq	r3, r3, #2
 80074b6:	3002      	addeq	r0, #2
 80074b8:	07d9      	lsls	r1, r3, #31
 80074ba:	d404      	bmi.n	80074c6 <__lo0bits+0x4e>
 80074bc:	085b      	lsrs	r3, r3, #1
 80074be:	d101      	bne.n	80074c4 <__lo0bits+0x4c>
 80074c0:	2020      	movs	r0, #32
 80074c2:	4770      	bx	lr
 80074c4:	3001      	adds	r0, #1
 80074c6:	6013      	str	r3, [r2, #0]
 80074c8:	4770      	bx	lr
 80074ca:	2000      	movs	r0, #0
 80074cc:	4770      	bx	lr
 80074ce:	bf00      	nop

080074d0 <__i2b>:
 80074d0:	b510      	push	{r4, lr}
 80074d2:	460c      	mov	r4, r1
 80074d4:	2101      	movs	r1, #1
 80074d6:	f7ff fecd 	bl	8007274 <_Balloc>
 80074da:	2201      	movs	r2, #1
 80074dc:	6144      	str	r4, [r0, #20]
 80074de:	6102      	str	r2, [r0, #16]
 80074e0:	bd10      	pop	{r4, pc}
 80074e2:	bf00      	nop

080074e4 <__multiply>:
 80074e4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80074e8:	460c      	mov	r4, r1
 80074ea:	690e      	ldr	r6, [r1, #16]
 80074ec:	b085      	sub	sp, #20
 80074ee:	6915      	ldr	r5, [r2, #16]
 80074f0:	4693      	mov	fp, r2
 80074f2:	42ae      	cmp	r6, r5
 80074f4:	da04      	bge.n	8007500 <__multiply+0x1c>
 80074f6:	4632      	mov	r2, r6
 80074f8:	465c      	mov	r4, fp
 80074fa:	462e      	mov	r6, r5
 80074fc:	468b      	mov	fp, r1
 80074fe:	4615      	mov	r5, r2
 8007500:	68a3      	ldr	r3, [r4, #8]
 8007502:	eb06 0905 	add.w	r9, r6, r5
 8007506:	6861      	ldr	r1, [r4, #4]
 8007508:	4599      	cmp	r9, r3
 800750a:	bfc8      	it	gt
 800750c:	3101      	addgt	r1, #1
 800750e:	f7ff feb1 	bl	8007274 <_Balloc>
 8007512:	f100 0a14 	add.w	sl, r0, #20
 8007516:	9002      	str	r0, [sp, #8]
 8007518:	eb0a 0189 	add.w	r1, sl, r9, lsl #2
 800751c:	9101      	str	r1, [sp, #4]
 800751e:	458a      	cmp	sl, r1
 8007520:	d206      	bcs.n	8007530 <__multiply+0x4c>
 8007522:	9a01      	ldr	r2, [sp, #4]
 8007524:	4653      	mov	r3, sl
 8007526:	2000      	movs	r0, #0
 8007528:	f843 0b04 	str.w	r0, [r3], #4
 800752c:	429a      	cmp	r2, r3
 800752e:	d8fb      	bhi.n	8007528 <__multiply+0x44>
 8007530:	f10b 0b14 	add.w	fp, fp, #20
 8007534:	3414      	adds	r4, #20
 8007536:	eb0b 0585 	add.w	r5, fp, r5, lsl #2
 800753a:	9400      	str	r4, [sp, #0]
 800753c:	45ab      	cmp	fp, r5
 800753e:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 8007542:	bf3c      	itt	cc
 8007544:	f8cd 900c 	strcc.w	r9, [sp, #12]
 8007548:	46a9      	movcc	r9, r5
 800754a:	d254      	bcs.n	80075f6 <__multiply+0x112>
 800754c:	f85b 3b04 	ldr.w	r3, [fp], #4
 8007550:	b29c      	uxth	r4, r3
 8007552:	2c00      	cmp	r4, #0
 8007554:	d064      	beq.n	8007620 <__multiply+0x13c>
 8007556:	9900      	ldr	r1, [sp, #0]
 8007558:	4652      	mov	r2, sl
 800755a:	2500      	movs	r5, #0
 800755c:	46a4      	mov	ip, r4
 800755e:	e000      	b.n	8007562 <__multiply+0x7e>
 8007560:	461a      	mov	r2, r3
 8007562:	f851 4b04 	ldr.w	r4, [r1], #4
 8007566:	4613      	mov	r3, r2
 8007568:	6817      	ldr	r7, [r2, #0]
 800756a:	428e      	cmp	r6, r1
 800756c:	fa1f f884 	uxth.w	r8, r4
 8007570:	ea4f 4414 	mov.w	r4, r4, lsr #16
 8007574:	b2b8      	uxth	r0, r7
 8007576:	ea4f 4717 	mov.w	r7, r7, lsr #16
 800757a:	fb0c 0808 	mla	r8, ip, r8, r0
 800757e:	fb0c 7004 	mla	r0, ip, r4, r7
 8007582:	4445      	add	r5, r8
 8007584:	eb00 4015 	add.w	r0, r0, r5, lsr #16
 8007588:	b2ad      	uxth	r5, r5
 800758a:	ea45 4400 	orr.w	r4, r5, r0, lsl #16
 800758e:	ea4f 4510 	mov.w	r5, r0, lsr #16
 8007592:	f843 4b04 	str.w	r4, [r3], #4
 8007596:	d8e3      	bhi.n	8007560 <__multiply+0x7c>
 8007598:	6055      	str	r5, [r2, #4]
 800759a:	f85b 4c04 	ldr.w	r4, [fp, #-4]
 800759e:	0c24      	lsrs	r4, r4, #16
 80075a0:	d023      	beq.n	80075ea <__multiply+0x106>
 80075a2:	f8da 1000 	ldr.w	r1, [sl]
 80075a6:	4650      	mov	r0, sl
 80075a8:	9b00      	ldr	r3, [sp, #0]
 80075aa:	2700      	movs	r7, #0
 80075ac:	460d      	mov	r5, r1
 80075ae:	e000      	b.n	80075b2 <__multiply+0xce>
 80075b0:	4610      	mov	r0, r2
 80075b2:	f8b3 c000 	ldrh.w	ip, [r3]
 80075b6:	0c2d      	lsrs	r5, r5, #16
 80075b8:	4602      	mov	r2, r0
 80075ba:	b289      	uxth	r1, r1
 80075bc:	fb04 550c 	mla	r5, r4, ip, r5
 80075c0:	442f      	add	r7, r5
 80075c2:	ea41 4107 	orr.w	r1, r1, r7, lsl #16
 80075c6:	f842 1b04 	str.w	r1, [r2], #4
 80075ca:	6841      	ldr	r1, [r0, #4]
 80075cc:	f853 cb04 	ldr.w	ip, [r3], #4
 80075d0:	460d      	mov	r5, r1
 80075d2:	b289      	uxth	r1, r1
 80075d4:	429e      	cmp	r6, r3
 80075d6:	ea4f 4c1c 	mov.w	ip, ip, lsr #16
 80075da:	fb04 110c 	mla	r1, r4, ip, r1
 80075de:	eb01 4117 	add.w	r1, r1, r7, lsr #16
 80075e2:	ea4f 4711 	mov.w	r7, r1, lsr #16
 80075e6:	d8e3      	bhi.n	80075b0 <__multiply+0xcc>
 80075e8:	6041      	str	r1, [r0, #4]
 80075ea:	45d9      	cmp	r9, fp
 80075ec:	f10a 0a04 	add.w	sl, sl, #4
 80075f0:	d8ac      	bhi.n	800754c <__multiply+0x68>
 80075f2:	f8dd 900c 	ldr.w	r9, [sp, #12]
 80075f6:	f1b9 0f00 	cmp.w	r9, #0
 80075fa:	dd0a      	ble.n	8007612 <__multiply+0x12e>
 80075fc:	9b01      	ldr	r3, [sp, #4]
 80075fe:	3b04      	subs	r3, #4
 8007600:	681a      	ldr	r2, [r3, #0]
 8007602:	b11a      	cbz	r2, 800760c <__multiply+0x128>
 8007604:	e005      	b.n	8007612 <__multiply+0x12e>
 8007606:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800760a:	b912      	cbnz	r2, 8007612 <__multiply+0x12e>
 800760c:	f1b9 0901 	subs.w	r9, r9, #1
 8007610:	d1f9      	bne.n	8007606 <__multiply+0x122>
 8007612:	9902      	ldr	r1, [sp, #8]
 8007614:	4608      	mov	r0, r1
 8007616:	f8c1 9010 	str.w	r9, [r1, #16]
 800761a:	b005      	add	sp, #20
 800761c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007620:	461c      	mov	r4, r3
 8007622:	e7bc      	b.n	800759e <__multiply+0xba>

08007624 <__pow5mult>:
 8007624:	f012 0303 	ands.w	r3, r2, #3
 8007628:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 800762c:	4614      	mov	r4, r2
 800762e:	b083      	sub	sp, #12
 8007630:	4607      	mov	r7, r0
 8007632:	460e      	mov	r6, r1
 8007634:	d12b      	bne.n	800768e <__pow5mult+0x6a>
 8007636:	10a4      	asrs	r4, r4, #2
 8007638:	d01c      	beq.n	8007674 <__pow5mult+0x50>
 800763a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800763c:	2b00      	cmp	r3, #0
 800763e:	d032      	beq.n	80076a6 <__pow5mult+0x82>
 8007640:	689d      	ldr	r5, [r3, #8]
 8007642:	2d00      	cmp	r5, #0
 8007644:	d03a      	beq.n	80076bc <__pow5mult+0x98>
 8007646:	f04f 0900 	mov.w	r9, #0
 800764a:	e004      	b.n	8007656 <__pow5mult+0x32>
 800764c:	1064      	asrs	r4, r4, #1
 800764e:	d011      	beq.n	8007674 <__pow5mult+0x50>
 8007650:	6828      	ldr	r0, [r5, #0]
 8007652:	b198      	cbz	r0, 800767c <__pow5mult+0x58>
 8007654:	4605      	mov	r5, r0
 8007656:	07e0      	lsls	r0, r4, #31
 8007658:	d5f8      	bpl.n	800764c <__pow5mult+0x28>
 800765a:	4631      	mov	r1, r6
 800765c:	462a      	mov	r2, r5
 800765e:	4638      	mov	r0, r7
 8007660:	f7ff ff40 	bl	80074e4 <__multiply>
 8007664:	4631      	mov	r1, r6
 8007666:	4680      	mov	r8, r0
 8007668:	4638      	mov	r0, r7
 800766a:	f7ff fe39 	bl	80072e0 <_Bfree>
 800766e:	1064      	asrs	r4, r4, #1
 8007670:	4646      	mov	r6, r8
 8007672:	d1ed      	bne.n	8007650 <__pow5mult+0x2c>
 8007674:	4630      	mov	r0, r6
 8007676:	b003      	add	sp, #12
 8007678:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 800767c:	4638      	mov	r0, r7
 800767e:	4629      	mov	r1, r5
 8007680:	462a      	mov	r2, r5
 8007682:	f7ff ff2f 	bl	80074e4 <__multiply>
 8007686:	6028      	str	r0, [r5, #0]
 8007688:	f8c0 9000 	str.w	r9, [r0]
 800768c:	e7e2      	b.n	8007654 <__pow5mult+0x30>
 800768e:	f24a 52e8 	movw	r2, #42472	; 0xa5e8
 8007692:	1e5d      	subs	r5, r3, #1
 8007694:	f6c0 0200 	movt	r2, #2048	; 0x800
 8007698:	2300      	movs	r3, #0
 800769a:	f852 2025 	ldr.w	r2, [r2, r5, lsl #2]
 800769e:	f7ff fe3b 	bl	8007318 <__multadd>
 80076a2:	4606      	mov	r6, r0
 80076a4:	e7c7      	b.n	8007636 <__pow5mult+0x12>
 80076a6:	2010      	movs	r0, #16
 80076a8:	9301      	str	r3, [sp, #4]
 80076aa:	f7ff facf 	bl	8006c4c <malloc>
 80076ae:	9b01      	ldr	r3, [sp, #4]
 80076b0:	6278      	str	r0, [r7, #36]	; 0x24
 80076b2:	6043      	str	r3, [r0, #4]
 80076b4:	6083      	str	r3, [r0, #8]
 80076b6:	6003      	str	r3, [r0, #0]
 80076b8:	60c3      	str	r3, [r0, #12]
 80076ba:	4603      	mov	r3, r0
 80076bc:	2101      	movs	r1, #1
 80076be:	4638      	mov	r0, r7
 80076c0:	9301      	str	r3, [sp, #4]
 80076c2:	f7ff fdd7 	bl	8007274 <_Balloc>
 80076c6:	9b01      	ldr	r3, [sp, #4]
 80076c8:	f240 2271 	movw	r2, #625	; 0x271
 80076cc:	2101      	movs	r1, #1
 80076ce:	6142      	str	r2, [r0, #20]
 80076d0:	4605      	mov	r5, r0
 80076d2:	2200      	movs	r2, #0
 80076d4:	6101      	str	r1, [r0, #16]
 80076d6:	6098      	str	r0, [r3, #8]
 80076d8:	6002      	str	r2, [r0, #0]
 80076da:	e7b4      	b.n	8007646 <__pow5mult+0x22>

080076dc <__lshift>:
 80076dc:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80076e0:	4693      	mov	fp, r2
 80076e2:	690a      	ldr	r2, [r1, #16]
 80076e4:	460f      	mov	r7, r1
 80076e6:	ea4f 156b 	mov.w	r5, fp, asr #5
 80076ea:	688b      	ldr	r3, [r1, #8]
 80076ec:	eb05 0902 	add.w	r9, r5, r2
 80076f0:	4680      	mov	r8, r0
 80076f2:	f109 0601 	add.w	r6, r9, #1
 80076f6:	6849      	ldr	r1, [r1, #4]
 80076f8:	429e      	cmp	r6, r3
 80076fa:	dd03      	ble.n	8007704 <__lshift+0x28>
 80076fc:	005b      	lsls	r3, r3, #1
 80076fe:	3101      	adds	r1, #1
 8007700:	429e      	cmp	r6, r3
 8007702:	dcfb      	bgt.n	80076fc <__lshift+0x20>
 8007704:	4640      	mov	r0, r8
 8007706:	f7ff fdb5 	bl	8007274 <_Balloc>
 800770a:	2d00      	cmp	r5, #0
 800770c:	4682      	mov	sl, r0
 800770e:	f100 0414 	add.w	r4, r0, #20
 8007712:	dd09      	ble.n	8007728 <__lshift+0x4c>
 8007714:	2300      	movs	r3, #0
 8007716:	4622      	mov	r2, r4
 8007718:	4619      	mov	r1, r3
 800771a:	3301      	adds	r3, #1
 800771c:	f842 1b04 	str.w	r1, [r2], #4
 8007720:	42ab      	cmp	r3, r5
 8007722:	d1fa      	bne.n	800771a <__lshift+0x3e>
 8007724:	eb04 0483 	add.w	r4, r4, r3, lsl #2
 8007728:	693a      	ldr	r2, [r7, #16]
 800772a:	f01b 0b1f 	ands.w	fp, fp, #31
 800772e:	f107 0314 	add.w	r3, r7, #20
 8007732:	eb03 0282 	add.w	r2, r3, r2, lsl #2
 8007736:	d01f      	beq.n	8007778 <__lshift+0x9c>
 8007738:	f1cb 0e20 	rsb	lr, fp, #32
 800773c:	2000      	movs	r0, #0
 800773e:	e000      	b.n	8007742 <__lshift+0x66>
 8007740:	462c      	mov	r4, r5
 8007742:	6819      	ldr	r1, [r3, #0]
 8007744:	4625      	mov	r5, r4
 8007746:	fa01 f10b 	lsl.w	r1, r1, fp
 800774a:	4308      	orrs	r0, r1
 800774c:	f845 0b04 	str.w	r0, [r5], #4
 8007750:	f853 0b04 	ldr.w	r0, [r3], #4
 8007754:	4293      	cmp	r3, r2
 8007756:	fa20 f00e 	lsr.w	r0, r0, lr
 800775a:	d3f1      	bcc.n	8007740 <__lshift+0x64>
 800775c:	6060      	str	r0, [r4, #4]
 800775e:	b108      	cbz	r0, 8007764 <__lshift+0x88>
 8007760:	f109 0602 	add.w	r6, r9, #2
 8007764:	4640      	mov	r0, r8
 8007766:	3e01      	subs	r6, #1
 8007768:	4639      	mov	r1, r7
 800776a:	f8ca 6010 	str.w	r6, [sl, #16]
 800776e:	f7ff fdb7 	bl	80072e0 <_Bfree>
 8007772:	4650      	mov	r0, sl
 8007774:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007778:	f853 1b04 	ldr.w	r1, [r3], #4
 800777c:	429a      	cmp	r2, r3
 800777e:	f844 1b04 	str.w	r1, [r4], #4
 8007782:	d9ef      	bls.n	8007764 <__lshift+0x88>
 8007784:	f853 1b04 	ldr.w	r1, [r3], #4
 8007788:	429a      	cmp	r2, r3
 800778a:	f844 1b04 	str.w	r1, [r4], #4
 800778e:	d8f3      	bhi.n	8007778 <__lshift+0x9c>
 8007790:	e7e8      	b.n	8007764 <__lshift+0x88>
 8007792:	bf00      	nop

08007794 <__mcmp>:
 8007794:	6902      	ldr	r2, [r0, #16]
 8007796:	690b      	ldr	r3, [r1, #16]
 8007798:	b410      	push	{r4}
 800779a:	1ad2      	subs	r2, r2, r3
 800779c:	bf18      	it	ne
 800779e:	4610      	movne	r0, r2
 80077a0:	d112      	bne.n	80077c8 <__mcmp+0x34>
 80077a2:	009a      	lsls	r2, r3, #2
 80077a4:	3014      	adds	r0, #20
 80077a6:	3114      	adds	r1, #20
 80077a8:	1883      	adds	r3, r0, r2
 80077aa:	4411      	add	r1, r2
 80077ac:	e001      	b.n	80077b2 <__mcmp+0x1e>
 80077ae:	4298      	cmp	r0, r3
 80077b0:	d20d      	bcs.n	80077ce <__mcmp+0x3a>
 80077b2:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 80077b6:	f851 4d04 	ldr.w	r4, [r1, #-4]!
 80077ba:	42a2      	cmp	r2, r4
 80077bc:	d0f7      	beq.n	80077ae <__mcmp+0x1a>
 80077be:	4294      	cmp	r4, r2
 80077c0:	bf94      	ite	ls
 80077c2:	2001      	movls	r0, #1
 80077c4:	f04f 30ff 	movhi.w	r0, #4294967295
 80077c8:	f85d 4b04 	ldr.w	r4, [sp], #4
 80077cc:	4770      	bx	lr
 80077ce:	2000      	movs	r0, #0
 80077d0:	f85d 4b04 	ldr.w	r4, [sp], #4
 80077d4:	4770      	bx	lr
 80077d6:	bf00      	nop

080077d8 <__mdiff>:
 80077d8:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80077dc:	4688      	mov	r8, r1
 80077de:	4605      	mov	r5, r0
 80077e0:	4611      	mov	r1, r2
 80077e2:	4640      	mov	r0, r8
 80077e4:	4614      	mov	r4, r2
 80077e6:	f7ff ffd5 	bl	8007794 <__mcmp>
 80077ea:	1e06      	subs	r6, r0, #0
 80077ec:	d05f      	beq.n	80078ae <__mdiff+0xd6>
 80077ee:	bfbc      	itt	lt
 80077f0:	4643      	movlt	r3, r8
 80077f2:	46a0      	movlt	r8, r4
 80077f4:	4628      	mov	r0, r5
 80077f6:	bfb8      	it	lt
 80077f8:	461c      	movlt	r4, r3
 80077fa:	f8d8 1004 	ldr.w	r1, [r8, #4]
 80077fe:	bfac      	ite	ge
 8007800:	2600      	movge	r6, #0
 8007802:	2601      	movlt	r6, #1
 8007804:	f7ff fd36 	bl	8007274 <_Balloc>
 8007808:	f8d8 c010 	ldr.w	ip, [r8, #16]
 800780c:	f104 0914 	add.w	r9, r4, #20
 8007810:	6922      	ldr	r2, [r4, #16]
 8007812:	f108 0814 	add.w	r8, r8, #20
 8007816:	4644      	mov	r4, r8
 8007818:	464d      	mov	r5, r9
 800781a:	eb08 088c 	add.w	r8, r8, ip, lsl #2
 800781e:	eb09 0982 	add.w	r9, r9, r2, lsl #2
 8007822:	2200      	movs	r2, #0
 8007824:	4682      	mov	sl, r0
 8007826:	f100 0314 	add.w	r3, r0, #20
 800782a:	60c6      	str	r6, [r0, #12]
 800782c:	f854 7b04 	ldr.w	r7, [r4], #4
 8007830:	f855 0b04 	ldr.w	r0, [r5], #4
 8007834:	4621      	mov	r1, r4
 8007836:	b2be      	uxth	r6, r7
 8007838:	45a9      	cmp	r9, r5
 800783a:	4432      	add	r2, r6
 800783c:	fa1f fb80 	uxth.w	fp, r0
 8007840:	ebcb 0602 	rsb	r6, fp, r2
 8007844:	ea4f 4210 	mov.w	r2, r0, lsr #16
 8007848:	ebc2 4217 	rsb	r2, r2, r7, lsr #16
 800784c:	eb02 4226 	add.w	r2, r2, r6, asr #16
 8007850:	b2b6      	uxth	r6, r6
 8007852:	ea46 4602 	orr.w	r6, r6, r2, lsl #16
 8007856:	ea4f 4222 	mov.w	r2, r2, asr #16
 800785a:	f843 6b04 	str.w	r6, [r3], #4
 800785e:	d8e5      	bhi.n	800782c <__mdiff+0x54>
 8007860:	45a0      	cmp	r8, r4
 8007862:	461d      	mov	r5, r3
 8007864:	d916      	bls.n	8007894 <__mdiff+0xbc>
 8007866:	f851 0b04 	ldr.w	r0, [r1], #4
 800786a:	4588      	cmp	r8, r1
 800786c:	b286      	uxth	r6, r0
 800786e:	ea4f 4010 	mov.w	r0, r0, lsr #16
 8007872:	4432      	add	r2, r6
 8007874:	eb00 4022 	add.w	r0, r0, r2, asr #16
 8007878:	b292      	uxth	r2, r2
 800787a:	ea42 4600 	orr.w	r6, r2, r0, lsl #16
 800787e:	ea4f 4220 	mov.w	r2, r0, asr #16
 8007882:	f843 6b04 	str.w	r6, [r3], #4
 8007886:	d8ee      	bhi.n	8007866 <__mdiff+0x8e>
 8007888:	43e3      	mvns	r3, r4
 800788a:	4443      	add	r3, r8
 800788c:	f023 0303 	bic.w	r3, r3, #3
 8007890:	3304      	adds	r3, #4
 8007892:	442b      	add	r3, r5
 8007894:	3b04      	subs	r3, #4
 8007896:	b92e      	cbnz	r6, 80078a4 <__mdiff+0xcc>
 8007898:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 800789c:	f10c 3cff 	add.w	ip, ip, #4294967295
 80078a0:	2a00      	cmp	r2, #0
 80078a2:	d0f9      	beq.n	8007898 <__mdiff+0xc0>
 80078a4:	4650      	mov	r0, sl
 80078a6:	f8ca c010 	str.w	ip, [sl, #16]
 80078aa:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078ae:	4628      	mov	r0, r5
 80078b0:	4631      	mov	r1, r6
 80078b2:	f7ff fcdf 	bl	8007274 <_Balloc>
 80078b6:	2201      	movs	r2, #1
 80078b8:	4603      	mov	r3, r0
 80078ba:	615e      	str	r6, [r3, #20]
 80078bc:	611a      	str	r2, [r3, #16]
 80078be:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80078c2:	bf00      	nop

080078c4 <__ulp>:
 80078c4:	2300      	movs	r3, #0
 80078c6:	f6c7 73f0 	movt	r3, #32752	; 0x7ff0
 80078ca:	400b      	ands	r3, r1
 80078cc:	f1a3 7350 	sub.w	r3, r3, #54525952	; 0x3400000
 80078d0:	2b00      	cmp	r3, #0
 80078d2:	dd02      	ble.n	80078da <__ulp+0x16>
 80078d4:	4619      	mov	r1, r3
 80078d6:	2000      	movs	r0, #0
 80078d8:	4770      	bx	lr
 80078da:	425b      	negs	r3, r3
 80078dc:	151b      	asrs	r3, r3, #20
 80078de:	2b13      	cmp	r3, #19
 80078e0:	dd0b      	ble.n	80078fa <__ulp+0x36>
 80078e2:	2b32      	cmp	r3, #50	; 0x32
 80078e4:	f04f 0100 	mov.w	r1, #0
 80078e8:	bfdb      	ittet	le
 80078ea:	2201      	movle	r2, #1
 80078ec:	f1c3 0333 	rsble	r3, r3, #51	; 0x33
 80078f0:	2301      	movgt	r3, #1
 80078f2:	fa02 f303 	lslle.w	r3, r2, r3
 80078f6:	4618      	mov	r0, r3
 80078f8:	4770      	bx	lr
 80078fa:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 80078fe:	2000      	movs	r0, #0
 8007900:	fa42 f103 	asr.w	r1, r2, r3
 8007904:	4770      	bx	lr
 8007906:	bf00      	nop

08007908 <__b2d>:
 8007908:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800790a:	f100 0614 	add.w	r6, r0, #20
 800790e:	6904      	ldr	r4, [r0, #16]
 8007910:	eb06 0484 	add.w	r4, r6, r4, lsl #2
 8007914:	1f27      	subs	r7, r4, #4
 8007916:	f854 5c04 	ldr.w	r5, [r4, #-4]
 800791a:	4628      	mov	r0, r5
 800791c:	f7ff fd8e 	bl	800743c <__hi0bits>
 8007920:	280a      	cmp	r0, #10
 8007922:	f1c0 0320 	rsb	r3, r0, #32
 8007926:	600b      	str	r3, [r1, #0]
 8007928:	dc18      	bgt.n	800795c <__b2d+0x54>
 800792a:	42be      	cmp	r6, r7
 800792c:	f1c0 010b 	rsb	r1, r0, #11
 8007930:	fa25 fc01 	lsr.w	ip, r5, r1
 8007934:	f100 0015 	add.w	r0, r0, #21
 8007938:	bf34      	ite	cc
 800793a:	f854 4c08 	ldrcc.w	r4, [r4, #-8]
 800793e:	2100      	movcs	r1, #0
 8007940:	fa05 f500 	lsl.w	r5, r5, r0
 8007944:	f04c 5c7f 	orr.w	ip, ip, #1069547520	; 0x3fc00000
 8007948:	f44c 1340 	orr.w	r3, ip, #3145728	; 0x300000
 800794c:	bf38      	it	cc
 800794e:	fa24 f101 	lsrcc.w	r1, r4, r1
 8007952:	ea41 0205 	orr.w	r2, r1, r5
 8007956:	4619      	mov	r1, r3
 8007958:	4610      	mov	r0, r2
 800795a:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800795c:	42be      	cmp	r6, r7
 800795e:	bf36      	itet	cc
 8007960:	f1a4 0708 	subcc.w	r7, r4, #8
 8007964:	2100      	movcs	r1, #0
 8007966:	f854 1c08 	ldrcc.w	r1, [r4, #-8]
 800796a:	f1b0 040b 	subs.w	r4, r0, #11
 800796e:	d019      	beq.n	80079a4 <__b2d+0x9c>
 8007970:	40a5      	lsls	r5, r4
 8007972:	f1c0 002b 	rsb	r0, r0, #43	; 0x2b
 8007976:	42b7      	cmp	r7, r6
 8007978:	f045 557f 	orr.w	r5, r5, #1069547520	; 0x3fc00000
 800797c:	fa21 fc00 	lsr.w	ip, r1, r0
 8007980:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 8007984:	ea45 030c 	orr.w	r3, r5, ip
 8007988:	bf8c      	ite	hi
 800798a:	f857 5c04 	ldrhi.w	r5, [r7, #-4]
 800798e:	2000      	movls	r0, #0
 8007990:	fa01 f104 	lsl.w	r1, r1, r4
 8007994:	bf88      	it	hi
 8007996:	fa25 f000 	lsrhi.w	r0, r5, r0
 800799a:	ea40 0201 	orr.w	r2, r0, r1
 800799e:	4619      	mov	r1, r3
 80079a0:	4610      	mov	r0, r2
 80079a2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 80079a4:	f045 557f 	orr.w	r5, r5, #1069547520	; 0x3fc00000
 80079a8:	460a      	mov	r2, r1
 80079aa:	f445 1340 	orr.w	r3, r5, #3145728	; 0x300000
 80079ae:	4610      	mov	r0, r2
 80079b0:	4619      	mov	r1, r3
 80079b2:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}

080079b4 <__d2b>:
 80079b4:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80079b8:	b082      	sub	sp, #8
 80079ba:	2101      	movs	r1, #1
 80079bc:	461d      	mov	r5, r3
 80079be:	f3c3 560a 	ubfx	r6, r3, #20, #11
 80079c2:	4614      	mov	r4, r2
 80079c4:	9f08      	ldr	r7, [sp, #32]
 80079c6:	f7ff fc55 	bl	8007274 <_Balloc>
 80079ca:	f3c5 0313 	ubfx	r3, r5, #0, #20
 80079ce:	4684      	mov	ip, r0
 80079d0:	b10e      	cbz	r6, 80079d6 <__d2b+0x22>
 80079d2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80079d6:	9301      	str	r3, [sp, #4]
 80079d8:	b324      	cbz	r4, 8007a24 <__d2b+0x70>
 80079da:	a802      	add	r0, sp, #8
 80079dc:	f840 4d08 	str.w	r4, [r0, #-8]!
 80079e0:	4668      	mov	r0, sp
 80079e2:	f7ff fd49 	bl	8007478 <__lo0bits>
 80079e6:	2800      	cmp	r0, #0
 80079e8:	d134      	bne.n	8007a54 <__d2b+0xa0>
 80079ea:	9b00      	ldr	r3, [sp, #0]
 80079ec:	9901      	ldr	r1, [sp, #4]
 80079ee:	f8cc 3014 	str.w	r3, [ip, #20]
 80079f2:	f8cc 1018 	str.w	r1, [ip, #24]
 80079f6:	2900      	cmp	r1, #0
 80079f8:	bf0c      	ite	eq
 80079fa:	2101      	moveq	r1, #1
 80079fc:	2102      	movne	r1, #2
 80079fe:	f8cc 1010 	str.w	r1, [ip, #16]
 8007a02:	b9de      	cbnz	r6, 8007a3c <__d2b+0x88>
 8007a04:	eb0c 0381 	add.w	r3, ip, r1, lsl #2
 8007a08:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8007a0c:	6038      	str	r0, [r7, #0]
 8007a0e:	6918      	ldr	r0, [r3, #16]
 8007a10:	f7ff fd14 	bl	800743c <__hi0bits>
 8007a14:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8007a16:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 8007a1a:	6018      	str	r0, [r3, #0]
 8007a1c:	4660      	mov	r0, ip
 8007a1e:	b002      	add	sp, #8
 8007a20:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007a24:	a801      	add	r0, sp, #4
 8007a26:	f7ff fd27 	bl	8007478 <__lo0bits>
 8007a2a:	9b01      	ldr	r3, [sp, #4]
 8007a2c:	2101      	movs	r1, #1
 8007a2e:	f8cc 3014 	str.w	r3, [ip, #20]
 8007a32:	3020      	adds	r0, #32
 8007a34:	f8cc 1010 	str.w	r1, [ip, #16]
 8007a38:	2e00      	cmp	r6, #0
 8007a3a:	d0e3      	beq.n	8007a04 <__d2b+0x50>
 8007a3c:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8007a3e:	f2a6 4833 	subw	r8, r6, #1075	; 0x433
 8007a42:	f1c0 0335 	rsb	r3, r0, #53	; 0x35
 8007a46:	4440      	add	r0, r8
 8007a48:	6038      	str	r0, [r7, #0]
 8007a4a:	4660      	mov	r0, ip
 8007a4c:	6013      	str	r3, [r2, #0]
 8007a4e:	b002      	add	sp, #8
 8007a50:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8007a54:	9b01      	ldr	r3, [sp, #4]
 8007a56:	f1c0 0420 	rsb	r4, r0, #32
 8007a5a:	9a00      	ldr	r2, [sp, #0]
 8007a5c:	fa03 f404 	lsl.w	r4, r3, r4
 8007a60:	40c3      	lsrs	r3, r0
 8007a62:	4322      	orrs	r2, r4
 8007a64:	4619      	mov	r1, r3
 8007a66:	9301      	str	r3, [sp, #4]
 8007a68:	f8cc 2014 	str.w	r2, [ip, #20]
 8007a6c:	e7c1      	b.n	80079f2 <__d2b+0x3e>
 8007a6e:	bf00      	nop

08007a70 <__ratio>:
 8007a70:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8007a74:	b083      	sub	sp, #12
 8007a76:	4688      	mov	r8, r1
 8007a78:	4669      	mov	r1, sp
 8007a7a:	4606      	mov	r6, r0
 8007a7c:	f7ff ff44 	bl	8007908 <__b2d>
 8007a80:	460d      	mov	r5, r1
 8007a82:	4604      	mov	r4, r0
 8007a84:	a901      	add	r1, sp, #4
 8007a86:	4640      	mov	r0, r8
 8007a88:	f7ff ff3e 	bl	8007908 <__b2d>
 8007a8c:	f8d8 e010 	ldr.w	lr, [r8, #16]
 8007a90:	462f      	mov	r7, r5
 8007a92:	4602      	mov	r2, r0
 8007a94:	6930      	ldr	r0, [r6, #16]
 8007a96:	460b      	mov	r3, r1
 8007a98:	4689      	mov	r9, r1
 8007a9a:	ebce 0e00 	rsb	lr, lr, r0
 8007a9e:	e89d 0003 	ldmia.w	sp, {r0, r1}
 8007aa2:	ebc1 0c00 	rsb	ip, r1, r0
 8007aa6:	eb0c 114e 	add.w	r1, ip, lr, lsl #5
 8007aaa:	2900      	cmp	r1, #0
 8007aac:	bfc9      	itett	gt
 8007aae:	eb05 5701 	addgt.w	r7, r5, r1, lsl #20
 8007ab2:	eba3 5901 	suble.w	r9, r3, r1, lsl #20
 8007ab6:	4624      	movgt	r4, r4
 8007ab8:	463d      	movgt	r5, r7
 8007aba:	bfdc      	itt	le
 8007abc:	4612      	movle	r2, r2
 8007abe:	464b      	movle	r3, r9
 8007ac0:	4620      	mov	r0, r4
 8007ac2:	4629      	mov	r1, r5
 8007ac4:	f002 f834 	bl	8009b30 <__aeabi_ddiv>
 8007ac8:	b003      	add	sp, #12
 8007aca:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8007ace:	bf00      	nop

08007ad0 <_mprec_log10>:
 8007ad0:	2817      	cmp	r0, #23
 8007ad2:	b510      	push	{r4, lr}
 8007ad4:	4604      	mov	r4, r0
 8007ad6:	dd0c      	ble.n	8007af2 <_mprec_log10+0x22>
 8007ad8:	2100      	movs	r1, #0
 8007ada:	2000      	movs	r0, #0
 8007adc:	f6c3 71f0 	movt	r1, #16368	; 0x3ff0
 8007ae0:	2300      	movs	r3, #0
 8007ae2:	2200      	movs	r2, #0
 8007ae4:	f2c4 0324 	movt	r3, #16420	; 0x4024
 8007ae8:	f001 fef8 	bl	80098dc <__aeabi_dmul>
 8007aec:	3c01      	subs	r4, #1
 8007aee:	d1f7      	bne.n	8007ae0 <_mprec_log10+0x10>
 8007af0:	bd10      	pop	{r4, pc}
 8007af2:	f24a 53e8 	movw	r3, #42472	; 0xa5e8
 8007af6:	f6c0 0300 	movt	r3, #2048	; 0x800
 8007afa:	eb03 03c0 	add.w	r3, r3, r0, lsl #3
 8007afe:	e9d3 0104 	ldrd	r0, r1, [r3, #16]
 8007b02:	bd10      	pop	{r4, pc}

08007b04 <__copybits>:
 8007b04:	b470      	push	{r4, r5, r6}
 8007b06:	3901      	subs	r1, #1
 8007b08:	6915      	ldr	r5, [r2, #16]
 8007b0a:	f102 0314 	add.w	r3, r2, #20
 8007b0e:	114e      	asrs	r6, r1, #5
 8007b10:	3601      	adds	r6, #1
 8007b12:	eb03 0585 	add.w	r5, r3, r5, lsl #2
 8007b16:	42ab      	cmp	r3, r5
 8007b18:	eb00 0686 	add.w	r6, r0, r6, lsl #2
 8007b1c:	d20c      	bcs.n	8007b38 <__copybits+0x34>
 8007b1e:	4601      	mov	r1, r0
 8007b20:	f853 4b04 	ldr.w	r4, [r3], #4
 8007b24:	429d      	cmp	r5, r3
 8007b26:	f841 4b04 	str.w	r4, [r1], #4
 8007b2a:	d8f9      	bhi.n	8007b20 <__copybits+0x1c>
 8007b2c:	1aab      	subs	r3, r5, r2
 8007b2e:	3b15      	subs	r3, #21
 8007b30:	f023 0303 	bic.w	r3, r3, #3
 8007b34:	3304      	adds	r3, #4
 8007b36:	4418      	add	r0, r3
 8007b38:	4286      	cmp	r6, r0
 8007b3a:	d904      	bls.n	8007b46 <__copybits+0x42>
 8007b3c:	2300      	movs	r3, #0
 8007b3e:	f840 3b04 	str.w	r3, [r0], #4
 8007b42:	4286      	cmp	r6, r0
 8007b44:	d8fb      	bhi.n	8007b3e <__copybits+0x3a>
 8007b46:	bc70      	pop	{r4, r5, r6}
 8007b48:	4770      	bx	lr
 8007b4a:	bf00      	nop

08007b4c <__any_on>:
 8007b4c:	6903      	ldr	r3, [r0, #16]
 8007b4e:	114a      	asrs	r2, r1, #5
 8007b50:	b410      	push	{r4}
 8007b52:	4293      	cmp	r3, r2
 8007b54:	f100 0414 	add.w	r4, r0, #20
 8007b58:	bfb8      	it	lt
 8007b5a:	eb04 0383 	addlt.w	r3, r4, r3, lsl #2
 8007b5e:	db13      	blt.n	8007b88 <__any_on+0x3c>
 8007b60:	dd10      	ble.n	8007b84 <__any_on+0x38>
 8007b62:	f011 011f 	ands.w	r1, r1, #31
 8007b66:	d00d      	beq.n	8007b84 <__any_on+0x38>
 8007b68:	f854 0022 	ldr.w	r0, [r4, r2, lsl #2]
 8007b6c:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8007b70:	fa20 f201 	lsr.w	r2, r0, r1
 8007b74:	fa02 f101 	lsl.w	r1, r2, r1
 8007b78:	4281      	cmp	r1, r0
 8007b7a:	d005      	beq.n	8007b88 <__any_on+0x3c>
 8007b7c:	2001      	movs	r0, #1
 8007b7e:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007b82:	4770      	bx	lr
 8007b84:	eb04 0382 	add.w	r3, r4, r2, lsl #2
 8007b88:	429c      	cmp	r4, r3
 8007b8a:	d20a      	bcs.n	8007ba2 <__any_on+0x56>
 8007b8c:	f853 2c04 	ldr.w	r2, [r3, #-4]
 8007b90:	3b04      	subs	r3, #4
 8007b92:	b122      	cbz	r2, 8007b9e <__any_on+0x52>
 8007b94:	e7f2      	b.n	8007b7c <__any_on+0x30>
 8007b96:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8007b9a:	2a00      	cmp	r2, #0
 8007b9c:	d1ee      	bne.n	8007b7c <__any_on+0x30>
 8007b9e:	429c      	cmp	r4, r3
 8007ba0:	d3f9      	bcc.n	8007b96 <__any_on+0x4a>
 8007ba2:	2000      	movs	r0, #0
 8007ba4:	f85d 4b04 	ldr.w	r4, [sp], #4
 8007ba8:	4770      	bx	lr
 8007baa:	bf00      	nop

08007bac <__fpclassifyd>:
 8007bac:	ea50 0301 	orrs.w	r3, r0, r1
 8007bb0:	d101      	bne.n	8007bb6 <__fpclassifyd+0xa>
 8007bb2:	2002      	movs	r0, #2
 8007bb4:	4770      	bx	lr
 8007bb6:	f1d0 0301 	rsbs	r3, r0, #1
 8007bba:	bf38      	it	cc
 8007bbc:	2300      	movcc	r3, #0
 8007bbe:	f1b1 4f00 	cmp.w	r1, #2147483648	; 0x80000000
 8007bc2:	bf08      	it	eq
 8007bc4:	2800      	cmpeq	r0, #0
 8007bc6:	d0f4      	beq.n	8007bb2 <__fpclassifyd+0x6>
 8007bc8:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8007bcc:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8007bd0:	f5a1 1080 	sub.w	r0, r1, #1048576	; 0x100000
 8007bd4:	f6c7 72df 	movt	r2, #32735	; 0x7fdf
 8007bd8:	4290      	cmp	r0, r2
 8007bda:	d801      	bhi.n	8007be0 <__fpclassifyd+0x34>
 8007bdc:	2004      	movs	r0, #4
 8007bde:	4770      	bx	lr
 8007be0:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8007be4:	d201      	bcs.n	8007bea <__fpclassifyd+0x3e>
 8007be6:	2003      	movs	r0, #3
 8007be8:	4770      	bx	lr
 8007bea:	2000      	movs	r0, #0
 8007bec:	f6c7 70f0 	movt	r0, #32752	; 0x7ff0
 8007bf0:	4281      	cmp	r1, r0
 8007bf2:	bf14      	ite	ne
 8007bf4:	2000      	movne	r0, #0
 8007bf6:	f003 0001 	andeq.w	r0, r3, #1
 8007bfa:	4770      	bx	lr

08007bfc <_sbrk_r>:
 8007bfc:	b538      	push	{r3, r4, r5, lr}
 8007bfe:	f240 7458 	movw	r4, #1880	; 0x758
 8007c02:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8007c06:	4605      	mov	r5, r0
 8007c08:	4608      	mov	r0, r1
 8007c0a:	2300      	movs	r3, #0
 8007c0c:	6023      	str	r3, [r4, #0]
 8007c0e:	f7fb fd8f 	bl	8003730 <_sbrk>
 8007c12:	1c43      	adds	r3, r0, #1
 8007c14:	d000      	beq.n	8007c18 <_sbrk_r+0x1c>
 8007c16:	bd38      	pop	{r3, r4, r5, pc}
 8007c18:	6823      	ldr	r3, [r4, #0]
 8007c1a:	2b00      	cmp	r3, #0
 8007c1c:	d0fb      	beq.n	8007c16 <_sbrk_r+0x1a>
 8007c1e:	602b      	str	r3, [r5, #0]
 8007c20:	bd38      	pop	{r3, r4, r5, pc}
 8007c22:	bf00      	nop

08007c24 <strcmp>:
 8007c24:	ea40 0c01 	orr.w	ip, r0, r1
 8007c28:	f01c 0f07 	tst.w	ip, #7
 8007c2c:	d127      	bne.n	8007c7e <strcmp+0x5a>
 8007c2e:	f1bd 0d10 	subs.w	sp, sp, #16
 8007c32:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8007c36:	e9cd 6700 	strd	r6, r7, [sp]
 8007c3a:	f06f 0600 	mvn.w	r6, #0
 8007c3e:	f04f 0700 	mov.w	r7, #0
 8007c42:	bf00      	nop
 8007c44:	e8f0 2302 	ldrd	r2, r3, [r0], #8
 8007c48:	e8f1 4502 	ldrd	r4, r5, [r1], #8
 8007c4c:	42a2      	cmp	r2, r4
 8007c4e:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
 8007c52:	ea2c 0c02 	bic.w	ip, ip, r2
 8007c56:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007c5a:	bf08      	it	eq
 8007c5c:	f1bc 0f00 	cmpeq.w	ip, #0
 8007c60:	f040 80e5 	bne.w	8007e2e <strcmp+0x20a>
 8007c64:	42ab      	cmp	r3, r5
 8007c66:	f1a3 3c01 	sub.w	ip, r3, #16843009	; 0x1010101
 8007c6a:	ea2c 0c03 	bic.w	ip, ip, r3
 8007c6e:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007c72:	bf08      	it	eq
 8007c74:	f1bc 0f00 	cmpeq.w	ip, #0
 8007c78:	f040 80d6 	bne.w	8007e28 <strcmp+0x204>
 8007c7c:	e7e2      	b.n	8007c44 <strcmp+0x20>
 8007c7e:	f010 0c03 	ands.w	ip, r0, #3
 8007c82:	d021      	beq.n	8007cc8 <strcmp+0xa4>
 8007c84:	f020 0003 	bic.w	r0, r0, #3
 8007c88:	f850 2b04 	ldr.w	r2, [r0], #4
 8007c8c:	ea5f 7ccc 	movs.w	ip, ip, lsl #31
 8007c90:	d008      	beq.n	8007ca4 <strcmp+0x80>
 8007c92:	d20f      	bcs.n	8007cb4 <strcmp+0x90>
 8007c94:	f811 cb01 	ldrb.w	ip, [r1], #1
 8007c98:	fa5f f392 	uxtb.w	r3, r2, ror #8
 8007c9c:	ebb3 0c0c 	subs.w	ip, r3, ip
 8007ca0:	d110      	bne.n	8007cc4 <strcmp+0xa0>
 8007ca2:	b17b      	cbz	r3, 8007cc4 <strcmp+0xa0>
 8007ca4:	f811 cb01 	ldrb.w	ip, [r1], #1
 8007ca8:	fa5f f3a2 	uxtb.w	r3, r2, ror #16
 8007cac:	ebb3 0c0c 	subs.w	ip, r3, ip
 8007cb0:	d108      	bne.n	8007cc4 <strcmp+0xa0>
 8007cb2:	b13b      	cbz	r3, 8007cc4 <strcmp+0xa0>
 8007cb4:	f811 cb01 	ldrb.w	ip, [r1], #1
 8007cb8:	fa5f f3b2 	uxtb.w	r3, r2, ror #24
 8007cbc:	ebb3 0c0c 	subs.w	ip, r3, ip
 8007cc0:	d100      	bne.n	8007cc4 <strcmp+0xa0>
 8007cc2:	b90b      	cbnz	r3, 8007cc8 <strcmp+0xa4>
 8007cc4:	4660      	mov	r0, ip
 8007cc6:	4770      	bx	lr
 8007cc8:	f1bd 0d10 	subs.w	sp, sp, #16
 8007ccc:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8007cd0:	e9cd 6700 	strd	r6, r7, [sp]
 8007cd4:	f06f 0600 	mvn.w	r6, #0
 8007cd8:	f04f 0700 	mov.w	r7, #0
 8007cdc:	f011 0c03 	ands.w	ip, r1, #3
 8007ce0:	d133      	bne.n	8007d4a <strcmp+0x126>
 8007ce2:	f010 0f04 	tst.w	r0, #4
 8007ce6:	d00f      	beq.n	8007d08 <strcmp+0xe4>
 8007ce8:	f850 2b04 	ldr.w	r2, [r0], #4
 8007cec:	f851 4b04 	ldr.w	r4, [r1], #4
 8007cf0:	42a2      	cmp	r2, r4
 8007cf2:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
 8007cf6:	ea2c 0c02 	bic.w	ip, ip, r2
 8007cfa:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007cfe:	bf08      	it	eq
 8007d00:	f1bc 0f00 	cmpeq.w	ip, #0
 8007d04:	f040 8093 	bne.w	8007e2e <strcmp+0x20a>
 8007d08:	f011 0f04 	tst.w	r1, #4
 8007d0c:	d099      	beq.n	8007c42 <strcmp+0x1e>
 8007d0e:	f851 5b04 	ldr.w	r5, [r1], #4
 8007d12:	bf00      	nop
 8007d14:	e8f0 2302 	ldrd	r2, r3, [r0], #8
 8007d18:	42aa      	cmp	r2, r5
 8007d1a:	f1a2 3c01 	sub.w	ip, r2, #16843009	; 0x1010101
 8007d1e:	ea2c 0c02 	bic.w	ip, ip, r2
 8007d22:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007d26:	bf08      	it	eq
 8007d28:	f1bc 0f00 	cmpeq.w	ip, #0
 8007d2c:	d179      	bne.n	8007e22 <strcmp+0x1fe>
 8007d2e:	e8f1 4502 	ldrd	r4, r5, [r1], #8
 8007d32:	42a3      	cmp	r3, r4
 8007d34:	f1a3 3c01 	sub.w	ip, r3, #16843009	; 0x1010101
 8007d38:	ea2c 0c03 	bic.w	ip, ip, r3
 8007d3c:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007d40:	bf08      	it	eq
 8007d42:	f1bc 0f00 	cmpeq.w	ip, #0
 8007d46:	d169      	bne.n	8007e1c <strcmp+0x1f8>
 8007d48:	e7e4      	b.n	8007d14 <strcmp+0xf0>
 8007d4a:	f021 0103 	bic.w	r1, r1, #3
 8007d4e:	f1bc 0f02 	cmp.w	ip, #2
 8007d52:	d020      	beq.n	8007d96 <strcmp+0x172>
 8007d54:	da3f      	bge.n	8007dd6 <strcmp+0x1b2>
 8007d56:	f851 5b04 	ldr.w	r5, [r1], #4
 8007d5a:	bf00      	nop
 8007d5c:	f850 3b04 	ldr.w	r3, [r0], #4
 8007d60:	ea4f 2515 	mov.w	r5, r5, lsr #8
 8007d64:	f1a3 3c01 	sub.w	ip, r3, #16843009	; 0x1010101
 8007d68:	ea2c 0c03 	bic.w	ip, ip, r3
 8007d6c:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007d70:	ebb7 2f0c 	cmp.w	r7, ip, lsl #8
 8007d74:	ea03 2216 	and.w	r2, r3, r6, lsr #8
 8007d78:	bf08      	it	eq
 8007d7a:	42aa      	cmpeq	r2, r5
 8007d7c:	d151      	bne.n	8007e22 <strcmp+0x1fe>
 8007d7e:	f851 5b04 	ldr.w	r5, [r1], #4
 8007d82:	f1bc 0f00 	cmp.w	ip, #0
 8007d86:	ea82 0303 	eor.w	r3, r2, r3
 8007d8a:	ea4f 6205 	mov.w	r2, r5, lsl #24
 8007d8e:	bf08      	it	eq
 8007d90:	4293      	cmpeq	r3, r2
 8007d92:	d140      	bne.n	8007e16 <strcmp+0x1f2>
 8007d94:	e7e2      	b.n	8007d5c <strcmp+0x138>
 8007d96:	f851 5b04 	ldr.w	r5, [r1], #4
 8007d9a:	bf00      	nop
 8007d9c:	f850 3b04 	ldr.w	r3, [r0], #4
 8007da0:	ea4f 4515 	mov.w	r5, r5, lsr #16
 8007da4:	f1a3 3c01 	sub.w	ip, r3, #16843009	; 0x1010101
 8007da8:	ea2c 0c03 	bic.w	ip, ip, r3
 8007dac:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007db0:	ebb7 4f0c 	cmp.w	r7, ip, lsl #16
 8007db4:	ea03 4216 	and.w	r2, r3, r6, lsr #16
 8007db8:	bf08      	it	eq
 8007dba:	42aa      	cmpeq	r2, r5
 8007dbc:	d131      	bne.n	8007e22 <strcmp+0x1fe>
 8007dbe:	f851 5b04 	ldr.w	r5, [r1], #4
 8007dc2:	f1bc 0f00 	cmp.w	ip, #0
 8007dc6:	ea82 0303 	eor.w	r3, r2, r3
 8007dca:	ea4f 4205 	mov.w	r2, r5, lsl #16
 8007dce:	bf08      	it	eq
 8007dd0:	4293      	cmpeq	r3, r2
 8007dd2:	d120      	bne.n	8007e16 <strcmp+0x1f2>
 8007dd4:	e7e2      	b.n	8007d9c <strcmp+0x178>
 8007dd6:	f851 5b04 	ldr.w	r5, [r1], #4
 8007dda:	bf00      	nop
 8007ddc:	f850 3b04 	ldr.w	r3, [r0], #4
 8007de0:	ea4f 6515 	mov.w	r5, r5, lsr #24
 8007de4:	f1a3 3c01 	sub.w	ip, r3, #16843009	; 0x1010101
 8007de8:	ea2c 0c03 	bic.w	ip, ip, r3
 8007dec:	f00c 3c80 	and.w	ip, ip, #2155905152	; 0x80808080
 8007df0:	ebb7 6f0c 	cmp.w	r7, ip, lsl #24
 8007df4:	ea03 6216 	and.w	r2, r3, r6, lsr #24
 8007df8:	bf08      	it	eq
 8007dfa:	42aa      	cmpeq	r2, r5
 8007dfc:	d111      	bne.n	8007e22 <strcmp+0x1fe>
 8007dfe:	f851 5b04 	ldr.w	r5, [r1], #4
 8007e02:	f1bc 0f00 	cmp.w	ip, #0
 8007e06:	ea82 0303 	eor.w	r3, r2, r3
 8007e0a:	ea4f 2205 	mov.w	r2, r5, lsl #8
 8007e0e:	bf08      	it	eq
 8007e10:	4293      	cmpeq	r3, r2
 8007e12:	d100      	bne.n	8007e16 <strcmp+0x1f2>
 8007e14:	e7e2      	b.n	8007ddc <strcmp+0x1b8>
 8007e16:	ba19      	rev	r1, r3
 8007e18:	ba12      	rev	r2, r2
 8007e1a:	e00a      	b.n	8007e32 <strcmp+0x20e>
 8007e1c:	ba19      	rev	r1, r3
 8007e1e:	ba22      	rev	r2, r4
 8007e20:	e007      	b.n	8007e32 <strcmp+0x20e>
 8007e22:	ba11      	rev	r1, r2
 8007e24:	ba2a      	rev	r2, r5
 8007e26:	e004      	b.n	8007e32 <strcmp+0x20e>
 8007e28:	ba19      	rev	r1, r3
 8007e2a:	ba2a      	rev	r2, r5
 8007e2c:	e001      	b.n	8007e32 <strcmp+0x20e>
 8007e2e:	ba11      	rev	r1, r2
 8007e30:	ba22      	rev	r2, r4
 8007e32:	fa9c f08c 	rev.w	r0, ip
 8007e36:	e9dd 6700 	ldrd	r6, r7, [sp]
 8007e3a:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 8007e3e:	f11d 0d10 	adds.w	sp, sp, #16
 8007e42:	b138      	cbz	r0, 8007e54 <strcmp+0x230>
 8007e44:	fab0 f080 	clz	r0, r0
 8007e48:	f1c0 0018 	rsb	r0, r0, #24
 8007e4c:	fa21 f100 	lsr.w	r1, r1, r0
 8007e50:	fa22 f200 	lsr.w	r2, r2, r0
 8007e54:	2001      	movs	r0, #1
 8007e56:	4291      	cmp	r1, r2
 8007e58:	bf98      	it	ls
 8007e5a:	4180      	sbcls	r0, r0
 8007e5c:	4770      	bx	lr
 8007e5e:	bf00      	nop

08007e60 <strlen>:
 8007e60:	f020 0103 	bic.w	r1, r0, #3
 8007e64:	f010 0003 	ands.w	r0, r0, #3
 8007e68:	f1c0 0000 	rsb	r0, r0, #0
 8007e6c:	f851 3b04 	ldr.w	r3, [r1], #4
 8007e70:	f100 0c04 	add.w	ip, r0, #4
 8007e74:	ea4f 0ccc 	mov.w	ip, ip, lsl #3
 8007e78:	f06f 0200 	mvn.w	r2, #0
 8007e7c:	bf1c      	itt	ne
 8007e7e:	fa22 f20c 	lsrne.w	r2, r2, ip
 8007e82:	4313      	orrne	r3, r2
 8007e84:	f04f 0c01 	mov.w	ip, #1
 8007e88:	ea4c 2c0c 	orr.w	ip, ip, ip, lsl #8
 8007e8c:	ea4c 4c0c 	orr.w	ip, ip, ip, lsl #16
 8007e90:	eba3 020c 	sub.w	r2, r3, ip
 8007e94:	ea22 0203 	bic.w	r2, r2, r3
 8007e98:	ea12 12cc 	ands.w	r2, r2, ip, lsl #7
 8007e9c:	bf04      	itt	eq
 8007e9e:	f851 3b04 	ldreq.w	r3, [r1], #4
 8007ea2:	3004      	addeq	r0, #4
 8007ea4:	d0f4      	beq.n	8007e90 <strlen+0x30>
 8007ea6:	f013 0fff 	tst.w	r3, #255	; 0xff
 8007eaa:	bf1f      	itttt	ne
 8007eac:	3001      	addne	r0, #1
 8007eae:	f413 4f7f 	tstne.w	r3, #65280	; 0xff00
 8007eb2:	3001      	addne	r0, #1
 8007eb4:	f413 0f7f 	tstne.w	r3, #16711680	; 0xff0000
 8007eb8:	bf18      	it	ne
 8007eba:	3001      	addne	r0, #1
 8007ebc:	4770      	bx	lr
 8007ebe:	bf00      	nop

08007ec0 <__ssprint_r>:
 8007ec0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007ec4:	4692      	mov	sl, r2
 8007ec6:	6894      	ldr	r4, [r2, #8]
 8007ec8:	b083      	sub	sp, #12
 8007eca:	4680      	mov	r8, r0
 8007ecc:	460d      	mov	r5, r1
 8007ece:	6816      	ldr	r6, [r2, #0]
 8007ed0:	2c00      	cmp	r4, #0
 8007ed2:	d071      	beq.n	8007fb8 <__ssprint_r+0xf8>
 8007ed4:	f04f 0b00 	mov.w	fp, #0
 8007ed8:	6808      	ldr	r0, [r1, #0]
 8007eda:	688b      	ldr	r3, [r1, #8]
 8007edc:	465c      	mov	r4, fp
 8007ede:	2c00      	cmp	r4, #0
 8007ee0:	d045      	beq.n	8007f6e <__ssprint_r+0xae>
 8007ee2:	429c      	cmp	r4, r3
 8007ee4:	461f      	mov	r7, r3
 8007ee6:	d348      	bcc.n	8007f7a <__ssprint_r+0xba>
 8007ee8:	89ab      	ldrh	r3, [r5, #12]
 8007eea:	f413 6f90 	tst.w	r3, #1152	; 0x480
 8007eee:	bf08      	it	eq
 8007ef0:	46b9      	moveq	r9, r7
 8007ef2:	d02c      	beq.n	8007f4e <__ssprint_r+0x8e>
 8007ef4:	696f      	ldr	r7, [r5, #20]
 8007ef6:	1c62      	adds	r2, r4, #1
 8007ef8:	6929      	ldr	r1, [r5, #16]
 8007efa:	eb07 0947 	add.w	r9, r7, r7, lsl #1
 8007efe:	1a47      	subs	r7, r0, r1
 8007f00:	443a      	add	r2, r7
 8007f02:	eb09 79d9 	add.w	r9, r9, r9, lsr #31
 8007f06:	ea4f 0969 	mov.w	r9, r9, asr #1
 8007f0a:	4591      	cmp	r9, r2
 8007f0c:	bf34      	ite	cc
 8007f0e:	4691      	movcc	r9, r2
 8007f10:	464a      	movcs	r2, r9
 8007f12:	055b      	lsls	r3, r3, #21
 8007f14:	d534      	bpl.n	8007f80 <__ssprint_r+0xc0>
 8007f16:	4611      	mov	r1, r2
 8007f18:	4640      	mov	r0, r8
 8007f1a:	f7fe fea7 	bl	8006c6c <_malloc_r>
 8007f1e:	2800      	cmp	r0, #0
 8007f20:	d038      	beq.n	8007f94 <__ssprint_r+0xd4>
 8007f22:	6929      	ldr	r1, [r5, #16]
 8007f24:	463a      	mov	r2, r7
 8007f26:	9001      	str	r0, [sp, #4]
 8007f28:	f7fc faae 	bl	8004488 <memcpy>
 8007f2c:	89aa      	ldrh	r2, [r5, #12]
 8007f2e:	9b01      	ldr	r3, [sp, #4]
 8007f30:	f422 6290 	bic.w	r2, r2, #1152	; 0x480
 8007f34:	f042 0280 	orr.w	r2, r2, #128	; 0x80
 8007f38:	81aa      	strh	r2, [r5, #12]
 8007f3a:	19d8      	adds	r0, r3, r7
 8007f3c:	f8c5 9014 	str.w	r9, [r5, #20]
 8007f40:	ebc7 0709 	rsb	r7, r7, r9
 8007f44:	46a1      	mov	r9, r4
 8007f46:	60af      	str	r7, [r5, #8]
 8007f48:	4627      	mov	r7, r4
 8007f4a:	612b      	str	r3, [r5, #16]
 8007f4c:	6028      	str	r0, [r5, #0]
 8007f4e:	464a      	mov	r2, r9
 8007f50:	4659      	mov	r1, fp
 8007f52:	f000 fef5 	bl	8008d40 <memmove>
 8007f56:	f8da 2008 	ldr.w	r2, [sl, #8]
 8007f5a:	68ab      	ldr	r3, [r5, #8]
 8007f5c:	6828      	ldr	r0, [r5, #0]
 8007f5e:	1b14      	subs	r4, r2, r4
 8007f60:	1bdb      	subs	r3, r3, r7
 8007f62:	60ab      	str	r3, [r5, #8]
 8007f64:	4448      	add	r0, r9
 8007f66:	6028      	str	r0, [r5, #0]
 8007f68:	f8ca 4008 	str.w	r4, [sl, #8]
 8007f6c:	b324      	cbz	r4, 8007fb8 <__ssprint_r+0xf8>
 8007f6e:	f8d6 b000 	ldr.w	fp, [r6]
 8007f72:	3608      	adds	r6, #8
 8007f74:	f856 4c04 	ldr.w	r4, [r6, #-4]
 8007f78:	e7b1      	b.n	8007ede <__ssprint_r+0x1e>
 8007f7a:	4627      	mov	r7, r4
 8007f7c:	46a1      	mov	r9, r4
 8007f7e:	e7e6      	b.n	8007f4e <__ssprint_r+0x8e>
 8007f80:	4640      	mov	r0, r8
 8007f82:	f000 ff45 	bl	8008e10 <_realloc_r>
 8007f86:	4603      	mov	r3, r0
 8007f88:	2800      	cmp	r0, #0
 8007f8a:	d1d6      	bne.n	8007f3a <__ssprint_r+0x7a>
 8007f8c:	4640      	mov	r0, r8
 8007f8e:	6929      	ldr	r1, [r5, #16]
 8007f90:	f000 fe0a 	bl	8008ba8 <_free_r>
 8007f94:	89aa      	ldrh	r2, [r5, #12]
 8007f96:	f04f 34ff 	mov.w	r4, #4294967295
 8007f9a:	230c      	movs	r3, #12
 8007f9c:	4620      	mov	r0, r4
 8007f9e:	f8c8 3000 	str.w	r3, [r8]
 8007fa2:	f042 0240 	orr.w	r2, r2, #64	; 0x40
 8007fa6:	2300      	movs	r3, #0
 8007fa8:	81aa      	strh	r2, [r5, #12]
 8007faa:	f8ca 3008 	str.w	r3, [sl, #8]
 8007fae:	f8ca 3004 	str.w	r3, [sl, #4]
 8007fb2:	b003      	add	sp, #12
 8007fb4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8007fb8:	4620      	mov	r0, r4
 8007fba:	f8ca 4004 	str.w	r4, [sl, #4]
 8007fbe:	b003      	add	sp, #12
 8007fc0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08007fc4 <_svfiprintf_r>:
 8007fc4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8007fc8:	b0b3      	sub	sp, #204	; 0xcc
 8007fca:	4692      	mov	sl, r2
 8007fcc:	930b      	str	r3, [sp, #44]	; 0x2c
 8007fce:	898b      	ldrh	r3, [r1, #12]
 8007fd0:	9108      	str	r1, [sp, #32]
 8007fd2:	061a      	lsls	r2, r3, #24
 8007fd4:	9005      	str	r0, [sp, #20]
 8007fd6:	d503      	bpl.n	8007fe0 <_svfiprintf_r+0x1c>
 8007fd8:	690b      	ldr	r3, [r1, #16]
 8007fda:	2b00      	cmp	r3, #0
 8007fdc:	f000 8522 	beq.w	8008a24 <_svfiprintf_r+0xa60>
 8007fe0:	f10d 0888 	add.w	r8, sp, #136	; 0x88
 8007fe4:	f24a 7510 	movw	r5, #42768	; 0xa710
 8007fe8:	4646      	mov	r6, r8
 8007fea:	f6c0 0500 	movt	r5, #2048	; 0x800
 8007fee:	f10d 0487 	add.w	r4, sp, #135	; 0x87
 8007ff2:	2300      	movs	r3, #0
 8007ff4:	950d      	str	r5, [sp, #52]	; 0x34
 8007ff6:	f105 0710 	add.w	r7, r5, #16
 8007ffa:	930e      	str	r3, [sp, #56]	; 0x38
 8007ffc:	ebc4 0508 	rsb	r5, r4, r8
 8008000:	9401      	str	r4, [sp, #4]
 8008002:	930a      	str	r3, [sp, #40]	; 0x28
 8008004:	9511      	str	r5, [sp, #68]	; 0x44
 8008006:	9317      	str	r3, [sp, #92]	; 0x5c
 8008008:	9316      	str	r3, [sp, #88]	; 0x58
 800800a:	f8cd 8054 	str.w	r8, [sp, #84]	; 0x54
 800800e:	f89a 3000 	ldrb.w	r3, [sl]
 8008012:	2b00      	cmp	r3, #0
 8008014:	bf18      	it	ne
 8008016:	2b25      	cmpne	r3, #37	; 0x25
 8008018:	f000 83ca 	beq.w	80087b0 <_svfiprintf_r+0x7ec>
 800801c:	f10a 0201 	add.w	r2, sl, #1
 8008020:	4614      	mov	r4, r2
 8008022:	3201      	adds	r2, #1
 8008024:	7823      	ldrb	r3, [r4, #0]
 8008026:	2b25      	cmp	r3, #37	; 0x25
 8008028:	bf18      	it	ne
 800802a:	2b00      	cmpne	r3, #0
 800802c:	d1f8      	bne.n	8008020 <_svfiprintf_r+0x5c>
 800802e:	ebb4 050a 	subs.w	r5, r4, sl
 8008032:	d010      	beq.n	8008056 <_svfiprintf_r+0x92>
 8008034:	9b16      	ldr	r3, [sp, #88]	; 0x58
 8008036:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8008038:	3301      	adds	r3, #1
 800803a:	f8c6 a000 	str.w	sl, [r6]
 800803e:	2b07      	cmp	r3, #7
 8008040:	6075      	str	r5, [r6, #4]
 8008042:	442a      	add	r2, r5
 8008044:	9316      	str	r3, [sp, #88]	; 0x58
 8008046:	9217      	str	r2, [sp, #92]	; 0x5c
 8008048:	bfd8      	it	le
 800804a:	3608      	addle	r6, #8
 800804c:	f300 8436 	bgt.w	80088bc <_svfiprintf_r+0x8f8>
 8008050:	980a      	ldr	r0, [sp, #40]	; 0x28
 8008052:	4428      	add	r0, r5
 8008054:	900a      	str	r0, [sp, #40]	; 0x28
 8008056:	7823      	ldrb	r3, [r4, #0]
 8008058:	2b00      	cmp	r3, #0
 800805a:	f000 83bc 	beq.w	80087d6 <_svfiprintf_r+0x812>
 800805e:	2300      	movs	r3, #0
 8008060:	f104 0a01 	add.w	sl, r4, #1
 8008064:	4619      	mov	r1, r3
 8008066:	f88d 304f 	strb.w	r3, [sp, #79]	; 0x4f
 800806a:	4608      	mov	r0, r1
 800806c:	9304      	str	r3, [sp, #16]
 800806e:	9302      	str	r3, [sp, #8]
 8008070:	7863      	ldrb	r3, [r4, #1]
 8008072:	f04f 34ff 	mov.w	r4, #4294967295
 8008076:	9403      	str	r4, [sp, #12]
 8008078:	f10a 0a01 	add.w	sl, sl, #1
 800807c:	f1a3 0220 	sub.w	r2, r3, #32
 8008080:	2a58      	cmp	r2, #88	; 0x58
 8008082:	f200 82b5 	bhi.w	80085f0 <_svfiprintf_r+0x62c>
 8008086:	e8df f012 	tbh	[pc, r2, lsl #1]
 800808a:	02b302a3 	adcseq	r0, r3, #805306378	; 0x3000000a
 800808e:	02aa02b3 	adceq	r0, sl, #805306379	; 0x3000000b
 8008092:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8008096:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 800809a:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 800809e:	02850059 	addeq	r0, r5, #89	; 0x59
 80080a2:	006102b3 	strhteq	r0, [r1], #-35	; 0xffffffdd
 80080a6:	02b3020c 	adcseq	r0, r3, #12, 4	; 0xc0000000
 80080aa:	01f70205 	mvnseq	r0, r5, lsl #4
 80080ae:	01f701f7 	ldrsheq	r0, [r7, #23]!
 80080b2:	01f701f7 	ldrsheq	r0, [r7, #23]!
 80080b6:	01f701f7 	ldrsheq	r0, [r7, #23]!
 80080ba:	01f701f7 	ldrsheq	r0, [r7, #23]!
 80080be:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080c2:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080c6:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080ca:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080ce:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080d2:	02b301dc 	adcseq	r0, r3, #220, 2	; 0x37
 80080d6:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080da:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080de:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080e2:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080e6:	026902b3 	rsbeq	r0, r9, #805306379	; 0x3000000b
 80080ea:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080ee:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080f2:	022c02b3 	eoreq	r0, ip, #805306379	; 0x3000000b
 80080f6:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 80080fa:	02b30245 	adcseq	r0, r3, #1342177284	; 0x50000004
 80080fe:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8008102:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8008106:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 800810a:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 800810e:	01ca02b3 	strheq	r0, [sl, #35]	; 0x23
 8008112:	02b301b0 	adcseq	r0, r3, #176, 2	; 0x2c
 8008116:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 800811a:	01b001a9 	lsrseq	r0, r9, #3
 800811e:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 8008122:	02b30197 	adcseq	r0, r3, #-1073741787	; 0xc0000025
 8008126:	01310185 	teqeq	r1, r5, lsl #3
 800812a:	017e0142 	cmneq	lr, r2, asr #2
 800812e:	015902b3 	ldrheq	r0, [r9, #-35]	; 0xffffffdd
 8008132:	006802b3 	strhteq	r0, [r8], #-35	; 0xffffffdd
 8008136:	02b302b3 	adcseq	r0, r3, #805306379	; 0x3000000b
 800813a:	9c0b0289 	sfmls	f0, 4, [fp], {137}	; 0x89
 800813e:	1d23      	adds	r3, r4, #4
 8008140:	6820      	ldr	r0, [r4, #0]
 8008142:	2800      	cmp	r0, #0
 8008144:	f280 8400 	bge.w	8008948 <_svfiprintf_r+0x984>
 8008148:	4240      	negs	r0, r0
 800814a:	930b      	str	r3, [sp, #44]	; 0x2c
 800814c:	9d02      	ldr	r5, [sp, #8]
 800814e:	f045 0504 	orr.w	r5, r5, #4
 8008152:	9502      	str	r5, [sp, #8]
 8008154:	f89a 3000 	ldrb.w	r3, [sl]
 8008158:	e78e      	b.n	8008078 <_svfiprintf_r+0xb4>
 800815a:	9d02      	ldr	r5, [sp, #8]
 800815c:	9004      	str	r0, [sp, #16]
 800815e:	06aa      	lsls	r2, r5, #26
 8008160:	f140 81c8 	bpl.w	80084f4 <_svfiprintf_r+0x530>
 8008164:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008166:	2301      	movs	r3, #1
 8008168:	1de2      	adds	r2, r4, #7
 800816a:	f022 0207 	bic.w	r2, r2, #7
 800816e:	f102 0508 	add.w	r5, r2, #8
 8008172:	950b      	str	r5, [sp, #44]	; 0x2c
 8008174:	e9d2 4500 	ldrd	r4, r5, [r2]
 8008178:	f04f 0c00 	mov.w	ip, #0
 800817c:	f88d c04f 	strb.w	ip, [sp, #79]	; 0x4f
 8008180:	9a03      	ldr	r2, [sp, #12]
 8008182:	2a00      	cmp	r2, #0
 8008184:	bfa2      	ittt	ge
 8008186:	9802      	ldrge	r0, [sp, #8]
 8008188:	f020 0080 	bicge.w	r0, r0, #128	; 0x80
 800818c:	9002      	strge	r0, [sp, #8]
 800818e:	ea54 0105 	orrs.w	r1, r4, r5
 8008192:	9803      	ldr	r0, [sp, #12]
 8008194:	bf0c      	ite	eq
 8008196:	2200      	moveq	r2, #0
 8008198:	2201      	movne	r2, #1
 800819a:	2800      	cmp	r0, #0
 800819c:	bf18      	it	ne
 800819e:	f042 0201 	orrne.w	r2, r2, #1
 80081a2:	2a00      	cmp	r2, #0
 80081a4:	f000 8306 	beq.w	80087b4 <_svfiprintf_r+0x7f0>
 80081a8:	2b01      	cmp	r3, #1
 80081aa:	f000 83ab 	beq.w	8008904 <_svfiprintf_r+0x940>
 80081ae:	2b02      	cmp	r3, #2
 80081b0:	f10d 0287 	add.w	r2, sp, #135	; 0x87
 80081b4:	d179      	bne.n	80082aa <_svfiprintf_r+0x2e6>
 80081b6:	f8dd b038 	ldr.w	fp, [sp, #56]	; 0x38
 80081ba:	f004 010f 	and.w	r1, r4, #15
 80081be:	0923      	lsrs	r3, r4, #4
 80081c0:	ea43 7305 	orr.w	r3, r3, r5, lsl #28
 80081c4:	0928      	lsrs	r0, r5, #4
 80081c6:	f81b 1001 	ldrb.w	r1, [fp, r1]
 80081ca:	461c      	mov	r4, r3
 80081cc:	4605      	mov	r5, r0
 80081ce:	4691      	mov	r9, r2
 80081d0:	ea54 0005 	orrs.w	r0, r4, r5
 80081d4:	f102 32ff 	add.w	r2, r2, #4294967295
 80081d8:	f889 1000 	strb.w	r1, [r9]
 80081dc:	d1ed      	bne.n	80081ba <_svfiprintf_r+0x1f6>
 80081de:	ebc9 0308 	rsb	r3, r9, r8
 80081e2:	9306      	str	r3, [sp, #24]
 80081e4:	9c06      	ldr	r4, [sp, #24]
 80081e6:	9d03      	ldr	r5, [sp, #12]
 80081e8:	42ac      	cmp	r4, r5
 80081ea:	bfb8      	it	lt
 80081ec:	462c      	movlt	r4, r5
 80081ee:	f1bc 0f00 	cmp.w	ip, #0
 80081f2:	d000      	beq.n	80081f6 <_svfiprintf_r+0x232>
 80081f4:	3401      	adds	r4, #1
 80081f6:	9b02      	ldr	r3, [sp, #8]
 80081f8:	9d02      	ldr	r5, [sp, #8]
 80081fa:	f013 0302 	ands.w	r3, r3, #2
 80081fe:	9309      	str	r3, [sp, #36]	; 0x24
 8008200:	bf18      	it	ne
 8008202:	3402      	addne	r4, #2
 8008204:	f015 0584 	ands.w	r5, r5, #132	; 0x84
 8008208:	950c      	str	r5, [sp, #48]	; 0x30
 800820a:	f040 8201 	bne.w	8008610 <_svfiprintf_r+0x64c>
 800820e:	9804      	ldr	r0, [sp, #16]
 8008210:	1b05      	subs	r5, r0, r4
 8008212:	2d00      	cmp	r5, #0
 8008214:	f340 81fc 	ble.w	8008610 <_svfiprintf_r+0x64c>
 8008218:	2d10      	cmp	r5, #16
 800821a:	f24a 7310 	movw	r3, #42768	; 0xa710
 800821e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008220:	f340 840d 	ble.w	8008a3e <_svfiprintf_r+0xa7a>
 8008224:	f6c0 0300 	movt	r3, #2048	; 0x800
 8008228:	f8cd 903c 	str.w	r9, [sp, #60]	; 0x3c
 800822c:	9410      	str	r4, [sp, #64]	; 0x40
 800822e:	f04f 0b10 	mov.w	fp, #16
 8008232:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008234:	9307      	str	r3, [sp, #28]
 8008236:	f8dd 9020 	ldr.w	r9, [sp, #32]
 800823a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800823c:	e002      	b.n	8008244 <_svfiprintf_r+0x280>
 800823e:	3d10      	subs	r5, #16
 8008240:	2d10      	cmp	r5, #16
 8008242:	dd17      	ble.n	8008274 <_svfiprintf_r+0x2b0>
 8008244:	3201      	adds	r2, #1
 8008246:	3110      	adds	r1, #16
 8008248:	2a07      	cmp	r2, #7
 800824a:	e886 0810 	stmia.w	r6, {r4, fp}
 800824e:	9216      	str	r2, [sp, #88]	; 0x58
 8008250:	f106 0608 	add.w	r6, r6, #8
 8008254:	9117      	str	r1, [sp, #92]	; 0x5c
 8008256:	ddf2      	ble.n	800823e <_svfiprintf_r+0x27a>
 8008258:	9805      	ldr	r0, [sp, #20]
 800825a:	4649      	mov	r1, r9
 800825c:	aa15      	add	r2, sp, #84	; 0x54
 800825e:	4646      	mov	r6, r8
 8008260:	f7ff fe2e 	bl	8007ec0 <__ssprint_r>
 8008264:	2800      	cmp	r0, #0
 8008266:	f040 82bd 	bne.w	80087e4 <_svfiprintf_r+0x820>
 800826a:	3d10      	subs	r5, #16
 800826c:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800826e:	2d10      	cmp	r5, #16
 8008270:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008272:	dce7      	bgt.n	8008244 <_svfiprintf_r+0x280>
 8008274:	f8dd 903c 	ldr.w	r9, [sp, #60]	; 0x3c
 8008278:	9c10      	ldr	r4, [sp, #64]	; 0x40
 800827a:	3201      	adds	r2, #1
 800827c:	9b07      	ldr	r3, [sp, #28]
 800827e:	2a07      	cmp	r2, #7
 8008280:	4429      	add	r1, r5
 8008282:	9216      	str	r2, [sp, #88]	; 0x58
 8008284:	e886 0028 	stmia.w	r6, {r3, r5}
 8008288:	bfd8      	it	le
 800828a:	3608      	addle	r6, #8
 800828c:	9117      	str	r1, [sp, #92]	; 0x5c
 800828e:	f340 81c1 	ble.w	8008614 <_svfiprintf_r+0x650>
 8008292:	9805      	ldr	r0, [sp, #20]
 8008294:	aa15      	add	r2, sp, #84	; 0x54
 8008296:	9908      	ldr	r1, [sp, #32]
 8008298:	f7ff fe12 	bl	8007ec0 <__ssprint_r>
 800829c:	2800      	cmp	r0, #0
 800829e:	f040 82a1 	bne.w	80087e4 <_svfiprintf_r+0x820>
 80082a2:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80082a4:	4646      	mov	r6, r8
 80082a6:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80082a8:	e1b4      	b.n	8008614 <_svfiprintf_r+0x650>
 80082aa:	08e3      	lsrs	r3, r4, #3
 80082ac:	08e9      	lsrs	r1, r5, #3
 80082ae:	ea43 7345 	orr.w	r3, r3, r5, lsl #29
 80082b2:	4691      	mov	r9, r2
 80082b4:	460d      	mov	r5, r1
 80082b6:	f004 0207 	and.w	r2, r4, #7
 80082ba:	461c      	mov	r4, r3
 80082bc:	f102 0330 	add.w	r3, r2, #48	; 0x30
 80082c0:	ea54 0105 	orrs.w	r1, r4, r5
 80082c4:	f109 32ff 	add.w	r2, r9, #4294967295
 80082c8:	f889 3000 	strb.w	r3, [r9]
 80082cc:	d1ed      	bne.n	80082aa <_svfiprintf_r+0x2e6>
 80082ce:	9c02      	ldr	r4, [sp, #8]
 80082d0:	4649      	mov	r1, r9
 80082d2:	07e0      	lsls	r0, r4, #31
 80082d4:	f140 8347 	bpl.w	8008966 <_svfiprintf_r+0x9a2>
 80082d8:	2b30      	cmp	r3, #48	; 0x30
 80082da:	d080      	beq.n	80081de <_svfiprintf_r+0x21a>
 80082dc:	2330      	movs	r3, #48	; 0x30
 80082de:	ebc2 0408 	rsb	r4, r2, r8
 80082e2:	4691      	mov	r9, r2
 80082e4:	9406      	str	r4, [sp, #24]
 80082e6:	f801 3c01 	strb.w	r3, [r1, #-1]
 80082ea:	e77b      	b.n	80081e4 <_svfiprintf_r+0x220>
 80082ec:	9d02      	ldr	r5, [sp, #8]
 80082ee:	9004      	str	r0, [sp, #16]
 80082f0:	f015 0320 	ands.w	r3, r5, #32
 80082f4:	f000 813c 	beq.w	8008570 <_svfiprintf_r+0x5ac>
 80082f8:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80082fa:	2300      	movs	r3, #0
 80082fc:	1de2      	adds	r2, r4, #7
 80082fe:	f022 0207 	bic.w	r2, r2, #7
 8008302:	f102 0508 	add.w	r5, r2, #8
 8008306:	950b      	str	r5, [sp, #44]	; 0x2c
 8008308:	e9d2 4500 	ldrd	r4, r5, [r2]
 800830c:	e734      	b.n	8008178 <_svfiprintf_r+0x1b4>
 800830e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008310:	9d02      	ldr	r5, [sp, #8]
 8008312:	9004      	str	r0, [sp, #16]
 8008314:	f045 0502 	orr.w	r5, r5, #2
 8008318:	9502      	str	r5, [sp, #8]
 800831a:	1d1d      	adds	r5, r3, #4
 800831c:	950b      	str	r5, [sp, #44]	; 0x2c
 800831e:	f64a 15dc 	movw	r5, #43484	; 0xa9dc
 8008322:	681c      	ldr	r4, [r3, #0]
 8008324:	f6c0 0500 	movt	r5, #2048	; 0x800
 8008328:	2330      	movs	r3, #48	; 0x30
 800832a:	950e      	str	r5, [sp, #56]	; 0x38
 800832c:	2500      	movs	r5, #0
 800832e:	f88d 3050 	strb.w	r3, [sp, #80]	; 0x50
 8008332:	2378      	movs	r3, #120	; 0x78
 8008334:	f88d 3051 	strb.w	r3, [sp, #81]	; 0x51
 8008338:	2302      	movs	r3, #2
 800833a:	e71d      	b.n	8008178 <_svfiprintf_r+0x1b4>
 800833c:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800833e:	9004      	str	r0, [sp, #16]
 8008340:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008342:	f8d4 9000 	ldr.w	r9, [r4]
 8008346:	2400      	movs	r4, #0
 8008348:	1d05      	adds	r5, r0, #4
 800834a:	f88d 404f 	strb.w	r4, [sp, #79]	; 0x4f
 800834e:	f1b9 0f00 	cmp.w	r9, #0
 8008352:	f000 8379 	beq.w	8008a48 <_svfiprintf_r+0xa84>
 8008356:	9803      	ldr	r0, [sp, #12]
 8008358:	2800      	cmp	r0, #0
 800835a:	4648      	mov	r0, r9
 800835c:	f2c0 834b 	blt.w	80089f6 <_svfiprintf_r+0xa32>
 8008360:	4621      	mov	r1, r4
 8008362:	9a03      	ldr	r2, [sp, #12]
 8008364:	f7fe ff3a 	bl	80071dc <memchr>
 8008368:	2800      	cmp	r0, #0
 800836a:	f000 837a 	beq.w	8008a62 <_svfiprintf_r+0xa9e>
 800836e:	950b      	str	r5, [sp, #44]	; 0x2c
 8008370:	ebc9 0000 	rsb	r0, r9, r0
 8008374:	9d03      	ldr	r5, [sp, #12]
 8008376:	f89d c04f 	ldrb.w	ip, [sp, #79]	; 0x4f
 800837a:	42a8      	cmp	r0, r5
 800837c:	bfb8      	it	lt
 800837e:	4605      	movlt	r5, r0
 8008380:	9403      	str	r4, [sp, #12]
 8008382:	9506      	str	r5, [sp, #24]
 8008384:	e72e      	b.n	80081e4 <_svfiprintf_r+0x220>
 8008386:	9c02      	ldr	r4, [sp, #8]
 8008388:	f044 0420 	orr.w	r4, r4, #32
 800838c:	9402      	str	r4, [sp, #8]
 800838e:	f89a 3000 	ldrb.w	r3, [sl]
 8008392:	e671      	b.n	8008078 <_svfiprintf_r+0xb4>
 8008394:	9c02      	ldr	r4, [sp, #8]
 8008396:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 800839a:	06a0      	lsls	r0, r4, #26
 800839c:	f100 831e 	bmi.w	80089dc <_svfiprintf_r+0xa18>
 80083a0:	9c02      	ldr	r4, [sp, #8]
 80083a2:	06e1      	lsls	r1, r4, #27
 80083a4:	f140 8330 	bpl.w	8008a08 <_svfiprintf_r+0xa44>
 80083a8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80083aa:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80083ac:	3504      	adds	r5, #4
 80083ae:	f855 3c04 	ldr.w	r3, [r5, #-4]
 80083b2:	950b      	str	r5, [sp, #44]	; 0x2c
 80083b4:	601c      	str	r4, [r3, #0]
 80083b6:	e62a      	b.n	800800e <_svfiprintf_r+0x4a>
 80083b8:	f89a 3000 	ldrb.w	r3, [sl]
 80083bc:	4652      	mov	r2, sl
 80083be:	2b6c      	cmp	r3, #108	; 0x6c
 80083c0:	bf05      	ittet	eq
 80083c2:	f10a 0a01 	addeq.w	sl, sl, #1
 80083c6:	9c02      	ldreq	r4, [sp, #8]
 80083c8:	9d02      	ldrne	r5, [sp, #8]
 80083ca:	f044 0420 	orreq.w	r4, r4, #32
 80083ce:	bf0b      	itete	eq
 80083d0:	7853      	ldrbeq	r3, [r2, #1]
 80083d2:	f045 0510 	orrne.w	r5, r5, #16
 80083d6:	9402      	streq	r4, [sp, #8]
 80083d8:	9502      	strne	r5, [sp, #8]
 80083da:	e64d      	b.n	8008078 <_svfiprintf_r+0xb4>
 80083dc:	9d02      	ldr	r5, [sp, #8]
 80083de:	f045 0540 	orr.w	r5, r5, #64	; 0x40
 80083e2:	9502      	str	r5, [sp, #8]
 80083e4:	f89a 3000 	ldrb.w	r3, [sl]
 80083e8:	e646      	b.n	8008078 <_svfiprintf_r+0xb4>
 80083ea:	9d02      	ldr	r5, [sp, #8]
 80083ec:	9004      	str	r0, [sp, #16]
 80083ee:	06ab      	lsls	r3, r5, #26
 80083f0:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 80083f4:	d52f      	bpl.n	8008456 <_svfiprintf_r+0x492>
 80083f6:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 80083f8:	1de3      	adds	r3, r4, #7
 80083fa:	f023 0307 	bic.w	r3, r3, #7
 80083fe:	f103 0508 	add.w	r5, r3, #8
 8008402:	950b      	str	r5, [sp, #44]	; 0x2c
 8008404:	e9d3 2300 	ldrd	r2, r3, [r3]
 8008408:	4614      	mov	r4, r2
 800840a:	461d      	mov	r5, r3
 800840c:	2a00      	cmp	r2, #0
 800840e:	f173 0000 	sbcs.w	r0, r3, #0
 8008412:	f2c0 82c8 	blt.w	80089a6 <_svfiprintf_r+0x9e2>
 8008416:	f89d c04f 	ldrb.w	ip, [sp, #79]	; 0x4f
 800841a:	2301      	movs	r3, #1
 800841c:	e6b0      	b.n	8008180 <_svfiprintf_r+0x1bc>
 800841e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008420:	f10d 0960 	add.w	r9, sp, #96	; 0x60
 8008424:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8008426:	2401      	movs	r4, #1
 8008428:	2200      	movs	r2, #0
 800842a:	9004      	str	r0, [sp, #16]
 800842c:	681b      	ldr	r3, [r3, #0]
 800842e:	3504      	adds	r5, #4
 8008430:	9406      	str	r4, [sp, #24]
 8008432:	950b      	str	r5, [sp, #44]	; 0x2c
 8008434:	f88d 204f 	strb.w	r2, [sp, #79]	; 0x4f
 8008438:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 800843c:	2500      	movs	r5, #0
 800843e:	9503      	str	r5, [sp, #12]
 8008440:	e6d9      	b.n	80081f6 <_svfiprintf_r+0x232>
 8008442:	9c02      	ldr	r4, [sp, #8]
 8008444:	9004      	str	r0, [sp, #16]
 8008446:	f044 0410 	orr.w	r4, r4, #16
 800844a:	9402      	str	r4, [sp, #8]
 800844c:	9d02      	ldr	r5, [sp, #8]
 800844e:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 8008452:	06ab      	lsls	r3, r5, #26
 8008454:	d4cf      	bmi.n	80083f6 <_svfiprintf_r+0x432>
 8008456:	9c02      	ldr	r4, [sp, #8]
 8008458:	06e5      	lsls	r5, r4, #27
 800845a:	f100 8297 	bmi.w	800898c <_svfiprintf_r+0x9c8>
 800845e:	9c02      	ldr	r4, [sp, #8]
 8008460:	0664      	lsls	r4, r4, #25
 8008462:	f140 8293 	bpl.w	800898c <_svfiprintf_r+0x9c8>
 8008466:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008468:	3004      	adds	r0, #4
 800846a:	f930 4c04 	ldrsh.w	r4, [r0, #-4]
 800846e:	900b      	str	r0, [sp, #44]	; 0x2c
 8008470:	4622      	mov	r2, r4
 8008472:	17e5      	asrs	r5, r4, #31
 8008474:	462b      	mov	r3, r5
 8008476:	e7c9      	b.n	800840c <_svfiprintf_r+0x448>
 8008478:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 800847c:	2000      	movs	r0, #0
 800847e:	eb00 0080 	add.w	r0, r0, r0, lsl #2
 8008482:	f81a 3b01 	ldrb.w	r3, [sl], #1
 8008486:	eb02 0040 	add.w	r0, r2, r0, lsl #1
 800848a:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 800848e:	2a09      	cmp	r2, #9
 8008490:	d9f5      	bls.n	800847e <_svfiprintf_r+0x4ba>
 8008492:	e5f3      	b.n	800807c <_svfiprintf_r+0xb8>
 8008494:	9c02      	ldr	r4, [sp, #8]
 8008496:	f044 0480 	orr.w	r4, r4, #128	; 0x80
 800849a:	9402      	str	r4, [sp, #8]
 800849c:	f89a 3000 	ldrb.w	r3, [sl]
 80084a0:	e5ea      	b.n	8008078 <_svfiprintf_r+0xb4>
 80084a2:	f89a 3000 	ldrb.w	r3, [sl]
 80084a6:	f10a 0501 	add.w	r5, sl, #1
 80084aa:	2b2a      	cmp	r3, #42	; 0x2a
 80084ac:	f000 82e1 	beq.w	8008a72 <_svfiprintf_r+0xaae>
 80084b0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 80084b4:	2a09      	cmp	r2, #9
 80084b6:	bf82      	ittt	hi
 80084b8:	2400      	movhi	r4, #0
 80084ba:	46aa      	movhi	sl, r5
 80084bc:	9403      	strhi	r4, [sp, #12]
 80084be:	f63f addd 	bhi.w	800807c <_svfiprintf_r+0xb8>
 80084c2:	2400      	movs	r4, #0
 80084c4:	eb04 0484 	add.w	r4, r4, r4, lsl #2
 80084c8:	f815 3b01 	ldrb.w	r3, [r5], #1
 80084cc:	eb02 0444 	add.w	r4, r2, r4, lsl #1
 80084d0:	f1a3 0230 	sub.w	r2, r3, #48	; 0x30
 80084d4:	2a09      	cmp	r2, #9
 80084d6:	d9f5      	bls.n	80084c4 <_svfiprintf_r+0x500>
 80084d8:	ea44 74e4 	orr.w	r4, r4, r4, asr #31
 80084dc:	46aa      	mov	sl, r5
 80084de:	9403      	str	r4, [sp, #12]
 80084e0:	e5cc      	b.n	800807c <_svfiprintf_r+0xb8>
 80084e2:	9c02      	ldr	r4, [sp, #8]
 80084e4:	9004      	str	r0, [sp, #16]
 80084e6:	f044 0410 	orr.w	r4, r4, #16
 80084ea:	9402      	str	r4, [sp, #8]
 80084ec:	9d02      	ldr	r5, [sp, #8]
 80084ee:	06aa      	lsls	r2, r5, #26
 80084f0:	f53f ae38 	bmi.w	8008164 <_svfiprintf_r+0x1a0>
 80084f4:	9c02      	ldr	r4, [sp, #8]
 80084f6:	06e3      	lsls	r3, r4, #27
 80084f8:	f100 8267 	bmi.w	80089ca <_svfiprintf_r+0xa06>
 80084fc:	9c02      	ldr	r4, [sp, #8]
 80084fe:	0665      	lsls	r5, r4, #25
 8008500:	f140 8263 	bpl.w	80089ca <_svfiprintf_r+0xa06>
 8008504:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008506:	2500      	movs	r5, #0
 8008508:	2301      	movs	r3, #1
 800850a:	3004      	adds	r0, #4
 800850c:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 8008510:	900b      	str	r0, [sp, #44]	; 0x2c
 8008512:	e631      	b.n	8008178 <_svfiprintf_r+0x1b4>
 8008514:	9d02      	ldr	r5, [sp, #8]
 8008516:	f64a 14c8 	movw	r4, #43464	; 0xa9c8
 800851a:	f6c0 0400 	movt	r4, #2048	; 0x800
 800851e:	940e      	str	r4, [sp, #56]	; 0x38
 8008520:	06ac      	lsls	r4, r5, #26
 8008522:	9004      	str	r0, [sp, #16]
 8008524:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 8008528:	d543      	bpl.n	80085b2 <_svfiprintf_r+0x5ee>
 800852a:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 800852c:	1de2      	adds	r2, r4, #7
 800852e:	f022 0207 	bic.w	r2, r2, #7
 8008532:	f102 0508 	add.w	r5, r2, #8
 8008536:	950b      	str	r5, [sp, #44]	; 0x2c
 8008538:	e9d2 4500 	ldrd	r4, r5, [r2]
 800853c:	9802      	ldr	r0, [sp, #8]
 800853e:	07c2      	lsls	r2, r0, #31
 8008540:	d554      	bpl.n	80085ec <_svfiprintf_r+0x628>
 8008542:	ea54 0105 	orrs.w	r1, r4, r5
 8008546:	d051      	beq.n	80085ec <_svfiprintf_r+0x628>
 8008548:	f88d 3051 	strb.w	r3, [sp, #81]	; 0x51
 800854c:	f040 0002 	orr.w	r0, r0, #2
 8008550:	2330      	movs	r3, #48	; 0x30
 8008552:	9002      	str	r0, [sp, #8]
 8008554:	f88d 3050 	strb.w	r3, [sp, #80]	; 0x50
 8008558:	2302      	movs	r3, #2
 800855a:	e60d      	b.n	8008178 <_svfiprintf_r+0x1b4>
 800855c:	9c02      	ldr	r4, [sp, #8]
 800855e:	9004      	str	r0, [sp, #16]
 8008560:	f044 0410 	orr.w	r4, r4, #16
 8008564:	9402      	str	r4, [sp, #8]
 8008566:	9d02      	ldr	r5, [sp, #8]
 8008568:	f015 0320 	ands.w	r3, r5, #32
 800856c:	f47f aec4 	bne.w	80082f8 <_svfiprintf_r+0x334>
 8008570:	9c02      	ldr	r4, [sp, #8]
 8008572:	f014 0210 	ands.w	r2, r4, #16
 8008576:	f040 8220 	bne.w	80089ba <_svfiprintf_r+0x9f6>
 800857a:	9c02      	ldr	r4, [sp, #8]
 800857c:	f014 0340 	ands.w	r3, r4, #64	; 0x40
 8008580:	f000 821b 	beq.w	80089ba <_svfiprintf_r+0x9f6>
 8008584:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8008586:	4613      	mov	r3, r2
 8008588:	2500      	movs	r5, #0
 800858a:	3004      	adds	r0, #4
 800858c:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 8008590:	900b      	str	r0, [sp, #44]	; 0x2c
 8008592:	e5f1      	b.n	8008178 <_svfiprintf_r+0x1b4>
 8008594:	f89a 3000 	ldrb.w	r3, [sl]
 8008598:	212b      	movs	r1, #43	; 0x2b
 800859a:	e56d      	b.n	8008078 <_svfiprintf_r+0xb4>
 800859c:	9d02      	ldr	r5, [sp, #8]
 800859e:	f64a 14dc 	movw	r4, #43484	; 0xa9dc
 80085a2:	f6c0 0400 	movt	r4, #2048	; 0x800
 80085a6:	940e      	str	r4, [sp, #56]	; 0x38
 80085a8:	06ac      	lsls	r4, r5, #26
 80085aa:	9004      	str	r0, [sp, #16]
 80085ac:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 80085b0:	d4bb      	bmi.n	800852a <_svfiprintf_r+0x566>
 80085b2:	9c02      	ldr	r4, [sp, #8]
 80085b4:	06e0      	lsls	r0, r4, #27
 80085b6:	f100 81e2 	bmi.w	800897e <_svfiprintf_r+0x9ba>
 80085ba:	9c02      	ldr	r4, [sp, #8]
 80085bc:	0661      	lsls	r1, r4, #25
 80085be:	f140 81de 	bpl.w	800897e <_svfiprintf_r+0x9ba>
 80085c2:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80085c4:	2500      	movs	r5, #0
 80085c6:	3004      	adds	r0, #4
 80085c8:	f830 4c04 	ldrh.w	r4, [r0, #-4]
 80085cc:	900b      	str	r0, [sp, #44]	; 0x2c
 80085ce:	e7b5      	b.n	800853c <_svfiprintf_r+0x578>
 80085d0:	f89a 3000 	ldrb.w	r3, [sl]
 80085d4:	2900      	cmp	r1, #0
 80085d6:	f47f ad4f 	bne.w	8008078 <_svfiprintf_r+0xb4>
 80085da:	2120      	movs	r1, #32
 80085dc:	e54c      	b.n	8008078 <_svfiprintf_r+0xb4>
 80085de:	9d02      	ldr	r5, [sp, #8]
 80085e0:	f045 0501 	orr.w	r5, r5, #1
 80085e4:	9502      	str	r5, [sp, #8]
 80085e6:	f89a 3000 	ldrb.w	r3, [sl]
 80085ea:	e545      	b.n	8008078 <_svfiprintf_r+0xb4>
 80085ec:	2302      	movs	r3, #2
 80085ee:	e5c3      	b.n	8008178 <_svfiprintf_r+0x1b4>
 80085f0:	9004      	str	r0, [sp, #16]
 80085f2:	f88d 104f 	strb.w	r1, [sp, #79]	; 0x4f
 80085f6:	2b00      	cmp	r3, #0
 80085f8:	f000 80ed 	beq.w	80087d6 <_svfiprintf_r+0x812>
 80085fc:	2401      	movs	r4, #1
 80085fe:	f88d 3060 	strb.w	r3, [sp, #96]	; 0x60
 8008602:	9406      	str	r4, [sp, #24]
 8008604:	2300      	movs	r3, #0
 8008606:	f10d 0960 	add.w	r9, sp, #96	; 0x60
 800860a:	f88d 304f 	strb.w	r3, [sp, #79]	; 0x4f
 800860e:	e715      	b.n	800843c <_svfiprintf_r+0x478>
 8008610:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008612:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008614:	f89d 304f 	ldrb.w	r3, [sp, #79]	; 0x4f
 8008618:	b173      	cbz	r3, 8008638 <_svfiprintf_r+0x674>
 800861a:	3201      	adds	r2, #1
 800861c:	3101      	adds	r1, #1
 800861e:	2a07      	cmp	r2, #7
 8008620:	f10d 004f 	add.w	r0, sp, #79	; 0x4f
 8008624:	f04f 0301 	mov.w	r3, #1
 8008628:	9216      	str	r2, [sp, #88]	; 0x58
 800862a:	e886 0009 	stmia.w	r6, {r0, r3}
 800862e:	bfd8      	it	le
 8008630:	3608      	addle	r6, #8
 8008632:	9117      	str	r1, [sp, #92]	; 0x5c
 8008634:	f300 8157 	bgt.w	80088e6 <_svfiprintf_r+0x922>
 8008638:	9d09      	ldr	r5, [sp, #36]	; 0x24
 800863a:	b16d      	cbz	r5, 8008658 <_svfiprintf_r+0x694>
 800863c:	3201      	adds	r2, #1
 800863e:	3102      	adds	r1, #2
 8008640:	2a07      	cmp	r2, #7
 8008642:	a814      	add	r0, sp, #80	; 0x50
 8008644:	f04f 0302 	mov.w	r3, #2
 8008648:	9216      	str	r2, [sp, #88]	; 0x58
 800864a:	e886 0009 	stmia.w	r6, {r0, r3}
 800864e:	bfd8      	it	le
 8008650:	3608      	addle	r6, #8
 8008652:	9117      	str	r1, [sp, #92]	; 0x5c
 8008654:	f300 813c 	bgt.w	80088d0 <_svfiprintf_r+0x90c>
 8008658:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 800865a:	2b80      	cmp	r3, #128	; 0x80
 800865c:	f000 80cd 	beq.w	80087fa <_svfiprintf_r+0x836>
 8008660:	9803      	ldr	r0, [sp, #12]
 8008662:	9b06      	ldr	r3, [sp, #24]
 8008664:	1ac5      	subs	r5, r0, r3
 8008666:	2d00      	cmp	r5, #0
 8008668:	dd44      	ble.n	80086f4 <_svfiprintf_r+0x730>
 800866a:	4ba5      	ldr	r3, [pc, #660]	; (8008900 <_svfiprintf_r+0x93c>)
 800866c:	2d10      	cmp	r5, #16
 800866e:	9307      	str	r3, [sp, #28]
 8008670:	dd2b      	ble.n	80086ca <_svfiprintf_r+0x706>
 8008672:	f8cd 900c 	str.w	r9, [sp, #12]
 8008676:	f04f 0b10 	mov.w	fp, #16
 800867a:	9409      	str	r4, [sp, #36]	; 0x24
 800867c:	46a9      	mov	r9, r5
 800867e:	9c05      	ldr	r4, [sp, #20]
 8008680:	9d08      	ldr	r5, [sp, #32]
 8008682:	e004      	b.n	800868e <_svfiprintf_r+0x6ca>
 8008684:	f1a9 0910 	sub.w	r9, r9, #16
 8008688:	f1b9 0f10 	cmp.w	r9, #16
 800868c:	dd19      	ble.n	80086c2 <_svfiprintf_r+0x6fe>
 800868e:	3201      	adds	r2, #1
 8008690:	3110      	adds	r1, #16
 8008692:	2a07      	cmp	r2, #7
 8008694:	e886 0880 	stmia.w	r6, {r7, fp}
 8008698:	9216      	str	r2, [sp, #88]	; 0x58
 800869a:	f106 0608 	add.w	r6, r6, #8
 800869e:	9117      	str	r1, [sp, #92]	; 0x5c
 80086a0:	ddf0      	ble.n	8008684 <_svfiprintf_r+0x6c0>
 80086a2:	4620      	mov	r0, r4
 80086a4:	4629      	mov	r1, r5
 80086a6:	aa15      	add	r2, sp, #84	; 0x54
 80086a8:	4646      	mov	r6, r8
 80086aa:	f7ff fc09 	bl	8007ec0 <__ssprint_r>
 80086ae:	2800      	cmp	r0, #0
 80086b0:	f040 8098 	bne.w	80087e4 <_svfiprintf_r+0x820>
 80086b4:	f1a9 0910 	sub.w	r9, r9, #16
 80086b8:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80086ba:	f1b9 0f10 	cmp.w	r9, #16
 80086be:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80086c0:	dce5      	bgt.n	800868e <_svfiprintf_r+0x6ca>
 80086c2:	464d      	mov	r5, r9
 80086c4:	9c09      	ldr	r4, [sp, #36]	; 0x24
 80086c6:	f8dd 900c 	ldr.w	r9, [sp, #12]
 80086ca:	3201      	adds	r2, #1
 80086cc:	9b07      	ldr	r3, [sp, #28]
 80086ce:	2a07      	cmp	r2, #7
 80086d0:	4429      	add	r1, r5
 80086d2:	9216      	str	r2, [sp, #88]	; 0x58
 80086d4:	e886 0028 	stmia.w	r6, {r3, r5}
 80086d8:	bfd8      	it	le
 80086da:	3608      	addle	r6, #8
 80086dc:	9117      	str	r1, [sp, #92]	; 0x5c
 80086de:	dd09      	ble.n	80086f4 <_svfiprintf_r+0x730>
 80086e0:	9805      	ldr	r0, [sp, #20]
 80086e2:	aa15      	add	r2, sp, #84	; 0x54
 80086e4:	9908      	ldr	r1, [sp, #32]
 80086e6:	f7ff fbeb 	bl	8007ec0 <__ssprint_r>
 80086ea:	2800      	cmp	r0, #0
 80086ec:	d17a      	bne.n	80087e4 <_svfiprintf_r+0x820>
 80086ee:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80086f0:	4646      	mov	r6, r8
 80086f2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80086f4:	3201      	adds	r2, #1
 80086f6:	9d06      	ldr	r5, [sp, #24]
 80086f8:	2a07      	cmp	r2, #7
 80086fa:	9216      	str	r2, [sp, #88]	; 0x58
 80086fc:	4429      	add	r1, r5
 80086fe:	f8c6 9000 	str.w	r9, [r6]
 8008702:	9117      	str	r1, [sp, #92]	; 0x5c
 8008704:	bfd8      	it	le
 8008706:	f106 0308 	addle.w	r3, r6, #8
 800870a:	6075      	str	r5, [r6, #4]
 800870c:	f300 80c0 	bgt.w	8008890 <_svfiprintf_r+0x8cc>
 8008710:	9d02      	ldr	r5, [sp, #8]
 8008712:	076a      	lsls	r2, r5, #29
 8008714:	d538      	bpl.n	8008788 <_svfiprintf_r+0x7c4>
 8008716:	9804      	ldr	r0, [sp, #16]
 8008718:	1b05      	subs	r5, r0, r4
 800871a:	2d00      	cmp	r5, #0
 800871c:	dd34      	ble.n	8008788 <_svfiprintf_r+0x7c4>
 800871e:	2d10      	cmp	r5, #16
 8008720:	f24a 7010 	movw	r0, #42768	; 0xa710
 8008724:	f6c0 0000 	movt	r0, #2048	; 0x800
 8008728:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800872a:	9007      	str	r0, [sp, #28]
 800872c:	dd22      	ble.n	8008774 <_svfiprintf_r+0x7b0>
 800872e:	9402      	str	r4, [sp, #8]
 8008730:	2610      	movs	r6, #16
 8008732:	f8dd 9014 	ldr.w	r9, [sp, #20]
 8008736:	f8dd b020 	ldr.w	fp, [sp, #32]
 800873a:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 800873c:	e002      	b.n	8008744 <_svfiprintf_r+0x780>
 800873e:	3d10      	subs	r5, #16
 8008740:	2d10      	cmp	r5, #16
 8008742:	dd16      	ble.n	8008772 <_svfiprintf_r+0x7ae>
 8008744:	3201      	adds	r2, #1
 8008746:	3110      	adds	r1, #16
 8008748:	2a07      	cmp	r2, #7
 800874a:	e883 0050 	stmia.w	r3, {r4, r6}
 800874e:	9216      	str	r2, [sp, #88]	; 0x58
 8008750:	f103 0308 	add.w	r3, r3, #8
 8008754:	9117      	str	r1, [sp, #92]	; 0x5c
 8008756:	ddf2      	ble.n	800873e <_svfiprintf_r+0x77a>
 8008758:	4648      	mov	r0, r9
 800875a:	4659      	mov	r1, fp
 800875c:	aa15      	add	r2, sp, #84	; 0x54
 800875e:	f7ff fbaf 	bl	8007ec0 <__ssprint_r>
 8008762:	4643      	mov	r3, r8
 8008764:	2800      	cmp	r0, #0
 8008766:	d13d      	bne.n	80087e4 <_svfiprintf_r+0x820>
 8008768:	3d10      	subs	r5, #16
 800876a:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800876c:	2d10      	cmp	r5, #16
 800876e:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008770:	dce8      	bgt.n	8008744 <_svfiprintf_r+0x780>
 8008772:	9c02      	ldr	r4, [sp, #8]
 8008774:	3201      	adds	r2, #1
 8008776:	9807      	ldr	r0, [sp, #28]
 8008778:	2a07      	cmp	r2, #7
 800877a:	4429      	add	r1, r5
 800877c:	9216      	str	r2, [sp, #88]	; 0x58
 800877e:	9117      	str	r1, [sp, #92]	; 0x5c
 8008780:	e883 0021 	stmia.w	r3, {r0, r5}
 8008784:	f300 80e5 	bgt.w	8008952 <_svfiprintf_r+0x98e>
 8008788:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 800878a:	9804      	ldr	r0, [sp, #16]
 800878c:	4284      	cmp	r4, r0
 800878e:	bfac      	ite	ge
 8008790:	192d      	addge	r5, r5, r4
 8008792:	182d      	addlt	r5, r5, r0
 8008794:	950a      	str	r5, [sp, #40]	; 0x28
 8008796:	2900      	cmp	r1, #0
 8008798:	f040 8084 	bne.w	80088a4 <_svfiprintf_r+0x8e0>
 800879c:	2300      	movs	r3, #0
 800879e:	9316      	str	r3, [sp, #88]	; 0x58
 80087a0:	f89a 3000 	ldrb.w	r3, [sl]
 80087a4:	4646      	mov	r6, r8
 80087a6:	2b00      	cmp	r3, #0
 80087a8:	bf18      	it	ne
 80087aa:	2b25      	cmpne	r3, #37	; 0x25
 80087ac:	f47f ac36 	bne.w	800801c <_svfiprintf_r+0x58>
 80087b0:	4654      	mov	r4, sl
 80087b2:	e450      	b.n	8008056 <_svfiprintf_r+0x92>
 80087b4:	2b00      	cmp	r3, #0
 80087b6:	d17e      	bne.n	80088b6 <_svfiprintf_r+0x8f2>
 80087b8:	9c02      	ldr	r4, [sp, #8]
 80087ba:	07e1      	lsls	r1, r4, #31
 80087bc:	bf5c      	itt	pl
 80087be:	9306      	strpl	r3, [sp, #24]
 80087c0:	46c1      	movpl	r9, r8
 80087c2:	f57f ad0f 	bpl.w	80081e4 <_svfiprintf_r+0x220>
 80087c6:	9d11      	ldr	r5, [sp, #68]	; 0x44
 80087c8:	2330      	movs	r3, #48	; 0x30
 80087ca:	f10d 0987 	add.w	r9, sp, #135	; 0x87
 80087ce:	f88d 3087 	strb.w	r3, [sp, #135]	; 0x87
 80087d2:	9506      	str	r5, [sp, #24]
 80087d4:	e506      	b.n	80081e4 <_svfiprintf_r+0x220>
 80087d6:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 80087d8:	b123      	cbz	r3, 80087e4 <_svfiprintf_r+0x820>
 80087da:	9805      	ldr	r0, [sp, #20]
 80087dc:	aa15      	add	r2, sp, #84	; 0x54
 80087de:	9908      	ldr	r1, [sp, #32]
 80087e0:	f7ff fb6e 	bl	8007ec0 <__ssprint_r>
 80087e4:	9c08      	ldr	r4, [sp, #32]
 80087e6:	980a      	ldr	r0, [sp, #40]	; 0x28
 80087e8:	89a3      	ldrh	r3, [r4, #12]
 80087ea:	f013 0f40 	tst.w	r3, #64	; 0x40
 80087ee:	bf18      	it	ne
 80087f0:	f04f 30ff 	movne.w	r0, #4294967295
 80087f4:	b033      	add	sp, #204	; 0xcc
 80087f6:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80087fa:	9804      	ldr	r0, [sp, #16]
 80087fc:	1b05      	subs	r5, r0, r4
 80087fe:	2d00      	cmp	r5, #0
 8008800:	f77f af2e 	ble.w	8008660 <_svfiprintf_r+0x69c>
 8008804:	4b3e      	ldr	r3, [pc, #248]	; (8008900 <_svfiprintf_r+0x93c>)
 8008806:	2d10      	cmp	r5, #16
 8008808:	9307      	str	r3, [sp, #28]
 800880a:	dd2a      	ble.n	8008862 <_svfiprintf_r+0x89e>
 800880c:	f8cd 9024 	str.w	r9, [sp, #36]	; 0x24
 8008810:	f04f 0b10 	mov.w	fp, #16
 8008814:	940c      	str	r4, [sp, #48]	; 0x30
 8008816:	46a9      	mov	r9, r5
 8008818:	9c05      	ldr	r4, [sp, #20]
 800881a:	9d08      	ldr	r5, [sp, #32]
 800881c:	e004      	b.n	8008828 <_svfiprintf_r+0x864>
 800881e:	f1a9 0910 	sub.w	r9, r9, #16
 8008822:	f1b9 0f10 	cmp.w	r9, #16
 8008826:	dd18      	ble.n	800885a <_svfiprintf_r+0x896>
 8008828:	3201      	adds	r2, #1
 800882a:	3110      	adds	r1, #16
 800882c:	2a07      	cmp	r2, #7
 800882e:	e886 0880 	stmia.w	r6, {r7, fp}
 8008832:	9216      	str	r2, [sp, #88]	; 0x58
 8008834:	f106 0608 	add.w	r6, r6, #8
 8008838:	9117      	str	r1, [sp, #92]	; 0x5c
 800883a:	ddf0      	ble.n	800881e <_svfiprintf_r+0x85a>
 800883c:	4620      	mov	r0, r4
 800883e:	4629      	mov	r1, r5
 8008840:	aa15      	add	r2, sp, #84	; 0x54
 8008842:	4646      	mov	r6, r8
 8008844:	f7ff fb3c 	bl	8007ec0 <__ssprint_r>
 8008848:	2800      	cmp	r0, #0
 800884a:	d1cb      	bne.n	80087e4 <_svfiprintf_r+0x820>
 800884c:	f1a9 0910 	sub.w	r9, r9, #16
 8008850:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008852:	f1b9 0f10 	cmp.w	r9, #16
 8008856:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008858:	dce6      	bgt.n	8008828 <_svfiprintf_r+0x864>
 800885a:	464d      	mov	r5, r9
 800885c:	9c0c      	ldr	r4, [sp, #48]	; 0x30
 800885e:	f8dd 9024 	ldr.w	r9, [sp, #36]	; 0x24
 8008862:	3201      	adds	r2, #1
 8008864:	9b07      	ldr	r3, [sp, #28]
 8008866:	2a07      	cmp	r2, #7
 8008868:	4429      	add	r1, r5
 800886a:	9216      	str	r2, [sp, #88]	; 0x58
 800886c:	e886 0028 	stmia.w	r6, {r3, r5}
 8008870:	bfd8      	it	le
 8008872:	3608      	addle	r6, #8
 8008874:	9117      	str	r1, [sp, #92]	; 0x5c
 8008876:	f77f aef3 	ble.w	8008660 <_svfiprintf_r+0x69c>
 800887a:	9805      	ldr	r0, [sp, #20]
 800887c:	aa15      	add	r2, sp, #84	; 0x54
 800887e:	9908      	ldr	r1, [sp, #32]
 8008880:	f7ff fb1e 	bl	8007ec0 <__ssprint_r>
 8008884:	2800      	cmp	r0, #0
 8008886:	d1ad      	bne.n	80087e4 <_svfiprintf_r+0x820>
 8008888:	9917      	ldr	r1, [sp, #92]	; 0x5c
 800888a:	4646      	mov	r6, r8
 800888c:	9a16      	ldr	r2, [sp, #88]	; 0x58
 800888e:	e6e7      	b.n	8008660 <_svfiprintf_r+0x69c>
 8008890:	9805      	ldr	r0, [sp, #20]
 8008892:	aa15      	add	r2, sp, #84	; 0x54
 8008894:	9908      	ldr	r1, [sp, #32]
 8008896:	f7ff fb13 	bl	8007ec0 <__ssprint_r>
 800889a:	2800      	cmp	r0, #0
 800889c:	d1a2      	bne.n	80087e4 <_svfiprintf_r+0x820>
 800889e:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80088a0:	4643      	mov	r3, r8
 80088a2:	e735      	b.n	8008710 <_svfiprintf_r+0x74c>
 80088a4:	9805      	ldr	r0, [sp, #20]
 80088a6:	aa15      	add	r2, sp, #84	; 0x54
 80088a8:	9908      	ldr	r1, [sp, #32]
 80088aa:	f7ff fb09 	bl	8007ec0 <__ssprint_r>
 80088ae:	2800      	cmp	r0, #0
 80088b0:	f43f af74 	beq.w	800879c <_svfiprintf_r+0x7d8>
 80088b4:	e796      	b.n	80087e4 <_svfiprintf_r+0x820>
 80088b6:	9206      	str	r2, [sp, #24]
 80088b8:	46c1      	mov	r9, r8
 80088ba:	e493      	b.n	80081e4 <_svfiprintf_r+0x220>
 80088bc:	9805      	ldr	r0, [sp, #20]
 80088be:	aa15      	add	r2, sp, #84	; 0x54
 80088c0:	9908      	ldr	r1, [sp, #32]
 80088c2:	f7ff fafd 	bl	8007ec0 <__ssprint_r>
 80088c6:	2800      	cmp	r0, #0
 80088c8:	d18c      	bne.n	80087e4 <_svfiprintf_r+0x820>
 80088ca:	4646      	mov	r6, r8
 80088cc:	f7ff bbc0 	b.w	8008050 <_svfiprintf_r+0x8c>
 80088d0:	9805      	ldr	r0, [sp, #20]
 80088d2:	aa15      	add	r2, sp, #84	; 0x54
 80088d4:	9908      	ldr	r1, [sp, #32]
 80088d6:	f7ff faf3 	bl	8007ec0 <__ssprint_r>
 80088da:	2800      	cmp	r0, #0
 80088dc:	d182      	bne.n	80087e4 <_svfiprintf_r+0x820>
 80088de:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80088e0:	4646      	mov	r6, r8
 80088e2:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80088e4:	e6b8      	b.n	8008658 <_svfiprintf_r+0x694>
 80088e6:	9805      	ldr	r0, [sp, #20]
 80088e8:	aa15      	add	r2, sp, #84	; 0x54
 80088ea:	9908      	ldr	r1, [sp, #32]
 80088ec:	f7ff fae8 	bl	8007ec0 <__ssprint_r>
 80088f0:	2800      	cmp	r0, #0
 80088f2:	f47f af77 	bne.w	80087e4 <_svfiprintf_r+0x820>
 80088f6:	9917      	ldr	r1, [sp, #92]	; 0x5c
 80088f8:	4646      	mov	r6, r8
 80088fa:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80088fc:	e69c      	b.n	8008638 <_svfiprintf_r+0x674>
 80088fe:	bf00      	nop
 8008900:	0800a720 	stmdaeq	r0, {r5, r8, r9, sl, sp, pc}
 8008904:	2d00      	cmp	r5, #0
 8008906:	bf08      	it	eq
 8008908:	2c0a      	cmpeq	r4, #10
 800890a:	d330      	bcc.n	800896e <_svfiprintf_r+0x9aa>
 800890c:	f10d 0b87 	add.w	fp, sp, #135	; 0x87
 8008910:	46e1      	mov	r9, ip
 8008912:	9606      	str	r6, [sp, #24]
 8008914:	4620      	mov	r0, r4
 8008916:	4629      	mov	r1, r5
 8008918:	220a      	movs	r2, #10
 800891a:	2300      	movs	r3, #0
 800891c:	f001 fac0 	bl	8009ea0 <__aeabi_uldivmod>
 8008920:	465e      	mov	r6, fp
 8008922:	4620      	mov	r0, r4
 8008924:	4629      	mov	r1, r5
 8008926:	2300      	movs	r3, #0
 8008928:	f10b 3bff 	add.w	fp, fp, #4294967295
 800892c:	3230      	adds	r2, #48	; 0x30
 800892e:	7032      	strb	r2, [r6, #0]
 8008930:	220a      	movs	r2, #10
 8008932:	f001 fab5 	bl	8009ea0 <__aeabi_uldivmod>
 8008936:	4604      	mov	r4, r0
 8008938:	460d      	mov	r5, r1
 800893a:	ea54 0005 	orrs.w	r0, r4, r5
 800893e:	d1e9      	bne.n	8008914 <_svfiprintf_r+0x950>
 8008940:	46cc      	mov	ip, r9
 8008942:	46b1      	mov	r9, r6
 8008944:	9e06      	ldr	r6, [sp, #24]
 8008946:	e44a      	b.n	80081de <_svfiprintf_r+0x21a>
 8008948:	930b      	str	r3, [sp, #44]	; 0x2c
 800894a:	f89a 3000 	ldrb.w	r3, [sl]
 800894e:	f7ff bb93 	b.w	8008078 <_svfiprintf_r+0xb4>
 8008952:	9805      	ldr	r0, [sp, #20]
 8008954:	aa15      	add	r2, sp, #84	; 0x54
 8008956:	9908      	ldr	r1, [sp, #32]
 8008958:	f7ff fab2 	bl	8007ec0 <__ssprint_r>
 800895c:	2800      	cmp	r0, #0
 800895e:	f47f af41 	bne.w	80087e4 <_svfiprintf_r+0x820>
 8008962:	9917      	ldr	r1, [sp, #92]	; 0x5c
 8008964:	e710      	b.n	8008788 <_svfiprintf_r+0x7c4>
 8008966:	ebc9 0508 	rsb	r5, r9, r8
 800896a:	9506      	str	r5, [sp, #24]
 800896c:	e43a      	b.n	80081e4 <_svfiprintf_r+0x220>
 800896e:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8008970:	3430      	adds	r4, #48	; 0x30
 8008972:	f10d 0987 	add.w	r9, sp, #135	; 0x87
 8008976:	f88d 4087 	strb.w	r4, [sp, #135]	; 0x87
 800897a:	9506      	str	r5, [sp, #24]
 800897c:	e432      	b.n	80081e4 <_svfiprintf_r+0x220>
 800897e:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8008980:	3504      	adds	r5, #4
 8008982:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8008986:	950b      	str	r5, [sp, #44]	; 0x2c
 8008988:	2500      	movs	r5, #0
 800898a:	e5d7      	b.n	800853c <_svfiprintf_r+0x578>
 800898c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 800898e:	3504      	adds	r5, #4
 8008990:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8008994:	950b      	str	r5, [sp, #44]	; 0x2c
 8008996:	4622      	mov	r2, r4
 8008998:	17e5      	asrs	r5, r4, #31
 800899a:	462b      	mov	r3, r5
 800899c:	2a00      	cmp	r2, #0
 800899e:	f173 0000 	sbcs.w	r0, r3, #0
 80089a2:	f6bf ad38 	bge.w	8008416 <_svfiprintf_r+0x452>
 80089a6:	f04f 0c2d 	mov.w	ip, #45	; 0x2d
 80089aa:	4264      	negs	r4, r4
 80089ac:	eb65 0545 	sbc.w	r5, r5, r5, lsl #1
 80089b0:	f88d c04f 	strb.w	ip, [sp, #79]	; 0x4f
 80089b4:	2301      	movs	r3, #1
 80089b6:	f7ff bbe3 	b.w	8008180 <_svfiprintf_r+0x1bc>
 80089ba:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80089bc:	3504      	adds	r5, #4
 80089be:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80089c2:	950b      	str	r5, [sp, #44]	; 0x2c
 80089c4:	2500      	movs	r5, #0
 80089c6:	f7ff bbd7 	b.w	8008178 <_svfiprintf_r+0x1b4>
 80089ca:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80089cc:	2301      	movs	r3, #1
 80089ce:	3504      	adds	r5, #4
 80089d0:	f855 4c04 	ldr.w	r4, [r5, #-4]
 80089d4:	950b      	str	r5, [sp, #44]	; 0x2c
 80089d6:	2500      	movs	r5, #0
 80089d8:	f7ff bbce 	b.w	8008178 <_svfiprintf_r+0x1b4>
 80089dc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80089de:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80089e0:	6829      	ldr	r1, [r5, #0]
 80089e2:	4622      	mov	r2, r4
 80089e4:	17e5      	asrs	r5, r4, #31
 80089e6:	462b      	mov	r3, r5
 80089e8:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80089ea:	e9c1 2300 	strd	r2, r3, [r1]
 80089ee:	3504      	adds	r5, #4
 80089f0:	950b      	str	r5, [sp, #44]	; 0x2c
 80089f2:	f7ff bb0c 	b.w	800800e <_svfiprintf_r+0x4a>
 80089f6:	950b      	str	r5, [sp, #44]	; 0x2c
 80089f8:	9403      	str	r4, [sp, #12]
 80089fa:	f7ff fa31 	bl	8007e60 <strlen>
 80089fe:	f89d c04f 	ldrb.w	ip, [sp, #79]	; 0x4f
 8008a02:	9006      	str	r0, [sp, #24]
 8008a04:	f7ff bbee 	b.w	80081e4 <_svfiprintf_r+0x220>
 8008a08:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008a0a:	9d02      	ldr	r5, [sp, #8]
 8008a0c:	3404      	adds	r4, #4
 8008a0e:	f854 3c04 	ldr.w	r3, [r4, #-4]
 8008a12:	f015 0f40 	tst.w	r5, #64	; 0x40
 8008a16:	9d0a      	ldr	r5, [sp, #40]	; 0x28
 8008a18:	940b      	str	r4, [sp, #44]	; 0x2c
 8008a1a:	bf14      	ite	ne
 8008a1c:	801d      	strhne	r5, [r3, #0]
 8008a1e:	601d      	streq	r5, [r3, #0]
 8008a20:	f7ff baf5 	b.w	800800e <_svfiprintf_r+0x4a>
 8008a24:	2140      	movs	r1, #64	; 0x40
 8008a26:	f7fe f921 	bl	8006c6c <_malloc_r>
 8008a2a:	9c08      	ldr	r4, [sp, #32]
 8008a2c:	6020      	str	r0, [r4, #0]
 8008a2e:	6120      	str	r0, [r4, #16]
 8008a30:	2800      	cmp	r0, #0
 8008a32:	d02f      	beq.n	8008a94 <_svfiprintf_r+0xad0>
 8008a34:	9c08      	ldr	r4, [sp, #32]
 8008a36:	2340      	movs	r3, #64	; 0x40
 8008a38:	6163      	str	r3, [r4, #20]
 8008a3a:	f7ff bad1 	b.w	8007fe0 <_svfiprintf_r+0x1c>
 8008a3e:	f6c0 0300 	movt	r3, #2048	; 0x800
 8008a42:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8008a44:	9307      	str	r3, [sp, #28]
 8008a46:	e418      	b.n	800827a <_svfiprintf_r+0x2b6>
 8008a48:	9c03      	ldr	r4, [sp, #12]
 8008a4a:	f64a 19f0 	movw	r9, #43504	; 0xa9f0
 8008a4e:	950b      	str	r5, [sp, #44]	; 0x2c
 8008a50:	f6c0 0900 	movt	r9, #2048	; 0x800
 8008a54:	2c06      	cmp	r4, #6
 8008a56:	bf28      	it	cs
 8008a58:	2406      	movcs	r4, #6
 8008a5a:	9406      	str	r4, [sp, #24]
 8008a5c:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 8008a60:	e4ec      	b.n	800843c <_svfiprintf_r+0x478>
 8008a62:	9c03      	ldr	r4, [sp, #12]
 8008a64:	f89d c04f 	ldrb.w	ip, [sp, #79]	; 0x4f
 8008a68:	950b      	str	r5, [sp, #44]	; 0x2c
 8008a6a:	9406      	str	r4, [sp, #24]
 8008a6c:	9003      	str	r0, [sp, #12]
 8008a6e:	f7ff bbb9 	b.w	80081e4 <_svfiprintf_r+0x220>
 8008a72:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008a74:	f89a 3001 	ldrb.w	r3, [sl, #1]
 8008a78:	46aa      	mov	sl, r5
 8008a7a:	6824      	ldr	r4, [r4, #0]
 8008a7c:	9403      	str	r4, [sp, #12]
 8008a7e:	9c0b      	ldr	r4, [sp, #44]	; 0x2c
 8008a80:	1d22      	adds	r2, r4, #4
 8008a82:	9c03      	ldr	r4, [sp, #12]
 8008a84:	920b      	str	r2, [sp, #44]	; 0x2c
 8008a86:	2c00      	cmp	r4, #0
 8008a88:	bfbc      	itt	lt
 8008a8a:	f04f 35ff 	movlt.w	r5, #4294967295
 8008a8e:	9503      	strlt	r5, [sp, #12]
 8008a90:	f7ff baf2 	b.w	8008078 <_svfiprintf_r+0xb4>
 8008a94:	9d05      	ldr	r5, [sp, #20]
 8008a96:	230c      	movs	r3, #12
 8008a98:	f04f 30ff 	mov.w	r0, #4294967295
 8008a9c:	602b      	str	r3, [r5, #0]
 8008a9e:	e6a9      	b.n	80087f4 <_svfiprintf_r+0x830>

08008aa0 <_calloc_r>:
 8008aa0:	b510      	push	{r4, lr}
 8008aa2:	fb02 f101 	mul.w	r1, r2, r1
 8008aa6:	f7fe f8e1 	bl	8006c6c <_malloc_r>
 8008aaa:	4604      	mov	r4, r0
 8008aac:	b170      	cbz	r0, 8008acc <_calloc_r+0x2c>
 8008aae:	f850 2c04 	ldr.w	r2, [r0, #-4]
 8008ab2:	f022 0203 	bic.w	r2, r2, #3
 8008ab6:	3a04      	subs	r2, #4
 8008ab8:	2a24      	cmp	r2, #36	; 0x24
 8008aba:	d81d      	bhi.n	8008af8 <_calloc_r+0x58>
 8008abc:	2a13      	cmp	r2, #19
 8008abe:	bf98      	it	ls
 8008ac0:	4603      	movls	r3, r0
 8008ac2:	d805      	bhi.n	8008ad0 <_calloc_r+0x30>
 8008ac4:	2200      	movs	r2, #0
 8008ac6:	601a      	str	r2, [r3, #0]
 8008ac8:	605a      	str	r2, [r3, #4]
 8008aca:	609a      	str	r2, [r3, #8]
 8008acc:	4620      	mov	r0, r4
 8008ace:	bd10      	pop	{r4, pc}
 8008ad0:	2a1b      	cmp	r2, #27
 8008ad2:	f04f 0100 	mov.w	r1, #0
 8008ad6:	bf98      	it	ls
 8008ad8:	f100 0308 	addls.w	r3, r0, #8
 8008adc:	6001      	str	r1, [r0, #0]
 8008ade:	6041      	str	r1, [r0, #4]
 8008ae0:	d9f0      	bls.n	8008ac4 <_calloc_r+0x24>
 8008ae2:	2a24      	cmp	r2, #36	; 0x24
 8008ae4:	6081      	str	r1, [r0, #8]
 8008ae6:	60c1      	str	r1, [r0, #12]
 8008ae8:	bf11      	iteee	ne
 8008aea:	f100 0310 	addne.w	r3, r0, #16
 8008aee:	6101      	streq	r1, [r0, #16]
 8008af0:	f100 0318 	addeq.w	r3, r0, #24
 8008af4:	6141      	streq	r1, [r0, #20]
 8008af6:	e7e5      	b.n	8008ac4 <_calloc_r+0x24>
 8008af8:	2100      	movs	r1, #0
 8008afa:	f7fb fd19 	bl	8004530 <memset>
 8008afe:	4620      	mov	r0, r4
 8008b00:	bd10      	pop	{r4, pc}
 8008b02:	bf00      	nop

08008b04 <_malloc_trim_r>:
 8008b04:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8008b06:	f240 1474 	movw	r4, #372	; 0x174
 8008b0a:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8008b0e:	460f      	mov	r7, r1
 8008b10:	4605      	mov	r5, r0
 8008b12:	f7fe fbab 	bl	800726c <__malloc_lock>
 8008b16:	68a3      	ldr	r3, [r4, #8]
 8008b18:	685e      	ldr	r6, [r3, #4]
 8008b1a:	f026 0603 	bic.w	r6, r6, #3
 8008b1e:	1bf7      	subs	r7, r6, r7
 8008b20:	f607 77ef 	addw	r7, r7, #4079	; 0xfef
 8008b24:	0b3f      	lsrs	r7, r7, #12
 8008b26:	3f01      	subs	r7, #1
 8008b28:	033f      	lsls	r7, r7, #12
 8008b2a:	f5b7 5f80 	cmp.w	r7, #4096	; 0x1000
 8008b2e:	db07      	blt.n	8008b40 <_malloc_trim_r+0x3c>
 8008b30:	4628      	mov	r0, r5
 8008b32:	2100      	movs	r1, #0
 8008b34:	f7ff f862 	bl	8007bfc <_sbrk_r>
 8008b38:	68a3      	ldr	r3, [r4, #8]
 8008b3a:	4433      	add	r3, r6
 8008b3c:	4298      	cmp	r0, r3
 8008b3e:	d004      	beq.n	8008b4a <_malloc_trim_r+0x46>
 8008b40:	4628      	mov	r0, r5
 8008b42:	f7fe fb95 	bl	8007270 <__malloc_unlock>
 8008b46:	2000      	movs	r0, #0
 8008b48:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008b4a:	4628      	mov	r0, r5
 8008b4c:	4279      	negs	r1, r7
 8008b4e:	f7ff f855 	bl	8007bfc <_sbrk_r>
 8008b52:	3001      	adds	r0, #1
 8008b54:	d010      	beq.n	8008b78 <_malloc_trim_r+0x74>
 8008b56:	f240 7328 	movw	r3, #1832	; 0x728
 8008b5a:	68a1      	ldr	r1, [r4, #8]
 8008b5c:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8008b60:	1bf6      	subs	r6, r6, r7
 8008b62:	4628      	mov	r0, r5
 8008b64:	f046 0601 	orr.w	r6, r6, #1
 8008b68:	681a      	ldr	r2, [r3, #0]
 8008b6a:	604e      	str	r6, [r1, #4]
 8008b6c:	1bd7      	subs	r7, r2, r7
 8008b6e:	601f      	str	r7, [r3, #0]
 8008b70:	f7fe fb7e 	bl	8007270 <__malloc_unlock>
 8008b74:	2001      	movs	r0, #1
 8008b76:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8008b78:	4628      	mov	r0, r5
 8008b7a:	2100      	movs	r1, #0
 8008b7c:	f7ff f83e 	bl	8007bfc <_sbrk_r>
 8008b80:	68a3      	ldr	r3, [r4, #8]
 8008b82:	1ac2      	subs	r2, r0, r3
 8008b84:	2a0f      	cmp	r2, #15
 8008b86:	dddb      	ble.n	8008b40 <_malloc_trim_r+0x3c>
 8008b88:	f240 547c 	movw	r4, #1404	; 0x57c
 8008b8c:	f240 7128 	movw	r1, #1832	; 0x728
 8008b90:	f2c2 0400 	movt	r4, #8192	; 0x2000
 8008b94:	f2c2 0100 	movt	r1, #8192	; 0x2000
 8008b98:	f042 0201 	orr.w	r2, r2, #1
 8008b9c:	605a      	str	r2, [r3, #4]
 8008b9e:	6823      	ldr	r3, [r4, #0]
 8008ba0:	1ac0      	subs	r0, r0, r3
 8008ba2:	6008      	str	r0, [r1, #0]
 8008ba4:	e7cc      	b.n	8008b40 <_malloc_trim_r+0x3c>
 8008ba6:	bf00      	nop

08008ba8 <_free_r>:
 8008ba8:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8008bac:	460e      	mov	r6, r1
 8008bae:	4680      	mov	r8, r0
 8008bb0:	2900      	cmp	r1, #0
 8008bb2:	d05e      	beq.n	8008c72 <_free_r+0xca>
 8008bb4:	f7fe fb5a 	bl	800726c <__malloc_lock>
 8008bb8:	f240 1574 	movw	r5, #372	; 0x174
 8008bbc:	f856 1c04 	ldr.w	r1, [r6, #-4]
 8008bc0:	f2c2 0500 	movt	r5, #8192	; 0x2000
 8008bc4:	f1a6 0408 	sub.w	r4, r6, #8
 8008bc8:	f021 0301 	bic.w	r3, r1, #1
 8008bcc:	68af      	ldr	r7, [r5, #8]
 8008bce:	18e2      	adds	r2, r4, r3
 8008bd0:	4297      	cmp	r7, r2
 8008bd2:	6850      	ldr	r0, [r2, #4]
 8008bd4:	f020 0003 	bic.w	r0, r0, #3
 8008bd8:	d061      	beq.n	8008c9e <_free_r+0xf6>
 8008bda:	f011 0101 	ands.w	r1, r1, #1
 8008bde:	6050      	str	r0, [r2, #4]
 8008be0:	bf18      	it	ne
 8008be2:	2100      	movne	r1, #0
 8008be4:	d10f      	bne.n	8008c06 <_free_r+0x5e>
 8008be6:	f856 6c08 	ldr.w	r6, [r6, #-8]
 8008bea:	f105 0c08 	add.w	ip, r5, #8
 8008bee:	1ba4      	subs	r4, r4, r6
 8008bf0:	4433      	add	r3, r6
 8008bf2:	68a6      	ldr	r6, [r4, #8]
 8008bf4:	4566      	cmp	r6, ip
 8008bf6:	bf0f      	iteee	eq
 8008bf8:	2101      	moveq	r1, #1
 8008bfa:	f8d4 c00c 	ldrne.w	ip, [r4, #12]
 8008bfe:	f8c6 c00c 	strne.w	ip, [r6, #12]
 8008c02:	f8cc 6008 	strne.w	r6, [ip, #8]
 8008c06:	1816      	adds	r6, r2, r0
 8008c08:	6876      	ldr	r6, [r6, #4]
 8008c0a:	07f6      	lsls	r6, r6, #31
 8008c0c:	d408      	bmi.n	8008c20 <_free_r+0x78>
 8008c0e:	4403      	add	r3, r0
 8008c10:	6890      	ldr	r0, [r2, #8]
 8008c12:	b911      	cbnz	r1, 8008c1a <_free_r+0x72>
 8008c14:	4e49      	ldr	r6, [pc, #292]	; (8008d3c <_free_r+0x194>)
 8008c16:	42b0      	cmp	r0, r6
 8008c18:	d060      	beq.n	8008cdc <_free_r+0x134>
 8008c1a:	68d2      	ldr	r2, [r2, #12]
 8008c1c:	60c2      	str	r2, [r0, #12]
 8008c1e:	6090      	str	r0, [r2, #8]
 8008c20:	f043 0201 	orr.w	r2, r3, #1
 8008c24:	6062      	str	r2, [r4, #4]
 8008c26:	50e3      	str	r3, [r4, r3]
 8008c28:	b9f1      	cbnz	r1, 8008c68 <_free_r+0xc0>
 8008c2a:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008c2e:	d322      	bcc.n	8008c76 <_free_r+0xce>
 8008c30:	0a5a      	lsrs	r2, r3, #9
 8008c32:	2a04      	cmp	r2, #4
 8008c34:	d85b      	bhi.n	8008cee <_free_r+0x146>
 8008c36:	0998      	lsrs	r0, r3, #6
 8008c38:	3038      	adds	r0, #56	; 0x38
 8008c3a:	0041      	lsls	r1, r0, #1
 8008c3c:	eb05 0581 	add.w	r5, r5, r1, lsl #2
 8008c40:	f240 1174 	movw	r1, #372	; 0x174
 8008c44:	f2c2 0100 	movt	r1, #8192	; 0x2000
 8008c48:	68aa      	ldr	r2, [r5, #8]
 8008c4a:	42aa      	cmp	r2, r5
 8008c4c:	d05b      	beq.n	8008d06 <_free_r+0x15e>
 8008c4e:	6851      	ldr	r1, [r2, #4]
 8008c50:	f021 0103 	bic.w	r1, r1, #3
 8008c54:	428b      	cmp	r3, r1
 8008c56:	d202      	bcs.n	8008c5e <_free_r+0xb6>
 8008c58:	6892      	ldr	r2, [r2, #8]
 8008c5a:	4295      	cmp	r5, r2
 8008c5c:	d1f7      	bne.n	8008c4e <_free_r+0xa6>
 8008c5e:	68d3      	ldr	r3, [r2, #12]
 8008c60:	60e3      	str	r3, [r4, #12]
 8008c62:	60a2      	str	r2, [r4, #8]
 8008c64:	609c      	str	r4, [r3, #8]
 8008c66:	60d4      	str	r4, [r2, #12]
 8008c68:	4640      	mov	r0, r8
 8008c6a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008c6e:	f7fe baff 	b.w	8007270 <__malloc_unlock>
 8008c72:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8008c76:	08db      	lsrs	r3, r3, #3
 8008c78:	2101      	movs	r1, #1
 8008c7a:	6868      	ldr	r0, [r5, #4]
 8008c7c:	eb05 02c3 	add.w	r2, r5, r3, lsl #3
 8008c80:	109b      	asrs	r3, r3, #2
 8008c82:	fa01 f303 	lsl.w	r3, r1, r3
 8008c86:	6891      	ldr	r1, [r2, #8]
 8008c88:	4318      	orrs	r0, r3
 8008c8a:	60e2      	str	r2, [r4, #12]
 8008c8c:	6068      	str	r0, [r5, #4]
 8008c8e:	4640      	mov	r0, r8
 8008c90:	60a1      	str	r1, [r4, #8]
 8008c92:	6094      	str	r4, [r2, #8]
 8008c94:	60cc      	str	r4, [r1, #12]
 8008c96:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 8008c9a:	f7fe bae9 	b.w	8007270 <__malloc_unlock>
 8008c9e:	07cf      	lsls	r7, r1, #31
 8008ca0:	4418      	add	r0, r3
 8008ca2:	d407      	bmi.n	8008cb4 <_free_r+0x10c>
 8008ca4:	f856 3c08 	ldr.w	r3, [r6, #-8]
 8008ca8:	1ae4      	subs	r4, r4, r3
 8008caa:	4418      	add	r0, r3
 8008cac:	68a2      	ldr	r2, [r4, #8]
 8008cae:	68e3      	ldr	r3, [r4, #12]
 8008cb0:	60d3      	str	r3, [r2, #12]
 8008cb2:	609a      	str	r2, [r3, #8]
 8008cb4:	f240 5280 	movw	r2, #1408	; 0x580
 8008cb8:	f040 0301 	orr.w	r3, r0, #1
 8008cbc:	f2c2 0200 	movt	r2, #8192	; 0x2000
 8008cc0:	6063      	str	r3, [r4, #4]
 8008cc2:	60ac      	str	r4, [r5, #8]
 8008cc4:	6813      	ldr	r3, [r2, #0]
 8008cc6:	4298      	cmp	r0, r3
 8008cc8:	d3ce      	bcc.n	8008c68 <_free_r+0xc0>
 8008cca:	f240 7324 	movw	r3, #1828	; 0x724
 8008cce:	4640      	mov	r0, r8
 8008cd0:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8008cd4:	6819      	ldr	r1, [r3, #0]
 8008cd6:	f7ff ff15 	bl	8008b04 <_malloc_trim_r>
 8008cda:	e7c5      	b.n	8008c68 <_free_r+0xc0>
 8008cdc:	616c      	str	r4, [r5, #20]
 8008cde:	f043 0201 	orr.w	r2, r3, #1
 8008ce2:	612c      	str	r4, [r5, #16]
 8008ce4:	60e0      	str	r0, [r4, #12]
 8008ce6:	60a0      	str	r0, [r4, #8]
 8008ce8:	6062      	str	r2, [r4, #4]
 8008cea:	50e3      	str	r3, [r4, r3]
 8008cec:	e7bc      	b.n	8008c68 <_free_r+0xc0>
 8008cee:	2a14      	cmp	r2, #20
 8008cf0:	bf9c      	itt	ls
 8008cf2:	f102 005b 	addls.w	r0, r2, #91	; 0x5b
 8008cf6:	0041      	lslls	r1, r0, #1
 8008cf8:	d9a0      	bls.n	8008c3c <_free_r+0x94>
 8008cfa:	2a54      	cmp	r2, #84	; 0x54
 8008cfc:	d80c      	bhi.n	8008d18 <_free_r+0x170>
 8008cfe:	0b18      	lsrs	r0, r3, #12
 8008d00:	306e      	adds	r0, #110	; 0x6e
 8008d02:	0041      	lsls	r1, r0, #1
 8008d04:	e79a      	b.n	8008c3c <_free_r+0x94>
 8008d06:	2601      	movs	r6, #1
 8008d08:	684d      	ldr	r5, [r1, #4]
 8008d0a:	1080      	asrs	r0, r0, #2
 8008d0c:	4613      	mov	r3, r2
 8008d0e:	fa06 f000 	lsl.w	r0, r6, r0
 8008d12:	4305      	orrs	r5, r0
 8008d14:	604d      	str	r5, [r1, #4]
 8008d16:	e7a3      	b.n	8008c60 <_free_r+0xb8>
 8008d18:	f5b2 7faa 	cmp.w	r2, #340	; 0x154
 8008d1c:	d803      	bhi.n	8008d26 <_free_r+0x17e>
 8008d1e:	0bd8      	lsrs	r0, r3, #15
 8008d20:	3077      	adds	r0, #119	; 0x77
 8008d22:	0041      	lsls	r1, r0, #1
 8008d24:	e78a      	b.n	8008c3c <_free_r+0x94>
 8008d26:	f240 5154 	movw	r1, #1364	; 0x554
 8008d2a:	428a      	cmp	r2, r1
 8008d2c:	bf95      	itete	ls
 8008d2e:	0c98      	lsrls	r0, r3, #18
 8008d30:	21fc      	movhi	r1, #252	; 0xfc
 8008d32:	307c      	addls	r0, #124	; 0x7c
 8008d34:	207e      	movhi	r0, #126	; 0x7e
 8008d36:	bf98      	it	ls
 8008d38:	0041      	lslls	r1, r0, #1
 8008d3a:	e77f      	b.n	8008c3c <_free_r+0x94>
 8008d3c:	2000017c 	andcs	r0, r0, ip, ror r1

08008d40 <memmove>:
 8008d40:	4288      	cmp	r0, r1
 8008d42:	b4f0      	push	{r4, r5, r6, r7}
 8008d44:	d910      	bls.n	8008d68 <memmove+0x28>
 8008d46:	188c      	adds	r4, r1, r2
 8008d48:	42a0      	cmp	r0, r4
 8008d4a:	d20d      	bcs.n	8008d68 <memmove+0x28>
 8008d4c:	1885      	adds	r5, r0, r2
 8008d4e:	1e53      	subs	r3, r2, #1
 8008d50:	b142      	cbz	r2, 8008d64 <memmove+0x24>
 8008d52:	4621      	mov	r1, r4
 8008d54:	462a      	mov	r2, r5
 8008d56:	f811 4d01 	ldrb.w	r4, [r1, #-1]!
 8008d5a:	3b01      	subs	r3, #1
 8008d5c:	f802 4d01 	strb.w	r4, [r2, #-1]!
 8008d60:	1c5c      	adds	r4, r3, #1
 8008d62:	d1f8      	bne.n	8008d56 <memmove+0x16>
 8008d64:	bcf0      	pop	{r4, r5, r6, r7}
 8008d66:	4770      	bx	lr
 8008d68:	2a0f      	cmp	r2, #15
 8008d6a:	d946      	bls.n	8008dfa <memmove+0xba>
 8008d6c:	ea40 0301 	orr.w	r3, r0, r1
 8008d70:	079b      	lsls	r3, r3, #30
 8008d72:	d146      	bne.n	8008e02 <memmove+0xc2>
 8008d74:	f1a2 0710 	sub.w	r7, r2, #16
 8008d78:	460c      	mov	r4, r1
 8008d7a:	4603      	mov	r3, r0
 8008d7c:	093f      	lsrs	r7, r7, #4
 8008d7e:	eb00 1607 	add.w	r6, r0, r7, lsl #4
 8008d82:	3610      	adds	r6, #16
 8008d84:	6825      	ldr	r5, [r4, #0]
 8008d86:	3310      	adds	r3, #16
 8008d88:	3410      	adds	r4, #16
 8008d8a:	f843 5c10 	str.w	r5, [r3, #-16]
 8008d8e:	f854 5c0c 	ldr.w	r5, [r4, #-12]
 8008d92:	f843 5c0c 	str.w	r5, [r3, #-12]
 8008d96:	f854 5c08 	ldr.w	r5, [r4, #-8]
 8008d9a:	f843 5c08 	str.w	r5, [r3, #-8]
 8008d9e:	f854 5c04 	ldr.w	r5, [r4, #-4]
 8008da2:	f843 5c04 	str.w	r5, [r3, #-4]
 8008da6:	42b3      	cmp	r3, r6
 8008da8:	d1ec      	bne.n	8008d84 <memmove+0x44>
 8008daa:	1c7b      	adds	r3, r7, #1
 8008dac:	f002 0c0f 	and.w	ip, r2, #15
 8008db0:	f1bc 0f03 	cmp.w	ip, #3
 8008db4:	ea4f 1303 	mov.w	r3, r3, lsl #4
 8008db8:	4419      	add	r1, r3
 8008dba:	4403      	add	r3, r0
 8008dbc:	d923      	bls.n	8008e06 <memmove+0xc6>
 8008dbe:	460e      	mov	r6, r1
 8008dc0:	461d      	mov	r5, r3
 8008dc2:	4664      	mov	r4, ip
 8008dc4:	f856 7b04 	ldr.w	r7, [r6], #4
 8008dc8:	3c04      	subs	r4, #4
 8008dca:	2c03      	cmp	r4, #3
 8008dcc:	f845 7b04 	str.w	r7, [r5], #4
 8008dd0:	d8f8      	bhi.n	8008dc4 <memmove+0x84>
 8008dd2:	f1ac 0404 	sub.w	r4, ip, #4
 8008dd6:	f002 0203 	and.w	r2, r2, #3
 8008dda:	f024 0403 	bic.w	r4, r4, #3
 8008dde:	3404      	adds	r4, #4
 8008de0:	4423      	add	r3, r4
 8008de2:	4421      	add	r1, r4
 8008de4:	2a00      	cmp	r2, #0
 8008de6:	d0bd      	beq.n	8008d64 <memmove+0x24>
 8008de8:	441a      	add	r2, r3
 8008dea:	f811 4b01 	ldrb.w	r4, [r1], #1
 8008dee:	f803 4b01 	strb.w	r4, [r3], #1
 8008df2:	4293      	cmp	r3, r2
 8008df4:	d1f9      	bne.n	8008dea <memmove+0xaa>
 8008df6:	bcf0      	pop	{r4, r5, r6, r7}
 8008df8:	4770      	bx	lr
 8008dfa:	4603      	mov	r3, r0
 8008dfc:	2a00      	cmp	r2, #0
 8008dfe:	d1f3      	bne.n	8008de8 <memmove+0xa8>
 8008e00:	e7b0      	b.n	8008d64 <memmove+0x24>
 8008e02:	4603      	mov	r3, r0
 8008e04:	e7f0      	b.n	8008de8 <memmove+0xa8>
 8008e06:	4662      	mov	r2, ip
 8008e08:	2a00      	cmp	r2, #0
 8008e0a:	d1ed      	bne.n	8008de8 <memmove+0xa8>
 8008e0c:	e7aa      	b.n	8008d64 <memmove+0x24>
 8008e0e:	bf00      	nop

08008e10 <_realloc_r>:
 8008e10:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8008e14:	460c      	mov	r4, r1
 8008e16:	b083      	sub	sp, #12
 8008e18:	4690      	mov	r8, r2
 8008e1a:	4681      	mov	r9, r0
 8008e1c:	2900      	cmp	r1, #0
 8008e1e:	f000 8148 	beq.w	80090b2 <_realloc_r+0x2a2>
 8008e22:	f7fe fa23 	bl	800726c <__malloc_lock>
 8008e26:	f108 060b 	add.w	r6, r8, #11
 8008e2a:	2e16      	cmp	r6, #22
 8008e2c:	f854 cc04 	ldr.w	ip, [r4, #-4]
 8008e30:	bf8d      	iteet	hi
 8008e32:	f026 0607 	bichi.w	r6, r6, #7
 8008e36:	2210      	movls	r2, #16
 8008e38:	2300      	movls	r3, #0
 8008e3a:	4632      	movhi	r2, r6
 8008e3c:	bf88      	it	hi
 8008e3e:	0ff3      	lsrhi	r3, r6, #31
 8008e40:	f1a4 0708 	sub.w	r7, r4, #8
 8008e44:	f02c 0503 	bic.w	r5, ip, #3
 8008e48:	bf98      	it	ls
 8008e4a:	4616      	movls	r6, r2
 8008e4c:	4546      	cmp	r6, r8
 8008e4e:	bf38      	it	cc
 8008e50:	f043 0301 	orrcc.w	r3, r3, #1
 8008e54:	2b00      	cmp	r3, #0
 8008e56:	f040 8132 	bne.w	80090be <_realloc_r+0x2ae>
 8008e5a:	4295      	cmp	r5, r2
 8008e5c:	db16      	blt.n	8008e8c <_realloc_r+0x7c>
 8008e5e:	46a0      	mov	r8, r4
 8008e60:	4660      	mov	r0, ip
 8008e62:	1bab      	subs	r3, r5, r6
 8008e64:	2b0f      	cmp	r3, #15
 8008e66:	f200 80cc 	bhi.w	8009002 <_realloc_r+0x1f2>
 8008e6a:	197b      	adds	r3, r7, r5
 8008e6c:	f000 0c01 	and.w	ip, r0, #1
 8008e70:	ea4c 0505 	orr.w	r5, ip, r5
 8008e74:	607d      	str	r5, [r7, #4]
 8008e76:	685a      	ldr	r2, [r3, #4]
 8008e78:	f042 0201 	orr.w	r2, r2, #1
 8008e7c:	605a      	str	r2, [r3, #4]
 8008e7e:	4648      	mov	r0, r9
 8008e80:	f7fe f9f6 	bl	8007270 <__malloc_unlock>
 8008e84:	4640      	mov	r0, r8
 8008e86:	b003      	add	sp, #12
 8008e88:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8008e8c:	f240 1a74 	movw	sl, #372	; 0x174
 8008e90:	1979      	adds	r1, r7, r5
 8008e92:	f2c2 0a00 	movt	sl, #8192	; 0x2000
 8008e96:	f8da 0008 	ldr.w	r0, [sl, #8]
 8008e9a:	4288      	cmp	r0, r1
 8008e9c:	f000 8114 	beq.w	80090c8 <_realloc_r+0x2b8>
 8008ea0:	f8d1 e004 	ldr.w	lr, [r1, #4]
 8008ea4:	f02e 0b01 	bic.w	fp, lr, #1
 8008ea8:	448b      	add	fp, r1
 8008eaa:	f8db b004 	ldr.w	fp, [fp, #4]
 8008eae:	f01b 0f01 	tst.w	fp, #1
 8008eb2:	bf1c      	itt	ne
 8008eb4:	469e      	movne	lr, r3
 8008eb6:	4671      	movne	r1, lr
 8008eb8:	d056      	beq.n	8008f68 <_realloc_r+0x158>
 8008eba:	f01c 0f01 	tst.w	ip, #1
 8008ebe:	f040 80b3 	bne.w	8009028 <_realloc_r+0x218>
 8008ec2:	f854 3c08 	ldr.w	r3, [r4, #-8]
 8008ec6:	ebc3 0b07 	rsb	fp, r3, r7
 8008eca:	f8db 3004 	ldr.w	r3, [fp, #4]
 8008ece:	f023 0303 	bic.w	r3, r3, #3
 8008ed2:	442b      	add	r3, r5
 8008ed4:	2900      	cmp	r1, #0
 8008ed6:	d055      	beq.n	8008f84 <_realloc_r+0x174>
 8008ed8:	4281      	cmp	r1, r0
 8008eda:	f000 8121 	beq.w	8009120 <_realloc_r+0x310>
 8008ede:	449e      	add	lr, r3
 8008ee0:	4596      	cmp	lr, r2
 8008ee2:	db4f      	blt.n	8008f84 <_realloc_r+0x174>
 8008ee4:	68cb      	ldr	r3, [r1, #12]
 8008ee6:	46d8      	mov	r8, fp
 8008ee8:	6889      	ldr	r1, [r1, #8]
 8008eea:	1f2a      	subs	r2, r5, #4
 8008eec:	2a24      	cmp	r2, #36	; 0x24
 8008eee:	60cb      	str	r3, [r1, #12]
 8008ef0:	6099      	str	r1, [r3, #8]
 8008ef2:	f8db 300c 	ldr.w	r3, [fp, #12]
 8008ef6:	f858 1f08 	ldr.w	r1, [r8, #8]!
 8008efa:	60cb      	str	r3, [r1, #12]
 8008efc:	6099      	str	r1, [r3, #8]
 8008efe:	f200 816a 	bhi.w	80091d6 <_realloc_r+0x3c6>
 8008f02:	2a13      	cmp	r2, #19
 8008f04:	bf98      	it	ls
 8008f06:	4642      	movls	r2, r8
 8008f08:	d923      	bls.n	8008f52 <_realloc_r+0x142>
 8008f0a:	6823      	ldr	r3, [r4, #0]
 8008f0c:	2a1b      	cmp	r2, #27
 8008f0e:	bf98      	it	ls
 8008f10:	f10b 0210 	addls.w	r2, fp, #16
 8008f14:	f8cb 3008 	str.w	r3, [fp, #8]
 8008f18:	6863      	ldr	r3, [r4, #4]
 8008f1a:	bf98      	it	ls
 8008f1c:	3408      	addls	r4, #8
 8008f1e:	f8cb 300c 	str.w	r3, [fp, #12]
 8008f22:	d916      	bls.n	8008f52 <_realloc_r+0x142>
 8008f24:	68a3      	ldr	r3, [r4, #8]
 8008f26:	2a24      	cmp	r2, #36	; 0x24
 8008f28:	bf14      	ite	ne
 8008f2a:	f10b 0218 	addne.w	r2, fp, #24
 8008f2e:	f10b 0220 	addeq.w	r2, fp, #32
 8008f32:	f8cb 3010 	str.w	r3, [fp, #16]
 8008f36:	68e3      	ldr	r3, [r4, #12]
 8008f38:	bf18      	it	ne
 8008f3a:	3410      	addne	r4, #16
 8008f3c:	f8cb 3014 	str.w	r3, [fp, #20]
 8008f40:	bf01      	itttt	eq
 8008f42:	6923      	ldreq	r3, [r4, #16]
 8008f44:	f8cb 3018 	streq.w	r3, [fp, #24]
 8008f48:	6963      	ldreq	r3, [r4, #20]
 8008f4a:	3418      	addeq	r4, #24
 8008f4c:	bf08      	it	eq
 8008f4e:	f8cb 301c 	streq.w	r3, [fp, #28]
 8008f52:	6823      	ldr	r3, [r4, #0]
 8008f54:	4675      	mov	r5, lr
 8008f56:	465f      	mov	r7, fp
 8008f58:	6013      	str	r3, [r2, #0]
 8008f5a:	6863      	ldr	r3, [r4, #4]
 8008f5c:	6053      	str	r3, [r2, #4]
 8008f5e:	68a3      	ldr	r3, [r4, #8]
 8008f60:	6093      	str	r3, [r2, #8]
 8008f62:	f8db 0004 	ldr.w	r0, [fp, #4]
 8008f66:	e77c      	b.n	8008e62 <_realloc_r+0x52>
 8008f68:	f02e 0e03 	bic.w	lr, lr, #3
 8008f6c:	eb0e 0305 	add.w	r3, lr, r5
 8008f70:	4293      	cmp	r3, r2
 8008f72:	dba2      	blt.n	8008eba <_realloc_r+0xaa>
 8008f74:	68ca      	ldr	r2, [r1, #12]
 8008f76:	46a0      	mov	r8, r4
 8008f78:	6889      	ldr	r1, [r1, #8]
 8008f7a:	4660      	mov	r0, ip
 8008f7c:	461d      	mov	r5, r3
 8008f7e:	60ca      	str	r2, [r1, #12]
 8008f80:	6091      	str	r1, [r2, #8]
 8008f82:	e76e      	b.n	8008e62 <_realloc_r+0x52>
 8008f84:	4293      	cmp	r3, r2
 8008f86:	db4f      	blt.n	8009028 <_realloc_r+0x218>
 8008f88:	46d8      	mov	r8, fp
 8008f8a:	f8db 100c 	ldr.w	r1, [fp, #12]
 8008f8e:	1f2a      	subs	r2, r5, #4
 8008f90:	f858 0f08 	ldr.w	r0, [r8, #8]!
 8008f94:	2a24      	cmp	r2, #36	; 0x24
 8008f96:	60c1      	str	r1, [r0, #12]
 8008f98:	6088      	str	r0, [r1, #8]
 8008f9a:	f200 80b4 	bhi.w	8009106 <_realloc_r+0x2f6>
 8008f9e:	2a13      	cmp	r2, #19
 8008fa0:	bf98      	it	ls
 8008fa2:	4641      	movls	r1, r8
 8008fa4:	d922      	bls.n	8008fec <_realloc_r+0x1dc>
 8008fa6:	6821      	ldr	r1, [r4, #0]
 8008fa8:	2a1b      	cmp	r2, #27
 8008faa:	f8cb 1008 	str.w	r1, [fp, #8]
 8008fae:	6861      	ldr	r1, [r4, #4]
 8008fb0:	bf98      	it	ls
 8008fb2:	3408      	addls	r4, #8
 8008fb4:	f8cb 100c 	str.w	r1, [fp, #12]
 8008fb8:	bf98      	it	ls
 8008fba:	f10b 0110 	addls.w	r1, fp, #16
 8008fbe:	d915      	bls.n	8008fec <_realloc_r+0x1dc>
 8008fc0:	68a1      	ldr	r1, [r4, #8]
 8008fc2:	2a24      	cmp	r2, #36	; 0x24
 8008fc4:	f8cb 1010 	str.w	r1, [fp, #16]
 8008fc8:	68e1      	ldr	r1, [r4, #12]
 8008fca:	bf18      	it	ne
 8008fcc:	3410      	addne	r4, #16
 8008fce:	f8cb 1014 	str.w	r1, [fp, #20]
 8008fd2:	bf11      	iteee	ne
 8008fd4:	f10b 0118 	addne.w	r1, fp, #24
 8008fd8:	6922      	ldreq	r2, [r4, #16]
 8008fda:	f10b 0120 	addeq.w	r1, fp, #32
 8008fde:	f8cb 2018 	streq.w	r2, [fp, #24]
 8008fe2:	bf02      	ittt	eq
 8008fe4:	6962      	ldreq	r2, [r4, #20]
 8008fe6:	3418      	addeq	r4, #24
 8008fe8:	f8cb 201c 	streq.w	r2, [fp, #28]
 8008fec:	6822      	ldr	r2, [r4, #0]
 8008fee:	461d      	mov	r5, r3
 8008ff0:	465f      	mov	r7, fp
 8008ff2:	600a      	str	r2, [r1, #0]
 8008ff4:	6863      	ldr	r3, [r4, #4]
 8008ff6:	604b      	str	r3, [r1, #4]
 8008ff8:	68a3      	ldr	r3, [r4, #8]
 8008ffa:	608b      	str	r3, [r1, #8]
 8008ffc:	f8db 0004 	ldr.w	r0, [fp, #4]
 8009000:	e72f      	b.n	8008e62 <_realloc_r+0x52>
 8009002:	19b9      	adds	r1, r7, r6
 8009004:	f000 0c01 	and.w	ip, r0, #1
 8009008:	18ca      	adds	r2, r1, r3
 800900a:	ea4c 0606 	orr.w	r6, ip, r6
 800900e:	f043 0301 	orr.w	r3, r3, #1
 8009012:	607e      	str	r6, [r7, #4]
 8009014:	604b      	str	r3, [r1, #4]
 8009016:	4648      	mov	r0, r9
 8009018:	6853      	ldr	r3, [r2, #4]
 800901a:	3108      	adds	r1, #8
 800901c:	f043 0301 	orr.w	r3, r3, #1
 8009020:	6053      	str	r3, [r2, #4]
 8009022:	f7ff fdc1 	bl	8008ba8 <_free_r>
 8009026:	e72a      	b.n	8008e7e <_realloc_r+0x6e>
 8009028:	4641      	mov	r1, r8
 800902a:	4648      	mov	r0, r9
 800902c:	f7fd fe1e 	bl	8006c6c <_malloc_r>
 8009030:	4680      	mov	r8, r0
 8009032:	2800      	cmp	r0, #0
 8009034:	f43f af23 	beq.w	8008e7e <_realloc_r+0x6e>
 8009038:	f854 3c04 	ldr.w	r3, [r4, #-4]
 800903c:	f1a0 0108 	sub.w	r1, r0, #8
 8009040:	f023 0201 	bic.w	r2, r3, #1
 8009044:	443a      	add	r2, r7
 8009046:	4291      	cmp	r1, r2
 8009048:	f000 80bd 	beq.w	80091c6 <_realloc_r+0x3b6>
 800904c:	1f2a      	subs	r2, r5, #4
 800904e:	2a24      	cmp	r2, #36	; 0x24
 8009050:	d862      	bhi.n	8009118 <_realloc_r+0x308>
 8009052:	2a13      	cmp	r2, #19
 8009054:	bf9c      	itt	ls
 8009056:	4603      	movls	r3, r0
 8009058:	4622      	movls	r2, r4
 800905a:	d91f      	bls.n	800909c <_realloc_r+0x28c>
 800905c:	6823      	ldr	r3, [r4, #0]
 800905e:	2a1b      	cmp	r2, #27
 8009060:	bf98      	it	ls
 8009062:	f104 0208 	addls.w	r2, r4, #8
 8009066:	6003      	str	r3, [r0, #0]
 8009068:	6863      	ldr	r3, [r4, #4]
 800906a:	6043      	str	r3, [r0, #4]
 800906c:	bf98      	it	ls
 800906e:	f100 0308 	addls.w	r3, r0, #8
 8009072:	d913      	bls.n	800909c <_realloc_r+0x28c>
 8009074:	68a3      	ldr	r3, [r4, #8]
 8009076:	2a24      	cmp	r2, #36	; 0x24
 8009078:	bf14      	ite	ne
 800907a:	f104 0210 	addne.w	r2, r4, #16
 800907e:	f104 0218 	addeq.w	r2, r4, #24
 8009082:	6083      	str	r3, [r0, #8]
 8009084:	68e3      	ldr	r3, [r4, #12]
 8009086:	60c3      	str	r3, [r0, #12]
 8009088:	bf11      	iteee	ne
 800908a:	f100 0310 	addne.w	r3, r0, #16
 800908e:	6921      	ldreq	r1, [r4, #16]
 8009090:	f100 0318 	addeq.w	r3, r0, #24
 8009094:	6101      	streq	r1, [r0, #16]
 8009096:	bf04      	itt	eq
 8009098:	6961      	ldreq	r1, [r4, #20]
 800909a:	6141      	streq	r1, [r0, #20]
 800909c:	6811      	ldr	r1, [r2, #0]
 800909e:	6019      	str	r1, [r3, #0]
 80090a0:	6851      	ldr	r1, [r2, #4]
 80090a2:	6059      	str	r1, [r3, #4]
 80090a4:	6892      	ldr	r2, [r2, #8]
 80090a6:	609a      	str	r2, [r3, #8]
 80090a8:	4621      	mov	r1, r4
 80090aa:	4648      	mov	r0, r9
 80090ac:	f7ff fd7c 	bl	8008ba8 <_free_r>
 80090b0:	e6e5      	b.n	8008e7e <_realloc_r+0x6e>
 80090b2:	4611      	mov	r1, r2
 80090b4:	b003      	add	sp, #12
 80090b6:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80090ba:	f7fd bdd7 	b.w	8006c6c <_malloc_r>
 80090be:	230c      	movs	r3, #12
 80090c0:	2000      	movs	r0, #0
 80090c2:	f8c9 3000 	str.w	r3, [r9]
 80090c6:	e6de      	b.n	8008e86 <_realloc_r+0x76>
 80090c8:	6843      	ldr	r3, [r0, #4]
 80090ca:	f106 0110 	add.w	r1, r6, #16
 80090ce:	f023 0e03 	bic.w	lr, r3, #3
 80090d2:	eb0e 0305 	add.w	r3, lr, r5
 80090d6:	428b      	cmp	r3, r1
 80090d8:	bfb8      	it	lt
 80090da:	4601      	movlt	r1, r0
 80090dc:	f6ff aeed 	blt.w	8008eba <_realloc_r+0xaa>
 80090e0:	4437      	add	r7, r6
 80090e2:	1b9b      	subs	r3, r3, r6
 80090e4:	f8ca 7008 	str.w	r7, [sl, #8]
 80090e8:	f043 0301 	orr.w	r3, r3, #1
 80090ec:	607b      	str	r3, [r7, #4]
 80090ee:	4648      	mov	r0, r9
 80090f0:	f854 3c04 	ldr.w	r3, [r4, #-4]
 80090f4:	f003 0301 	and.w	r3, r3, #1
 80090f8:	431e      	orrs	r6, r3
 80090fa:	f844 6c04 	str.w	r6, [r4, #-4]
 80090fe:	f7fe f8b7 	bl	8007270 <__malloc_unlock>
 8009102:	4620      	mov	r0, r4
 8009104:	e6bf      	b.n	8008e86 <_realloc_r+0x76>
 8009106:	4621      	mov	r1, r4
 8009108:	4640      	mov	r0, r8
 800910a:	461d      	mov	r5, r3
 800910c:	465f      	mov	r7, fp
 800910e:	f7ff fe17 	bl	8008d40 <memmove>
 8009112:	f8db 0004 	ldr.w	r0, [fp, #4]
 8009116:	e6a4      	b.n	8008e62 <_realloc_r+0x52>
 8009118:	4621      	mov	r1, r4
 800911a:	f7ff fe11 	bl	8008d40 <memmove>
 800911e:	e7c3      	b.n	80090a8 <_realloc_r+0x298>
 8009120:	f106 0110 	add.w	r1, r6, #16
 8009124:	eb0e 0c03 	add.w	ip, lr, r3
 8009128:	458c      	cmp	ip, r1
 800912a:	f6ff af2b 	blt.w	8008f84 <_realloc_r+0x174>
 800912e:	46d8      	mov	r8, fp
 8009130:	f8db 300c 	ldr.w	r3, [fp, #12]
 8009134:	1f2a      	subs	r2, r5, #4
 8009136:	f858 1f08 	ldr.w	r1, [r8, #8]!
 800913a:	2a24      	cmp	r2, #36	; 0x24
 800913c:	60cb      	str	r3, [r1, #12]
 800913e:	6099      	str	r1, [r3, #8]
 8009140:	d852      	bhi.n	80091e8 <_realloc_r+0x3d8>
 8009142:	2a13      	cmp	r2, #19
 8009144:	bf98      	it	ls
 8009146:	4643      	movls	r3, r8
 8009148:	d922      	bls.n	8009190 <_realloc_r+0x380>
 800914a:	6823      	ldr	r3, [r4, #0]
 800914c:	2a1b      	cmp	r2, #27
 800914e:	f8cb 3008 	str.w	r3, [fp, #8]
 8009152:	6863      	ldr	r3, [r4, #4]
 8009154:	bf98      	it	ls
 8009156:	3408      	addls	r4, #8
 8009158:	f8cb 300c 	str.w	r3, [fp, #12]
 800915c:	bf98      	it	ls
 800915e:	f10b 0310 	addls.w	r3, fp, #16
 8009162:	d915      	bls.n	8009190 <_realloc_r+0x380>
 8009164:	68a3      	ldr	r3, [r4, #8]
 8009166:	2a24      	cmp	r2, #36	; 0x24
 8009168:	f8cb 3010 	str.w	r3, [fp, #16]
 800916c:	68e3      	ldr	r3, [r4, #12]
 800916e:	bf18      	it	ne
 8009170:	3410      	addne	r4, #16
 8009172:	f8cb 3014 	str.w	r3, [fp, #20]
 8009176:	bf11      	iteee	ne
 8009178:	f10b 0318 	addne.w	r3, fp, #24
 800917c:	6922      	ldreq	r2, [r4, #16]
 800917e:	f10b 0320 	addeq.w	r3, fp, #32
 8009182:	f8cb 2018 	streq.w	r2, [fp, #24]
 8009186:	bf02      	ittt	eq
 8009188:	6962      	ldreq	r2, [r4, #20]
 800918a:	3418      	addeq	r4, #24
 800918c:	f8cb 201c 	streq.w	r2, [fp, #28]
 8009190:	6822      	ldr	r2, [r4, #0]
 8009192:	601a      	str	r2, [r3, #0]
 8009194:	6862      	ldr	r2, [r4, #4]
 8009196:	605a      	str	r2, [r3, #4]
 8009198:	68a2      	ldr	r2, [r4, #8]
 800919a:	609a      	str	r2, [r3, #8]
 800919c:	eb0b 0306 	add.w	r3, fp, r6
 80091a0:	ebc6 020c 	rsb	r2, r6, ip
 80091a4:	f8ca 3008 	str.w	r3, [sl, #8]
 80091a8:	f042 0201 	orr.w	r2, r2, #1
 80091ac:	605a      	str	r2, [r3, #4]
 80091ae:	4648      	mov	r0, r9
 80091b0:	f8db 3004 	ldr.w	r3, [fp, #4]
 80091b4:	f003 0301 	and.w	r3, r3, #1
 80091b8:	431e      	orrs	r6, r3
 80091ba:	f8cb 6004 	str.w	r6, [fp, #4]
 80091be:	f7fe f857 	bl	8007270 <__malloc_unlock>
 80091c2:	4640      	mov	r0, r8
 80091c4:	e65f      	b.n	8008e86 <_realloc_r+0x76>
 80091c6:	f850 2c04 	ldr.w	r2, [r0, #-4]
 80091ca:	4618      	mov	r0, r3
 80091cc:	46a0      	mov	r8, r4
 80091ce:	f022 0303 	bic.w	r3, r2, #3
 80091d2:	441d      	add	r5, r3
 80091d4:	e645      	b.n	8008e62 <_realloc_r+0x52>
 80091d6:	4621      	mov	r1, r4
 80091d8:	4640      	mov	r0, r8
 80091da:	4675      	mov	r5, lr
 80091dc:	465f      	mov	r7, fp
 80091de:	f7ff fdaf 	bl	8008d40 <memmove>
 80091e2:	f8db 0004 	ldr.w	r0, [fp, #4]
 80091e6:	e63c      	b.n	8008e62 <_realloc_r+0x52>
 80091e8:	4621      	mov	r1, r4
 80091ea:	4640      	mov	r0, r8
 80091ec:	f8cd c004 	str.w	ip, [sp, #4]
 80091f0:	f7ff fda6 	bl	8008d40 <memmove>
 80091f4:	f8dd c004 	ldr.w	ip, [sp, #4]
 80091f8:	e7d0      	b.n	800919c <_realloc_r+0x38c>
 80091fa:	bf00      	nop

080091fc <cleanup_glue>:
 80091fc:	b538      	push	{r3, r4, r5, lr}
 80091fe:	460c      	mov	r4, r1
 8009200:	6809      	ldr	r1, [r1, #0]
 8009202:	4605      	mov	r5, r0
 8009204:	b109      	cbz	r1, 800920a <cleanup_glue+0xe>
 8009206:	f7ff fff9 	bl	80091fc <cleanup_glue>
 800920a:	4628      	mov	r0, r5
 800920c:	4621      	mov	r1, r4
 800920e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 8009212:	f7ff bcc9 	b.w	8008ba8 <_free_r>
 8009216:	bf00      	nop

08009218 <_reclaim_reent>:
 8009218:	f240 0304 	movw	r3, #4
 800921c:	f2c2 0300 	movt	r3, #8192	; 0x2000
 8009220:	b570      	push	{r4, r5, r6, lr}
 8009222:	4605      	mov	r5, r0
 8009224:	681b      	ldr	r3, [r3, #0]
 8009226:	4298      	cmp	r0, r3
 8009228:	d054      	beq.n	80092d4 <_reclaim_reent+0xbc>
 800922a:	6a43      	ldr	r3, [r0, #36]	; 0x24
 800922c:	b1f3      	cbz	r3, 800926c <_reclaim_reent+0x54>
 800922e:	68da      	ldr	r2, [r3, #12]
 8009230:	b1ba      	cbz	r2, 8009262 <_reclaim_reent+0x4a>
 8009232:	2300      	movs	r3, #0
 8009234:	461e      	mov	r6, r3
 8009236:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 800923a:	b909      	cbnz	r1, 8009240 <_reclaim_reent+0x28>
 800923c:	e008      	b.n	8009250 <_reclaim_reent+0x38>
 800923e:	4621      	mov	r1, r4
 8009240:	680c      	ldr	r4, [r1, #0]
 8009242:	4628      	mov	r0, r5
 8009244:	f7ff fcb0 	bl	8008ba8 <_free_r>
 8009248:	2c00      	cmp	r4, #0
 800924a:	d1f8      	bne.n	800923e <_reclaim_reent+0x26>
 800924c:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 800924e:	68da      	ldr	r2, [r3, #12]
 8009250:	3601      	adds	r6, #1
 8009252:	2e20      	cmp	r6, #32
 8009254:	4633      	mov	r3, r6
 8009256:	d1ee      	bne.n	8009236 <_reclaim_reent+0x1e>
 8009258:	4611      	mov	r1, r2
 800925a:	4628      	mov	r0, r5
 800925c:	f7ff fca4 	bl	8008ba8 <_free_r>
 8009260:	6a6b      	ldr	r3, [r5, #36]	; 0x24
 8009262:	6819      	ldr	r1, [r3, #0]
 8009264:	b111      	cbz	r1, 800926c <_reclaim_reent+0x54>
 8009266:	4628      	mov	r0, r5
 8009268:	f7ff fc9e 	bl	8008ba8 <_free_r>
 800926c:	6969      	ldr	r1, [r5, #20]
 800926e:	b111      	cbz	r1, 8009276 <_reclaim_reent+0x5e>
 8009270:	4628      	mov	r0, r5
 8009272:	f7ff fc99 	bl	8008ba8 <_free_r>
 8009276:	6a69      	ldr	r1, [r5, #36]	; 0x24
 8009278:	b111      	cbz	r1, 8009280 <_reclaim_reent+0x68>
 800927a:	4628      	mov	r0, r5
 800927c:	f7ff fc94 	bl	8008ba8 <_free_r>
 8009280:	6ba9      	ldr	r1, [r5, #56]	; 0x38
 8009282:	b111      	cbz	r1, 800928a <_reclaim_reent+0x72>
 8009284:	4628      	mov	r0, r5
 8009286:	f7ff fc8f 	bl	8008ba8 <_free_r>
 800928a:	6be9      	ldr	r1, [r5, #60]	; 0x3c
 800928c:	b111      	cbz	r1, 8009294 <_reclaim_reent+0x7c>
 800928e:	4628      	mov	r0, r5
 8009290:	f7ff fc8a 	bl	8008ba8 <_free_r>
 8009294:	6c29      	ldr	r1, [r5, #64]	; 0x40
 8009296:	b111      	cbz	r1, 800929e <_reclaim_reent+0x86>
 8009298:	4628      	mov	r0, r5
 800929a:	f7ff fc85 	bl	8008ba8 <_free_r>
 800929e:	f8d5 10ec 	ldr.w	r1, [r5, #236]	; 0xec
 80092a2:	b111      	cbz	r1, 80092aa <_reclaim_reent+0x92>
 80092a4:	4628      	mov	r0, r5
 80092a6:	f7ff fc7f 	bl	8008ba8 <_free_r>
 80092aa:	f8d5 10e8 	ldr.w	r1, [r5, #232]	; 0xe8
 80092ae:	b111      	cbz	r1, 80092b6 <_reclaim_reent+0x9e>
 80092b0:	4628      	mov	r0, r5
 80092b2:	f7ff fc79 	bl	8008ba8 <_free_r>
 80092b6:	6cab      	ldr	r3, [r5, #72]	; 0x48
 80092b8:	b12b      	cbz	r3, 80092c6 <_reclaim_reent+0xae>
 80092ba:	f8d3 1088 	ldr.w	r1, [r3, #136]	; 0x88
 80092be:	b111      	cbz	r1, 80092c6 <_reclaim_reent+0xae>
 80092c0:	4628      	mov	r0, r5
 80092c2:	f7ff fc71 	bl	8008ba8 <_free_r>
 80092c6:	6b69      	ldr	r1, [r5, #52]	; 0x34
 80092c8:	b111      	cbz	r1, 80092d0 <_reclaim_reent+0xb8>
 80092ca:	4628      	mov	r0, r5
 80092cc:	f7ff fc6c 	bl	8008ba8 <_free_r>
 80092d0:	69ab      	ldr	r3, [r5, #24]
 80092d2:	b903      	cbnz	r3, 80092d6 <_reclaim_reent+0xbe>
 80092d4:	bd70      	pop	{r4, r5, r6, pc}
 80092d6:	6aab      	ldr	r3, [r5, #40]	; 0x28
 80092d8:	4628      	mov	r0, r5
 80092da:	4798      	blx	r3
 80092dc:	f8d5 10d8 	ldr.w	r1, [r5, #216]	; 0xd8
 80092e0:	2900      	cmp	r1, #0
 80092e2:	d0f7      	beq.n	80092d4 <_reclaim_reent+0xbc>
 80092e4:	4628      	mov	r0, r5
 80092e6:	e8bd 4070 	ldmia.w	sp!, {r4, r5, r6, lr}
 80092ea:	f7ff bf87 	b.w	80091fc <cleanup_glue>
 80092ee:	bf00      	nop

080092f0 <__aeabi_uidiv>:
 80092f0:	1e4a      	subs	r2, r1, #1
 80092f2:	bf08      	it	eq
 80092f4:	4770      	bxeq	lr
 80092f6:	f0c0 8124 	bcc.w	8009542 <__aeabi_uidiv+0x252>
 80092fa:	4288      	cmp	r0, r1
 80092fc:	f240 8116 	bls.w	800952c <__aeabi_uidiv+0x23c>
 8009300:	4211      	tst	r1, r2
 8009302:	f000 8117 	beq.w	8009534 <__aeabi_uidiv+0x244>
 8009306:	fab0 f380 	clz	r3, r0
 800930a:	fab1 f281 	clz	r2, r1
 800930e:	eba2 0303 	sub.w	r3, r2, r3
 8009312:	f1c3 031f 	rsb	r3, r3, #31
 8009316:	a204      	add	r2, pc, #16	; (adr r2, 8009328 <__aeabi_uidiv+0x38>)
 8009318:	eb02 1303 	add.w	r3, r2, r3, lsl #4
 800931c:	f04f 0200 	mov.w	r2, #0
 8009320:	469f      	mov	pc, r3
 8009322:	bf00      	nop
 8009324:	f3af 8000 	nop.w
 8009328:	ebb0 7fc1 	cmp.w	r0, r1, lsl #31
 800932c:	bf00      	nop
 800932e:	eb42 0202 	adc.w	r2, r2, r2
 8009332:	bf28      	it	cs
 8009334:	eba0 70c1 	subcs.w	r0, r0, r1, lsl #31
 8009338:	ebb0 7f81 	cmp.w	r0, r1, lsl #30
 800933c:	bf00      	nop
 800933e:	eb42 0202 	adc.w	r2, r2, r2
 8009342:	bf28      	it	cs
 8009344:	eba0 7081 	subcs.w	r0, r0, r1, lsl #30
 8009348:	ebb0 7f41 	cmp.w	r0, r1, lsl #29
 800934c:	bf00      	nop
 800934e:	eb42 0202 	adc.w	r2, r2, r2
 8009352:	bf28      	it	cs
 8009354:	eba0 7041 	subcs.w	r0, r0, r1, lsl #29
 8009358:	ebb0 7f01 	cmp.w	r0, r1, lsl #28
 800935c:	bf00      	nop
 800935e:	eb42 0202 	adc.w	r2, r2, r2
 8009362:	bf28      	it	cs
 8009364:	eba0 7001 	subcs.w	r0, r0, r1, lsl #28
 8009368:	ebb0 6fc1 	cmp.w	r0, r1, lsl #27
 800936c:	bf00      	nop
 800936e:	eb42 0202 	adc.w	r2, r2, r2
 8009372:	bf28      	it	cs
 8009374:	eba0 60c1 	subcs.w	r0, r0, r1, lsl #27
 8009378:	ebb0 6f81 	cmp.w	r0, r1, lsl #26
 800937c:	bf00      	nop
 800937e:	eb42 0202 	adc.w	r2, r2, r2
 8009382:	bf28      	it	cs
 8009384:	eba0 6081 	subcs.w	r0, r0, r1, lsl #26
 8009388:	ebb0 6f41 	cmp.w	r0, r1, lsl #25
 800938c:	bf00      	nop
 800938e:	eb42 0202 	adc.w	r2, r2, r2
 8009392:	bf28      	it	cs
 8009394:	eba0 6041 	subcs.w	r0, r0, r1, lsl #25
 8009398:	ebb0 6f01 	cmp.w	r0, r1, lsl #24
 800939c:	bf00      	nop
 800939e:	eb42 0202 	adc.w	r2, r2, r2
 80093a2:	bf28      	it	cs
 80093a4:	eba0 6001 	subcs.w	r0, r0, r1, lsl #24
 80093a8:	ebb0 5fc1 	cmp.w	r0, r1, lsl #23
 80093ac:	bf00      	nop
 80093ae:	eb42 0202 	adc.w	r2, r2, r2
 80093b2:	bf28      	it	cs
 80093b4:	eba0 50c1 	subcs.w	r0, r0, r1, lsl #23
 80093b8:	ebb0 5f81 	cmp.w	r0, r1, lsl #22
 80093bc:	bf00      	nop
 80093be:	eb42 0202 	adc.w	r2, r2, r2
 80093c2:	bf28      	it	cs
 80093c4:	eba0 5081 	subcs.w	r0, r0, r1, lsl #22
 80093c8:	ebb0 5f41 	cmp.w	r0, r1, lsl #21
 80093cc:	bf00      	nop
 80093ce:	eb42 0202 	adc.w	r2, r2, r2
 80093d2:	bf28      	it	cs
 80093d4:	eba0 5041 	subcs.w	r0, r0, r1, lsl #21
 80093d8:	ebb0 5f01 	cmp.w	r0, r1, lsl #20
 80093dc:	bf00      	nop
 80093de:	eb42 0202 	adc.w	r2, r2, r2
 80093e2:	bf28      	it	cs
 80093e4:	eba0 5001 	subcs.w	r0, r0, r1, lsl #20
 80093e8:	ebb0 4fc1 	cmp.w	r0, r1, lsl #19
 80093ec:	bf00      	nop
 80093ee:	eb42 0202 	adc.w	r2, r2, r2
 80093f2:	bf28      	it	cs
 80093f4:	eba0 40c1 	subcs.w	r0, r0, r1, lsl #19
 80093f8:	ebb0 4f81 	cmp.w	r0, r1, lsl #18
 80093fc:	bf00      	nop
 80093fe:	eb42 0202 	adc.w	r2, r2, r2
 8009402:	bf28      	it	cs
 8009404:	eba0 4081 	subcs.w	r0, r0, r1, lsl #18
 8009408:	ebb0 4f41 	cmp.w	r0, r1, lsl #17
 800940c:	bf00      	nop
 800940e:	eb42 0202 	adc.w	r2, r2, r2
 8009412:	bf28      	it	cs
 8009414:	eba0 4041 	subcs.w	r0, r0, r1, lsl #17
 8009418:	ebb0 4f01 	cmp.w	r0, r1, lsl #16
 800941c:	bf00      	nop
 800941e:	eb42 0202 	adc.w	r2, r2, r2
 8009422:	bf28      	it	cs
 8009424:	eba0 4001 	subcs.w	r0, r0, r1, lsl #16
 8009428:	ebb0 3fc1 	cmp.w	r0, r1, lsl #15
 800942c:	bf00      	nop
 800942e:	eb42 0202 	adc.w	r2, r2, r2
 8009432:	bf28      	it	cs
 8009434:	eba0 30c1 	subcs.w	r0, r0, r1, lsl #15
 8009438:	ebb0 3f81 	cmp.w	r0, r1, lsl #14
 800943c:	bf00      	nop
 800943e:	eb42 0202 	adc.w	r2, r2, r2
 8009442:	bf28      	it	cs
 8009444:	eba0 3081 	subcs.w	r0, r0, r1, lsl #14
 8009448:	ebb0 3f41 	cmp.w	r0, r1, lsl #13
 800944c:	bf00      	nop
 800944e:	eb42 0202 	adc.w	r2, r2, r2
 8009452:	bf28      	it	cs
 8009454:	eba0 3041 	subcs.w	r0, r0, r1, lsl #13
 8009458:	ebb0 3f01 	cmp.w	r0, r1, lsl #12
 800945c:	bf00      	nop
 800945e:	eb42 0202 	adc.w	r2, r2, r2
 8009462:	bf28      	it	cs
 8009464:	eba0 3001 	subcs.w	r0, r0, r1, lsl #12
 8009468:	ebb0 2fc1 	cmp.w	r0, r1, lsl #11
 800946c:	bf00      	nop
 800946e:	eb42 0202 	adc.w	r2, r2, r2
 8009472:	bf28      	it	cs
 8009474:	eba0 20c1 	subcs.w	r0, r0, r1, lsl #11
 8009478:	ebb0 2f81 	cmp.w	r0, r1, lsl #10
 800947c:	bf00      	nop
 800947e:	eb42 0202 	adc.w	r2, r2, r2
 8009482:	bf28      	it	cs
 8009484:	eba0 2081 	subcs.w	r0, r0, r1, lsl #10
 8009488:	ebb0 2f41 	cmp.w	r0, r1, lsl #9
 800948c:	bf00      	nop
 800948e:	eb42 0202 	adc.w	r2, r2, r2
 8009492:	bf28      	it	cs
 8009494:	eba0 2041 	subcs.w	r0, r0, r1, lsl #9
 8009498:	ebb0 2f01 	cmp.w	r0, r1, lsl #8
 800949c:	bf00      	nop
 800949e:	eb42 0202 	adc.w	r2, r2, r2
 80094a2:	bf28      	it	cs
 80094a4:	eba0 2001 	subcs.w	r0, r0, r1, lsl #8
 80094a8:	ebb0 1fc1 	cmp.w	r0, r1, lsl #7
 80094ac:	bf00      	nop
 80094ae:	eb42 0202 	adc.w	r2, r2, r2
 80094b2:	bf28      	it	cs
 80094b4:	eba0 10c1 	subcs.w	r0, r0, r1, lsl #7
 80094b8:	ebb0 1f81 	cmp.w	r0, r1, lsl #6
 80094bc:	bf00      	nop
 80094be:	eb42 0202 	adc.w	r2, r2, r2
 80094c2:	bf28      	it	cs
 80094c4:	eba0 1081 	subcs.w	r0, r0, r1, lsl #6
 80094c8:	ebb0 1f41 	cmp.w	r0, r1, lsl #5
 80094cc:	bf00      	nop
 80094ce:	eb42 0202 	adc.w	r2, r2, r2
 80094d2:	bf28      	it	cs
 80094d4:	eba0 1041 	subcs.w	r0, r0, r1, lsl #5
 80094d8:	ebb0 1f01 	cmp.w	r0, r1, lsl #4
 80094dc:	bf00      	nop
 80094de:	eb42 0202 	adc.w	r2, r2, r2
 80094e2:	bf28      	it	cs
 80094e4:	eba0 1001 	subcs.w	r0, r0, r1, lsl #4
 80094e8:	ebb0 0fc1 	cmp.w	r0, r1, lsl #3
 80094ec:	bf00      	nop
 80094ee:	eb42 0202 	adc.w	r2, r2, r2
 80094f2:	bf28      	it	cs
 80094f4:	eba0 00c1 	subcs.w	r0, r0, r1, lsl #3
 80094f8:	ebb0 0f81 	cmp.w	r0, r1, lsl #2
 80094fc:	bf00      	nop
 80094fe:	eb42 0202 	adc.w	r2, r2, r2
 8009502:	bf28      	it	cs
 8009504:	eba0 0081 	subcs.w	r0, r0, r1, lsl #2
 8009508:	ebb0 0f41 	cmp.w	r0, r1, lsl #1
 800950c:	bf00      	nop
 800950e:	eb42 0202 	adc.w	r2, r2, r2
 8009512:	bf28      	it	cs
 8009514:	eba0 0041 	subcs.w	r0, r0, r1, lsl #1
 8009518:	ebb0 0f01 	cmp.w	r0, r1
 800951c:	bf00      	nop
 800951e:	eb42 0202 	adc.w	r2, r2, r2
 8009522:	bf28      	it	cs
 8009524:	eba0 0001 	subcs.w	r0, r0, r1
 8009528:	4610      	mov	r0, r2
 800952a:	4770      	bx	lr
 800952c:	bf0c      	ite	eq
 800952e:	2001      	moveq	r0, #1
 8009530:	2000      	movne	r0, #0
 8009532:	4770      	bx	lr
 8009534:	fab1 f281 	clz	r2, r1
 8009538:	f1c2 021f 	rsb	r2, r2, #31
 800953c:	fa20 f002 	lsr.w	r0, r0, r2
 8009540:	4770      	bx	lr
 8009542:	b108      	cbz	r0, 8009548 <__aeabi_uidiv+0x258>
 8009544:	f04f 30ff 	mov.w	r0, #4294967295
 8009548:	f000 b80e 	b.w	8009568 <__aeabi_idiv0>

0800954c <__aeabi_uidivmod>:
 800954c:	2900      	cmp	r1, #0
 800954e:	d0f8      	beq.n	8009542 <__aeabi_uidiv+0x252>
 8009550:	e92d 4003 	stmdb	sp!, {r0, r1, lr}
 8009554:	f7ff fecc 	bl	80092f0 <__aeabi_uidiv>
 8009558:	e8bd 4006 	ldmia.w	sp!, {r1, r2, lr}
 800955c:	fb02 f300 	mul.w	r3, r2, r0
 8009560:	eba1 0103 	sub.w	r1, r1, r3
 8009564:	4770      	bx	lr
 8009566:	bf00      	nop

08009568 <__aeabi_idiv0>:
 8009568:	4770      	bx	lr
 800956a:	bf00      	nop

0800956c <__aeabi_drsub>:
 800956c:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8009570:	e002      	b.n	8009578 <__adddf3>
 8009572:	bf00      	nop

08009574 <__aeabi_dsub>:
 8009574:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08009578 <__adddf3>:
 8009578:	b530      	push	{r4, r5, lr}
 800957a:	ea4f 0441 	mov.w	r4, r1, lsl #1
 800957e:	ea4f 0543 	mov.w	r5, r3, lsl #1
 8009582:	ea94 0f05 	teq	r4, r5
 8009586:	bf08      	it	eq
 8009588:	ea90 0f02 	teqeq	r0, r2
 800958c:	bf1f      	itttt	ne
 800958e:	ea54 0c00 	orrsne.w	ip, r4, r0
 8009592:	ea55 0c02 	orrsne.w	ip, r5, r2
 8009596:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 800959a:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 800959e:	f000 80e2 	beq.w	8009766 <__adddf3+0x1ee>
 80095a2:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80095a6:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80095aa:	bfb8      	it	lt
 80095ac:	426d      	neglt	r5, r5
 80095ae:	dd0c      	ble.n	80095ca <__adddf3+0x52>
 80095b0:	442c      	add	r4, r5
 80095b2:	ea80 0202 	eor.w	r2, r0, r2
 80095b6:	ea81 0303 	eor.w	r3, r1, r3
 80095ba:	ea82 0000 	eor.w	r0, r2, r0
 80095be:	ea83 0101 	eor.w	r1, r3, r1
 80095c2:	ea80 0202 	eor.w	r2, r0, r2
 80095c6:	ea81 0303 	eor.w	r3, r1, r3
 80095ca:	2d36      	cmp	r5, #54	; 0x36
 80095cc:	bf88      	it	hi
 80095ce:	bd30      	pophi	{r4, r5, pc}
 80095d0:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80095d4:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80095d8:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 80095dc:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 80095e0:	d002      	beq.n	80095e8 <__adddf3+0x70>
 80095e2:	4240      	negs	r0, r0
 80095e4:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80095e8:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80095ec:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80095f0:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80095f4:	d002      	beq.n	80095fc <__adddf3+0x84>
 80095f6:	4252      	negs	r2, r2
 80095f8:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80095fc:	ea94 0f05 	teq	r4, r5
 8009600:	f000 80a7 	beq.w	8009752 <__adddf3+0x1da>
 8009604:	f1a4 0401 	sub.w	r4, r4, #1
 8009608:	f1d5 0e20 	rsbs	lr, r5, #32
 800960c:	db0d      	blt.n	800962a <__adddf3+0xb2>
 800960e:	fa02 fc0e 	lsl.w	ip, r2, lr
 8009612:	fa22 f205 	lsr.w	r2, r2, r5
 8009616:	1880      	adds	r0, r0, r2
 8009618:	f141 0100 	adc.w	r1, r1, #0
 800961c:	fa03 f20e 	lsl.w	r2, r3, lr
 8009620:	1880      	adds	r0, r0, r2
 8009622:	fa43 f305 	asr.w	r3, r3, r5
 8009626:	4159      	adcs	r1, r3
 8009628:	e00e      	b.n	8009648 <__adddf3+0xd0>
 800962a:	f1a5 0520 	sub.w	r5, r5, #32
 800962e:	f10e 0e20 	add.w	lr, lr, #32
 8009632:	2a01      	cmp	r2, #1
 8009634:	fa03 fc0e 	lsl.w	ip, r3, lr
 8009638:	bf28      	it	cs
 800963a:	f04c 0c02 	orrcs.w	ip, ip, #2
 800963e:	fa43 f305 	asr.w	r3, r3, r5
 8009642:	18c0      	adds	r0, r0, r3
 8009644:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8009648:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 800964c:	d507      	bpl.n	800965e <__adddf3+0xe6>
 800964e:	f04f 0e00 	mov.w	lr, #0
 8009652:	f1dc 0c00 	rsbs	ip, ip, #0
 8009656:	eb7e 0000 	sbcs.w	r0, lr, r0
 800965a:	eb6e 0101 	sbc.w	r1, lr, r1
 800965e:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8009662:	d31b      	bcc.n	800969c <__adddf3+0x124>
 8009664:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8009668:	d30c      	bcc.n	8009684 <__adddf3+0x10c>
 800966a:	0849      	lsrs	r1, r1, #1
 800966c:	ea5f 0030 	movs.w	r0, r0, rrx
 8009670:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8009674:	f104 0401 	add.w	r4, r4, #1
 8009678:	ea4f 5244 	mov.w	r2, r4, lsl #21
 800967c:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8009680:	f080 809a 	bcs.w	80097b8 <__adddf3+0x240>
 8009684:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8009688:	bf08      	it	eq
 800968a:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800968e:	f150 0000 	adcs.w	r0, r0, #0
 8009692:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8009696:	ea41 0105 	orr.w	r1, r1, r5
 800969a:	bd30      	pop	{r4, r5, pc}
 800969c:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80096a0:	4140      	adcs	r0, r0
 80096a2:	eb41 0101 	adc.w	r1, r1, r1
 80096a6:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80096aa:	f1a4 0401 	sub.w	r4, r4, #1
 80096ae:	d1e9      	bne.n	8009684 <__adddf3+0x10c>
 80096b0:	f091 0f00 	teq	r1, #0
 80096b4:	bf04      	itt	eq
 80096b6:	4601      	moveq	r1, r0
 80096b8:	2000      	moveq	r0, #0
 80096ba:	fab1 f381 	clz	r3, r1
 80096be:	bf08      	it	eq
 80096c0:	3320      	addeq	r3, #32
 80096c2:	f1a3 030b 	sub.w	r3, r3, #11
 80096c6:	f1b3 0220 	subs.w	r2, r3, #32
 80096ca:	da0c      	bge.n	80096e6 <__adddf3+0x16e>
 80096cc:	320c      	adds	r2, #12
 80096ce:	dd08      	ble.n	80096e2 <__adddf3+0x16a>
 80096d0:	f102 0c14 	add.w	ip, r2, #20
 80096d4:	f1c2 020c 	rsb	r2, r2, #12
 80096d8:	fa01 f00c 	lsl.w	r0, r1, ip
 80096dc:	fa21 f102 	lsr.w	r1, r1, r2
 80096e0:	e00c      	b.n	80096fc <__adddf3+0x184>
 80096e2:	f102 0214 	add.w	r2, r2, #20
 80096e6:	bfd8      	it	le
 80096e8:	f1c2 0c20 	rsble	ip, r2, #32
 80096ec:	fa01 f102 	lsl.w	r1, r1, r2
 80096f0:	fa20 fc0c 	lsr.w	ip, r0, ip
 80096f4:	bfdc      	itt	le
 80096f6:	ea41 010c 	orrle.w	r1, r1, ip
 80096fa:	4090      	lslle	r0, r2
 80096fc:	1ae4      	subs	r4, r4, r3
 80096fe:	bfa2      	ittt	ge
 8009700:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8009704:	4329      	orrge	r1, r5
 8009706:	bd30      	popge	{r4, r5, pc}
 8009708:	ea6f 0404 	mvn.w	r4, r4
 800970c:	3c1f      	subs	r4, #31
 800970e:	da1c      	bge.n	800974a <__adddf3+0x1d2>
 8009710:	340c      	adds	r4, #12
 8009712:	dc0e      	bgt.n	8009732 <__adddf3+0x1ba>
 8009714:	f104 0414 	add.w	r4, r4, #20
 8009718:	f1c4 0220 	rsb	r2, r4, #32
 800971c:	fa20 f004 	lsr.w	r0, r0, r4
 8009720:	fa01 f302 	lsl.w	r3, r1, r2
 8009724:	ea40 0003 	orr.w	r0, r0, r3
 8009728:	fa21 f304 	lsr.w	r3, r1, r4
 800972c:	ea45 0103 	orr.w	r1, r5, r3
 8009730:	bd30      	pop	{r4, r5, pc}
 8009732:	f1c4 040c 	rsb	r4, r4, #12
 8009736:	f1c4 0220 	rsb	r2, r4, #32
 800973a:	fa20 f002 	lsr.w	r0, r0, r2
 800973e:	fa01 f304 	lsl.w	r3, r1, r4
 8009742:	ea40 0003 	orr.w	r0, r0, r3
 8009746:	4629      	mov	r1, r5
 8009748:	bd30      	pop	{r4, r5, pc}
 800974a:	fa21 f004 	lsr.w	r0, r1, r4
 800974e:	4629      	mov	r1, r5
 8009750:	bd30      	pop	{r4, r5, pc}
 8009752:	f094 0f00 	teq	r4, #0
 8009756:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800975a:	bf06      	itte	eq
 800975c:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8009760:	3401      	addeq	r4, #1
 8009762:	3d01      	subne	r5, #1
 8009764:	e74e      	b.n	8009604 <__adddf3+0x8c>
 8009766:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800976a:	bf18      	it	ne
 800976c:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8009770:	d029      	beq.n	80097c6 <__adddf3+0x24e>
 8009772:	ea94 0f05 	teq	r4, r5
 8009776:	bf08      	it	eq
 8009778:	ea90 0f02 	teqeq	r0, r2
 800977c:	d005      	beq.n	800978a <__adddf3+0x212>
 800977e:	ea54 0c00 	orrs.w	ip, r4, r0
 8009782:	bf04      	itt	eq
 8009784:	4619      	moveq	r1, r3
 8009786:	4610      	moveq	r0, r2
 8009788:	bd30      	pop	{r4, r5, pc}
 800978a:	ea91 0f03 	teq	r1, r3
 800978e:	bf1e      	ittt	ne
 8009790:	2100      	movne	r1, #0
 8009792:	2000      	movne	r0, #0
 8009794:	bd30      	popne	{r4, r5, pc}
 8009796:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 800979a:	d105      	bne.n	80097a8 <__adddf3+0x230>
 800979c:	0040      	lsls	r0, r0, #1
 800979e:	4149      	adcs	r1, r1
 80097a0:	bf28      	it	cs
 80097a2:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80097a6:	bd30      	pop	{r4, r5, pc}
 80097a8:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80097ac:	bf3c      	itt	cc
 80097ae:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80097b2:	bd30      	popcc	{r4, r5, pc}
 80097b4:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80097b8:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80097bc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80097c0:	f04f 0000 	mov.w	r0, #0
 80097c4:	bd30      	pop	{r4, r5, pc}
 80097c6:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80097ca:	bf1a      	itte	ne
 80097cc:	4619      	movne	r1, r3
 80097ce:	4610      	movne	r0, r2
 80097d0:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80097d4:	bf1c      	itt	ne
 80097d6:	460b      	movne	r3, r1
 80097d8:	4602      	movne	r2, r0
 80097da:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80097de:	bf06      	itte	eq
 80097e0:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 80097e4:	ea91 0f03 	teqeq	r1, r3
 80097e8:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80097ec:	bd30      	pop	{r4, r5, pc}
 80097ee:	bf00      	nop

080097f0 <__aeabi_ui2d>:
 80097f0:	f090 0f00 	teq	r0, #0
 80097f4:	bf04      	itt	eq
 80097f6:	2100      	moveq	r1, #0
 80097f8:	4770      	bxeq	lr
 80097fa:	b530      	push	{r4, r5, lr}
 80097fc:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8009800:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8009804:	f04f 0500 	mov.w	r5, #0
 8009808:	f04f 0100 	mov.w	r1, #0
 800980c:	e750      	b.n	80096b0 <__adddf3+0x138>
 800980e:	bf00      	nop

08009810 <__aeabi_i2d>:
 8009810:	f090 0f00 	teq	r0, #0
 8009814:	bf04      	itt	eq
 8009816:	2100      	moveq	r1, #0
 8009818:	4770      	bxeq	lr
 800981a:	b530      	push	{r4, r5, lr}
 800981c:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8009820:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8009824:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 8009828:	bf48      	it	mi
 800982a:	4240      	negmi	r0, r0
 800982c:	f04f 0100 	mov.w	r1, #0
 8009830:	e73e      	b.n	80096b0 <__adddf3+0x138>
 8009832:	bf00      	nop

08009834 <__aeabi_f2d>:
 8009834:	0042      	lsls	r2, r0, #1
 8009836:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800983a:	ea4f 0131 	mov.w	r1, r1, rrx
 800983e:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8009842:	bf1f      	itttt	ne
 8009844:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8009848:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 800984c:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8009850:	4770      	bxne	lr
 8009852:	f092 0f00 	teq	r2, #0
 8009856:	bf14      	ite	ne
 8009858:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 800985c:	4770      	bxeq	lr
 800985e:	b530      	push	{r4, r5, lr}
 8009860:	f44f 7460 	mov.w	r4, #896	; 0x380
 8009864:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8009868:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800986c:	e720      	b.n	80096b0 <__adddf3+0x138>
 800986e:	bf00      	nop

08009870 <__aeabi_ul2d>:
 8009870:	ea50 0201 	orrs.w	r2, r0, r1
 8009874:	bf08      	it	eq
 8009876:	4770      	bxeq	lr
 8009878:	b530      	push	{r4, r5, lr}
 800987a:	f04f 0500 	mov.w	r5, #0
 800987e:	e00a      	b.n	8009896 <__aeabi_l2d+0x16>

08009880 <__aeabi_l2d>:
 8009880:	ea50 0201 	orrs.w	r2, r0, r1
 8009884:	bf08      	it	eq
 8009886:	4770      	bxeq	lr
 8009888:	b530      	push	{r4, r5, lr}
 800988a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800988e:	d502      	bpl.n	8009896 <__aeabi_l2d+0x16>
 8009890:	4240      	negs	r0, r0
 8009892:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8009896:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800989a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800989e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80098a2:	f43f aedc 	beq.w	800965e <__adddf3+0xe6>
 80098a6:	f04f 0203 	mov.w	r2, #3
 80098aa:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80098ae:	bf18      	it	ne
 80098b0:	3203      	addne	r2, #3
 80098b2:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80098b6:	bf18      	it	ne
 80098b8:	3203      	addne	r2, #3
 80098ba:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80098be:	f1c2 0320 	rsb	r3, r2, #32
 80098c2:	fa00 fc03 	lsl.w	ip, r0, r3
 80098c6:	fa20 f002 	lsr.w	r0, r0, r2
 80098ca:	fa01 fe03 	lsl.w	lr, r1, r3
 80098ce:	ea40 000e 	orr.w	r0, r0, lr
 80098d2:	fa21 f102 	lsr.w	r1, r1, r2
 80098d6:	4414      	add	r4, r2
 80098d8:	e6c1      	b.n	800965e <__adddf3+0xe6>
 80098da:	bf00      	nop

080098dc <__aeabi_dmul>:
 80098dc:	b570      	push	{r4, r5, r6, lr}
 80098de:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80098e2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80098e6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80098ea:	bf1d      	ittte	ne
 80098ec:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80098f0:	ea94 0f0c 	teqne	r4, ip
 80098f4:	ea95 0f0c 	teqne	r5, ip
 80098f8:	f000 f8de 	bleq	8009ab8 <__aeabi_dmul+0x1dc>
 80098fc:	442c      	add	r4, r5
 80098fe:	ea81 0603 	eor.w	r6, r1, r3
 8009902:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8009906:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 800990a:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800990e:	bf18      	it	ne
 8009910:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8009914:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8009918:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800991c:	d038      	beq.n	8009990 <__aeabi_dmul+0xb4>
 800991e:	fba0 ce02 	umull	ip, lr, r0, r2
 8009922:	f04f 0500 	mov.w	r5, #0
 8009926:	fbe1 e502 	umlal	lr, r5, r1, r2
 800992a:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800992e:	fbe0 e503 	umlal	lr, r5, r0, r3
 8009932:	f04f 0600 	mov.w	r6, #0
 8009936:	fbe1 5603 	umlal	r5, r6, r1, r3
 800993a:	f09c 0f00 	teq	ip, #0
 800993e:	bf18      	it	ne
 8009940:	f04e 0e01 	orrne.w	lr, lr, #1
 8009944:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8009948:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800994c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8009950:	d204      	bcs.n	800995c <__aeabi_dmul+0x80>
 8009952:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8009956:	416d      	adcs	r5, r5
 8009958:	eb46 0606 	adc.w	r6, r6, r6
 800995c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8009960:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8009964:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8009968:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 800996c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8009970:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8009974:	bf88      	it	hi
 8009976:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800997a:	d81e      	bhi.n	80099ba <__aeabi_dmul+0xde>
 800997c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8009980:	bf08      	it	eq
 8009982:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8009986:	f150 0000 	adcs.w	r0, r0, #0
 800998a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800998e:	bd70      	pop	{r4, r5, r6, pc}
 8009990:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8009994:	ea46 0101 	orr.w	r1, r6, r1
 8009998:	ea40 0002 	orr.w	r0, r0, r2
 800999c:	ea81 0103 	eor.w	r1, r1, r3
 80099a0:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80099a4:	bfc2      	ittt	gt
 80099a6:	ebd4 050c 	rsbsgt	r5, r4, ip
 80099aa:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80099ae:	bd70      	popgt	{r4, r5, r6, pc}
 80099b0:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80099b4:	f04f 0e00 	mov.w	lr, #0
 80099b8:	3c01      	subs	r4, #1
 80099ba:	f300 80ab 	bgt.w	8009b14 <__aeabi_dmul+0x238>
 80099be:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80099c2:	bfde      	ittt	le
 80099c4:	2000      	movle	r0, #0
 80099c6:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80099ca:	bd70      	pople	{r4, r5, r6, pc}
 80099cc:	f1c4 0400 	rsb	r4, r4, #0
 80099d0:	3c20      	subs	r4, #32
 80099d2:	da35      	bge.n	8009a40 <__aeabi_dmul+0x164>
 80099d4:	340c      	adds	r4, #12
 80099d6:	dc1b      	bgt.n	8009a10 <__aeabi_dmul+0x134>
 80099d8:	f104 0414 	add.w	r4, r4, #20
 80099dc:	f1c4 0520 	rsb	r5, r4, #32
 80099e0:	fa00 f305 	lsl.w	r3, r0, r5
 80099e4:	fa20 f004 	lsr.w	r0, r0, r4
 80099e8:	fa01 f205 	lsl.w	r2, r1, r5
 80099ec:	ea40 0002 	orr.w	r0, r0, r2
 80099f0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80099f4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80099f8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80099fc:	fa21 f604 	lsr.w	r6, r1, r4
 8009a00:	eb42 0106 	adc.w	r1, r2, r6
 8009a04:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8009a08:	bf08      	it	eq
 8009a0a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8009a0e:	bd70      	pop	{r4, r5, r6, pc}
 8009a10:	f1c4 040c 	rsb	r4, r4, #12
 8009a14:	f1c4 0520 	rsb	r5, r4, #32
 8009a18:	fa00 f304 	lsl.w	r3, r0, r4
 8009a1c:	fa20 f005 	lsr.w	r0, r0, r5
 8009a20:	fa01 f204 	lsl.w	r2, r1, r4
 8009a24:	ea40 0002 	orr.w	r0, r0, r2
 8009a28:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8009a2c:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8009a30:	f141 0100 	adc.w	r1, r1, #0
 8009a34:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8009a38:	bf08      	it	eq
 8009a3a:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8009a3e:	bd70      	pop	{r4, r5, r6, pc}
 8009a40:	f1c4 0520 	rsb	r5, r4, #32
 8009a44:	fa00 f205 	lsl.w	r2, r0, r5
 8009a48:	ea4e 0e02 	orr.w	lr, lr, r2
 8009a4c:	fa20 f304 	lsr.w	r3, r0, r4
 8009a50:	fa01 f205 	lsl.w	r2, r1, r5
 8009a54:	ea43 0302 	orr.w	r3, r3, r2
 8009a58:	fa21 f004 	lsr.w	r0, r1, r4
 8009a5c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8009a60:	fa21 f204 	lsr.w	r2, r1, r4
 8009a64:	ea20 0002 	bic.w	r0, r0, r2
 8009a68:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8009a6c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8009a70:	bf08      	it	eq
 8009a72:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8009a76:	bd70      	pop	{r4, r5, r6, pc}
 8009a78:	f094 0f00 	teq	r4, #0
 8009a7c:	d10f      	bne.n	8009a9e <__aeabi_dmul+0x1c2>
 8009a7e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8009a82:	0040      	lsls	r0, r0, #1
 8009a84:	eb41 0101 	adc.w	r1, r1, r1
 8009a88:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8009a8c:	bf08      	it	eq
 8009a8e:	3c01      	subeq	r4, #1
 8009a90:	d0f7      	beq.n	8009a82 <__aeabi_dmul+0x1a6>
 8009a92:	ea41 0106 	orr.w	r1, r1, r6
 8009a96:	f095 0f00 	teq	r5, #0
 8009a9a:	bf18      	it	ne
 8009a9c:	4770      	bxne	lr
 8009a9e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8009aa2:	0052      	lsls	r2, r2, #1
 8009aa4:	eb43 0303 	adc.w	r3, r3, r3
 8009aa8:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 8009aac:	bf08      	it	eq
 8009aae:	3d01      	subeq	r5, #1
 8009ab0:	d0f7      	beq.n	8009aa2 <__aeabi_dmul+0x1c6>
 8009ab2:	ea43 0306 	orr.w	r3, r3, r6
 8009ab6:	4770      	bx	lr
 8009ab8:	ea94 0f0c 	teq	r4, ip
 8009abc:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8009ac0:	bf18      	it	ne
 8009ac2:	ea95 0f0c 	teqne	r5, ip
 8009ac6:	d00c      	beq.n	8009ae2 <__aeabi_dmul+0x206>
 8009ac8:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8009acc:	bf18      	it	ne
 8009ace:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8009ad2:	d1d1      	bne.n	8009a78 <__aeabi_dmul+0x19c>
 8009ad4:	ea81 0103 	eor.w	r1, r1, r3
 8009ad8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8009adc:	f04f 0000 	mov.w	r0, #0
 8009ae0:	bd70      	pop	{r4, r5, r6, pc}
 8009ae2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8009ae6:	bf06      	itte	eq
 8009ae8:	4610      	moveq	r0, r2
 8009aea:	4619      	moveq	r1, r3
 8009aec:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8009af0:	d019      	beq.n	8009b26 <__aeabi_dmul+0x24a>
 8009af2:	ea94 0f0c 	teq	r4, ip
 8009af6:	d102      	bne.n	8009afe <__aeabi_dmul+0x222>
 8009af8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8009afc:	d113      	bne.n	8009b26 <__aeabi_dmul+0x24a>
 8009afe:	ea95 0f0c 	teq	r5, ip
 8009b02:	d105      	bne.n	8009b10 <__aeabi_dmul+0x234>
 8009b04:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8009b08:	bf1c      	itt	ne
 8009b0a:	4610      	movne	r0, r2
 8009b0c:	4619      	movne	r1, r3
 8009b0e:	d10a      	bne.n	8009b26 <__aeabi_dmul+0x24a>
 8009b10:	ea81 0103 	eor.w	r1, r1, r3
 8009b14:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8009b18:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8009b1c:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8009b20:	f04f 0000 	mov.w	r0, #0
 8009b24:	bd70      	pop	{r4, r5, r6, pc}
 8009b26:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8009b2a:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 8009b2e:	bd70      	pop	{r4, r5, r6, pc}

08009b30 <__aeabi_ddiv>:
 8009b30:	b570      	push	{r4, r5, r6, lr}
 8009b32:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8009b36:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8009b3a:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8009b3e:	bf1d      	ittte	ne
 8009b40:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8009b44:	ea94 0f0c 	teqne	r4, ip
 8009b48:	ea95 0f0c 	teqne	r5, ip
 8009b4c:	f000 f8a7 	bleq	8009c9e <__aeabi_ddiv+0x16e>
 8009b50:	eba4 0405 	sub.w	r4, r4, r5
 8009b54:	ea81 0e03 	eor.w	lr, r1, r3
 8009b58:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8009b5c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8009b60:	f000 8088 	beq.w	8009c74 <__aeabi_ddiv+0x144>
 8009b64:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8009b68:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8009b6c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8009b70:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8009b74:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8009b78:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 8009b7c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8009b80:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8009b84:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8009b88:	429d      	cmp	r5, r3
 8009b8a:	bf08      	it	eq
 8009b8c:	4296      	cmpeq	r6, r2
 8009b8e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8009b92:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8009b96:	d202      	bcs.n	8009b9e <__aeabi_ddiv+0x6e>
 8009b98:	085b      	lsrs	r3, r3, #1
 8009b9a:	ea4f 0232 	mov.w	r2, r2, rrx
 8009b9e:	1ab6      	subs	r6, r6, r2
 8009ba0:	eb65 0503 	sbc.w	r5, r5, r3
 8009ba4:	085b      	lsrs	r3, r3, #1
 8009ba6:	ea4f 0232 	mov.w	r2, r2, rrx
 8009baa:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 8009bae:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8009bb2:	ebb6 0e02 	subs.w	lr, r6, r2
 8009bb6:	eb75 0e03 	sbcs.w	lr, r5, r3
 8009bba:	bf22      	ittt	cs
 8009bbc:	1ab6      	subcs	r6, r6, r2
 8009bbe:	4675      	movcs	r5, lr
 8009bc0:	ea40 000c 	orrcs.w	r0, r0, ip
 8009bc4:	085b      	lsrs	r3, r3, #1
 8009bc6:	ea4f 0232 	mov.w	r2, r2, rrx
 8009bca:	ebb6 0e02 	subs.w	lr, r6, r2
 8009bce:	eb75 0e03 	sbcs.w	lr, r5, r3
 8009bd2:	bf22      	ittt	cs
 8009bd4:	1ab6      	subcs	r6, r6, r2
 8009bd6:	4675      	movcs	r5, lr
 8009bd8:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8009bdc:	085b      	lsrs	r3, r3, #1
 8009bde:	ea4f 0232 	mov.w	r2, r2, rrx
 8009be2:	ebb6 0e02 	subs.w	lr, r6, r2
 8009be6:	eb75 0e03 	sbcs.w	lr, r5, r3
 8009bea:	bf22      	ittt	cs
 8009bec:	1ab6      	subcs	r6, r6, r2
 8009bee:	4675      	movcs	r5, lr
 8009bf0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8009bf4:	085b      	lsrs	r3, r3, #1
 8009bf6:	ea4f 0232 	mov.w	r2, r2, rrx
 8009bfa:	ebb6 0e02 	subs.w	lr, r6, r2
 8009bfe:	eb75 0e03 	sbcs.w	lr, r5, r3
 8009c02:	bf22      	ittt	cs
 8009c04:	1ab6      	subcs	r6, r6, r2
 8009c06:	4675      	movcs	r5, lr
 8009c08:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8009c0c:	ea55 0e06 	orrs.w	lr, r5, r6
 8009c10:	d018      	beq.n	8009c44 <__aeabi_ddiv+0x114>
 8009c12:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8009c16:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8009c1a:	ea4f 1606 	mov.w	r6, r6, lsl #4
 8009c1e:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 8009c22:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8009c26:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8009c2a:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 8009c2e:	d1c0      	bne.n	8009bb2 <__aeabi_ddiv+0x82>
 8009c30:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8009c34:	d10b      	bne.n	8009c4e <__aeabi_ddiv+0x11e>
 8009c36:	ea41 0100 	orr.w	r1, r1, r0
 8009c3a:	f04f 0000 	mov.w	r0, #0
 8009c3e:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8009c42:	e7b6      	b.n	8009bb2 <__aeabi_ddiv+0x82>
 8009c44:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8009c48:	bf04      	itt	eq
 8009c4a:	4301      	orreq	r1, r0
 8009c4c:	2000      	moveq	r0, #0
 8009c4e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8009c52:	bf88      	it	hi
 8009c54:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8009c58:	f63f aeaf 	bhi.w	80099ba <__aeabi_dmul+0xde>
 8009c5c:	ebb5 0c03 	subs.w	ip, r5, r3
 8009c60:	bf04      	itt	eq
 8009c62:	ebb6 0c02 	subseq.w	ip, r6, r2
 8009c66:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8009c6a:	f150 0000 	adcs.w	r0, r0, #0
 8009c6e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8009c72:	bd70      	pop	{r4, r5, r6, pc}
 8009c74:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8009c78:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 8009c7c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8009c80:	bfc2      	ittt	gt
 8009c82:	ebd4 050c 	rsbsgt	r5, r4, ip
 8009c86:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 8009c8a:	bd70      	popgt	{r4, r5, r6, pc}
 8009c8c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8009c90:	f04f 0e00 	mov.w	lr, #0
 8009c94:	3c01      	subs	r4, #1
 8009c96:	e690      	b.n	80099ba <__aeabi_dmul+0xde>
 8009c98:	ea45 0e06 	orr.w	lr, r5, r6
 8009c9c:	e68d      	b.n	80099ba <__aeabi_dmul+0xde>
 8009c9e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8009ca2:	ea94 0f0c 	teq	r4, ip
 8009ca6:	bf08      	it	eq
 8009ca8:	ea95 0f0c 	teqeq	r5, ip
 8009cac:	f43f af3b 	beq.w	8009b26 <__aeabi_dmul+0x24a>
 8009cb0:	ea94 0f0c 	teq	r4, ip
 8009cb4:	d10a      	bne.n	8009ccc <__aeabi_ddiv+0x19c>
 8009cb6:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8009cba:	f47f af34 	bne.w	8009b26 <__aeabi_dmul+0x24a>
 8009cbe:	ea95 0f0c 	teq	r5, ip
 8009cc2:	f47f af25 	bne.w	8009b10 <__aeabi_dmul+0x234>
 8009cc6:	4610      	mov	r0, r2
 8009cc8:	4619      	mov	r1, r3
 8009cca:	e72c      	b.n	8009b26 <__aeabi_dmul+0x24a>
 8009ccc:	ea95 0f0c 	teq	r5, ip
 8009cd0:	d106      	bne.n	8009ce0 <__aeabi_ddiv+0x1b0>
 8009cd2:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8009cd6:	f43f aefd 	beq.w	8009ad4 <__aeabi_dmul+0x1f8>
 8009cda:	4610      	mov	r0, r2
 8009cdc:	4619      	mov	r1, r3
 8009cde:	e722      	b.n	8009b26 <__aeabi_dmul+0x24a>
 8009ce0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8009ce4:	bf18      	it	ne
 8009ce6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8009cea:	f47f aec5 	bne.w	8009a78 <__aeabi_dmul+0x19c>
 8009cee:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8009cf2:	f47f af0d 	bne.w	8009b10 <__aeabi_dmul+0x234>
 8009cf6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8009cfa:	f47f aeeb 	bne.w	8009ad4 <__aeabi_dmul+0x1f8>
 8009cfe:	e712      	b.n	8009b26 <__aeabi_dmul+0x24a>

08009d00 <__gedf2>:
 8009d00:	f04f 3cff 	mov.w	ip, #4294967295
 8009d04:	e006      	b.n	8009d14 <__cmpdf2+0x4>
 8009d06:	bf00      	nop

08009d08 <__ledf2>:
 8009d08:	f04f 0c01 	mov.w	ip, #1
 8009d0c:	e002      	b.n	8009d14 <__cmpdf2+0x4>
 8009d0e:	bf00      	nop

08009d10 <__cmpdf2>:
 8009d10:	f04f 0c01 	mov.w	ip, #1
 8009d14:	f84d cd04 	str.w	ip, [sp, #-4]!
 8009d18:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8009d1c:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8009d20:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8009d24:	bf18      	it	ne
 8009d26:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8009d2a:	d01b      	beq.n	8009d64 <__cmpdf2+0x54>
 8009d2c:	b001      	add	sp, #4
 8009d2e:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8009d32:	bf0c      	ite	eq
 8009d34:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8009d38:	ea91 0f03 	teqne	r1, r3
 8009d3c:	bf02      	ittt	eq
 8009d3e:	ea90 0f02 	teqeq	r0, r2
 8009d42:	2000      	moveq	r0, #0
 8009d44:	4770      	bxeq	lr
 8009d46:	f110 0f00 	cmn.w	r0, #0
 8009d4a:	ea91 0f03 	teq	r1, r3
 8009d4e:	bf58      	it	pl
 8009d50:	4299      	cmppl	r1, r3
 8009d52:	bf08      	it	eq
 8009d54:	4290      	cmpeq	r0, r2
 8009d56:	bf2c      	ite	cs
 8009d58:	17d8      	asrcs	r0, r3, #31
 8009d5a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8009d5e:	f040 0001 	orr.w	r0, r0, #1
 8009d62:	4770      	bx	lr
 8009d64:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8009d68:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8009d6c:	d102      	bne.n	8009d74 <__cmpdf2+0x64>
 8009d6e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8009d72:	d107      	bne.n	8009d84 <__cmpdf2+0x74>
 8009d74:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8009d78:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8009d7c:	d1d6      	bne.n	8009d2c <__cmpdf2+0x1c>
 8009d7e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8009d82:	d0d3      	beq.n	8009d2c <__cmpdf2+0x1c>
 8009d84:	f85d 0b04 	ldr.w	r0, [sp], #4
 8009d88:	4770      	bx	lr
 8009d8a:	bf00      	nop

08009d8c <__aeabi_cdrcmple>:
 8009d8c:	4684      	mov	ip, r0
 8009d8e:	4610      	mov	r0, r2
 8009d90:	4662      	mov	r2, ip
 8009d92:	468c      	mov	ip, r1
 8009d94:	4619      	mov	r1, r3
 8009d96:	4663      	mov	r3, ip
 8009d98:	e000      	b.n	8009d9c <__aeabi_cdcmpeq>
 8009d9a:	bf00      	nop

08009d9c <__aeabi_cdcmpeq>:
 8009d9c:	b501      	push	{r0, lr}
 8009d9e:	f7ff ffb7 	bl	8009d10 <__cmpdf2>
 8009da2:	2800      	cmp	r0, #0
 8009da4:	bf48      	it	mi
 8009da6:	f110 0f00 	cmnmi.w	r0, #0
 8009daa:	bd01      	pop	{r0, pc}

08009dac <__aeabi_dcmpeq>:
 8009dac:	f84d ed08 	str.w	lr, [sp, #-8]!
 8009db0:	f7ff fff4 	bl	8009d9c <__aeabi_cdcmpeq>
 8009db4:	bf0c      	ite	eq
 8009db6:	2001      	moveq	r0, #1
 8009db8:	2000      	movne	r0, #0
 8009dba:	f85d fb08 	ldr.w	pc, [sp], #8
 8009dbe:	bf00      	nop

08009dc0 <__aeabi_dcmplt>:
 8009dc0:	f84d ed08 	str.w	lr, [sp, #-8]!
 8009dc4:	f7ff ffea 	bl	8009d9c <__aeabi_cdcmpeq>
 8009dc8:	bf34      	ite	cc
 8009dca:	2001      	movcc	r0, #1
 8009dcc:	2000      	movcs	r0, #0
 8009dce:	f85d fb08 	ldr.w	pc, [sp], #8
 8009dd2:	bf00      	nop

08009dd4 <__aeabi_dcmple>:
 8009dd4:	f84d ed08 	str.w	lr, [sp, #-8]!
 8009dd8:	f7ff ffe0 	bl	8009d9c <__aeabi_cdcmpeq>
 8009ddc:	bf94      	ite	ls
 8009dde:	2001      	movls	r0, #1
 8009de0:	2000      	movhi	r0, #0
 8009de2:	f85d fb08 	ldr.w	pc, [sp], #8
 8009de6:	bf00      	nop

08009de8 <__aeabi_dcmpge>:
 8009de8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8009dec:	f7ff ffce 	bl	8009d8c <__aeabi_cdrcmple>
 8009df0:	bf94      	ite	ls
 8009df2:	2001      	movls	r0, #1
 8009df4:	2000      	movhi	r0, #0
 8009df6:	f85d fb08 	ldr.w	pc, [sp], #8
 8009dfa:	bf00      	nop

08009dfc <__aeabi_dcmpgt>:
 8009dfc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8009e00:	f7ff ffc4 	bl	8009d8c <__aeabi_cdrcmple>
 8009e04:	bf34      	ite	cc
 8009e06:	2001      	movcc	r0, #1
 8009e08:	2000      	movcs	r0, #0
 8009e0a:	f85d fb08 	ldr.w	pc, [sp], #8
 8009e0e:	bf00      	nop

08009e10 <__aeabi_d2iz>:
 8009e10:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8009e14:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8009e18:	d215      	bcs.n	8009e46 <__aeabi_d2iz+0x36>
 8009e1a:	d511      	bpl.n	8009e40 <__aeabi_d2iz+0x30>
 8009e1c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8009e20:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8009e24:	d912      	bls.n	8009e4c <__aeabi_d2iz+0x3c>
 8009e26:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8009e2a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8009e2e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8009e32:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8009e36:	fa23 f002 	lsr.w	r0, r3, r2
 8009e3a:	bf18      	it	ne
 8009e3c:	4240      	negne	r0, r0
 8009e3e:	4770      	bx	lr
 8009e40:	f04f 0000 	mov.w	r0, #0
 8009e44:	4770      	bx	lr
 8009e46:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8009e4a:	d105      	bne.n	8009e58 <__aeabi_d2iz+0x48>
 8009e4c:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8009e50:	bf08      	it	eq
 8009e52:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8009e56:	4770      	bx	lr
 8009e58:	f04f 0000 	mov.w	r0, #0
 8009e5c:	4770      	bx	lr
 8009e5e:	bf00      	nop

08009e60 <__aeabi_d2uiz>:
 8009e60:	004a      	lsls	r2, r1, #1
 8009e62:	d211      	bcs.n	8009e88 <__aeabi_d2uiz+0x28>
 8009e64:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8009e68:	d211      	bcs.n	8009e8e <__aeabi_d2uiz+0x2e>
 8009e6a:	d50d      	bpl.n	8009e88 <__aeabi_d2uiz+0x28>
 8009e6c:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8009e70:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8009e74:	d40e      	bmi.n	8009e94 <__aeabi_d2uiz+0x34>
 8009e76:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8009e7a:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8009e7e:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8009e82:	fa23 f002 	lsr.w	r0, r3, r2
 8009e86:	4770      	bx	lr
 8009e88:	f04f 0000 	mov.w	r0, #0
 8009e8c:	4770      	bx	lr
 8009e8e:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8009e92:	d102      	bne.n	8009e9a <__aeabi_d2uiz+0x3a>
 8009e94:	f04f 30ff 	mov.w	r0, #4294967295
 8009e98:	4770      	bx	lr
 8009e9a:	f04f 0000 	mov.w	r0, #0
 8009e9e:	4770      	bx	lr

08009ea0 <__aeabi_uldivmod>:
 8009ea0:	b94b      	cbnz	r3, 8009eb6 <__aeabi_uldivmod+0x16>
 8009ea2:	b942      	cbnz	r2, 8009eb6 <__aeabi_uldivmod+0x16>
 8009ea4:	2900      	cmp	r1, #0
 8009ea6:	bf08      	it	eq
 8009ea8:	2800      	cmpeq	r0, #0
 8009eaa:	d002      	beq.n	8009eb2 <__aeabi_uldivmod+0x12>
 8009eac:	f04f 31ff 	mov.w	r1, #4294967295
 8009eb0:	4608      	mov	r0, r1
 8009eb2:	f7ff bb59 	b.w	8009568 <__aeabi_idiv0>
 8009eb6:	b082      	sub	sp, #8
 8009eb8:	46ec      	mov	ip, sp
 8009eba:	e92d 5000 	stmdb	sp!, {ip, lr}
 8009ebe:	f000 f81d 	bl	8009efc <__gnu_uldivmod_helper>
 8009ec2:	f8dd e004 	ldr.w	lr, [sp, #4]
 8009ec6:	b002      	add	sp, #8
 8009ec8:	bc0c      	pop	{r2, r3}
 8009eca:	4770      	bx	lr

08009ecc <__gnu_ldivmod_helper>:
 8009ecc:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8009ed0:	4617      	mov	r7, r2
 8009ed2:	4680      	mov	r8, r0
 8009ed4:	4689      	mov	r9, r1
 8009ed6:	469a      	mov	sl, r3
 8009ed8:	9e08      	ldr	r6, [sp, #32]
 8009eda:	f000 f827 	bl	8009f2c <__divdi3>
 8009ede:	fba7 4500 	umull	r4, r5, r7, r0
 8009ee2:	fb07 f701 	mul.w	r7, r7, r1
 8009ee6:	fb00 720a 	mla	r2, r0, sl, r7
 8009eea:	4415      	add	r5, r2
 8009eec:	ebb8 0404 	subs.w	r4, r8, r4
 8009ef0:	eb69 0505 	sbc.w	r5, r9, r5
 8009ef4:	e9c6 4500 	strd	r4, r5, [r6]
 8009ef8:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}

08009efc <__gnu_uldivmod_helper>:
 8009efc:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8009f00:	4617      	mov	r7, r2
 8009f02:	4680      	mov	r8, r0
 8009f04:	4689      	mov	r9, r1
 8009f06:	461d      	mov	r5, r3
 8009f08:	9e08      	ldr	r6, [sp, #32]
 8009f0a:	f000 f9b9 	bl	800a280 <__udivdi3>
 8009f0e:	fb00 f305 	mul.w	r3, r0, r5
 8009f12:	fba0 4507 	umull	r4, r5, r0, r7
 8009f16:	fb07 3701 	mla	r7, r7, r1, r3
 8009f1a:	443d      	add	r5, r7
 8009f1c:	ebb8 0404 	subs.w	r4, r8, r4
 8009f20:	eb69 0505 	sbc.w	r5, r9, r5
 8009f24:	e9c6 4500 	strd	r4, r5, [r6]
 8009f28:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}

08009f2c <__divdi3>:
 8009f2c:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8009f30:	4244      	negs	r4, r0
 8009f32:	eb61 0541 	sbc.w	r5, r1, r1, lsl #1
 8009f36:	2900      	cmp	r1, #0
 8009f38:	f04f 36ff 	mov.w	r6, #4294967295
 8009f3c:	bfa2      	ittt	ge
 8009f3e:	4604      	movge	r4, r0
 8009f40:	460d      	movge	r5, r1
 8009f42:	2600      	movge	r6, #0
 8009f44:	2b00      	cmp	r3, #0
 8009f46:	b085      	sub	sp, #20
 8009f48:	f2c0 80c7 	blt.w	800a0da <__divdi3+0x1ae>
 8009f4c:	4620      	mov	r0, r4
 8009f4e:	46aa      	mov	sl, r5
 8009f50:	4694      	mov	ip, r2
 8009f52:	4619      	mov	r1, r3
 8009f54:	4690      	mov	r8, r2
 8009f56:	4627      	mov	r7, r4
 8009f58:	46a9      	mov	r9, r5
 8009f5a:	2b00      	cmp	r3, #0
 8009f5c:	d158      	bne.n	800a010 <__divdi3+0xe4>
 8009f5e:	42aa      	cmp	r2, r5
 8009f60:	d96c      	bls.n	800a03c <__divdi3+0x110>
 8009f62:	fab2 f382 	clz	r3, r2
 8009f66:	b15b      	cbz	r3, 8009f80 <__divdi3+0x54>
 8009f68:	f1c3 0220 	rsb	r2, r3, #32
 8009f6c:	fa05 f903 	lsl.w	r9, r5, r3
 8009f70:	fa24 f202 	lsr.w	r2, r4, r2
 8009f74:	fa0c f803 	lsl.w	r8, ip, r3
 8009f78:	ea42 0909 	orr.w	r9, r2, r9
 8009f7c:	fa04 f703 	lsl.w	r7, r4, r3
 8009f80:	ea4f 4418 	mov.w	r4, r8, lsr #16
 8009f84:	4648      	mov	r0, r9
 8009f86:	4621      	mov	r1, r4
 8009f88:	fa1f fa88 	uxth.w	sl, r8
 8009f8c:	f7ff f9b0 	bl	80092f0 <__aeabi_uidiv>
 8009f90:	4621      	mov	r1, r4
 8009f92:	4683      	mov	fp, r0
 8009f94:	4648      	mov	r0, r9
 8009f96:	f7ff fad9 	bl	800954c <__aeabi_uidivmod>
 8009f9a:	0c3a      	lsrs	r2, r7, #16
 8009f9c:	fb0a f00b 	mul.w	r0, sl, fp
 8009fa0:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
 8009fa4:	4288      	cmp	r0, r1
 8009fa6:	d90b      	bls.n	8009fc0 <__divdi3+0x94>
 8009fa8:	eb11 0108 	adds.w	r1, r1, r8
 8009fac:	f10b 33ff 	add.w	r3, fp, #4294967295
 8009fb0:	d205      	bcs.n	8009fbe <__divdi3+0x92>
 8009fb2:	4288      	cmp	r0, r1
 8009fb4:	bf84      	itt	hi
 8009fb6:	f1ab 0b02 	subhi.w	fp, fp, #2
 8009fba:	4441      	addhi	r1, r8
 8009fbc:	d800      	bhi.n	8009fc0 <__divdi3+0x94>
 8009fbe:	469b      	mov	fp, r3
 8009fc0:	ebc0 0901 	rsb	r9, r0, r1
 8009fc4:	4621      	mov	r1, r4
 8009fc6:	4648      	mov	r0, r9
 8009fc8:	b2bf      	uxth	r7, r7
 8009fca:	f7ff f991 	bl	80092f0 <__aeabi_uidiv>
 8009fce:	4621      	mov	r1, r4
 8009fd0:	4605      	mov	r5, r0
 8009fd2:	4648      	mov	r0, r9
 8009fd4:	f7ff faba 	bl	800954c <__aeabi_uidivmod>
 8009fd8:	fb0a fa05 	mul.w	sl, sl, r5
 8009fdc:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
 8009fe0:	458a      	cmp	sl, r1
 8009fe2:	d909      	bls.n	8009ff8 <__divdi3+0xcc>
 8009fe4:	eb11 0808 	adds.w	r8, r1, r8
 8009fe8:	f105 33ff 	add.w	r3, r5, #4294967295
 8009fec:	d203      	bcs.n	8009ff6 <__divdi3+0xca>
 8009fee:	45c2      	cmp	sl, r8
 8009ff0:	bf88      	it	hi
 8009ff2:	3d02      	subhi	r5, #2
 8009ff4:	d800      	bhi.n	8009ff8 <__divdi3+0xcc>
 8009ff6:	461d      	mov	r5, r3
 8009ff8:	ea45 430b 	orr.w	r3, r5, fp, lsl #16
 8009ffc:	2400      	movs	r4, #0
 8009ffe:	4618      	mov	r0, r3
 800a000:	4621      	mov	r1, r4
 800a002:	b116      	cbz	r6, 800a00a <__divdi3+0xde>
 800a004:	4240      	negs	r0, r0
 800a006:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800a00a:	b005      	add	sp, #20
 800a00c:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a010:	42ab      	cmp	r3, r5
 800a012:	bf84      	itt	hi
 800a014:	2400      	movhi	r4, #0
 800a016:	4623      	movhi	r3, r4
 800a018:	d8f1      	bhi.n	8009ffe <__divdi3+0xd2>
 800a01a:	fab1 f581 	clz	r5, r1
 800a01e:	2d00      	cmp	r5, #0
 800a020:	f040 80b5 	bne.w	800a18e <__divdi3+0x262>
 800a024:	4551      	cmp	r1, sl
 800a026:	bf28      	it	cs
 800a028:	4282      	cmpcs	r2, r0
 800a02a:	bf8c      	ite	hi
 800a02c:	2400      	movhi	r4, #0
 800a02e:	2401      	movls	r4, #1
 800a030:	bf9c      	itt	ls
 800a032:	2301      	movls	r3, #1
 800a034:	462c      	movls	r4, r5
 800a036:	d9e2      	bls.n	8009ffe <__divdi3+0xd2>
 800a038:	4623      	mov	r3, r4
 800a03a:	e7e0      	b.n	8009ffe <__divdi3+0xd2>
 800a03c:	b922      	cbnz	r2, 800a048 <__divdi3+0x11c>
 800a03e:	4611      	mov	r1, r2
 800a040:	2001      	movs	r0, #1
 800a042:	f7ff f955 	bl	80092f0 <__aeabi_uidiv>
 800a046:	4680      	mov	r8, r0
 800a048:	fab8 f388 	clz	r3, r8
 800a04c:	2b00      	cmp	r3, #0
 800a04e:	d149      	bne.n	800a0e4 <__divdi3+0x1b8>
 800a050:	ebc8 0909 	rsb	r9, r8, r9
 800a054:	ea4f 4518 	mov.w	r5, r8, lsr #16
 800a058:	fa1f fa88 	uxth.w	sl, r8
 800a05c:	2401      	movs	r4, #1
 800a05e:	4629      	mov	r1, r5
 800a060:	4648      	mov	r0, r9
 800a062:	f7ff f945 	bl	80092f0 <__aeabi_uidiv>
 800a066:	4629      	mov	r1, r5
 800a068:	4683      	mov	fp, r0
 800a06a:	4648      	mov	r0, r9
 800a06c:	f7ff fa6e 	bl	800954c <__aeabi_uidivmod>
 800a070:	0c3a      	lsrs	r2, r7, #16
 800a072:	fb0a f00b 	mul.w	r0, sl, fp
 800a076:	ea42 4101 	orr.w	r1, r2, r1, lsl #16
 800a07a:	4288      	cmp	r0, r1
 800a07c:	d90c      	bls.n	800a098 <__divdi3+0x16c>
 800a07e:	eb11 0108 	adds.w	r1, r1, r8
 800a082:	f10b 33ff 	add.w	r3, fp, #4294967295
 800a086:	f080 80f2 	bcs.w	800a26e <__divdi3+0x342>
 800a08a:	4288      	cmp	r0, r1
 800a08c:	bf84      	itt	hi
 800a08e:	f1ab 0b02 	subhi.w	fp, fp, #2
 800a092:	4441      	addhi	r1, r8
 800a094:	f240 80eb 	bls.w	800a26e <__divdi3+0x342>
 800a098:	1a0a      	subs	r2, r1, r0
 800a09a:	4629      	mov	r1, r5
 800a09c:	4610      	mov	r0, r2
 800a09e:	9201      	str	r2, [sp, #4]
 800a0a0:	f7ff f926 	bl	80092f0 <__aeabi_uidiv>
 800a0a4:	9a01      	ldr	r2, [sp, #4]
 800a0a6:	4629      	mov	r1, r5
 800a0a8:	b2bf      	uxth	r7, r7
 800a0aa:	4681      	mov	r9, r0
 800a0ac:	4610      	mov	r0, r2
 800a0ae:	f7ff fa4d 	bl	800954c <__aeabi_uidivmod>
 800a0b2:	fb0a fa09 	mul.w	sl, sl, r9
 800a0b6:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
 800a0ba:	458a      	cmp	sl, r1
 800a0bc:	d90a      	bls.n	800a0d4 <__divdi3+0x1a8>
 800a0be:	eb11 0808 	adds.w	r8, r1, r8
 800a0c2:	f109 33ff 	add.w	r3, r9, #4294967295
 800a0c6:	d204      	bcs.n	800a0d2 <__divdi3+0x1a6>
 800a0c8:	45c2      	cmp	sl, r8
 800a0ca:	bf88      	it	hi
 800a0cc:	f1a9 0902 	subhi.w	r9, r9, #2
 800a0d0:	d800      	bhi.n	800a0d4 <__divdi3+0x1a8>
 800a0d2:	4699      	mov	r9, r3
 800a0d4:	ea49 430b 	orr.w	r3, r9, fp, lsl #16
 800a0d8:	e791      	b.n	8009ffe <__divdi3+0xd2>
 800a0da:	43f6      	mvns	r6, r6
 800a0dc:	4252      	negs	r2, r2
 800a0de:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 800a0e2:	e733      	b.n	8009f4c <__divdi3+0x20>
 800a0e4:	fa08 f803 	lsl.w	r8, r8, r3
 800a0e8:	f1c3 0b20 	rsb	fp, r3, #32
 800a0ec:	fa29 f40b 	lsr.w	r4, r9, fp
 800a0f0:	fa09 f903 	lsl.w	r9, r9, r3
 800a0f4:	ea4f 4518 	mov.w	r5, r8, lsr #16
 800a0f8:	4620      	mov	r0, r4
 800a0fa:	4629      	mov	r1, r5
 800a0fc:	fa27 fb0b 	lsr.w	fp, r7, fp
 800a100:	409f      	lsls	r7, r3
 800a102:	f7ff f8f5 	bl	80092f0 <__aeabi_uidiv>
 800a106:	4629      	mov	r1, r5
 800a108:	fa1f fa88 	uxth.w	sl, r8
 800a10c:	ea4b 0b09 	orr.w	fp, fp, r9
 800a110:	4602      	mov	r2, r0
 800a112:	4620      	mov	r0, r4
 800a114:	9201      	str	r2, [sp, #4]
 800a116:	f7ff fa19 	bl	800954c <__aeabi_uidivmod>
 800a11a:	9a01      	ldr	r2, [sp, #4]
 800a11c:	ea4f 431b 	mov.w	r3, fp, lsr #16
 800a120:	fb0a f002 	mul.w	r0, sl, r2
 800a124:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800a128:	4288      	cmp	r0, r1
 800a12a:	d90b      	bls.n	800a144 <__divdi3+0x218>
 800a12c:	eb11 0108 	adds.w	r1, r1, r8
 800a130:	f102 33ff 	add.w	r3, r2, #4294967295
 800a134:	f080 80a1 	bcs.w	800a27a <__divdi3+0x34e>
 800a138:	4288      	cmp	r0, r1
 800a13a:	bf84      	itt	hi
 800a13c:	3a02      	subhi	r2, #2
 800a13e:	4441      	addhi	r1, r8
 800a140:	f240 809b 	bls.w	800a27a <__divdi3+0x34e>
 800a144:	ebc0 0901 	rsb	r9, r0, r1
 800a148:	4629      	mov	r1, r5
 800a14a:	4648      	mov	r0, r9
 800a14c:	9201      	str	r2, [sp, #4]
 800a14e:	f7ff f8cf 	bl	80092f0 <__aeabi_uidiv>
 800a152:	4629      	mov	r1, r5
 800a154:	fa1f fb8b 	uxth.w	fp, fp
 800a158:	4604      	mov	r4, r0
 800a15a:	4648      	mov	r0, r9
 800a15c:	f7ff f9f6 	bl	800954c <__aeabi_uidivmod>
 800a160:	9a01      	ldr	r2, [sp, #4]
 800a162:	fb0a f904 	mul.w	r9, sl, r4
 800a166:	ea4b 4101 	orr.w	r1, fp, r1, lsl #16
 800a16a:	4589      	cmp	r9, r1
 800a16c:	d90a      	bls.n	800a184 <__divdi3+0x258>
 800a16e:	eb11 0108 	adds.w	r1, r1, r8
 800a172:	f104 33ff 	add.w	r3, r4, #4294967295
 800a176:	d204      	bcs.n	800a182 <__divdi3+0x256>
 800a178:	4589      	cmp	r9, r1
 800a17a:	bf84      	itt	hi
 800a17c:	3c02      	subhi	r4, #2
 800a17e:	4441      	addhi	r1, r8
 800a180:	d800      	bhi.n	800a184 <__divdi3+0x258>
 800a182:	461c      	mov	r4, r3
 800a184:	ebc9 0901 	rsb	r9, r9, r1
 800a188:	ea44 4402 	orr.w	r4, r4, r2, lsl #16
 800a18c:	e767      	b.n	800a05e <__divdi3+0x132>
 800a18e:	f1c5 0320 	rsb	r3, r5, #32
 800a192:	40a9      	lsls	r1, r5
 800a194:	fa22 f803 	lsr.w	r8, r2, r3
 800a198:	fa2a fb03 	lsr.w	fp, sl, r3
 800a19c:	ea48 0801 	orr.w	r8, r8, r1
 800a1a0:	fa20 f303 	lsr.w	r3, r0, r3
 800a1a4:	fa0a fa05 	lsl.w	sl, sl, r5
 800a1a8:	4658      	mov	r0, fp
 800a1aa:	ea4f 4918 	mov.w	r9, r8, lsr #16
 800a1ae:	fa02 fc05 	lsl.w	ip, r2, r5
 800a1b2:	4649      	mov	r1, r9
 800a1b4:	ea43 0a0a 	orr.w	sl, r3, sl
 800a1b8:	f8cd c00c 	str.w	ip, [sp, #12]
 800a1bc:	f7ff f898 	bl	80092f0 <__aeabi_uidiv>
 800a1c0:	4649      	mov	r1, r9
 800a1c2:	4604      	mov	r4, r0
 800a1c4:	4658      	mov	r0, fp
 800a1c6:	f7ff f9c1 	bl	800954c <__aeabi_uidivmod>
 800a1ca:	fa1f f288 	uxth.w	r2, r8
 800a1ce:	ea4f 4e1a 	mov.w	lr, sl, lsr #16
 800a1d2:	fb02 f004 	mul.w	r0, r2, r4
 800a1d6:	ea4e 4e01 	orr.w	lr, lr, r1, lsl #16
 800a1da:	4570      	cmp	r0, lr
 800a1dc:	d909      	bls.n	800a1f2 <__divdi3+0x2c6>
 800a1de:	eb1e 0e08 	adds.w	lr, lr, r8
 800a1e2:	f104 31ff 	add.w	r1, r4, #4294967295
 800a1e6:	d246      	bcs.n	800a276 <__divdi3+0x34a>
 800a1e8:	4570      	cmp	r0, lr
 800a1ea:	bf84      	itt	hi
 800a1ec:	3c02      	subhi	r4, #2
 800a1ee:	44c6      	addhi	lr, r8
 800a1f0:	d941      	bls.n	800a276 <__divdi3+0x34a>
 800a1f2:	ebc0 0c0e 	rsb	ip, r0, lr
 800a1f6:	4649      	mov	r1, r9
 800a1f8:	4660      	mov	r0, ip
 800a1fa:	9201      	str	r2, [sp, #4]
 800a1fc:	f8cd c008 	str.w	ip, [sp, #8]
 800a200:	f7ff f876 	bl	80092f0 <__aeabi_uidiv>
 800a204:	f8dd c008 	ldr.w	ip, [sp, #8]
 800a208:	4649      	mov	r1, r9
 800a20a:	fa1f fa8a 	uxth.w	sl, sl
 800a20e:	4683      	mov	fp, r0
 800a210:	4660      	mov	r0, ip
 800a212:	f7ff f99b 	bl	800954c <__aeabi_uidivmod>
 800a216:	9a01      	ldr	r2, [sp, #4]
 800a218:	fb02 f20b 	mul.w	r2, r2, fp
 800a21c:	ea4a 4101 	orr.w	r1, sl, r1, lsl #16
 800a220:	428a      	cmp	r2, r1
 800a222:	d90a      	bls.n	800a23a <__divdi3+0x30e>
 800a224:	eb11 0108 	adds.w	r1, r1, r8
 800a228:	f10b 30ff 	add.w	r0, fp, #4294967295
 800a22c:	d221      	bcs.n	800a272 <__divdi3+0x346>
 800a22e:	428a      	cmp	r2, r1
 800a230:	bf84      	itt	hi
 800a232:	f1ab 0b02 	subhi.w	fp, fp, #2
 800a236:	4441      	addhi	r1, r8
 800a238:	d91b      	bls.n	800a272 <__divdi3+0x346>
 800a23a:	9803      	ldr	r0, [sp, #12]
 800a23c:	ea4b 4b04 	orr.w	fp, fp, r4, lsl #16
 800a240:	1a89      	subs	r1, r1, r2
 800a242:	fbab 2300 	umull	r2, r3, fp, r0
 800a246:	4299      	cmp	r1, r3
 800a248:	d30d      	bcc.n	800a266 <__divdi3+0x33a>
 800a24a:	bf14      	ite	ne
 800a24c:	2300      	movne	r3, #0
 800a24e:	2301      	moveq	r3, #1
 800a250:	fa07 f405 	lsl.w	r4, r7, r5
 800a254:	4294      	cmp	r4, r2
 800a256:	bf2c      	ite	cs
 800a258:	2400      	movcs	r4, #0
 800a25a:	f003 0401 	andcc.w	r4, r3, #1
 800a25e:	465b      	mov	r3, fp
 800a260:	2c00      	cmp	r4, #0
 800a262:	f43f aecc 	beq.w	8009ffe <__divdi3+0xd2>
 800a266:	f10b 33ff 	add.w	r3, fp, #4294967295
 800a26a:	2400      	movs	r4, #0
 800a26c:	e6c7      	b.n	8009ffe <__divdi3+0xd2>
 800a26e:	469b      	mov	fp, r3
 800a270:	e712      	b.n	800a098 <__divdi3+0x16c>
 800a272:	4683      	mov	fp, r0
 800a274:	e7e1      	b.n	800a23a <__divdi3+0x30e>
 800a276:	460c      	mov	r4, r1
 800a278:	e7bb      	b.n	800a1f2 <__divdi3+0x2c6>
 800a27a:	461a      	mov	r2, r3
 800a27c:	e762      	b.n	800a144 <__divdi3+0x218>
 800a27e:	bf00      	nop

0800a280 <__udivdi3>:
 800a280:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800a284:	4606      	mov	r6, r0
 800a286:	b083      	sub	sp, #12
 800a288:	460d      	mov	r5, r1
 800a28a:	4614      	mov	r4, r2
 800a28c:	4607      	mov	r7, r0
 800a28e:	4688      	mov	r8, r1
 800a290:	2b00      	cmp	r3, #0
 800a292:	d151      	bne.n	800a338 <__udivdi3+0xb8>
 800a294:	428a      	cmp	r2, r1
 800a296:	d964      	bls.n	800a362 <__udivdi3+0xe2>
 800a298:	fab2 f382 	clz	r3, r2
 800a29c:	b15b      	cbz	r3, 800a2b6 <__udivdi3+0x36>
 800a29e:	f1c3 0820 	rsb	r8, r3, #32
 800a2a2:	fa01 f503 	lsl.w	r5, r1, r3
 800a2a6:	fa20 f808 	lsr.w	r8, r0, r8
 800a2aa:	fa02 f403 	lsl.w	r4, r2, r3
 800a2ae:	ea48 0805 	orr.w	r8, r8, r5
 800a2b2:	fa00 f703 	lsl.w	r7, r0, r3
 800a2b6:	0c25      	lsrs	r5, r4, #16
 800a2b8:	4640      	mov	r0, r8
 800a2ba:	4629      	mov	r1, r5
 800a2bc:	fa1f fa84 	uxth.w	sl, r4
 800a2c0:	f7ff f816 	bl	80092f0 <__aeabi_uidiv>
 800a2c4:	4629      	mov	r1, r5
 800a2c6:	4681      	mov	r9, r0
 800a2c8:	4640      	mov	r0, r8
 800a2ca:	f7ff f93f 	bl	800954c <__aeabi_uidivmod>
 800a2ce:	0c3b      	lsrs	r3, r7, #16
 800a2d0:	fb0a f009 	mul.w	r0, sl, r9
 800a2d4:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800a2d8:	4288      	cmp	r0, r1
 800a2da:	d90a      	bls.n	800a2f2 <__udivdi3+0x72>
 800a2dc:	1909      	adds	r1, r1, r4
 800a2de:	f109 32ff 	add.w	r2, r9, #4294967295
 800a2e2:	d205      	bcs.n	800a2f0 <__udivdi3+0x70>
 800a2e4:	4288      	cmp	r0, r1
 800a2e6:	bf84      	itt	hi
 800a2e8:	f1a9 0902 	subhi.w	r9, r9, #2
 800a2ec:	1909      	addhi	r1, r1, r4
 800a2ee:	d800      	bhi.n	800a2f2 <__udivdi3+0x72>
 800a2f0:	4691      	mov	r9, r2
 800a2f2:	ebc0 0801 	rsb	r8, r0, r1
 800a2f6:	4629      	mov	r1, r5
 800a2f8:	4640      	mov	r0, r8
 800a2fa:	b2bf      	uxth	r7, r7
 800a2fc:	f7fe fff8 	bl	80092f0 <__aeabi_uidiv>
 800a300:	4629      	mov	r1, r5
 800a302:	4606      	mov	r6, r0
 800a304:	4640      	mov	r0, r8
 800a306:	f7ff f921 	bl	800954c <__aeabi_uidivmod>
 800a30a:	fb0a fa06 	mul.w	sl, sl, r6
 800a30e:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
 800a312:	458a      	cmp	sl, r1
 800a314:	d909      	bls.n	800a32a <__udivdi3+0xaa>
 800a316:	190c      	adds	r4, r1, r4
 800a318:	f106 33ff 	add.w	r3, r6, #4294967295
 800a31c:	f080 8119 	bcs.w	800a552 <__udivdi3+0x2d2>
 800a320:	45a2      	cmp	sl, r4
 800a322:	bf88      	it	hi
 800a324:	3e02      	subhi	r6, #2
 800a326:	f240 8114 	bls.w	800a552 <__udivdi3+0x2d2>
 800a32a:	ea46 4009 	orr.w	r0, r6, r9, lsl #16
 800a32e:	2600      	movs	r6, #0
 800a330:	4631      	mov	r1, r6
 800a332:	b003      	add	sp, #12
 800a334:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a338:	428b      	cmp	r3, r1
 800a33a:	bf84      	itt	hi
 800a33c:	2600      	movhi	r6, #0
 800a33e:	4630      	movhi	r0, r6
 800a340:	d8f6      	bhi.n	800a330 <__udivdi3+0xb0>
 800a342:	fab3 f483 	clz	r4, r3
 800a346:	2c00      	cmp	r4, #0
 800a348:	d15a      	bne.n	800a400 <__udivdi3+0x180>
 800a34a:	428b      	cmp	r3, r1
 800a34c:	bf28      	it	cs
 800a34e:	42b2      	cmpcs	r2, r6
 800a350:	bf8c      	ite	hi
 800a352:	2600      	movhi	r6, #0
 800a354:	2601      	movls	r6, #1
 800a356:	bf9c      	itt	ls
 800a358:	2001      	movls	r0, #1
 800a35a:	4626      	movls	r6, r4
 800a35c:	d9e8      	bls.n	800a330 <__udivdi3+0xb0>
 800a35e:	4630      	mov	r0, r6
 800a360:	e7e6      	b.n	800a330 <__udivdi3+0xb0>
 800a362:	b922      	cbnz	r2, 800a36e <__udivdi3+0xee>
 800a364:	4611      	mov	r1, r2
 800a366:	2001      	movs	r0, #1
 800a368:	f7fe ffc2 	bl	80092f0 <__aeabi_uidiv>
 800a36c:	4604      	mov	r4, r0
 800a36e:	fab4 f384 	clz	r3, r4
 800a372:	2b00      	cmp	r3, #0
 800a374:	f040 80a2 	bne.w	800a4bc <__udivdi3+0x23c>
 800a378:	1b2d      	subs	r5, r5, r4
 800a37a:	ea4f 4814 	mov.w	r8, r4, lsr #16
 800a37e:	fa1f fa84 	uxth.w	sl, r4
 800a382:	2601      	movs	r6, #1
 800a384:	4641      	mov	r1, r8
 800a386:	4628      	mov	r0, r5
 800a388:	f7fe ffb2 	bl	80092f0 <__aeabi_uidiv>
 800a38c:	4641      	mov	r1, r8
 800a38e:	4681      	mov	r9, r0
 800a390:	4628      	mov	r0, r5
 800a392:	f7ff f8db 	bl	800954c <__aeabi_uidivmod>
 800a396:	0c3b      	lsrs	r3, r7, #16
 800a398:	fb0a f009 	mul.w	r0, sl, r9
 800a39c:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800a3a0:	4288      	cmp	r0, r1
 800a3a2:	d90b      	bls.n	800a3bc <__udivdi3+0x13c>
 800a3a4:	1909      	adds	r1, r1, r4
 800a3a6:	f109 32ff 	add.w	r2, r9, #4294967295
 800a3aa:	f080 80d4 	bcs.w	800a556 <__udivdi3+0x2d6>
 800a3ae:	4288      	cmp	r0, r1
 800a3b0:	bf84      	itt	hi
 800a3b2:	f1a9 0902 	subhi.w	r9, r9, #2
 800a3b6:	1909      	addhi	r1, r1, r4
 800a3b8:	f240 80cd 	bls.w	800a556 <__udivdi3+0x2d6>
 800a3bc:	ebc0 0b01 	rsb	fp, r0, r1
 800a3c0:	4641      	mov	r1, r8
 800a3c2:	4658      	mov	r0, fp
 800a3c4:	b2bf      	uxth	r7, r7
 800a3c6:	f7fe ff93 	bl	80092f0 <__aeabi_uidiv>
 800a3ca:	4641      	mov	r1, r8
 800a3cc:	4605      	mov	r5, r0
 800a3ce:	4658      	mov	r0, fp
 800a3d0:	f7ff f8bc 	bl	800954c <__aeabi_uidivmod>
 800a3d4:	fb0a fa05 	mul.w	sl, sl, r5
 800a3d8:	ea47 4101 	orr.w	r1, r7, r1, lsl #16
 800a3dc:	458a      	cmp	sl, r1
 800a3de:	d909      	bls.n	800a3f4 <__udivdi3+0x174>
 800a3e0:	190c      	adds	r4, r1, r4
 800a3e2:	f105 33ff 	add.w	r3, r5, #4294967295
 800a3e6:	f080 80b8 	bcs.w	800a55a <__udivdi3+0x2da>
 800a3ea:	45a2      	cmp	sl, r4
 800a3ec:	bf88      	it	hi
 800a3ee:	3d02      	subhi	r5, #2
 800a3f0:	f240 80b3 	bls.w	800a55a <__udivdi3+0x2da>
 800a3f4:	ea45 4009 	orr.w	r0, r5, r9, lsl #16
 800a3f8:	4631      	mov	r1, r6
 800a3fa:	b003      	add	sp, #12
 800a3fc:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a400:	f1c4 0120 	rsb	r1, r4, #32
 800a404:	40a3      	lsls	r3, r4
 800a406:	fa22 f801 	lsr.w	r8, r2, r1
 800a40a:	fa25 f701 	lsr.w	r7, r5, r1
 800a40e:	ea48 0803 	orr.w	r8, r8, r3
 800a412:	4638      	mov	r0, r7
 800a414:	fa26 f301 	lsr.w	r3, r6, r1
 800a418:	40a5      	lsls	r5, r4
 800a41a:	ea4f 4918 	mov.w	r9, r8, lsr #16
 800a41e:	40a2      	lsls	r2, r4
 800a420:	4649      	mov	r1, r9
 800a422:	9201      	str	r2, [sp, #4]
 800a424:	431d      	orrs	r5, r3
 800a426:	f7fe ff63 	bl	80092f0 <__aeabi_uidiv>
 800a42a:	4649      	mov	r1, r9
 800a42c:	4683      	mov	fp, r0
 800a42e:	4638      	mov	r0, r7
 800a430:	f7ff f88c 	bl	800954c <__aeabi_uidivmod>
 800a434:	fa1f f288 	uxth.w	r2, r8
 800a438:	0c2f      	lsrs	r7, r5, #16
 800a43a:	fb02 f00b 	mul.w	r0, r2, fp
 800a43e:	ea47 4701 	orr.w	r7, r7, r1, lsl #16
 800a442:	42b8      	cmp	r0, r7
 800a444:	d906      	bls.n	800a454 <__udivdi3+0x1d4>
 800a446:	eb17 0708 	adds.w	r7, r7, r8
 800a44a:	f10b 31ff 	add.w	r1, fp, #4294967295
 800a44e:	f0c0 808d 	bcc.w	800a56c <__udivdi3+0x2ec>
 800a452:	468b      	mov	fp, r1
 800a454:	1a3f      	subs	r7, r7, r0
 800a456:	4649      	mov	r1, r9
 800a458:	4638      	mov	r0, r7
 800a45a:	9200      	str	r2, [sp, #0]
 800a45c:	f7fe ff48 	bl	80092f0 <__aeabi_uidiv>
 800a460:	4649      	mov	r1, r9
 800a462:	b2ad      	uxth	r5, r5
 800a464:	4682      	mov	sl, r0
 800a466:	4638      	mov	r0, r7
 800a468:	f7ff f870 	bl	800954c <__aeabi_uidivmod>
 800a46c:	9a00      	ldr	r2, [sp, #0]
 800a46e:	fb02 f20a 	mul.w	r2, r2, sl
 800a472:	ea45 4101 	orr.w	r1, r5, r1, lsl #16
 800a476:	428a      	cmp	r2, r1
 800a478:	d905      	bls.n	800a486 <__udivdi3+0x206>
 800a47a:	eb11 0108 	adds.w	r1, r1, r8
 800a47e:	f10a 30ff 	add.w	r0, sl, #4294967295
 800a482:	d36c      	bcc.n	800a55e <__udivdi3+0x2de>
 800a484:	4682      	mov	sl, r0
 800a486:	9d01      	ldr	r5, [sp, #4]
 800a488:	ea4a 400b 	orr.w	r0, sl, fp, lsl #16
 800a48c:	1a89      	subs	r1, r1, r2
 800a48e:	fba0 2305 	umull	r2, r3, r0, r5
 800a492:	4299      	cmp	r1, r3
 800a494:	d30c      	bcc.n	800a4b0 <__udivdi3+0x230>
 800a496:	fa06 f604 	lsl.w	r6, r6, r4
 800a49a:	bf14      	ite	ne
 800a49c:	2100      	movne	r1, #0
 800a49e:	2101      	moveq	r1, #1
 800a4a0:	4296      	cmp	r6, r2
 800a4a2:	bf2c      	ite	cs
 800a4a4:	2600      	movcs	r6, #0
 800a4a6:	f001 0601 	andcc.w	r6, r1, #1
 800a4aa:	2e00      	cmp	r6, #0
 800a4ac:	f43f af40 	beq.w	800a330 <__udivdi3+0xb0>
 800a4b0:	2600      	movs	r6, #0
 800a4b2:	3801      	subs	r0, #1
 800a4b4:	4631      	mov	r1, r6
 800a4b6:	b003      	add	sp, #12
 800a4b8:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 800a4bc:	409c      	lsls	r4, r3
 800a4be:	f1c3 0920 	rsb	r9, r3, #32
 800a4c2:	fa25 fa09 	lsr.w	sl, r5, r9
 800a4c6:	fa06 f703 	lsl.w	r7, r6, r3
 800a4ca:	ea4f 4814 	mov.w	r8, r4, lsr #16
 800a4ce:	4650      	mov	r0, sl
 800a4d0:	4641      	mov	r1, r8
 800a4d2:	409d      	lsls	r5, r3
 800a4d4:	f7fe ff0c 	bl	80092f0 <__aeabi_uidiv>
 800a4d8:	4641      	mov	r1, r8
 800a4da:	fa26 f909 	lsr.w	r9, r6, r9
 800a4de:	ea49 0905 	orr.w	r9, r9, r5
 800a4e2:	4683      	mov	fp, r0
 800a4e4:	4650      	mov	r0, sl
 800a4e6:	f7ff f831 	bl	800954c <__aeabi_uidivmod>
 800a4ea:	fa1f fa84 	uxth.w	sl, r4
 800a4ee:	ea4f 4319 	mov.w	r3, r9, lsr #16
 800a4f2:	fb0a f00b 	mul.w	r0, sl, fp
 800a4f6:	ea43 4101 	orr.w	r1, r3, r1, lsl #16
 800a4fa:	4288      	cmp	r0, r1
 800a4fc:	d909      	bls.n	800a512 <__udivdi3+0x292>
 800a4fe:	1909      	adds	r1, r1, r4
 800a500:	f10b 33ff 	add.w	r3, fp, #4294967295
 800a504:	d23a      	bcs.n	800a57c <__udivdi3+0x2fc>
 800a506:	4288      	cmp	r0, r1
 800a508:	bf84      	itt	hi
 800a50a:	f1ab 0b02 	subhi.w	fp, fp, #2
 800a50e:	1909      	addhi	r1, r1, r4
 800a510:	d934      	bls.n	800a57c <__udivdi3+0x2fc>
 800a512:	1a0d      	subs	r5, r1, r0
 800a514:	4641      	mov	r1, r8
 800a516:	4628      	mov	r0, r5
 800a518:	fa1f f989 	uxth.w	r9, r9
 800a51c:	f7fe fee8 	bl	80092f0 <__aeabi_uidiv>
 800a520:	4641      	mov	r1, r8
 800a522:	4606      	mov	r6, r0
 800a524:	4628      	mov	r0, r5
 800a526:	f7ff f811 	bl	800954c <__aeabi_uidivmod>
 800a52a:	fb0a f506 	mul.w	r5, sl, r6
 800a52e:	ea49 4101 	orr.w	r1, r9, r1, lsl #16
 800a532:	428d      	cmp	r5, r1
 800a534:	d909      	bls.n	800a54a <__udivdi3+0x2ca>
 800a536:	1909      	adds	r1, r1, r4
 800a538:	f106 33ff 	add.w	r3, r6, #4294967295
 800a53c:	d204      	bcs.n	800a548 <__udivdi3+0x2c8>
 800a53e:	428d      	cmp	r5, r1
 800a540:	bf84      	itt	hi
 800a542:	3e02      	subhi	r6, #2
 800a544:	1909      	addhi	r1, r1, r4
 800a546:	d800      	bhi.n	800a54a <__udivdi3+0x2ca>
 800a548:	461e      	mov	r6, r3
 800a54a:	1b4d      	subs	r5, r1, r5
 800a54c:	ea46 460b 	orr.w	r6, r6, fp, lsl #16
 800a550:	e718      	b.n	800a384 <__udivdi3+0x104>
 800a552:	461e      	mov	r6, r3
 800a554:	e6e9      	b.n	800a32a <__udivdi3+0xaa>
 800a556:	4691      	mov	r9, r2
 800a558:	e730      	b.n	800a3bc <__udivdi3+0x13c>
 800a55a:	461d      	mov	r5, r3
 800a55c:	e74a      	b.n	800a3f4 <__udivdi3+0x174>
 800a55e:	428a      	cmp	r2, r1
 800a560:	bf84      	itt	hi
 800a562:	f1aa 0a02 	subhi.w	sl, sl, #2
 800a566:	4441      	addhi	r1, r8
 800a568:	d88d      	bhi.n	800a486 <__udivdi3+0x206>
 800a56a:	e78b      	b.n	800a484 <__udivdi3+0x204>
 800a56c:	42b8      	cmp	r0, r7
 800a56e:	bf84      	itt	hi
 800a570:	f1ab 0b02 	subhi.w	fp, fp, #2
 800a574:	4447      	addhi	r7, r8
 800a576:	f63f af6d 	bhi.w	800a454 <__udivdi3+0x1d4>
 800a57a:	e76a      	b.n	800a452 <__udivdi3+0x1d2>
 800a57c:	469b      	mov	fp, r3
 800a57e:	e7c8      	b.n	800a512 <__udivdi3+0x292>

Disassembly of section .ARM.exidx:

0800a580 <.ARM.exidx>:
 800a580:	7ffff9ac 	svcvc	0x00fff9ac
 800a584:	00000001 	andeq	r0, r0, r1

Disassembly of section .rodata:

0800a588 <__RO_BASE__>:
 800a588:	40020008 	andmi	r0, r2, r8
 800a58c:	4002001c 	andmi	r0, r2, ip, lsl r0
 800a590:	40020030 	andmi	r0, r2, r0, lsr r0
 800a594:	40020044 	andmi	r0, r2, r4, asr #32
 800a598:	40020058 	andmi	r0, r2, r8, asr r0
 800a59c:	4002006c 	andmi	r0, r2, ip, rrx
 800a5a0:	40020080 	andmi	r0, r2, r0, lsl #1

0800a5a4 <Stack_reg>:
 800a5a4:	0800a990 	stmdaeq	r0, {r4, r7, r8, fp, sp, pc}
 800a5a8:	0800a994 	stmdaeq	r0, {r2, r4, r7, r8, fp, sp, pc}
 800a5ac:	0800a998 	stmdaeq	r0, {r3, r4, r7, r8, fp, sp, pc}
 800a5b0:	0800a99c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp, sp, pc}
 800a5b4:	0800a9a0 	stmdaeq	r0, {r5, r7, r8, fp, sp, pc}
 800a5b8:	0800a9a4 	stmdaeq	r0, {r2, r5, r7, r8, fp, sp, pc}
 800a5bc:	0800a9a8 	stmdaeq	r0, {r3, r5, r7, r8, fp, sp, pc}
 800a5c0:	0800a9ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp, sp, pc}

0800a5c4 <_global_impure_ptr>:
 800a5c4:	20000008 	andcs	r0, r0, r8

0800a5c8 <blanks.6752>:
 800a5c8:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a5cc:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a5d0:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a5d4:	20202020 	eorcs	r2, r0, r0, lsr #32

0800a5d8 <zeroes.6753>:
 800a5d8:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a5dc:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a5e0:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a5e4:	30303030 	eorscc	r3, r0, r0, lsr r0

0800a5e8 <p05.5301>:
 800a5e8:	00000005 	andeq	r0, r0, r5
 800a5ec:	00000019 	andeq	r0, r0, r9, lsl r0
 800a5f0:	0000007d 	andeq	r0, r0, sp, ror r0
 800a5f4:	00000000 	andeq	r0, r0, r0

0800a5f8 <__mprec_tens>:
 800a5f8:	00000000 	andeq	r0, r0, r0
 800a5fc:	3ff00000 	svccc	0x00f00000	; IMB
 800a600:	00000000 	andeq	r0, r0, r0
 800a604:	40240000 	eormi	r0, r4, r0
 800a608:	00000000 	andeq	r0, r0, r0
 800a60c:	40590000 	subsmi	r0, r9, r0
 800a610:	00000000 	andeq	r0, r0, r0
 800a614:	408f4000 	addmi	r4, pc, r0
 800a618:	00000000 	andeq	r0, r0, r0
 800a61c:	40c38800 	sbcmi	r8, r3, r0, lsl #16
 800a620:	00000000 	andeq	r0, r0, r0
 800a624:	40f86a00 	rscsmi	r6, r8, r0, lsl #20
 800a628:	00000000 	andeq	r0, r0, r0
 800a62c:	412e8480 	smlawbmi	lr, r0, r4, r8
 800a630:	00000000 	andeq	r0, r0, r0
 800a634:	416312d0 	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
 800a638:	00000000 	andeq	r0, r0, r0
 800a63c:	4197d784 	orrsmi	sp, r7, r4, lsl #15
 800a640:	00000000 	andeq	r0, r0, r0
 800a644:	41cdcd65 	bicmi	ip, sp, r5, ror #26
 800a648:	20000000 	andcs	r0, r0, r0
 800a64c:	4202a05f 	andmi	sl, r2, #95	; 0x5f
 800a650:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
 800a654:	42374876 	eorsmi	r4, r7, #7733248	; 0x760000
 800a658:	a2000000 	andge	r0, r0, #0
 800a65c:	426d1a94 	rsbmi	r1, sp, #148, 20	; 0x94000
 800a660:	e5400000 	strb	r0, [r0, #-0]
 800a664:	42a2309c 	adcmi	r3, r2, #156	; 0x9c
 800a668:	1e900000 	cdpne	0, 9, cr0, cr0, cr0, {0}
 800a66c:	42d6bcc4 	sbcsmi	fp, r6, #196, 24	; 0xc400
 800a670:	26340000 	ldrtcs	r0, [r4], -r0
 800a674:	430c6bf5 	movwmi	r6, #52213	; 0xcbf5
 800a678:	37e08000 	strbcc	r8, [r0, r0]!
 800a67c:	4341c379 	movtmi	ip, #4985	; 0x1379
 800a680:	85d8a000 	ldrbhi	sl, [r8]
 800a684:	43763457 	cmnmi	r6, #1459617792	; 0x57000000
 800a688:	674ec800 	strbvs	ip, [lr, -r0, lsl #16]
 800a68c:	43abc16d 			; <UNDEFINED> instruction: 0x43abc16d
 800a690:	60913d00 	addsvs	r3, r1, r0, lsl #26
 800a694:	43e158e4 	mvnmi	r5, #228, 16	; 0xe40000
 800a698:	78b58c40 	ldmvc	r5!, {r6, sl, fp, pc}
 800a69c:	4415af1d 	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
 800a6a0:	d6e2ef50 	usatle	lr, #2, r0, asr #30
 800a6a4:	444b1ae4 	strbmi	r1, [fp], #-2788	; 0xfffff51c
 800a6a8:	064dd592 			; <UNDEFINED> instruction: 0x064dd592
 800a6ac:	4480f0cf 	strmi	pc, [r0], #207	; 0xcf
 800a6b0:	c7e14af6 			; <UNDEFINED> instruction: 0xc7e14af6
 800a6b4:	44b52d02 	ldrtmi	r2, [r5], #3330	; 0xd02
 800a6b8:	79d99db4 	ldmibvc	r9, {r2, r4, r5, r7, r8, sl, fp, ip, pc}^
 800a6bc:	44ea7843 	strbtmi	r7, [sl], #2115	; 0x843

0800a6c0 <__mprec_tinytens>:
 800a6c0:	97d889bc 			; <UNDEFINED> instruction: 0x97d889bc
 800a6c4:	3c9cd2b2 	lfmcc	f5, 1, [ip], {178}	; 0xb2
 800a6c8:	d5a8a733 	strle	sl, [r8, #1843]!	; 0x733
 800a6cc:	3949f623 	stmdbcc	r9, {r0, r1, r5, r9, sl, ip, sp, lr, pc}^
 800a6d0:	44f4a73d 	ldrbtmi	sl, [r4], #1853	; 0x73d
 800a6d4:	32a50ffd 	adccc	r0, r5, #1012	; 0x3f4
 800a6d8:	cf8c979d 	svcgt	0x008c979d
 800a6dc:	255bba08 	ldrbcs	fp, [fp, #-2568]	; 0xfffff5f8
 800a6e0:	64ac6f43 	strtvs	r6, [ip], #3907	; 0xf43
 800a6e4:	0ac80628 	beq	720bf8c <__RW_SIZE__+0x720ba08>

0800a6e8 <__mprec_bigtens>:
 800a6e8:	37e08000 	strbcc	r8, [r0, r0]!
 800a6ec:	4341c379 	movtmi	ip, #4985	; 0x1379
 800a6f0:	b5056e17 	strlt	r6, [r5, #-3607]	; 0xfffff1e9
 800a6f4:	4693b8b5 			; <UNDEFINED> instruction: 0x4693b8b5
 800a6f8:	e93ff9f5 	ldmdb	pc!, {r0, r2, r4, r5, r6, r7, r8, fp, ip, sp, lr, pc}	; <UNPREDICTABLE>
 800a6fc:	4d384f03 	ldcmi	15, cr4, [r8, #-12]!
 800a700:	f9301d32 			; <UNDEFINED> instruction: 0xf9301d32
 800a704:	5a827748 	bpl	60a842c <__RW_SIZE__+0x60a7ea8>
 800a708:	7f73bf3c 	svcvc	0x0073bf3c
 800a70c:	75154fdd 	ldrvc	r4, [r5, #-4061]	; 0xfffff023

0800a710 <blanks.6696>:
 800a710:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a714:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a718:	20202020 	eorcs	r2, r0, r0, lsr #32
 800a71c:	20202020 	eorcs	r2, r0, r0, lsr #32

0800a720 <zeroes.6697>:
 800a720:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a724:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a728:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a72c:	30303030 	eorscc	r3, r0, r0, lsr r0
 800a730:	6f6d654d 	svcvs	0x006d654d
 800a734:	43207972 	teqmi	r0, #1867776	; 0x1c8000
 800a738:	2079706f 	rsbscs	r7, r9, pc, rrx
 800a73c:	74736554 	ldrbtvc	r6, [r3], #-1364	; 0xfffffaac
 800a740:	0000000a 	andeq	r0, r0, sl
 800a744:	31747364 	cmncc	r4, r4, ror #6
 800a748:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
 800a74c:	5d64255b 	cfstr64pl	mvdx2, [r4, #-364]!	; 0xfffffe94
 800a750:	25203d20 	strcs	r3, [r0, #-3360]!	; 0xfffff2e0
 800a754:	00000a64 	andeq	r0, r0, r4, ror #20
 800a758:	255b7325 	ldrbcs	r7, [fp, #-805]	; 0xfffffcdb
 800a75c:	252c5d64 	strcs	r5, [ip, #-3428]!	; 0xfffff29c
 800a760:	78303d73 	ldmdavc	r0!, {r0, r1, r4, r5, r6, r8, sl, fp, ip, sp}
 800a764:	58382e25 	ldmdapl	r8!, {r0, r2, r5, r9, sl, fp, sp}
 800a768:	0000000a 	andeq	r0, r0, sl
 800a76c:	61766e49 	cmnvs	r6, r9, asr #28
 800a770:	5f64696c 	svcpl	0x0064696c
 800a774:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
 800a778:	6f697470 	svcvs	0x00697470
 800a77c:	25203a6e 	strcs	r3, [r0, #-2670]!	; 0xfffff592
 800a780:	000a2164 	andeq	r2, sl, r4, ror #2
 800a784:	61766e49 	cmnvs	r6, r9, asr #28
 800a788:	5f64696c 	svcpl	0x0064696c
 800a78c:	3a525349 	bcc	949f4b8 <__RO_LIMIT__+0x1494aa0>
 800a790:	21642520 	cmncs	r4, r0, lsr #10
 800a794:	0000000a 	andeq	r0, r0, sl
 800a798:	21494d4e 	cmpcs	r9, lr, asr #26
 800a79c:	0000000a 	andeq	r0, r0, sl
 800a7a0:	64726148 	ldrbtvs	r6, [r2], #-328	; 0xfffffeb8
 800a7a4:	75614620 	strbvc	r4, [r1, #-1568]!	; 0xfffff9e0
 800a7a8:	0a21746c 	beq	8867960 <__RO_LIMIT__+0x85cf48>
 800a7ac:	00000000 	andeq	r0, r0, r0
 800a7b0:	4528524c 	strmi	r5, [r8, #-588]!	; 0xfffffdb4
 800a7b4:	525f4358 	subspl	r4, pc, #88, 6	; 0x60000001
 800a7b8:	52555445 	subspl	r5, r5, #1157627904	; 0x45000000
 800a7bc:	303d294e 	eorscc	r2, sp, lr, asr #18
 800a7c0:	382e2578 	stmdacc	lr!, {r3, r4, r5, r6, r8, sl, sp}
 800a7c4:	00000a58 	andeq	r0, r0, r8, asr sl
 800a7c8:	3d50534d 	ldclcc	3, cr5, [r0, #-308]	; 0xfffffecc
 800a7cc:	2e257830 	mcrcs	8, 1, r7, cr5, cr0, {1}
 800a7d0:	000a5838 	andeq	r5, sl, r8, lsr r8
 800a7d4:	3d505350 	ldclcc	3, cr5, [r0, #-320]	; 0xfffffec0
 800a7d8:	2e257830 	mcrcs	8, 1, r7, cr5, cr0, {1}
 800a7dc:	000a5838 	andeq	r5, sl, r8, lsr r8
 800a7e0:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
 800a7e4:	6f697470 	svcvs	0x00697470
 800a7e8:	636f206e 	cmnvs	pc, #110	; 0x6e
 800a7ec:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
 800a7f0:	6f726620 	svcvs	0x00726620
 800a7f4:	6168206d 	cmnvs	r8, sp, rrx
 800a7f8:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 800a7fc:	6f6d2072 	svcvs	0x006d2072
 800a800:	000a6564 	andeq	r6, sl, r4, ror #10
 800a804:	0050534d 	subseq	r5, r0, sp, asr #6
 800a808:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
 800a80c:	6f697470 	svcvs	0x00697470
 800a810:	636f206e 	cmnvs	pc, #110	; 0x6e
 800a814:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
 800a818:	6f726620 	svcvs	0x00726620
 800a81c:	6874206d 	ldmdavs	r4!, {r0, r2, r3, r5, r6, sp}^
 800a820:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 800a824:	646f6d20 	strbtvs	r6, [pc], #-3360	; 800a82c <zeroes.6697+0x10c>
 800a828:	69772065 	ldmdbvs	r7!, {r0, r2, r5, r6, sp}^
 800a82c:	4d206874 	stcmi	8, cr6, [r0, #-464]!	; 0xfffffe30
 800a830:	000a5053 	andeq	r5, sl, r3, asr r0
 800a834:	65637845 	strbvs	r7, [r3, #-2117]!	; 0xfffff7bb
 800a838:	6f697470 	svcvs	0x00697470
 800a83c:	636f206e 	cmnvs	pc, #110	; 0x6e
 800a840:	73727563 	cmnvc	r2, #415236096	; 0x18c00000
 800a844:	6f726620 	svcvs	0x00726620
 800a848:	6874206d 	ldmdavs	r4!, {r0, r2, r3, r5, r6, sp}^
 800a84c:	64616572 	strbtvs	r6, [r1], #-1394	; 0xfffffa8e
 800a850:	646f6d20 	strbtvs	r6, [pc], #-3360	; 800a858 <zeroes.6697+0x138>
 800a854:	69772065 	ldmdbvs	r7!, {r0, r2, r5, r6, sp}^
 800a858:	50206874 	eorpl	r6, r0, r4, ror r8
 800a85c:	000a5053 	andeq	r5, sl, r3, asr r0
 800a860:	00505350 	subseq	r5, r0, r0, asr r3
 800a864:	61766e49 	cmnvs	r6, r9, asr #28
 800a868:	2064696c 	rsbcs	r6, r4, ip, ror #18
 800a86c:	65637865 	strbvs	r7, [r3, #-2149]!	; 0xfffff79b
 800a870:	6f697470 	svcvs	0x00697470
 800a874:	6572206e 	ldrbvs	r2, [r2, #-110]!	; 0xffffff92
 800a878:	6e727574 	mrcvs	5, 3, r7, cr2, cr4, {3}
 800a87c:	6c617620 	stclvs	6, cr7, [r1], #-128	; 0xffffff80
 800a880:	3d206575 	cfstr32cc	mvfx6, [r0, #-468]!	; 0xfffffe2c
 800a884:	2325203e 	teqcs	r5, #62	; 0x3e
 800a888:	0a58382e 	beq	9618948 <__RO_LIMIT__+0x160df30>
 800a88c:	00000000 	andeq	r0, r0, r0
 800a890:	53434853 	movtpl	r4, #14419	; 0x3853
 800a894:	3e3d2052 	mrccc	0, 1, r2, cr13, cr2, {2}
 800a898:	2e232520 	cfsh64cs	mvdx2, mvdx3, #16
 800a89c:	000a5838 	andeq	r5, sl, r8, lsr r8
 800a8a0:	52534643 	subspl	r4, r3, #70254592	; 0x4300000
 800a8a4:	75614628 	strbvc	r4, [r1, #-1576]!	; 0xfffff9d8
 800a8a8:	5220746c 	eorpl	r7, r0, #108, 8	; 0x6c000000
 800a8ac:	6f736165 	svcvs	0x00736165
 800a8b0:	3d20296e 	stccc	9, cr2, [r0, #-440]!	; 0xfffffe48
 800a8b4:	2325203e 	teqcs	r5, #62	; 0x3e
 800a8b8:	0a58382e 	beq	9618978 <__RO_LIMIT__+0x160df60>
 800a8bc:	00000000 	andeq	r0, r0, r0
 800a8c0:	41464d4d 	cmpmi	r6, sp, asr #26
 800a8c4:	61562052 	cmpvs	r6, r2, asr r0
 800a8c8:	2064696c 	rsbcs	r6, r4, ip, ror #18
 800a8cc:	25203e3d 	strcs	r3, [r0, #-3645]!	; 0xfffff1c3
 800a8d0:	00000a64 	andeq	r0, r0, r4, ror #20
 800a8d4:	41464d4d 	cmpmi	r6, sp, asr #26
 800a8d8:	3e3d2052 	mrccc	0, 1, r2, cr13, cr2, {2}
 800a8dc:	2e232520 	cfsh64cs	mvdx2, mvdx3, #16
 800a8e0:	000a5838 	andeq	r5, sl, r8, lsr r8
 800a8e4:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
 800a8e8:	6c615620 	stclvs	6, cr5, [r1], #-128	; 0xffffff80
 800a8ec:	3d206469 	cfstrscc	mvf6, [r0, #-420]!	; 0xfffffe5c
 800a8f0:	6425203e 	strtvs	r2, [r5], #-62	; 0xffffffc2
 800a8f4:	0000000a 	andeq	r0, r0, sl
 800a8f8:	52414642 	subpl	r4, r1, #69206016	; 0x4200000
 800a8fc:	203e3d20 	eorscs	r3, lr, r0, lsr #26
 800a900:	382e2325 	stmdacc	lr!, {r0, r2, r5, r8, r9, sp}
 800a904:	00000a58 	andeq	r0, r0, r8, asr sl
 800a908:	52534648 	subspl	r4, r3, #72, 12	; 0x4800000
 800a90c:	72614828 	rsbvc	r4, r1, #40, 16	; 0x280000
 800a910:	61462064 	cmpvs	r6, r4, rrx
 800a914:	20746c75 	rsbscs	r6, r4, r5, ror ip
 800a918:	73616552 	cmnvc	r1, #343932928	; 0x14800000
 800a91c:	20296e6f 	eorcs	r6, r9, pc, ror #28
 800a920:	25203e3d 	strcs	r3, [r0, #-3645]!	; 0xfffff1c3
 800a924:	58382e23 	ldmdapl	r8!, {r0, r1, r5, r9, sl, fp, sp}
 800a928:	0000000a 	andeq	r0, r0, sl
 800a92c:	6f6d654d 	svcvs	0x006d654d
 800a930:	4d207972 	stcmi	9, cr7, [r0, #-456]!	; 0xfffffe38
 800a934:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
 800a938:	6e656d65 	cdpvs	13, 6, cr6, cr5, cr5, {3}
 800a93c:	61462074 	hvcvs	25092	; 0x6204
 800a940:	21746c75 	cmncs	r4, r5, ror ip
 800a944:	0000000a 	andeq	r0, r0, sl
 800a948:	20737542 	rsbscs	r7, r3, r2, asr #10
 800a94c:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
 800a950:	000a2174 	andeq	r2, sl, r4, ror r1
 800a954:	67617355 			; <UNDEFINED> instruction: 0x67617355
 800a958:	61462065 	cmpvs	r6, r5, rrx
 800a95c:	21746c75 	cmncs	r4, r5, ror ip
 800a960:	0000000a 	andeq	r0, r0, sl
 800a964:	20435653 	subcs	r5, r3, r3, asr r6
 800a968:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
 800a96c:	0000000a 	andeq	r0, r0, sl
 800a970:	75626544 	strbvc	r6, [r2, #-1348]!	; 0xfffffabc
 800a974:	6e6f4d67 	cdpvs	13, 6, cr4, cr15, cr7, {3}
 800a978:	6c614320 	stclvs	3, cr4, [r1], #-128	; 0xffffff80
 800a97c:	00000a6c 	andeq	r0, r0, ip, ror #20
 800a980:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
 800a984:	43205653 	teqmi	r0, #87031808	; 0x5300000
 800a988:	0a6c6c61 	beq	9b25b14 <__RO_LIMIT__+0x1b1b0fc>
 800a98c:	00000000 	andeq	r0, r0, r0
 800a990:	00003052 	andeq	r3, r0, r2, asr r0
 800a994:	00003152 	andeq	r3, r0, r2, asr r1
 800a998:	00003252 	andeq	r3, r0, r2, asr r2
 800a99c:	00003352 	andeq	r3, r0, r2, asr r3
 800a9a0:	00323152 	eorseq	r3, r2, r2, asr r1
 800a9a4:	0000524c 	andeq	r5, r0, ip, asr #4
 800a9a8:	00004152 	andeq	r4, r0, r2, asr r1
 800a9ac:	52535078 	subspl	r5, r3, #120	; 0x78
 800a9b0:	00000000 	andeq	r0, r0, r0
 800a9b4:	00000043 	andeq	r0, r0, r3, asr #32
 800a9b8:	00464e49 	subeq	r4, r6, r9, asr #28
 800a9bc:	00666e69 	rsbeq	r6, r6, r9, ror #28
 800a9c0:	004e414e 	subeq	r4, lr, lr, asr #2
 800a9c4:	006e616e 	rsbeq	r6, lr, lr, ror #2
 800a9c8:	33323130 	teqcc	r2, #48, 2
 800a9cc:	37363534 			; <UNDEFINED> instruction: 0x37363534
 800a9d0:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
 800a9d4:	46454443 	strbmi	r4, [r5], -r3, asr #8
 800a9d8:	00000000 	andeq	r0, r0, r0
 800a9dc:	33323130 	teqcc	r2, #48, 2
 800a9e0:	37363534 			; <UNDEFINED> instruction: 0x37363534
 800a9e4:	62613938 	rsbvs	r3, r1, #56, 18	; 0xe0000
 800a9e8:	66656463 	strbtvs	r6, [r5], -r3, ror #8
 800a9ec:	00000000 	andeq	r0, r0, r0
 800a9f0:	6c756e28 	ldclvs	14, cr6, [r5], #-160	; 0xffffff60
 800a9f4:	0000296c 	andeq	r2, r0, ip, ror #18
 800a9f8:	00000030 	andeq	r0, r0, r0, lsr r0
 800a9fc:	69666e49 	stmdbvs	r6!, {r0, r3, r6, r9, sl, fp, sp, lr}^
 800aa00:	7974696e 	ldmdbvc	r4!, {r1, r2, r3, r5, r6, r8, fp, sp, lr}^
 800aa04:	00000000 	andeq	r0, r0, r0
 800aa08:	004e614e 	subeq	r6, lr, lr, asr #2
 800aa0c:	49534f50 	ldmdbmi	r3, {r4, r6, r8, r9, sl, fp, lr}^
 800aa10:	00000058 	andeq	r0, r0, r8, asr r0
 800aa14:	0000002e 	andeq	r0, r0, lr, lsr #32

Disassembly of section .data:

20000000 <__RW_BASE__>:
20000000:	00000002 	andeq	r0, r0, r2

20000004 <_impure_ptr>:
20000004:	20000008 	andcs	r0, r0, r8

20000008 <impure_data>:
	...
20000028:	0800a9b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, fp, sp, pc}
	...

200000f8 <lc_ctype_charset>:
200000f8:	49435341 	stmdbmi	r3, {r0, r6, r8, r9, ip, lr}^
200000fc:	00000049 	andeq	r0, r0, r9, asr #32
	...

20000118 <__mb_cur_max>:
20000118:	00000001 	andeq	r0, r0, r1

2000011c <lc_message_charset>:
2000011c:	49435341 	stmdbmi	r3, {r0, r6, r8, r9, ip, lr}^
20000120:	00000049 	andeq	r0, r0, r9, asr #32
	...

2000013c <lconv>:
2000013c:	0800aa14 	stmdaeq	r0, {r2, r4, r9, fp, sp, pc}
20000140:	0800a7ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, sp, pc}
20000144:	0800a7ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, sp, pc}
20000148:	0800a7ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, sp, pc}
2000014c:	0800a7ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, sp, pc}
20000150:	0800a7ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, sp, pc}
20000154:	0800a7ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, sp, pc}
20000158:	0800a7ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, sp, pc}
2000015c:	0800a7ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, sp, pc}
20000160:	0800a7ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, sp, pc}
20000164:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20000168:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
2000016c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
20000170:	0000ffff 	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>

20000174 <__malloc_av_>:
	...
2000017c:	20000174 	andcs	r0, r0, r4, ror r1
20000180:	20000174 	andcs	r0, r0, r4, ror r1
20000184:	2000017c 	andcs	r0, r0, ip, ror r1
20000188:	2000017c 	andcs	r0, r0, ip, ror r1
2000018c:	20000184 	andcs	r0, r0, r4, lsl #3
20000190:	20000184 	andcs	r0, r0, r4, lsl #3
20000194:	2000018c 	andcs	r0, r0, ip, lsl #3
20000198:	2000018c 	andcs	r0, r0, ip, lsl #3
2000019c:	20000194 	mulcs	r0, r4, r1
200001a0:	20000194 	mulcs	r0, r4, r1
200001a4:	2000019c 	mulcs	r0, ip, r1
200001a8:	2000019c 	mulcs	r0, ip, r1
200001ac:	200001a4 	andcs	r0, r0, r4, lsr #3
200001b0:	200001a4 	andcs	r0, r0, r4, lsr #3
200001b4:	200001ac 	andcs	r0, r0, ip, lsr #3
200001b8:	200001ac 	andcs	r0, r0, ip, lsr #3
200001bc:	200001b4 			; <UNDEFINED> instruction: 0x200001b4
200001c0:	200001b4 			; <UNDEFINED> instruction: 0x200001b4
200001c4:	200001bc 			; <UNDEFINED> instruction: 0x200001bc
200001c8:	200001bc 			; <UNDEFINED> instruction: 0x200001bc
200001cc:	200001c4 	andcs	r0, r0, r4, asr #3
200001d0:	200001c4 	andcs	r0, r0, r4, asr #3
200001d4:	200001cc 	andcs	r0, r0, ip, asr #3
200001d8:	200001cc 	andcs	r0, r0, ip, asr #3
200001dc:	200001d4 	ldrdcs	r0, [r0], -r4
200001e0:	200001d4 	ldrdcs	r0, [r0], -r4
200001e4:	200001dc 	ldrdcs	r0, [r0], -ip
200001e8:	200001dc 	ldrdcs	r0, [r0], -ip
200001ec:	200001e4 	andcs	r0, r0, r4, ror #3
200001f0:	200001e4 	andcs	r0, r0, r4, ror #3
200001f4:	200001ec 	andcs	r0, r0, ip, ror #3
200001f8:	200001ec 	andcs	r0, r0, ip, ror #3
200001fc:	200001f4 	strdcs	r0, [r0], -r4
20000200:	200001f4 	strdcs	r0, [r0], -r4
20000204:	200001fc 	strdcs	r0, [r0], -ip
20000208:	200001fc 	strdcs	r0, [r0], -ip
2000020c:	20000204 	andcs	r0, r0, r4, lsl #4
20000210:	20000204 	andcs	r0, r0, r4, lsl #4
20000214:	2000020c 	andcs	r0, r0, ip, lsl #4
20000218:	2000020c 	andcs	r0, r0, ip, lsl #4
2000021c:	20000214 	andcs	r0, r0, r4, lsl r2
20000220:	20000214 	andcs	r0, r0, r4, lsl r2
20000224:	2000021c 	andcs	r0, r0, ip, lsl r2
20000228:	2000021c 	andcs	r0, r0, ip, lsl r2
2000022c:	20000224 	andcs	r0, r0, r4, lsr #4
20000230:	20000224 	andcs	r0, r0, r4, lsr #4
20000234:	2000022c 	andcs	r0, r0, ip, lsr #4
20000238:	2000022c 	andcs	r0, r0, ip, lsr #4
2000023c:	20000234 	andcs	r0, r0, r4, lsr r2
20000240:	20000234 	andcs	r0, r0, r4, lsr r2
20000244:	2000023c 	andcs	r0, r0, ip, lsr r2
20000248:	2000023c 	andcs	r0, r0, ip, lsr r2
2000024c:	20000244 	andcs	r0, r0, r4, asr #4
20000250:	20000244 	andcs	r0, r0, r4, asr #4
20000254:	2000024c 	andcs	r0, r0, ip, asr #4
20000258:	2000024c 	andcs	r0, r0, ip, asr #4
2000025c:	20000254 	andcs	r0, r0, r4, asr r2
20000260:	20000254 	andcs	r0, r0, r4, asr r2
20000264:	2000025c 	andcs	r0, r0, ip, asr r2
20000268:	2000025c 	andcs	r0, r0, ip, asr r2
2000026c:	20000264 	andcs	r0, r0, r4, ror #4
20000270:	20000264 	andcs	r0, r0, r4, ror #4
20000274:	2000026c 	andcs	r0, r0, ip, ror #4
20000278:	2000026c 	andcs	r0, r0, ip, ror #4
2000027c:	20000274 	andcs	r0, r0, r4, ror r2
20000280:	20000274 	andcs	r0, r0, r4, ror r2
20000284:	2000027c 	andcs	r0, r0, ip, ror r2
20000288:	2000027c 	andcs	r0, r0, ip, ror r2
2000028c:	20000284 	andcs	r0, r0, r4, lsl #5
20000290:	20000284 	andcs	r0, r0, r4, lsl #5
20000294:	2000028c 	andcs	r0, r0, ip, lsl #5
20000298:	2000028c 	andcs	r0, r0, ip, lsl #5
2000029c:	20000294 	mulcs	r0, r4, r2
200002a0:	20000294 	mulcs	r0, r4, r2
200002a4:	2000029c 	mulcs	r0, ip, r2
200002a8:	2000029c 	mulcs	r0, ip, r2
200002ac:	200002a4 	andcs	r0, r0, r4, lsr #5
200002b0:	200002a4 	andcs	r0, r0, r4, lsr #5
200002b4:	200002ac 	andcs	r0, r0, ip, lsr #5
200002b8:	200002ac 	andcs	r0, r0, ip, lsr #5
200002bc:	200002b4 			; <UNDEFINED> instruction: 0x200002b4
200002c0:	200002b4 			; <UNDEFINED> instruction: 0x200002b4
200002c4:	200002bc 			; <UNDEFINED> instruction: 0x200002bc
200002c8:	200002bc 			; <UNDEFINED> instruction: 0x200002bc
200002cc:	200002c4 	andcs	r0, r0, r4, asr #5
200002d0:	200002c4 	andcs	r0, r0, r4, asr #5
200002d4:	200002cc 	andcs	r0, r0, ip, asr #5
200002d8:	200002cc 	andcs	r0, r0, ip, asr #5
200002dc:	200002d4 	ldrdcs	r0, [r0], -r4
200002e0:	200002d4 	ldrdcs	r0, [r0], -r4
200002e4:	200002dc 	ldrdcs	r0, [r0], -ip
200002e8:	200002dc 	ldrdcs	r0, [r0], -ip
200002ec:	200002e4 	andcs	r0, r0, r4, ror #5
200002f0:	200002e4 	andcs	r0, r0, r4, ror #5
200002f4:	200002ec 	andcs	r0, r0, ip, ror #5
200002f8:	200002ec 	andcs	r0, r0, ip, ror #5
200002fc:	200002f4 	strdcs	r0, [r0], -r4
20000300:	200002f4 	strdcs	r0, [r0], -r4
20000304:	200002fc 	strdcs	r0, [r0], -ip
20000308:	200002fc 	strdcs	r0, [r0], -ip
2000030c:	20000304 	andcs	r0, r0, r4, lsl #6
20000310:	20000304 	andcs	r0, r0, r4, lsl #6
20000314:	2000030c 	andcs	r0, r0, ip, lsl #6
20000318:	2000030c 	andcs	r0, r0, ip, lsl #6
2000031c:	20000314 	andcs	r0, r0, r4, lsl r3
20000320:	20000314 	andcs	r0, r0, r4, lsl r3
20000324:	2000031c 	andcs	r0, r0, ip, lsl r3
20000328:	2000031c 	andcs	r0, r0, ip, lsl r3
2000032c:	20000324 	andcs	r0, r0, r4, lsr #6
20000330:	20000324 	andcs	r0, r0, r4, lsr #6
20000334:	2000032c 	andcs	r0, r0, ip, lsr #6
20000338:	2000032c 	andcs	r0, r0, ip, lsr #6
2000033c:	20000334 	andcs	r0, r0, r4, lsr r3
20000340:	20000334 	andcs	r0, r0, r4, lsr r3
20000344:	2000033c 	andcs	r0, r0, ip, lsr r3
20000348:	2000033c 	andcs	r0, r0, ip, lsr r3
2000034c:	20000344 	andcs	r0, r0, r4, asr #6
20000350:	20000344 	andcs	r0, r0, r4, asr #6
20000354:	2000034c 	andcs	r0, r0, ip, asr #6
20000358:	2000034c 	andcs	r0, r0, ip, asr #6
2000035c:	20000354 	andcs	r0, r0, r4, asr r3
20000360:	20000354 	andcs	r0, r0, r4, asr r3
20000364:	2000035c 	andcs	r0, r0, ip, asr r3
20000368:	2000035c 	andcs	r0, r0, ip, asr r3
2000036c:	20000364 	andcs	r0, r0, r4, ror #6
20000370:	20000364 	andcs	r0, r0, r4, ror #6
20000374:	2000036c 	andcs	r0, r0, ip, ror #6
20000378:	2000036c 	andcs	r0, r0, ip, ror #6
2000037c:	20000374 	andcs	r0, r0, r4, ror r3
20000380:	20000374 	andcs	r0, r0, r4, ror r3
20000384:	2000037c 	andcs	r0, r0, ip, ror r3
20000388:	2000037c 	andcs	r0, r0, ip, ror r3
2000038c:	20000384 	andcs	r0, r0, r4, lsl #7
20000390:	20000384 	andcs	r0, r0, r4, lsl #7
20000394:	2000038c 	andcs	r0, r0, ip, lsl #7
20000398:	2000038c 	andcs	r0, r0, ip, lsl #7
2000039c:	20000394 	mulcs	r0, r4, r3
200003a0:	20000394 	mulcs	r0, r4, r3
200003a4:	2000039c 	mulcs	r0, ip, r3
200003a8:	2000039c 	mulcs	r0, ip, r3
200003ac:	200003a4 	andcs	r0, r0, r4, lsr #7
200003b0:	200003a4 	andcs	r0, r0, r4, lsr #7
200003b4:	200003ac 	andcs	r0, r0, ip, lsr #7
200003b8:	200003ac 	andcs	r0, r0, ip, lsr #7
200003bc:	200003b4 			; <UNDEFINED> instruction: 0x200003b4
200003c0:	200003b4 			; <UNDEFINED> instruction: 0x200003b4
200003c4:	200003bc 			; <UNDEFINED> instruction: 0x200003bc
200003c8:	200003bc 			; <UNDEFINED> instruction: 0x200003bc
200003cc:	200003c4 	andcs	r0, r0, r4, asr #7
200003d0:	200003c4 	andcs	r0, r0, r4, asr #7
200003d4:	200003cc 	andcs	r0, r0, ip, asr #7
200003d8:	200003cc 	andcs	r0, r0, ip, asr #7
200003dc:	200003d4 	ldrdcs	r0, [r0], -r4
200003e0:	200003d4 	ldrdcs	r0, [r0], -r4
200003e4:	200003dc 	ldrdcs	r0, [r0], -ip
200003e8:	200003dc 	ldrdcs	r0, [r0], -ip
200003ec:	200003e4 	andcs	r0, r0, r4, ror #7
200003f0:	200003e4 	andcs	r0, r0, r4, ror #7
200003f4:	200003ec 	andcs	r0, r0, ip, ror #7
200003f8:	200003ec 	andcs	r0, r0, ip, ror #7
200003fc:	200003f4 	strdcs	r0, [r0], -r4
20000400:	200003f4 	strdcs	r0, [r0], -r4
20000404:	200003fc 	strdcs	r0, [r0], -ip
20000408:	200003fc 	strdcs	r0, [r0], -ip
2000040c:	20000404 	andcs	r0, r0, r4, lsl #8
20000410:	20000404 	andcs	r0, r0, r4, lsl #8
20000414:	2000040c 	andcs	r0, r0, ip, lsl #8
20000418:	2000040c 	andcs	r0, r0, ip, lsl #8
2000041c:	20000414 	andcs	r0, r0, r4, lsl r4
20000420:	20000414 	andcs	r0, r0, r4, lsl r4
20000424:	2000041c 	andcs	r0, r0, ip, lsl r4
20000428:	2000041c 	andcs	r0, r0, ip, lsl r4
2000042c:	20000424 	andcs	r0, r0, r4, lsr #8
20000430:	20000424 	andcs	r0, r0, r4, lsr #8
20000434:	2000042c 	andcs	r0, r0, ip, lsr #8
20000438:	2000042c 	andcs	r0, r0, ip, lsr #8
2000043c:	20000434 	andcs	r0, r0, r4, lsr r4
20000440:	20000434 	andcs	r0, r0, r4, lsr r4
20000444:	2000043c 	andcs	r0, r0, ip, lsr r4
20000448:	2000043c 	andcs	r0, r0, ip, lsr r4
2000044c:	20000444 	andcs	r0, r0, r4, asr #8
20000450:	20000444 	andcs	r0, r0, r4, asr #8
20000454:	2000044c 	andcs	r0, r0, ip, asr #8
20000458:	2000044c 	andcs	r0, r0, ip, asr #8
2000045c:	20000454 	andcs	r0, r0, r4, asr r4
20000460:	20000454 	andcs	r0, r0, r4, asr r4
20000464:	2000045c 	andcs	r0, r0, ip, asr r4
20000468:	2000045c 	andcs	r0, r0, ip, asr r4
2000046c:	20000464 	andcs	r0, r0, r4, ror #8
20000470:	20000464 	andcs	r0, r0, r4, ror #8
20000474:	2000046c 	andcs	r0, r0, ip, ror #8
20000478:	2000046c 	andcs	r0, r0, ip, ror #8
2000047c:	20000474 	andcs	r0, r0, r4, ror r4
20000480:	20000474 	andcs	r0, r0, r4, ror r4
20000484:	2000047c 	andcs	r0, r0, ip, ror r4
20000488:	2000047c 	andcs	r0, r0, ip, ror r4
2000048c:	20000484 	andcs	r0, r0, r4, lsl #9
20000490:	20000484 	andcs	r0, r0, r4, lsl #9
20000494:	2000048c 	andcs	r0, r0, ip, lsl #9
20000498:	2000048c 	andcs	r0, r0, ip, lsl #9
2000049c:	20000494 	mulcs	r0, r4, r4
200004a0:	20000494 	mulcs	r0, r4, r4
200004a4:	2000049c 	mulcs	r0, ip, r4
200004a8:	2000049c 	mulcs	r0, ip, r4
200004ac:	200004a4 	andcs	r0, r0, r4, lsr #9
200004b0:	200004a4 	andcs	r0, r0, r4, lsr #9
200004b4:	200004ac 	andcs	r0, r0, ip, lsr #9
200004b8:	200004ac 	andcs	r0, r0, ip, lsr #9
200004bc:	200004b4 			; <UNDEFINED> instruction: 0x200004b4
200004c0:	200004b4 			; <UNDEFINED> instruction: 0x200004b4
200004c4:	200004bc 			; <UNDEFINED> instruction: 0x200004bc
200004c8:	200004bc 			; <UNDEFINED> instruction: 0x200004bc
200004cc:	200004c4 	andcs	r0, r0, r4, asr #9
200004d0:	200004c4 	andcs	r0, r0, r4, asr #9
200004d4:	200004cc 	andcs	r0, r0, ip, asr #9
200004d8:	200004cc 	andcs	r0, r0, ip, asr #9
200004dc:	200004d4 	ldrdcs	r0, [r0], -r4
200004e0:	200004d4 	ldrdcs	r0, [r0], -r4
200004e4:	200004dc 	ldrdcs	r0, [r0], -ip
200004e8:	200004dc 	ldrdcs	r0, [r0], -ip
200004ec:	200004e4 	andcs	r0, r0, r4, ror #9
200004f0:	200004e4 	andcs	r0, r0, r4, ror #9
200004f4:	200004ec 	andcs	r0, r0, ip, ror #9
200004f8:	200004ec 	andcs	r0, r0, ip, ror #9
200004fc:	200004f4 	strdcs	r0, [r0], -r4
20000500:	200004f4 	strdcs	r0, [r0], -r4
20000504:	200004fc 	strdcs	r0, [r0], -ip
20000508:	200004fc 	strdcs	r0, [r0], -ip
2000050c:	20000504 	andcs	r0, r0, r4, lsl #10
20000510:	20000504 	andcs	r0, r0, r4, lsl #10
20000514:	2000050c 	andcs	r0, r0, ip, lsl #10
20000518:	2000050c 	andcs	r0, r0, ip, lsl #10
2000051c:	20000514 	andcs	r0, r0, r4, lsl r5
20000520:	20000514 	andcs	r0, r0, r4, lsl r5
20000524:	2000051c 	andcs	r0, r0, ip, lsl r5
20000528:	2000051c 	andcs	r0, r0, ip, lsl r5
2000052c:	20000524 	andcs	r0, r0, r4, lsr #10
20000530:	20000524 	andcs	r0, r0, r4, lsr #10
20000534:	2000052c 	andcs	r0, r0, ip, lsr #10
20000538:	2000052c 	andcs	r0, r0, ip, lsr #10
2000053c:	20000534 	andcs	r0, r0, r4, lsr r5
20000540:	20000534 	andcs	r0, r0, r4, lsr r5
20000544:	2000053c 	andcs	r0, r0, ip, lsr r5
20000548:	2000053c 	andcs	r0, r0, ip, lsr r5
2000054c:	20000544 	andcs	r0, r0, r4, asr #10
20000550:	20000544 	andcs	r0, r0, r4, asr #10
20000554:	2000054c 	andcs	r0, r0, ip, asr #10
20000558:	2000054c 	andcs	r0, r0, ip, asr #10
2000055c:	20000554 	andcs	r0, r0, r4, asr r5
20000560:	20000554 	andcs	r0, r0, r4, asr r5
20000564:	2000055c 	andcs	r0, r0, ip, asr r5
20000568:	2000055c 	andcs	r0, r0, ip, asr r5
2000056c:	20000564 	andcs	r0, r0, r4, ror #10
20000570:	20000564 	andcs	r0, r0, r4, ror #10
20000574:	2000056c 	andcs	r0, r0, ip, ror #10
20000578:	2000056c 	andcs	r0, r0, ip, ror #10

2000057c <__malloc_sbrk_base>:
2000057c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff

20000580 <__malloc_trim_threshold>:
20000580:	00020000 	andeq	r0, r2, r0

Disassembly of section .bss:

20000584 <__ZI_BASE__>:
	...

200005a0 <src1_dat>:
	...

20000640 <dst1_dat>:
	...

200006e0 <heap.4832>:
200006e0:	00000000 	andeq	r0, r0, r0

200006e4 <SysTick_Flag>:
200006e4:	00000000 	andeq	r0, r0, r0

200006e8 <DMA1_CH_DONE>:
	...

20000708 <Key_Value>:
20000708:	00000000 	andeq	r0, r0, r0

2000070c <TIM4_Expired>:
2000070c:	00000000 	andeq	r0, r0, r0

20000710 <Uart1_Rx_Data>:
20000710:	00000000 	andeq	r0, r0, r0

20000714 <Uart1_Rx_In>:
20000714:	00000000 	andeq	r0, r0, r0

20000718 <_PathLocale>:
20000718:	00000000 	andeq	r0, r0, r0

2000071c <__mlocale_changed>:
2000071c:	00000000 	andeq	r0, r0, r0

20000720 <__nlocale_changed>:
20000720:	00000000 	andeq	r0, r0, r0

20000724 <__malloc_top_pad>:
20000724:	00000000 	andeq	r0, r0, r0

20000728 <__malloc_current_mallinfo>:
	...

20000750 <__malloc_max_sbrked_mem>:
20000750:	00000000 	andeq	r0, r0, r0

20000754 <__malloc_max_total_mem>:
20000754:	00000000 	andeq	r0, r0, r0

20000758 <__ZI_LIMIT__>:
20000758:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	000001c7 	andeq	r0, r0, r7, asr #3
       4:	00000004 	andeq	r0, r0, r4
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	000000b2 	strheq	r0, [r0], -r2
      10:	00003201 	andeq	r3, r0, r1, lsl #4
      14:	00017200 	andeq	r7, r1, r0, lsl #4
      18:	0031ec00 	eorseq	lr, r1, r0, lsl #24
      1c:	00005808 	andeq	r5, r0, r8, lsl #16
      20:	00000000 	andeq	r0, r0, r0
      24:	06010200 	streq	r0, [r1], -r0, lsl #4
      28:	0000006d 	andeq	r0, r0, sp, rrx
      2c:	6b080102 	blvs	20043c <__RW_SIZE__+0x1ffeb8>
      30:	02000000 	andeq	r0, r0, #0
      34:	015c0502 	cmpeq	ip, r2, lsl #10
      38:	02020000 	andeq	r0, r2, #0
      3c:	00004307 	andeq	r4, r0, r7, lsl #6
      40:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
      44:	00000005 	andeq	r0, r0, r5
      48:	0001bb03 	andeq	fp, r1, r3, lsl #22
      4c:	53500300 	cmppl	r0, #0, 6
      50:	02000000 	andeq	r0, r0, #0
      54:	00a00704 	adceq	r0, r0, r4, lsl #14
      58:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
      5c:	00000005 	andeq	r0, r0, r5
      60:	07080200 	streq	r0, [r8, -r0, lsl #4]
      64:	0000009b 	muleq	r0, fp, r0
      68:	69050404 	stmdbvs	r5, {r2, sl}
      6c:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
      70:	00a50704 	adceq	r0, r5, r4, lsl #14
      74:	04020000 	streq	r0, [r2], #-0
      78:	00014807 	andeq	r4, r1, r7, lsl #16
      7c:	00480500 	subeq	r0, r8, r0, lsl #10
      80:	24060000 	strcs	r0, [r6], #-0
      84:	fe038502 	cdp2	5, 0, cr8, cr3, cr2, {0}
      88:	07000000 	streq	r0, [r0, -r0]
      8c:	00524341 	subseq	r4, r2, r1, asr #6
      90:	7d038702 	stcvc	7, cr8, [r3, #-8]
      94:	00000000 	andeq	r0, r0, r0
      98:	00006608 	andeq	r6, r0, r8, lsl #12
      9c:	03880200 	orreq	r0, r8, #0, 4
      a0:	0000007d 	andeq	r0, r0, sp, ror r0
      a4:	00630804 	rsbeq	r0, r3, r4, lsl #16
      a8:	89020000 	stmdbhi	r2, {}	; <UNPREDICTABLE>
      ac:	00007d03 	andeq	r7, r0, r3, lsl #26
      b0:	53070800 	movwpl	r0, #30720	; 0x7800
      b4:	8a020052 	bhi	80204 <__RW_SIZE__+0x7fc80>
      b8:	00007d03 	andeq	r7, r0, r3, lsl #26
      bc:	43070c00 	movwmi	r0, #31744	; 0x7c00
      c0:	8b020052 	blhi	80210 <__RW_SIZE__+0x7fc8c>
      c4:	00007d03 	andeq	r7, r0, r3, lsl #26
      c8:	41071000 	mrsmi	r1, (UNDEF: 7)
      cc:	8c020052 	stchi	0, cr0, [r2], {82}	; 0x52
      d0:	00007d03 	andeq	r7, r0, r3, lsl #26
      d4:	79081400 	stmdbvc	r8, {sl, ip}
      d8:	02000000 	andeq	r0, r0, #0
      dc:	007d038d 	rsbseq	r0, sp, sp, lsl #7
      e0:	07180000 	ldreq	r0, [r8, -r0]
      e4:	0052424f 	subseq	r4, r2, pc, asr #4
      e8:	7d038e02 	stcvc	14, cr8, [r3, #-8]
      ec:	1c000000 	stcne	0, cr0, [r0], {-0}
      f0:	00002d08 	andeq	r2, r0, r8, lsl #26
      f4:	038f0200 	orreq	r0, pc, #0, 4
      f8:	0000007d 	andeq	r0, r0, sp, ror r0
      fc:	18090020 	stmdane	r9, {r5}
     100:	02000000 	andeq	r0, r0, #0
     104:	00820398 	umulleq	r0, r2, r8, r3
     108:	28060000 	stmdacs	r6, {}	; <UNPREDICTABLE>
     10c:	95043402 	strls	r3, [r4, #-1026]	; 0xfffffbfe
     110:	07000001 	streq	r0, [r0, -r1]
     114:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
     118:	007d0436 	rsbseq	r0, sp, r6, lsr r4
     11c:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
     120:	00000013 	andeq	r0, r0, r3, lsl r0
     124:	7d043702 	stcvc	7, cr3, [r4, #-8]
     128:	04000000 	streq	r0, [r0], #-0
     12c:	52494307 	subpl	r4, r9, #469762048	; 0x1c000000
     130:	04380200 	ldrteq	r0, [r8], #-512	; 0xfffffe00
     134:	0000007d 	andeq	r0, r0, sp, ror r0
     138:	00920808 	addseq	r0, r2, r8, lsl #16
     13c:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
     140:	00007d04 	andeq	r7, r0, r4, lsl #26
     144:	3a080c00 	bcc	20314c <__RW_SIZE__+0x202bc8>
     148:	02000000 	andeq	r0, r0, #0
     14c:	007d043a 	rsbseq	r0, sp, sl, lsr r4
     150:	08100000 	ldmdaeq	r0, {}	; <UNPREDICTABLE>
     154:	00000026 	andeq	r0, r0, r6, lsr #32
     158:	7d043b02 	vstrvc	d3, [r4, #-8]
     15c:	14000000 	strne	r0, [r0], #-0
     160:	00008208 	andeq	r8, r0, r8, lsl #4
     164:	043c0200 	ldrteq	r0, [ip], #-512	; 0xfffffe00
     168:	0000007d 	andeq	r0, r0, sp, ror r0
     16c:	008a0818 	addeq	r0, sl, r8, lsl r8
     170:	3d020000 	stccc	0, cr0, [r2, #-0]
     174:	00007d04 	andeq	r7, r0, r4, lsl #26
     178:	0e081c00 	cdpeq	12, 0, cr1, cr8, cr0, {0}
     17c:	02000000 	andeq	r0, r0, #0
     180:	007d043e 	rsbseq	r0, sp, lr, lsr r4
     184:	07200000 	streq	r0, [r0, -r0]!
     188:	00525343 	subseq	r5, r2, r3, asr #6
     18c:	7d043f02 	stcvc	15, cr3, [r4, #-8]
     190:	24000000 	strcs	r0, [r0], #-0
     194:	01660900 	cmneq	r6, r0, lsl #18
     198:	4a020000 	bmi	801a0 <__RW_SIZE__+0x7fc1c>
     19c:	00010a04 	andeq	r0, r1, r4, lsl #20
     1a0:	08010200 	stmdaeq	r1, {r9}
     1a4:	00000074 	andeq	r0, r0, r4, ror r0
     1a8:	0001510a 	andeq	r5, r1, sl, lsl #2
     1ac:	ec030100 	stfs	f0, [r3], {-0}
     1b0:	58080031 	stmdapl	r8, {r0, r4, r5}
     1b4:	01000000 	mrseq	r0, (UNDEF: 0)
     1b8:	00560b9c 			; <UNDEFINED> instruction: 0x00560b9c
     1bc:	ce040000 	cdpgt	0, 0, cr0, cr4, cr0, {0}
     1c0:	0001c506 	andeq	ip, r1, r6, lsl #10
     1c4:	00680500 	rsbeq	r0, r8, r0, lsl #10
     1c8:	05000000 	streq	r0, [r0, #-0]
     1cc:	04000005 	streq	r0, [r0], #-5
     1d0:	00009f00 	andeq	r9, r0, r0, lsl #30
     1d4:	b2010400 	andlt	r0, r1, #0, 8
     1d8:	01000000 	mrseq	r0, (UNDEF: 0)
     1dc:	0000020b 	andeq	r0, r0, fp, lsl #4
     1e0:	00000172 	andeq	r0, r0, r2, ror r1
	...
     1ec:	000000a7 	andeq	r0, r0, r7, lsr #1
     1f0:	6d060102 	stfvss	f0, [r6, #-8]
     1f4:	03000000 	movweq	r0, #0
     1f8:	0000027a 	andeq	r0, r0, sl, ror r2
     1fc:	00372a02 	eorseq	r2, r7, r2, lsl #20
     200:	01020000 	mrseq	r0, (UNDEF: 2)
     204:	00006b08 	andeq	r6, r0, r8, lsl #22
     208:	02d80300 	sbcseq	r0, r8, #0, 6
     20c:	35020000 	strcc	r0, [r2, #-0]
     210:	00000049 	andeq	r0, r0, r9, asr #32
     214:	5c050202 	sfmpl	f0, 4, [r5], {2}
     218:	03000001 	movweq	r0, #1
     21c:	000002d7 	ldrdeq	r0, [r0], -r7
     220:	005b3602 	subseq	r3, fp, r2, lsl #12
     224:	02020000 	andeq	r0, r2, #0
     228:	00004307 	andeq	r4, r0, r7, lsl #6
     22c:	01bc0300 			; <UNDEFINED> instruction: 0x01bc0300
     230:	4f020000 	svcmi	0x00020000
     234:	0000006d 	andeq	r0, r0, sp, rrx
     238:	05050402 	streq	r0, [r5, #-1026]	; 0xfffffbfe
     23c:	03000000 	movweq	r0, #0
     240:	000001bb 			; <UNDEFINED> instruction: 0x000001bb
     244:	007f5002 	rsbseq	r5, pc, r2
     248:	04020000 	streq	r0, [r2], #-0
     24c:	0000a007 	andeq	sl, r0, r7
     250:	05080200 	streq	r0, [r8, #-512]	; 0xfffffe00
     254:	00000000 	andeq	r0, r0, r0
     258:	9b070802 	blls	1c2268 <__RW_SIZE__+0x1c1ce4>
     25c:	04000000 	streq	r0, [r0], #-0
     260:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
     264:	04020074 	streq	r0, [r2], #-116	; 0xffffff8c
     268:	0000a507 	andeq	sl, r0, r7, lsl #10
     26c:	022a0500 	eoreq	r0, sl, #0, 10
     270:	bf010000 	svclt	0x00010000
     274:	00007401 	andeq	r7, r0, r1, lsl #8
     278:	00324400 	eorseq	r4, r2, r0, lsl #8
     27c:	00000808 	andeq	r0, r0, r8, lsl #16
     280:	cd9c0100 	ldfgts	f0, [ip]
     284:	06000000 	streq	r0, [r0], -r0
     288:	00000282 	andeq	r0, r0, r2, lsl #5
     28c:	7401c101 	strvc	ip, [r1], #-257	; 0xfffffeff
	...
     298:	00023407 	andeq	r3, r2, r7, lsl #8
     29c:	01d20100 	bicseq	r0, r2, r0, lsl #2
     2a0:	0800324c 	stmdaeq	r0, {r2, r3, r6, r9, ip, sp}
     2a4:	00000006 	andeq	r0, r0, r6
     2a8:	00f29c01 	rscseq	r9, r2, r1, lsl #24
     2ac:	f2080000 	vhadd.s8	d0, d8, d0
     2b0:	01000001 	tsteq	r0, r1
     2b4:	007401d2 	ldrsbteq	r0, [r4], #-18	; 0xffffffee
     2b8:	50010000 	andpl	r0, r1, r0
     2bc:	02160500 	andseq	r0, r6, #0, 10
     2c0:	e1010000 	mrs	r0, (UNDEF: 1)
     2c4:	00007401 	andeq	r7, r0, r1, lsl #8
     2c8:	00325400 	eorseq	r5, r2, r0, lsl #8
     2cc:	00000808 	andeq	r0, r0, r8, lsl #16
     2d0:	1d9c0100 	ldfnes	f0, [ip]
     2d4:	06000001 	streq	r0, [r0], -r1
     2d8:	00000282 	andeq	r0, r0, r2, lsl #5
     2dc:	7401e301 	strvc	lr, [r1], #-769	; 0xfffffcff
     2e0:	1f000000 	svcne	0x00000000
     2e4:	00000000 	andeq	r0, r0, r0
     2e8:	00022007 	andeq	r2, r2, r7
     2ec:	01f40100 	mvnseq	r0, r0, lsl #2
     2f0:	0800325c 	stmdaeq	r0, {r2, r3, r4, r6, r9, ip, sp}
     2f4:	00000006 	andeq	r0, r0, r6
     2f8:	01429c01 	cmpeq	r2, r1, lsl #24
     2fc:	91080000 	mrsls	r0, (UNDEF: 8)
     300:	01000002 	tsteq	r0, r2
     304:	007401f4 	ldrshteq	r0, [r4], #-20	; 0xffffffec
     308:	50010000 	andpl	r0, r1, r0
     30c:	02c90500 	sbceq	r0, r9, #0, 10
     310:	01010000 	mrseq	r0, (UNDEF: 1)
     314:	00007402 	andeq	r7, r0, r2, lsl #8
     318:	00326400 	eorseq	r6, r2, r0, lsl #8
     31c:	00000608 	andeq	r0, r0, r8, lsl #12
     320:	6d9c0100 	ldfvss	f0, [ip]
     324:	06000001 	streq	r0, [r0], -r1
     328:	00000282 	andeq	r0, r0, r2, lsl #5
     32c:	74020301 	strvc	r0, [r2], #-769	; 0xfffffcff
     330:	3e000000 	cdpcc	0, 0, cr0, cr0, cr0, {0}
     334:	00000000 	andeq	r0, r0, r0
     338:	00026c07 	andeq	r6, r2, r7, lsl #24
     33c:	02100100 	andseq	r0, r0, #0, 2
     340:	0800326c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip, sp}
     344:	00000006 	andeq	r0, r0, r6
     348:	01929c01 	orrseq	r9, r2, r1, lsl #24
     34c:	db080000 	blle	200354 <__RW_SIZE__+0x1ffdd0>
     350:	01000001 	tsteq	r0, r1
     354:	00740210 	rsbseq	r0, r4, r0, lsl r2
     358:	50010000 	andpl	r0, r1, r0
     35c:	02460500 	subeq	r0, r6, #0, 10
     360:	1c010000 	stcne	0, cr0, [r1], {-0}
     364:	00007402 	andeq	r7, r0, r2, lsl #8
     368:	00327400 	eorseq	r7, r2, r0, lsl #8
     36c:	00000608 	andeq	r0, r0, r8, lsl #12
     370:	bd9c0100 	ldflts	f0, [ip]
     374:	06000001 	streq	r0, [r0], -r1
     378:	00000282 	andeq	r0, r0, r2, lsl #5
     37c:	74021e01 	strvc	r1, [r2], #-3585	; 0xfffff1ff
     380:	5d000000 	stcpl	0, cr0, [r0, #-0]
     384:	00000000 	andeq	r0, r0, r0
     388:	0002a007 	andeq	sl, r2, r7
     38c:	022b0100 	eoreq	r0, fp, #0, 2
     390:	0800327c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, ip, sp}
     394:	00000006 	andeq	r0, r0, r6
     398:	01e29c01 	mvneq	r9, r1, lsl #24
     39c:	ea080000 	b	2003a4 <__RW_SIZE__+0x1ffe20>
     3a0:	01000001 	tsteq	r0, r1
     3a4:	0074022b 	rsbseq	r0, r4, fp, lsr #4
     3a8:	50010000 	andpl	r0, r1, r0
     3ac:	02fb0500 	rscseq	r0, fp, #0, 10
     3b0:	37010000 	strcc	r0, [r1, -r0]
     3b4:	00007402 	andeq	r7, r0, r2, lsl #8
     3b8:	00328400 	eorseq	r8, r2, r0, lsl #8
     3bc:	00000608 	andeq	r0, r0, r8, lsl #12
     3c0:	0d9c0100 	ldfeqs	f0, [ip]
     3c4:	06000002 	streq	r0, [r0], -r2
     3c8:	00000282 	andeq	r0, r0, r2, lsl #5
     3cc:	74023901 	strvc	r3, [r2], #-2305	; 0xfffff6ff
     3d0:	7c000000 	stcvc	0, cr0, [r0], {-0}
     3d4:	00000000 	andeq	r0, r0, r0
     3d8:	00025407 	andeq	r5, r2, r7, lsl #8
     3dc:	02460100 	subeq	r0, r6, #0, 2
     3e0:	0800328c 	stmdaeq	r0, {r2, r3, r7, r9, ip, sp}
     3e4:	00000006 	andeq	r0, r0, r6
     3e8:	02329c01 	eorseq	r9, r2, #256	; 0x100
     3ec:	01080000 	mrseq	r0, (UNDEF: 8)
     3f0:	01000002 	tsteq	r0, r2
     3f4:	00740246 	rsbseq	r0, r4, r6, asr #4
     3f8:	50010000 	andpl	r0, r1, r0
     3fc:	02b40500 	adcseq	r0, r4, #0, 10
     400:	52010000 	andpl	r0, r1, #0
     404:	00007402 	andeq	r7, r0, r2, lsl #8
     408:	00329400 	eorseq	r9, r2, r0, lsl #8
     40c:	00000608 	andeq	r0, r0, r8, lsl #12
     410:	5d9c0100 	ldfpls	f0, [ip]
     414:	06000002 	streq	r0, [r0], -r2
     418:	00000282 	andeq	r0, r0, r2, lsl #5
     41c:	74025401 	strvc	r5, [r2], #-1025	; 0xfffffbff
     420:	9b000000 	blls	428 <MSP_SIZE+0x28>
     424:	00000000 	andeq	r0, r0, r0
     428:	0001cd07 	andeq	ip, r1, r7, lsl #26
     42c:	02610100 	rsbeq	r0, r1, #0, 2
     430:	0800329c 	stmdaeq	r0, {r2, r3, r4, r7, r9, ip, sp}
     434:	00000006 	andeq	r0, r0, r6
     438:	02829c01 	addeq	r9, r2, #256	; 0x100
     43c:	64080000 	strvs	r0, [r8], #-0
     440:	01000002 	tsteq	r0, r2
     444:	00740261 	rsbseq	r0, r4, r1, ror #4
     448:	50010000 	andpl	r0, r1, r0
     44c:	02ae0500 	adceq	r0, lr, #0, 10
     450:	6f010000 	svcvs	0x00010000
     454:	00007402 	andeq	r7, r0, r2, lsl #8
     458:	0032a400 	eorseq	sl, r2, r0, lsl #8
     45c:	00000408 	andeq	r0, r0, r8, lsl #8
     460:	bd9c0100 	ldflts	f0, [ip]
     464:	09000002 	stmdbeq	r0, {r1}
     468:	000001db 	ldrdeq	r0, [r0], -fp
     46c:	74026f01 	strvc	r6, [r2], #-3841	; 0xfffff0ff
     470:	ba000000 	blt	478 <MSP_SIZE+0x78>
     474:	06000000 	streq	r0, [r0], -r0
     478:	00000282 	andeq	r0, r0, r2, lsl #5
     47c:	74027101 	strvc	r7, [r2], #-257	; 0xfffffeff
     480:	db000000 	blle	488 <MSP_SIZE+0x88>
     484:	00000000 	andeq	r0, r0, r0
     488:	00023e05 	andeq	r3, r2, r5, lsl #28
     48c:	027f0100 	rsbseq	r0, pc, #0, 2
     490:	00000074 	andeq	r0, r0, r4, ror r0
     494:	080032a8 	stmdaeq	r0, {r3, r5, r7, r9, ip, sp}
     498:	00000004 	andeq	r0, r0, r4
     49c:	02f89c01 	rscseq	r9, r8, #256	; 0x100
     4a0:	db090000 	blle	2404a8 <__RW_SIZE__+0x23ff24>
     4a4:	01000001 	tsteq	r0, r1
     4a8:	0050027f 	subseq	r0, r0, pc, ror r2
     4ac:	00fa0000 	rscseq	r0, sl, r0
     4b0:	82060000 	andhi	r0, r6, #0
     4b4:	01000002 	tsteq	r0, r2
     4b8:	00740281 	rsbseq	r0, r4, r1, lsl #5
     4bc:	011b0000 	tsteq	fp, r0
     4c0:	05000000 	streq	r0, [r0, #-0]
     4c4:	00000289 	andeq	r0, r0, r9, lsl #5
     4c8:	62028f01 	andvs	r8, r2, #1, 30
     4cc:	ac000000 	stcge	0, cr0, [r0], {-0}
     4d0:	04080032 	streq	r0, [r8], #-50	; 0xffffffce
     4d4:	01000000 	mrseq	r0, (UNDEF: 0)
     4d8:	0003339c 	muleq	r3, ip, r3
     4dc:	01db0900 	bicseq	r0, fp, r0, lsl #18
     4e0:	8f010000 	svchi	0x00010000
     4e4:	00003e02 	andeq	r3, r0, r2, lsl #28
     4e8:	00013a00 	andeq	r3, r1, r0, lsl #20
     4ec:	02820600 	addeq	r0, r2, #0, 12
     4f0:	91010000 	mrsls	r0, (UNDEF: 1)
     4f4:	00007402 	andeq	r7, r0, r2, lsl #8
     4f8:	00015b00 	andeq	r5, r1, r0, lsl #22
     4fc:	c2050000 	andgt	r0, r5, #0
     500:	01000002 	tsteq	r0, r2
     504:	0074029f 			; <UNDEFINED> instruction: 0x0074029f
     508:	32b00000 	adcscc	r0, r0, #0
     50c:	00060800 	andeq	r0, r6, r0, lsl #16
     510:	9c010000 	stcls	0, cr0, [r1], {-0}
     514:	0000036e 	andeq	r0, r0, lr, ror #6
     518:	0001db09 	andeq	sp, r1, r9, lsl #22
     51c:	029f0100 	addseq	r0, pc, #0, 2
     520:	00000074 	andeq	r0, r0, r4, ror r0
     524:	0000017a 	andeq	r0, r0, sl, ror r1
     528:	00028206 	andeq	r8, r2, r6, lsl #4
     52c:	02a10100 	adceq	r0, r1, #0, 2
     530:	00000074 	andeq	r0, r0, r4, ror r0
     534:	0000019b 	muleq	r0, fp, r1
     538:	02e90500 	rsceq	r0, r9, #0, 10
     53c:	af010000 	svcge	0x00010000
     540:	00002c02 	andeq	r2, r0, r2, lsl #24
     544:	0032b800 	eorseq	fp, r2, r0, lsl #16
     548:	00000808 	andeq	r0, r0, r8, lsl #16
     54c:	a99c0100 	ldmibge	ip, {r8}
     550:	09000003 	stmdbeq	r0, {r0, r1}
     554:	0000047c 	andeq	r0, r0, ip, ror r4
     558:	a902af01 	stmdbge	r2, {r0, r8, r9, sl, fp, sp, pc}
     55c:	ba000003 	blt	570 <MSP_SIZE+0x170>
     560:	06000001 	streq	r0, [r0], -r1
     564:	00000282 	andeq	r0, r0, r2, lsl #5
     568:	2c02b101 	stfcsd	f3, [r2], {1}
     56c:	db000000 	blle	574 <MSP_SIZE+0x174>
     570:	00000001 	andeq	r0, r0, r1
     574:	002c040a 	eoreq	r0, ip, sl, lsl #8
     578:	0b050000 	bleq	140580 <__RW_SIZE__+0x13fffc>
     57c:	01000003 	tsteq	r0, r3
     580:	005002bf 	ldrheq	r0, [r0], #-47	; 0xffffffd1
     584:	32c00000 	sbccc	r0, r0, #0
     588:	00080800 	andeq	r0, r8, r0, lsl #16
     58c:	9c010000 	stcls	0, cr0, [r1], {-0}
     590:	000003ea 	andeq	r0, r0, sl, ror #7
     594:	00047c09 	andeq	r7, r4, r9, lsl #24
     598:	02bf0100 	adcseq	r0, pc, #0, 2
     59c:	000003ea 	andeq	r0, r0, sl, ror #7
     5a0:	000001fa 	strdeq	r0, [r0], -sl
     5a4:	00028206 	andeq	r8, r2, r6, lsl #4
     5a8:	02c10100 	sbceq	r0, r1, #0, 2
     5ac:	00000050 	andeq	r0, r0, r0, asr r0
     5b0:	0000021b 	andeq	r0, r0, fp, lsl r2
     5b4:	50040a00 	andpl	r0, r4, r0, lsl #20
     5b8:	05000000 	streq	r0, [r0, #-0]
     5bc:	000001e1 	andeq	r0, r0, r1, ror #3
     5c0:	7402cf01 	strvc	ip, [r2], #-3841	; 0xfffff0ff
     5c4:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
     5c8:	06080032 			; <UNDEFINED> instruction: 0x06080032
     5cc:	01000000 	mrseq	r0, (UNDEF: 0)
     5d0:	00042b9c 	muleq	r4, ip, fp
     5d4:	047c0900 	ldrbteq	r0, [ip], #-2304	; 0xfffff700
     5d8:	cf010000 	svcgt	0x00010000
     5dc:	00042b02 	andeq	r2, r4, r2, lsl #22
     5e0:	00023a00 	andeq	r3, r2, r0, lsl #20
     5e4:	02820600 	addeq	r0, r2, #0, 12
     5e8:	d1010000 	mrsle	r0, (UNDEF: 1)
     5ec:	00007402 	andeq	r7, r0, r2, lsl #8
     5f0:	00025b00 	andeq	r5, r2, r0, lsl #22
     5f4:	040a0000 	streq	r0, [sl], #-0
     5f8:	00000074 	andeq	r0, r0, r4, ror r0
     5fc:	0002f205 	andeq	pc, r2, r5, lsl #4
     600:	02e00100 	rsceq	r0, r0, #0, 2
     604:	00000074 	andeq	r0, r0, r4, ror r0
     608:	080032d0 	stmdaeq	r0, {r4, r6, r7, r9, ip, sp}
     60c:	00000008 	andeq	r0, r0, r8
     610:	047a9c01 	ldrbteq	r9, [sl], #-3073	; 0xfffff3ff
     614:	db090000 	blle	24061c <__RW_SIZE__+0x240098>
     618:	01000001 	tsteq	r0, r1
     61c:	002c02e0 	eoreq	r0, ip, r0, ror #5
     620:	027a0000 	rsbseq	r0, sl, #0
     624:	7c080000 	stcvc	0, cr0, [r8], {-0}
     628:	01000004 	tsteq	r0, r4
     62c:	03a902e0 			; <UNDEFINED> instruction: 0x03a902e0
     630:	51010000 	mrspl	r0, (UNDEF: 1)
     634:	00028206 	andeq	r8, r2, r6, lsl #4
     638:	02e20100 	rsceq	r0, r2, #0, 2
     63c:	00000074 	andeq	r0, r0, r4, ror r0
     640:	0000029b 	muleq	r0, fp, r2
     644:	01c40500 	biceq	r0, r4, r0, lsl #10
     648:	f1010000 	setend	le
     64c:	00007402 	andeq	r7, r0, r2, lsl #8
     650:	0032d800 	eorseq	sp, r2, r0, lsl #16
     654:	00000808 	andeq	r0, r0, r8, lsl #16
     658:	c39c0100 	orrsgt	r0, ip, #0, 2
     65c:	09000004 	stmdbeq	r0, {r2}
     660:	000001db 	ldrdeq	r0, [r0], -fp
     664:	5002f101 	andpl	pc, r2, r1, lsl #2
     668:	ba000000 	blt	670 <__RW_SIZE__+0xec>
     66c:	08000002 	stmdaeq	r0, {r1}
     670:	0000047c 	andeq	r0, r0, ip, ror r4
     674:	ea02f101 	b	bca80 <__RW_SIZE__+0xbc4fc>
     678:	01000003 	tsteq	r0, r3
     67c:	02820651 	addeq	r0, r2, #84934656	; 0x5100000
     680:	f3010000 	vhadd.u8	d0, d1, d0
     684:	00007402 	andeq	r7, r0, r2, lsl #8
     688:	0002db00 	andeq	sp, r2, r0, lsl #22
     68c:	e00b0000 	and	r0, fp, r0
     690:	01000002 	tsteq	r0, r2
     694:	00740302 	rsbseq	r0, r4, r2, lsl #6
     698:	32e00000 	rsccc	r0, r0, #0
     69c:	00060800 	andeq	r0, r6, r0, lsl #16
     6a0:	9c010000 	stcls	0, cr0, [r1], {-0}
     6a4:	0001db09 	andeq	sp, r1, r9, lsl #22
     6a8:	03020100 	movweq	r0, #8448	; 0x2100
     6ac:	00000074 	andeq	r0, r0, r4, ror r0
     6b0:	000002fa 	strdeq	r0, [r0], -sl
     6b4:	00047c08 	andeq	r7, r4, r8, lsl #24
     6b8:	03020100 	movweq	r0, #8448	; 0x2100
     6bc:	0000042b 	andeq	r0, r0, fp, lsr #8
     6c0:	82065101 	andhi	r5, r6, #1073741824	; 0x40000000
     6c4:	01000002 	tsteq	r0, r2
     6c8:	00740304 	rsbseq	r0, r4, r4, lsl #6
     6cc:	031b0000 	tsteq	fp, #0
     6d0:	00000000 	andeq	r0, r0, r0
     6d4:	00000752 	andeq	r0, r0, r2, asr r7
     6d8:	015c0004 	cmpeq	ip, r4
     6dc:	01040000 	mrseq	r0, (UNDEF: 4)
     6e0:	000000b2 	strheq	r0, [r0], -r2
     6e4:	00058401 	andeq	r8, r5, r1, lsl #8
     6e8:	00017200 	andeq	r7, r1, r0, lsl #4
     6ec:	0032e800 	eorseq	lr, r2, r0, lsl #16
     6f0:	0001ba08 	andeq	fp, r1, r8, lsl #20
     6f4:	00018d00 	andeq	r8, r1, r0, lsl #26
     6f8:	03e50200 	mvneq	r0, #0, 4
     6fc:	03010000 	movweq	r0, #4096	; 0x1000
     700:	000164a8 	andeq	r6, r1, r8, lsr #9
     704:	061f0300 	ldreq	r0, [pc], -r0, lsl #6
     708:	03720000 	cmneq	r2, #0
     70c:	0000040a 	andeq	r0, r0, sl, lsl #8
     710:	05570374 	ldrbeq	r0, [r7, #-884]	; 0xfffffc8c
     714:	03750000 	cmneq	r5, #0
     718:	000006bd 			; <UNDEFINED> instruction: 0x000006bd
     71c:	06e20376 			; <UNDEFINED> instruction: 0x06e20376
     720:	037b0000 	cmneq	fp, #0
     724:	000006ab 	andeq	r0, r0, fp, lsr #13
     728:	03ef037c 	mvneq	r0, #124, 6	; 0xf0000001
     72c:	037e0000 	cmneq	lr, #0
     730:	00000694 	muleq	r0, r4, r6
     734:	054d037f 	strbeq	r0, [sp, #-895]	; 0xfffffc81
     738:	03000000 	movweq	r0, #0
     73c:	0000057b 	andeq	r0, r0, fp, ror r5
     740:	07630301 	strbeq	r0, [r3, -r1, lsl #6]!
     744:	03020000 	movweq	r0, #8192	; 0x2000
     748:	000005d3 	ldrdeq	r0, [r0], -r3
     74c:	03b10303 			; <UNDEFINED> instruction: 0x03b10303
     750:	03040000 	movweq	r0, #16384	; 0x4000
     754:	00000401 	andeq	r0, r0, r1, lsl #8
     758:	03bc0305 			; <UNDEFINED> instruction: 0x03bc0305
     75c:	03060000 	movweq	r0, #24576	; 0x6000
     760:	00000650 	andeq	r0, r0, r0, asr r6
     764:	04be0307 	ldrteq	r0, [lr], #775	; 0x307
     768:	03080000 	movweq	r0, #32768	; 0x8000
     76c:	0000071a 	andeq	r0, r0, sl, lsl r7
     770:	05700309 	ldrbeq	r0, [r0, #-777]!	; 0xfffffcf7
     774:	030a0000 	movweq	r0, #40960	; 0xa000
     778:	0000051d 	andeq	r0, r0, sp, lsl r5
     77c:	0396030b 	orrseq	r0, r6, #738197504	; 0x2c000000
     780:	030c0000 	movweq	r0, #49152	; 0xc000
     784:	0000058f 	andeq	r0, r0, pc, lsl #11
     788:	0459030d 	ldrbeq	r0, [r9], #-781	; 0xfffffcf3
     78c:	030e0000 	movweq	r0, #57344	; 0xe000
     790:	00000702 	andeq	r0, r0, r2, lsl #14
     794:	04e6030f 	strbteq	r0, [r6], #783	; 0x30f
     798:	03100000 	tsteq	r0, #0
     79c:	00000366 	andeq	r0, r0, r6, ror #6
     7a0:	074b0311 	smlaldeq	r0, fp, r1, r3
     7a4:	03120000 	tsteq	r2, #0
     7a8:	00000494 	muleq	r0, r4, r4
     7ac:	03140313 	tsteq	r4, #1275068416	; 0x4c000000
     7b0:	03140000 	tsteq	r4, #0
     7b4:	00000481 	andeq	r0, r0, r1, lsl #9
     7b8:	03580315 	cmpeq	r8, #1409286144	; 0x54000000
     7bc:	03160000 	tsteq	r6, #0
     7c0:	000006d5 	ldrdeq	r0, [r0], -r5
     7c4:	04380317 	ldrteq	r0, [r8], #-791	; 0xfffffce9
     7c8:	03180000 	tsteq	r8, #0
     7cc:	000005b9 			; <UNDEFINED> instruction: 0x000005b9
     7d0:	06750319 			; <UNDEFINED> instruction: 0x06750319
     7d4:	031a0000 	tsteq	sl, #0
     7d8:	00000633 	andeq	r0, r0, r3, lsr r6
     7dc:	06a1031b 	ssateq	r0, #2, fp, lsl #6
     7e0:	031c0000 	tsteq	ip, #0
     7e4:	00000513 	andeq	r0, r0, r3, lsl r5
     7e8:	038c031d 	orreq	r0, ip, #1946157056	; 0x74000000
     7ec:	031e0000 	tsteq	lr, #0
     7f0:	000005a2 	andeq	r0, r0, r2, lsr #11
     7f4:	0687031f 	pkhbteq	r0, r7, pc, lsl #6	; <UNPREDICTABLE>
     7f8:	03200000 	teqeq	r0, #0
     7fc:	000004d9 	ldrdeq	r0, [r0], -r9
     800:	03790321 	cmneq	r9, #-2080374784	; 0x84000000
     804:	03220000 	teqeq	r2, #0
     808:	0000044f 	andeq	r0, r0, pc, asr #8
     80c:	06f30323 	ldrbteq	r0, [r3], r3, lsr #6
     810:	03240000 	teqeq	r4, #0
     814:	0000060e 	andeq	r0, r0, lr, lsl #12
     818:	04b20325 	ldrteq	r0, [r2], #805	; 0x325
     81c:	03260000 	teqeq	r6, #0
     820:	00000757 	andeq	r0, r0, r7, asr r7
     824:	03db0327 	bicseq	r0, fp, #-1677721600	; 0x9c000000
     828:	03280000 	teqeq	r8, #0
     82c:	0000076f 	andeq	r0, r0, pc, ror #14
     830:	053e0329 	ldreq	r0, [lr, #-809]!	; 0xfffffcd7
     834:	002a0000 	eoreq	r0, sl, r0
     838:	0004a804 	andeq	sl, r4, r4, lsl #16
     83c:	01d90300 	bicseq	r0, r9, r0, lsl #6
     840:	00000025 	andeq	r0, r0, r5, lsr #32
     844:	6d060105 	stfvss	f0, [r6, #-20]	; 0xffffffec
     848:	06000000 	streq	r0, [r0], -r0
     84c:	0000027a 	andeq	r0, r0, sl, ror r2
     850:	01822a04 	orreq	r2, r2, r4, lsl #20
     854:	01050000 	mrseq	r0, (UNDEF: 5)
     858:	00006b08 	andeq	r6, r0, r8, lsl #22
     85c:	05020500 	streq	r0, [r2, #-1280]	; 0xfffffb00
     860:	0000015c 	andeq	r0, r0, ip, asr r1
     864:	43070205 	movwmi	r0, #29189	; 0x7205
     868:	05000000 	streq	r0, [r0, #-0]
     86c:	00050504 	andeq	r0, r5, r4, lsl #10
     870:	bb060000 	bllt	180878 <__RW_SIZE__+0x1802f4>
     874:	04000001 	streq	r0, [r0], #-1
     878:	0001a950 	andeq	sl, r1, r0, asr r9
     87c:	07040500 	streq	r0, [r4, -r0, lsl #10]
     880:	000000a0 	andeq	r0, r0, r0, lsr #1
     884:	00050805 	andeq	r0, r5, r5, lsl #16
     888:	05000000 	streq	r0, [r0, #-0]
     88c:	009b0708 	addseq	r0, fp, r8, lsl #14
     890:	04070000 	streq	r0, [r7], #-0
     894:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
     898:	07040500 	streq	r0, [r4, -r0, lsl #10]
     89c:	000000a5 	andeq	r0, r0, r5, lsr #1
     8a0:	020e0408 	andeq	r0, lr, #8, 8	; 0x8000000
     8a4:	00027a84 	andeq	r7, r2, r4, lsl #21
     8a8:	042d0900 	strteq	r0, [sp], #-2304	; 0xfffff700
     8ac:	86020000 	strhi	r0, [r2], -r0
     8b0:	00000291 	muleq	r0, r1, r2
     8b4:	05dc0900 	ldrbeq	r0, [ip, #2304]	; 0x900
     8b8:	87020000 	strhi	r0, [r2, -r0]
     8bc:	00000296 	muleq	r0, r6, r2
     8c0:	06ee0920 	strbteq	r0, [lr], r0, lsr #18
     8c4:	88020000 	stmdahi	r2, {}	; <UNPREDICTABLE>
     8c8:	000002a6 	andeq	r0, r0, r6, lsr #5
     8cc:	04460980 	strbeq	r0, [r6], #-2432	; 0xfffff680
     8d0:	89020000 	stmdbhi	r2, {}	; <UNPREDICTABLE>
     8d4:	00000296 	muleq	r0, r6, r2
     8d8:	07460aa0 	strbeq	r0, [r6, -r0, lsr #21]
     8dc:	8a020000 	bhi	808e4 <__RW_SIZE__+0x80360>
     8e0:	000002ab 	andeq	r0, r0, fp, lsr #5
     8e4:	e60a0100 	str	r0, [sl], -r0, lsl #2
     8e8:	02000005 	andeq	r0, r0, #5
     8ec:	0002968b 	andeq	r9, r2, fp, lsl #13
     8f0:	0a012000 	beq	488f8 <__RW_SIZE__+0x48374>
     8f4:	0000058a 	andeq	r0, r0, sl, lsl #11
     8f8:	02b08c02 	adcseq	r8, r0, #512	; 0x200
     8fc:	01800000 	orreq	r0, r0, r0
     900:	0005f00a 	andeq	pc, r5, sl
     904:	968d0200 	strls	r0, [sp], r0, lsl #4
     908:	a0000002 	andge	r0, r0, r2
     90c:	06fd0a01 	ldrbteq	r0, [sp], r1, lsl #20
     910:	8e020000 	cdphi	0, 0, cr0, cr2, cr0, {0}
     914:	000002b5 			; <UNDEFINED> instruction: 0x000002b5
     918:	fa0a0200 	blx	281120 <__RW_SIZE__+0x280b9c>
     91c:	02000005 	andeq	r0, r0, #5
     920:	0002ba8f 	andeq	fp, r2, pc, lsl #21
     924:	0b022000 	bleq	8892c <__RW_SIZE__+0x883a8>
     928:	02005049 	andeq	r5, r0, #73	; 0x49
     92c:	0002da90 	muleq	r2, r0, sl
     930:	0a030000 	beq	c0938 <__RW_SIZE__+0xc03b4>
     934:	00000604 	andeq	r0, r0, r4, lsl #12
     938:	02df9102 	sbcseq	r9, pc, #-2147483648	; 0x80000000
     93c:	03f00000 	mvnseq	r0, #0
     940:	0005c60a 	andeq	ip, r5, sl, lsl #12
     944:	f0920200 			; <UNDEFINED> instruction: 0xf0920200
     948:	00000002 	andeq	r0, r0, r2
     94c:	9e0c000e 	cdpls	0, 0, cr0, cr12, cr14, {0}
     950:	8a000001 	bhi	95c <__RW_SIZE__+0x3d8>
     954:	0d000002 	stceq	0, cr0, [r0, #-8]
     958:	0000028a 	andeq	r0, r0, sl, lsl #5
     95c:	04050007 	streq	r0, [r5], #-7
     960:	00014807 	andeq	r4, r1, r7, lsl #16
     964:	027a0e00 	rsbseq	r0, sl, #0, 28
     968:	9e0c0000 	cdpls	0, 0, cr0, cr12, cr0, {0}
     96c:	a6000001 	strge	r0, [r0], -r1
     970:	0d000002 	stceq	0, cr0, [r0, #-8]
     974:	0000028a 	andeq	r0, r0, sl, lsl #5
     978:	7a0e0017 	bvc	3809dc <__RW_SIZE__+0x380458>
     97c:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
     980:	0000027a 	andeq	r0, r0, sl, ror r2
     984:	00027a0e 	andeq	r7, r2, lr, lsl #20
     988:	027a0e00 	rsbseq	r0, sl, #0, 28
     98c:	9e0c0000 	cdpls	0, 0, cr0, cr12, cr0, {0}
     990:	ca000001 	bgt	99c <__RW_SIZE__+0x418>
     994:	0d000002 	stceq	0, cr0, [r0, #-8]
     998:	0000028a 	andeq	r0, r0, sl, lsl #5
     99c:	770c0037 	smladxvc	ip, r7, r0, r0
     9a0:	da000001 	ble	9ac <__RW_SIZE__+0x428>
     9a4:	0d000002 	stceq	0, cr0, [r0, #-8]
     9a8:	0000028a 	andeq	r0, r0, sl, lsl #5
     9ac:	ca0e00ef 	bgt	380d70 <__RW_SIZE__+0x3807ec>
     9b0:	0c000002 	stceq	0, cr0, [r0], {2}
     9b4:	0000019e 	muleq	r0, lr, r1
     9b8:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     9bc:	00028a0f 	andeq	r8, r2, pc, lsl #20
     9c0:	00028300 	andeq	r8, r2, r0, lsl #6
     9c4:	00019e0e 	andeq	r9, r1, lr, lsl #28
     9c8:	065b0600 	ldrbeq	r0, [fp], -r0, lsl #12
     9cc:	93020000 	movwls	r0, #8192	; 0x2000
     9d0:	000001cc 	andeq	r0, r0, ip, asr #3
     9d4:	1e031010 	mcrne	0, 0, r1, cr3, cr0, {0}
     9d8:	00033e03 	andeq	r3, r3, r3, lsl #28
     9dc:	43431100 	movtmi	r1, #12544	; 0x3100
     9e0:	20030052 	andcs	r0, r3, r2, asr r0
     9e4:	0002f003 	andeq	pc, r2, r3
     9e8:	fb120000 	blx	4809f2 <__RW_SIZE__+0x48046e>
     9ec:	03000003 	movweq	r0, #3
     9f0:	02f00321 	rscseq	r0, r0, #-2080374784	; 0x84000000
     9f4:	12040000 	andne	r0, r4, #0
     9f8:	0000048f 	andeq	r0, r0, pc, lsl #9
     9fc:	f0032203 			; <UNDEFINED> instruction: 0xf0032203
     a00:	08000002 	stmdaeq	r0, {r1}
     a04:	00061a12 	andeq	r1, r6, r2, lsl sl
     a08:	03230300 	teqeq	r3, #0, 6
     a0c:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     a10:	c704000c 	strgt	r0, [r4, -ip]
     a14:	03000003 	movweq	r0, #3
     a18:	03000324 	movweq	r0, #804	; 0x324
     a1c:	08100000 	ldmdaeq	r0, {}	; <UNPREDICTABLE>
     a20:	6e032603 	cfmadd32vs	mvax0, mvfx2, mvfx3, mvfx3
     a24:	11000003 	tstne	r0, r3
     a28:	00525349 	subseq	r5, r2, r9, asr #6
     a2c:	f0032803 			; <UNDEFINED> instruction: 0xf0032803
     a30:	00000002 	andeq	r0, r0, r2
     a34:	00073512 	andeq	r3, r7, r2, lsl r5
     a38:	03290300 	teqeq	r9, #0, 6
     a3c:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     a40:	3a040004 	bcc	100a58 <__RW_SIZE__+0x1004d4>
     a44:	03000007 	movweq	r0, #7
     a48:	034a032a 	movteq	r0, #41770	; 0xa32a
     a4c:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
     a50:	05043403 	streq	r3, [r4, #-1027]	; 0xfffffbfd
     a54:	11000004 	tstne	r0, r4
     a58:	03005243 	movweq	r5, #579	; 0x243
     a5c:	02f00436 	rscseq	r0, r0, #905969664	; 0x36000000
     a60:	12000000 	andne	r0, r0, #0
     a64:	00000013 	andeq	r0, r0, r3, lsl r0
     a68:	f0043703 			; <UNDEFINED> instruction: 0xf0043703
     a6c:	04000002 	streq	r0, [r0], #-2
     a70:	52494311 	subpl	r4, r9, #1140850688	; 0x44000000
     a74:	04380300 	ldrteq	r0, [r8], #-768	; 0xfffffd00
     a78:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     a7c:	00921208 	addseq	r1, r2, r8, lsl #4
     a80:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
     a84:	0002f004 	andeq	pc, r2, r4
     a88:	3a120c00 	bcc	483a90 <__RW_SIZE__+0x48350c>
     a8c:	03000000 	movweq	r0, #0
     a90:	02f0043a 	rscseq	r0, r0, #973078528	; 0x3a000000
     a94:	12100000 	andsne	r0, r0, #0
     a98:	00000026 	andeq	r0, r0, r6, lsr #32
     a9c:	f0043b03 			; <UNDEFINED> instruction: 0xf0043b03
     aa0:	14000002 	strne	r0, [r0], #-2
     aa4:	00008212 	andeq	r8, r0, r2, lsl r2
     aa8:	043c0300 	ldrteq	r0, [ip], #-768	; 0xfffffd00
     aac:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
     ab0:	008a1218 	addeq	r1, sl, r8, lsl r2
     ab4:	3d030000 	stccc	0, cr0, [r3, #-0]
     ab8:	0002f004 	andeq	pc, r2, r4
     abc:	0e121c00 	cdpeq	12, 1, cr1, cr2, cr0, {0}
     ac0:	03000000 	movweq	r0, #0
     ac4:	02f0043e 	rscseq	r0, r0, #1040187392	; 0x3e000000
     ac8:	11200000 	teqne	r0, r0
     acc:	00525343 	subseq	r5, r2, r3, asr #6
     ad0:	f0043f03 			; <UNDEFINED> instruction: 0xf0043f03
     ad4:	24000002 	strcs	r0, [r0], #-2
     ad8:	01660400 	cmneq	r6, r0, lsl #8
     adc:	4a030000 	bmi	c0ae4 <__RW_SIZE__+0xc0560>
     ae0:	00037a04 	andeq	r7, r3, r4, lsl #20
     ae4:	05041300 	streq	r1, [r4, #-768]	; 0xfffffd00
     ae8:	00740801 	rsbseq	r0, r4, r1, lsl #16
     aec:	29140000 	ldmdbcs	r4, {}	; <UNPREDICTABLE>
     af0:	04000003 	streq	r0, [r0], #-3
     af4:	04ad4205 	strteq	r4, [sp], #517	; 0x205
     af8:	53150000 	tstpl	r5, #0
     afc:	05000003 	streq	r0, [r0, #-3]
     b00:	0001c544 	andeq	ip, r1, r4, asr #10
     b04:	1c040400 	cfstrsne	mvf0, [r4], {-0}
     b08:	69641600 	stmdbvs	r4!, {r9, sl, ip}^
     b0c:	45050072 	strmi	r0, [r5, #-114]	; 0xffffff8e
     b10:	000001c5 	andeq	r0, r0, r5, asr #3
     b14:	001b0104 	andseq	r0, fp, r4, lsl #2
     b18:	00071515 	andeq	r1, r7, r5, lsl r5
     b1c:	c5460500 	strbgt	r0, [r6, #-1280]	; 0xfffffb00
     b20:	04000001 	streq	r0, [r0], #-1
     b24:	15001a01 	strne	r1, [r0, #-2561]	; 0xfffff5ff
     b28:	000003ea 	andeq	r0, r0, sl, ror #7
     b2c:	01c54705 	biceq	r4, r5, r5, lsl #14
     b30:	01040000 	mrseq	r0, (UNDEF: 4)
     b34:	f9150019 			; <UNDEFINED> instruction: 0xf9150019
     b38:	05000004 	streq	r0, [r0, #-4]
     b3c:	0001c548 	andeq	ip, r1, r8, asr #10
     b40:	18010400 	stmdane	r1, {sl}
     b44:	03351500 	teqeq	r5, #0, 10
     b48:	49050000 	stmdbmi	r5, {}	; <UNPREDICTABLE>
     b4c:	000001c5 	andeq	r0, r0, r5, asr #3
     b50:	00160204 	andseq	r0, r6, r4, lsl #4
     b54:	00038615 	andeq	r8, r3, r5, lsl r6
     b58:	c54a0500 	strbgt	r0, [sl, #-1280]	; 0xfffffb00
     b5c:	04000001 	streq	r0, [r0], #-1
     b60:	16001402 	strne	r1, [r0], -r2, lsl #8
     b64:	05006c70 	streq	r6, [r0, #-3184]	; 0xfffff390
     b68:	0001c54b 	andeq	ip, r1, fp, asr #10
     b6c:	12020400 	andne	r0, r2, #0, 8
     b70:	326d1600 	rsbcc	r1, sp, #0, 12
     b74:	4c05006d 	stcmi	0, cr0, [r5], {109}	; 0x6d
     b78:	000001c5 	andeq	r0, r0, r5, asr #3
     b7c:	00110104 	andseq	r0, r1, r4, lsl #2
     b80:	03461700 	movteq	r1, #26368	; 0x6700
     b84:	05040000 	streq	r0, [r4, #-0]
     b88:	0004d04f 	andeq	sp, r4, pc, asr #32
     b8c:	05cb1800 	strbeq	r1, [fp, #2048]	; 0x800
     b90:	51050000 	mrspl	r0, (UNDEF: 5)
     b94:	0000041a 	andeq	r0, r0, sl, lsl r4
     b98:	0003a918 	andeq	sl, r3, r8, lsl r9
     b9c:	c5520500 	ldrbgt	r0, [r2, #-1280]	; 0xfffffb00
     ba0:	00000001 	andeq	r0, r0, r1
     ba4:	0005af19 	andeq	sl, r5, r9, lsl pc
     ba8:	01190100 	tsteq	r9, r0, lsl #2
     bac:	000004e7 	andeq	r0, r0, r7, ror #9
     bb0:	0068631a 	rsbeq	r6, r8, sl, lsl r3
     bb4:	01be1901 			; <UNDEFINED> instruction: 0x01be1901
     bb8:	1b000000 	blne	bc0 <__RW_SIZE__+0x63c>
     bbc:	000004fe 	strdeq	r0, [r0], -lr
     bc0:	03061302 	movweq	r1, #25346	; 0x6302
     bc4:	00000501 	andeq	r0, r0, r1, lsl #10
     bc8:	0003e51c 	andeq	lr, r3, ip, lsl r5
     bcc:	06130200 	ldreq	r0, [r3], -r0, lsl #4
     bd0:	00000164 	andeq	r0, r0, r4, ror #2
     bd4:	046c1b00 	strbteq	r1, [ip], #-2816	; 0xfffff500
     bd8:	de020000 	cdple	0, 0, cr0, cr2, cr0, {0}
     bdc:	051b0305 	ldreq	r0, [fp, #-773]	; 0xfffffcfb
     be0:	e51c0000 	ldr	r0, [ip, #-0]
     be4:	02000003 	andeq	r0, r0, #3
     be8:	016405de 	ldrdeq	r0, [r4, #-94]!	; 0xffffffa2
     bec:	1b000000 	blne	bf4 <__RW_SIZE__+0x670>
     bf0:	000004c9 	andeq	r0, r0, r9, asr #9
     bf4:	0305eb02 	movweq	lr, #23298	; 0x5b02
     bf8:	00000535 	andeq	r0, r0, r5, lsr r5
     bfc:	0003e51c 	andeq	lr, r3, ip, lsl r5
     c00:	05eb0200 	strbeq	r0, [fp, #512]!	; 0x200
     c04:	00000164 	andeq	r0, r0, r4, ror #2
     c08:	04201d00 	strteq	r1, [r0], #-3328	; 0xfffff300
     c0c:	06010000 	streq	r0, [r1], -r0
     c10:	080032e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, ip, sp}
     c14:	00000068 	andeq	r0, r0, r8, rrx
     c18:	05ac9c01 	streq	r9, [ip, #3073]!	; 0xc01
     c1c:	631e0000 	tstvs	lr, #0
     c20:	06010068 	streq	r0, [r1], -r8, rrx
     c24:	000001be 			; <UNDEFINED> instruction: 0x000001be
     c28:	0000033a 	andeq	r0, r0, sl, lsr r3
     c2c:	00047b1f 	andeq	r7, r4, pc, lsl fp
     c30:	11060100 	mrsne	r0, (UNDEF: 22)
     c34:	01000004 	tsteq	r0, r4
     c38:	04322051 	ldrteq	r2, [r2], #-81	; 0xffffffaf
     c3c:	06010000 	streq	r0, [r1], -r0
     c40:	00000411 	andeq	r0, r0, r1, lsl r4
     c44:	00000368 	andeq	r0, r0, r8, ror #6
     c48:	7263631e 	rsbvc	r6, r3, #2013265920	; 0x78000000
     c4c:	ad060100 	stfges	f0, [r6, #-0]
     c50:	a0000004 	andge	r0, r0, r4
     c54:	20000003 	andcs	r0, r0, r3
     c58:	00000530 	andeq	r0, r0, r0, lsr r5
     c5c:	01c50601 	biceq	r0, r5, r1, lsl #12
     c60:	03be0000 			; <UNDEFINED> instruction: 0x03be0000
     c64:	d0210000 	eorle	r0, r1, r0
     c68:	0a000004 	beq	c80 <__RW_SIZE__+0x6fc>
     c6c:	1a080033 	bne	200d40 <__RW_SIZE__+0x2007bc>
     c70:	01000000 	mrseq	r0, (UNDEF: 0)
     c74:	04dc220a 	ldrbeq	r2, [ip], #522	; 0x20a
     c78:	03d20000 	bicseq	r0, r2, #0
     c7c:	00000000 	andeq	r0, r0, r0
     c80:	00033b1d 	andeq	r3, r3, sp, lsl fp
     c84:	50120100 	andspl	r0, r2, r0, lsl #2
     c88:	32080033 	andcc	r0, r8, #51	; 0x33
     c8c:	01000000 	mrseq	r0, (UNDEF: 0)
     c90:	0005d09c 	muleq	r5, ip, r0
     c94:	68631e00 	stmdavs	r3!, {r9, sl, fp, ip}^
     c98:	be120100 	muflts	f0, f2, f0
     c9c:	f5000001 			; <UNDEFINED> instruction: 0xf5000001
     ca0:	00000003 	andeq	r0, r0, r3
     ca4:	0004d023 	andeq	sp, r4, r3, lsr #32
     ca8:	00338400 	eorseq	r8, r3, r0, lsl #8
     cac:	00002c08 	andeq	r2, r0, r8, lsl #24
     cb0:	ed9c0100 	ldfs	f0, [ip]
     cb4:	22000005 	andcs	r0, r0, #5
     cb8:	000004dc 	ldrdeq	r0, [r0], -ip
     cbc:	00000415 	andeq	r0, r0, r5, lsl r4
     cc0:	06401d00 	strbeq	r1, [r0], -r0, lsl #26
     cc4:	1f010000 	svcne	0x00010000
     cc8:	080033b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, ip, sp}
     ccc:	000000c8 	andeq	r0, r0, r8, asr #1
     cd0:	06919c01 	ldreq	r9, [r1], r1, lsl #24
     cd4:	631e0000 	tstvs	lr, #0
     cd8:	1f010068 	svcne	0x00010068
     cdc:	000001be 			; <UNDEFINED> instruction: 0x000001be
     ce0:	00000435 	andeq	r0, r0, r5, lsr r4
     ce4:	6965741e 	stmdbvs	r5!, {r1, r2, r3, r4, sl, ip, sp, lr}^
     ce8:	c51f0100 	ldrgt	r0, [pc, #-256]	; bf0 <__RW_SIZE__+0x66c>
     cec:	89000001 	stmdbhi	r0, {r0}
     cf0:	1e000004 	cdpne	0, 0, cr0, cr0, cr4, {0}
     cf4:	00697468 	rsbeq	r7, r9, r8, ror #8
     cf8:	01c51f01 	biceq	r1, r5, r1, lsl #30
     cfc:	04c30000 	strbeq	r0, [r3], #0
     d00:	741e0000 	ldrvc	r0, [lr], #-0
     d04:	01006963 	tsteq	r0, r3, ror #18
     d08:	0001c51f 	andeq	ip, r1, pc, lsl r5
     d0c:	0004fd00 	andeq	pc, r4, r0, lsl #26
     d10:	04e72400 	strbteq	r2, [r7], #1024	; 0x400
     d14:	33c60000 	biccc	r0, r6, #0
     d18:	00100800 	andseq	r0, r0, r0, lsl #16
     d1c:	26010000 	strcs	r0, [r1], -r0
     d20:	0000065a 	andeq	r0, r0, sl, asr r6
     d24:	0004f422 	andeq	pc, r4, r2, lsr #8
     d28:	00053700 	andeq	r3, r5, r0, lsl #14
     d2c:	01250000 	teqeq	r5, r0
     d30:	34000005 	strcc	r0, [r0], #-5
     d34:	02080034 	andeq	r0, r8, #52	; 0x34
     d38:	01000000 	mrseq	r0, (UNDEF: 0)
     d3c:	00067727 	andeq	r7, r6, r7, lsr #14
     d40:	050e2200 	streq	r2, [lr, #-512]	; 0xfffffe00
     d44:	05670000 	strbeq	r0, [r7, #-0]!
     d48:	26000000 	strcs	r0, [r0], -r0
     d4c:	0000051b 	andeq	r0, r0, fp, lsl r5
     d50:	08003442 	stmdaeq	r0, {r1, r6, sl, ip, sp}
     d54:	00000040 	andeq	r0, r0, r0, asr #32
     d58:	28222c01 	stmdacs	r2!, {r0, sl, fp, sp}
     d5c:	7f000005 	svcvc	0x00000005
     d60:	00000005 	andeq	r0, r0, r5
     d64:	06651d00 	strbteq	r1, [r5], -r0, lsl #26
     d68:	30010000 	andcc	r0, r1, r0
     d6c:	08003478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip, sp}
     d70:	00000010 	andeq	r0, r0, r0, lsl r0
     d74:	06c29c01 	strbeq	r9, [r2], r1, lsl #24
     d78:	631e0000 	tstvs	lr, #0
     d7c:	30010068 	andcc	r0, r1, r8, rrx
     d80:	000001be 			; <UNDEFINED> instruction: 0x000001be
     d84:	000005af 	andeq	r0, r0, pc, lsr #11
     d88:	0005371f 	andeq	r3, r5, pc, lsl r7
     d8c:	c5300100 	ldrgt	r0, [r0, #-256]!	; 0xffffff00
     d90:	01000001 	tsteq	r0, r1
     d94:	25270051 	strcs	r0, [r7, #-81]!	; 0xffffffaf
     d98:	01000007 	tsteq	r0, r7
     d9c:	0001c535 	andeq	ip, r1, r5, lsr r5
     da0:	00348800 	eorseq	r8, r4, r0, lsl #16
     da4:	00001a08 	andeq	r1, r0, r8, lsl #20
     da8:	f79c0100 			; <UNDEFINED> instruction: 0xf79c0100
     dac:	1e000006 	cdpne	0, 0, cr0, cr0, cr6, {0}
     db0:	01006863 	tsteq	r0, r3, ror #16
     db4:	0001be35 	andeq	fp, r1, r5, lsr lr
     db8:	0005cf00 	andeq	ip, r5, r0, lsl #30
     dbc:	6d742800 	ldclvs	8, cr2, [r4, #-0]
     dc0:	37010070 	smlsdxcc	r1, r0, r0, r0
     dc4:	000001c5 	andeq	r0, r0, r5, asr #3
     dc8:	0c005001 	stceq	0, cr5, [r0], {1}
     dcc:	000001c5 	andeq	r0, r0, r5, asr #3
     dd0:	00000707 	andeq	r0, r0, r7, lsl #14
     dd4:	00028a0d 	andeq	r8, r2, sp, lsl #20
     dd8:	29000600 	stmdbcs	r0, {r9, sl}
     ddc:	00000565 	andeq	r0, r0, r5, ror #10
     de0:	06f70301 	ldrbteq	r0, [r7], r1, lsl #6
     de4:	03050000 	movweq	r0, #20480	; 0x5000
     de8:	20000584 	andcs	r0, r0, r4, lsl #11
     dec:	0007280c 	andeq	r2, r7, ip, lsl #16
     df0:	00072800 	andeq	r2, r7, r0, lsl #16
     df4:	028a0d00 	addeq	r0, sl, #0, 26
     df8:	00060000 	andeq	r0, r6, r0
     dfc:	033e042a 	teqeq	lr, #704643072	; 0x2a000000
     e00:	cd290000 	stcgt	0, cr0, [r9, #-0]
     e04:	01000006 	tsteq	r0, r6
     e08:	00073f04 	andeq	r3, r7, r4, lsl #30
     e0c:	88030500 	stmdahi	r3, {r8, sl}
     e10:	2b0800a5 	blcs	2010ac <__RW_SIZE__+0x200b28>
     e14:	00000718 	andeq	r0, r0, r8, lsl r7
     e18:	0000562c 	andeq	r5, r0, ip, lsr #12
     e1c:	06ce0200 	strbeq	r0, [lr], r0, lsl #4
     e20:	00000750 	andeq	r0, r0, r0, asr r7
     e24:	0001be0e 	andeq	fp, r1, lr, lsl #28
     e28:	06ea0000 	strbteq	r0, [sl], r0
     e2c:	00040000 	andeq	r0, r4, r0
     e30:	000003d6 	ldrdeq	r0, [r0], -r6
     e34:	00b20104 	adcseq	r0, r2, r4, lsl #2
     e38:	90010000 	andls	r0, r1, r0
     e3c:	72000007 	andvc	r0, r0, #7
     e40:	a4000001 	strge	r0, [r0], #-1
     e44:	58080034 	stmdapl	r8, {r2, r4, r5}
     e48:	f3000001 	vhadd.u8	d0, d0, d1
     e4c:	02000002 	andeq	r0, r0, #2
     e50:	000003e5 	andeq	r0, r0, r5, ror #7
     e54:	64a80301 	strtvs	r0, [r8], #769	; 0x301
     e58:	03000001 	movweq	r0, #1
     e5c:	0000061f 	andeq	r0, r0, pc, lsl r6
     e60:	040a0372 	streq	r0, [sl], #-882	; 0xfffffc8e
     e64:	03740000 	cmneq	r4, #0
     e68:	00000557 	andeq	r0, r0, r7, asr r5
     e6c:	06bd0375 			; <UNDEFINED> instruction: 0x06bd0375
     e70:	03760000 	cmneq	r6, #0
     e74:	000006e2 	andeq	r0, r0, r2, ror #13
     e78:	06ab037b 			; <UNDEFINED> instruction: 0x06ab037b
     e7c:	037c0000 	cmneq	ip, #0
     e80:	000003ef 	andeq	r0, r0, pc, ror #7
     e84:	0694037e 			; <UNDEFINED> instruction: 0x0694037e
     e88:	037f0000 	cmneq	pc, #0
     e8c:	0000054d 	andeq	r0, r0, sp, asr #10
     e90:	057b0300 	ldrbeq	r0, [fp, #-768]!	; 0xfffffd00
     e94:	03010000 	movweq	r0, #4096	; 0x1000
     e98:	00000763 	andeq	r0, r0, r3, ror #14
     e9c:	05d30302 	ldrbeq	r0, [r3, #770]	; 0x302
     ea0:	03030000 	movweq	r0, #12288	; 0x3000
     ea4:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
     ea8:	04010304 	streq	r0, [r1], #-772	; 0xfffffcfc
     eac:	03050000 	movweq	r0, #20480	; 0x5000
     eb0:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
     eb4:	06500306 	ldrbeq	r0, [r0], -r6, lsl #6
     eb8:	03070000 	movweq	r0, #28672	; 0x7000
     ebc:	000004be 			; <UNDEFINED> instruction: 0x000004be
     ec0:	071a0308 	ldreq	r0, [sl, -r8, lsl #6]
     ec4:	03090000 	movweq	r0, #36864	; 0x9000
     ec8:	00000570 	andeq	r0, r0, r0, ror r5
     ecc:	051d030a 	ldreq	r0, [sp, #-778]	; 0xfffffcf6
     ed0:	030b0000 	movweq	r0, #45056	; 0xb000
     ed4:	00000396 	muleq	r0, r6, r3
     ed8:	058f030c 	streq	r0, [pc, #780]	; 11ec <__RW_SIZE__+0xc68>
     edc:	030d0000 	movweq	r0, #53248	; 0xd000
     ee0:	00000459 	andeq	r0, r0, r9, asr r4
     ee4:	0702030e 	streq	r0, [r2, -lr, lsl #6]
     ee8:	030f0000 	movweq	r0, #61440	; 0xf000
     eec:	000004e6 	andeq	r0, r0, r6, ror #9
     ef0:	03660310 	cmneq	r6, #16, 6	; 0x40000000
     ef4:	03110000 	tsteq	r1, #0
     ef8:	0000074b 	andeq	r0, r0, fp, asr #14
     efc:	04940312 	ldreq	r0, [r4], #786	; 0x312
     f00:	03130000 	tsteq	r3, #0
     f04:	00000314 	andeq	r0, r0, r4, lsl r3
     f08:	04810314 	streq	r0, [r1], #788	; 0x314
     f0c:	03150000 	tsteq	r5, #0
     f10:	00000358 	andeq	r0, r0, r8, asr r3
     f14:	06d50316 			; <UNDEFINED> instruction: 0x06d50316
     f18:	03170000 	tsteq	r7, #0
     f1c:	00000438 	andeq	r0, r0, r8, lsr r4
     f20:	05b90318 	ldreq	r0, [r9, #792]!	; 0x318
     f24:	03190000 	tsteq	r9, #0
     f28:	00000675 	andeq	r0, r0, r5, ror r6
     f2c:	0633031a 			; <UNDEFINED> instruction: 0x0633031a
     f30:	031b0000 	tsteq	fp, #0
     f34:	000006a1 	andeq	r0, r0, r1, lsr #13
     f38:	0513031c 	ldreq	r0, [r3, #-796]	; 0xfffffce4
     f3c:	031d0000 	tsteq	sp, #0
     f40:	0000038c 	andeq	r0, r0, ip, lsl #7
     f44:	05a2031e 	streq	r0, [r2, #798]!	; 0x31e
     f48:	031f0000 	tsteq	pc, #0
     f4c:	00000687 	andeq	r0, r0, r7, lsl #13
     f50:	04d90320 	ldrbeq	r0, [r9], #800	; 0x320
     f54:	03210000 	teqeq	r1, #0
     f58:	00000379 	andeq	r0, r0, r9, ror r3
     f5c:	044f0322 	strbeq	r0, [pc], #-802	; f64 <__RW_SIZE__+0x9e0>
     f60:	03230000 	teqeq	r3, #0
     f64:	000006f3 	strdeq	r0, [r0], -r3
     f68:	060e0324 	streq	r0, [lr], -r4, lsr #6
     f6c:	03250000 	teqeq	r5, #0
     f70:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
     f74:	07570326 	ldrbeq	r0, [r7, -r6, lsr #6]
     f78:	03270000 	teqeq	r7, #0
     f7c:	000003db 	ldrdeq	r0, [r0], -fp
     f80:	076f0328 	strbeq	r0, [pc, -r8, lsr #6]!
     f84:	03290000 	teqeq	r9, #0
     f88:	0000053e 	andeq	r0, r0, lr, lsr r5
     f8c:	a804002a 	stmdage	r4, {r1, r3, r5}
     f90:	03000004 	movweq	r0, #4
     f94:	002501d9 	ldrdeq	r0, [r5], -r9	; <UNPREDICTABLE>
     f98:	01050000 	mrseq	r0, (UNDEF: 5)
     f9c:	00006d06 	andeq	r6, r0, r6, lsl #26
     fa0:	027a0600 	rsbseq	r0, sl, #0, 12
     fa4:	2a040000 	bcs	100fac <__RW_SIZE__+0x100a28>
     fa8:	00000182 	andeq	r0, r0, r2, lsl #3
     fac:	6b080105 	blvs	2013c8 <__RW_SIZE__+0x200e44>
     fb0:	05000000 	streq	r0, [r0, #-0]
     fb4:	015c0502 	cmpeq	ip, r2, lsl #10
     fb8:	02050000 	andeq	r0, r5, #0
     fbc:	00004307 	andeq	r4, r0, r7, lsl #6
     fc0:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
     fc4:	00000005 	andeq	r0, r0, r5
     fc8:	0001bb06 	andeq	fp, r1, r6, lsl #22
     fcc:	a9500400 	ldmdbge	r0, {sl}^
     fd0:	05000001 	streq	r0, [r0, #-1]
     fd4:	00a00704 	adceq	r0, r0, r4, lsl #14
     fd8:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
     fdc:	00000005 	andeq	r0, r0, r5
     fe0:	07080500 	streq	r0, [r8, -r0, lsl #10]
     fe4:	0000009b 	muleq	r0, fp, r0
     fe8:	69050407 	stmdbvs	r5, {r0, r1, r2, sl}
     fec:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
     ff0:	00a50704 	adceq	r0, r5, r4, lsl #14
     ff4:	04080000 	streq	r0, [r8], #-0
     ff8:	7a84020e 	bvc	fe101838 <MSP_BASE+0xde0fc838>
     ffc:	09000002 	stmdbeq	r0, {r1}
    1000:	0000042d 	andeq	r0, r0, sp, lsr #8
    1004:	02918602 	addseq	r8, r1, #2097152	; 0x200000
    1008:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    100c:	000005dc 	ldrdeq	r0, [r0], -ip
    1010:	02968702 	addseq	r8, r6, #524288	; 0x80000
    1014:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    1018:	000006ee 	andeq	r0, r0, lr, ror #13
    101c:	02a68802 	adceq	r8, r6, #131072	; 0x20000
    1020:	09800000 	stmibeq	r0, {}	; <UNPREDICTABLE>
    1024:	00000446 	andeq	r0, r0, r6, asr #8
    1028:	02968902 	addseq	r8, r6, #32768	; 0x8000
    102c:	0aa00000 	beq	fe801034 <MSP_BASE+0xde7fc034>
    1030:	00000746 	andeq	r0, r0, r6, asr #14
    1034:	02ab8a02 	adceq	r8, fp, #8192	; 0x2000
    1038:	01000000 	mrseq	r0, (UNDEF: 0)
    103c:	0005e60a 	andeq	lr, r5, sl, lsl #12
    1040:	968b0200 	strls	r0, [fp], r0, lsl #4
    1044:	20000002 	andcs	r0, r0, r2
    1048:	058a0a01 	streq	r0, [sl, #2561]	; 0xa01
    104c:	8c020000 	stchi	0, cr0, [r2], {-0}
    1050:	000002b0 			; <UNDEFINED> instruction: 0x000002b0
    1054:	f00a0180 			; <UNDEFINED> instruction: 0xf00a0180
    1058:	02000005 	andeq	r0, r0, #5
    105c:	0002968d 	andeq	r9, r2, sp, lsl #13
    1060:	0a01a000 	beq	69068 <__RW_SIZE__+0x68ae4>
    1064:	000006fd 	strdeq	r0, [r0], -sp
    1068:	02b58e02 	adcseq	r8, r5, #2, 28
    106c:	02000000 	andeq	r0, r0, #0
    1070:	0005fa0a 	andeq	pc, r5, sl, lsl #20
    1074:	ba8f0200 	blt	fe3c187c <MSP_BASE+0xde3bc87c>
    1078:	20000002 	andcs	r0, r0, r2
    107c:	50490b02 	subpl	r0, r9, r2, lsl #22
    1080:	da900200 	ble	fe401888 <MSP_BASE+0xde3fc888>
    1084:	00000002 	andeq	r0, r0, r2
    1088:	06040a03 	streq	r0, [r4], -r3, lsl #20
    108c:	91020000 	mrsls	r0, (UNDEF: 2)
    1090:	000002df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1094:	c60a03f0 			; <UNDEFINED> instruction: 0xc60a03f0
    1098:	02000005 	andeq	r0, r0, #5
    109c:	0002f092 	muleq	r2, r2, r0
    10a0:	000e0000 	andeq	r0, lr, r0
    10a4:	00019e0c 	andeq	r9, r1, ip, lsl #28
    10a8:	00028a00 	andeq	r8, r2, r0, lsl #20
    10ac:	028a0d00 	addeq	r0, sl, #0, 26
    10b0:	00070000 	andeq	r0, r7, r0
    10b4:	48070405 	stmdami	r7, {r0, r2, sl}
    10b8:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    10bc:	0000027a 	andeq	r0, r0, sl, ror r2
    10c0:	00019e0c 	andeq	r9, r1, ip, lsl #28
    10c4:	0002a600 	andeq	sl, r2, r0, lsl #12
    10c8:	028a0d00 	addeq	r0, sl, #0, 26
    10cc:	00170000 	andseq	r0, r7, r0
    10d0:	00027a0e 	andeq	r7, r2, lr, lsl #20
    10d4:	027a0e00 	rsbseq	r0, sl, #0, 28
    10d8:	7a0e0000 	bvc	3810e0 <__RW_SIZE__+0x380b5c>
    10dc:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    10e0:	0000027a 	andeq	r0, r0, sl, ror r2
    10e4:	00019e0c 	andeq	r9, r1, ip, lsl #28
    10e8:	0002ca00 	andeq	ip, r2, r0, lsl #20
    10ec:	028a0d00 	addeq	r0, sl, #0, 26
    10f0:	00370000 	eorseq	r0, r7, r0
    10f4:	0001770c 	andeq	r7, r1, ip, lsl #14
    10f8:	0002da00 	andeq	sp, r2, r0, lsl #20
    10fc:	028a0d00 	addeq	r0, sl, #0, 26
    1100:	00ef0000 	rsceq	r0, pc, r0
    1104:	0002ca0e 	andeq	ip, r2, lr, lsl #20
    1108:	019e0c00 	orrseq	r0, lr, r0, lsl #24
    110c:	02f00000 	rscseq	r0, r0, #0
    1110:	8a0f0000 	bhi	3c1118 <__RW_SIZE__+0x3c0b94>
    1114:	83000002 	movwhi	r0, #2
    1118:	9e0e0002 	cdpls	0, 0, cr0, cr14, cr2, {0}
    111c:	06000001 	streq	r0, [r0], -r1
    1120:	0000065b 	andeq	r0, r0, fp, asr r6
    1124:	01cc9302 	biceq	r9, ip, r2, lsl #6
    1128:	9e0c0000 	cdpls	0, 0, cr0, cr12, cr0, {0}
    112c:	10000001 	andne	r0, r0, r1
    1130:	0d000003 	stceq	0, cr0, [r0, #-12]
    1134:	0000028a 	andeq	r0, r0, sl, lsl #5
    1138:	18100003 	ldmdane	r0, {r0, r1}
    113c:	67037703 	strvs	r7, [r3, -r3, lsl #14]
    1140:	11000003 	tstne	r0, r3
    1144:	00524d49 	subseq	r4, r2, r9, asr #26
    1148:	f0037903 			; <UNDEFINED> instruction: 0xf0037903
    114c:	00000002 	andeq	r0, r0, r2
    1150:	524d4511 	subpl	r4, sp, #71303168	; 0x4400000
    1154:	037a0300 	cmneq	sl, #0, 6
    1158:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    115c:	08161204 	ldmdaeq	r6, {r2, r9, ip}
    1160:	7b030000 	blvc	c1168 <__RW_SIZE__+0xc0be4>
    1164:	0002f003 	andeq	pc, r2, r3
    1168:	34120800 	ldrcc	r0, [r2], #-2048	; 0xfffff800
    116c:	03000008 	movweq	r0, #8
    1170:	02f0037c 	rscseq	r0, r0, #124, 6	; 0xf0000001
    1174:	120c0000 	andne	r0, ip, #0
    1178:	0000082e 	andeq	r0, r0, lr, lsr #16
    117c:	f0037d03 			; <UNDEFINED> instruction: 0xf0037d03
    1180:	10000002 	andne	r0, r0, r2
    1184:	00525011 	subseq	r5, r2, r1, lsl r0
    1188:	f0037e03 			; <UNDEFINED> instruction: 0xf0037e03
    118c:	14000002 	strne	r0, [r0], #-2
    1190:	08090400 	stmdaeq	r9, {sl}
    1194:	7f030000 	svcvc	0x00030000
    1198:	00031003 	andeq	r1, r3, r3
    119c:	031c1000 	tsteq	ip, #0
    11a0:	03d803e9 	bicseq	r0, r8, #-1543503869	; 0xa4000003
    11a4:	43110000 	tstmi	r1, #0
    11a8:	03004c52 	movweq	r4, #3154	; 0xc52
    11ac:	02f003eb 	rscseq	r0, r0, #-1409286141	; 0xac000003
    11b0:	11000000 	mrsne	r0, (UNDEF: 0)
    11b4:	00485243 	subeq	r5, r8, r3, asr #4
    11b8:	f003ec03 			; <UNDEFINED> instruction: 0xf003ec03
    11bc:	04000002 	streq	r0, [r0], #-2
    11c0:	52444911 	subpl	r4, r4, #278528	; 0x44000
    11c4:	03ed0300 	mvneq	r0, #0, 6
    11c8:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    11cc:	444f1108 	strbmi	r1, [pc], #-264	; 11d4 <__RW_SIZE__+0xc50>
    11d0:	ee030052 	mcr	0, 0, r0, cr3, cr2, {2}
    11d4:	0002f003 	andeq	pc, r2, r3
    11d8:	8b120c00 	blhi	4841e0 <__RW_SIZE__+0x483c5c>
    11dc:	03000007 	movweq	r0, #7
    11e0:	02f003ef 	rscseq	r0, r0, #-1140850685	; 0xbc000003
    11e4:	11100000 	tstne	r0, r0
    11e8:	00525242 	subseq	r5, r2, r2, asr #4
    11ec:	f003f003 			; <UNDEFINED> instruction: 0xf003f003
    11f0:	14000002 	strne	r0, [r0], #-2
    11f4:	00083e12 	andeq	r3, r8, r2, lsl lr
    11f8:	03f10300 	mvnseq	r0, #0, 6
    11fc:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1200:	1b040018 	blne	101268 <__RW_SIZE__+0x100ce4>
    1204:	03000008 	movweq	r0, #8
    1208:	037303f2 	cmneq	r3, #-939524093	; 0xc8000003
    120c:	20100000 	andscs	r0, r0, r0
    1210:	2f03f803 	svccs	0x0003f803
    1214:	12000004 	andne	r0, r0, #4
    1218:	00000839 	andeq	r0, r0, r9, lsr r8
    121c:	f003fa03 			; <UNDEFINED> instruction: 0xf003fa03
    1220:	00000002 	andeq	r0, r0, r2
    1224:	00079612 	andeq	r9, r7, r2, lsl r6
    1228:	03fb0300 	mvnseq	r0, #0, 6
    122c:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1230:	08021204 	stmdaeq	r2, {r2, r9, ip}
    1234:	fc030000 	stc2	0, cr0, [r3], {-0}
    1238:	00042f03 	andeq	r2, r4, r3, lsl #30
    123c:	dc120800 	ldcle	8, cr0, [r2], {-0}
    1240:	03000005 	movweq	r0, #5
    1244:	019e03fd 			; <UNDEFINED> instruction: 0x019e03fd
    1248:	12180000 	andsne	r0, r8, #0
    124c:	00000828 	andeq	r0, r0, r8, lsr #16
    1250:	f003fe03 			; <UNDEFINED> instruction: 0xf003fe03
    1254:	1c000002 	stcne	0, cr0, [r0], {2}
    1258:	03000e00 	movweq	r0, #3584	; 0xe00
    125c:	e5040000 	str	r0, [r4, #-0]
    1260:	03000007 	movweq	r0, #7
    1264:	03e403ff 	mvneq	r0, #-67108861	; 0xfc000003
    1268:	28100000 	ldmdacs	r0, {}	; <UNPREDICTABLE>
    126c:	cb043403 	blgt	10e280 <__RW_SIZE__+0x10dcfc>
    1270:	11000004 	tstne	r0, r4
    1274:	03005243 	movweq	r5, #579	; 0x243
    1278:	02f00436 	rscseq	r0, r0, #905969664	; 0x36000000
    127c:	12000000 	andne	r0, r0, #0
    1280:	00000013 	andeq	r0, r0, r3, lsl r0
    1284:	f0043703 			; <UNDEFINED> instruction: 0xf0043703
    1288:	04000002 	streq	r0, [r0], #-2
    128c:	52494311 	subpl	r4, r9, #1140850688	; 0x44000000
    1290:	04380300 	ldrteq	r0, [r8], #-768	; 0xfffffd00
    1294:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1298:	00921208 	addseq	r1, r2, r8, lsl #4
    129c:	39030000 	stmdbcc	r3, {}	; <UNPREDICTABLE>
    12a0:	0002f004 	andeq	pc, r2, r4
    12a4:	3a120c00 	bcc	4842ac <__RW_SIZE__+0x483d28>
    12a8:	03000000 	movweq	r0, #0
    12ac:	02f0043a 	rscseq	r0, r0, #973078528	; 0x3a000000
    12b0:	12100000 	andsne	r0, r0, #0
    12b4:	00000026 	andeq	r0, r0, r6, lsr #32
    12b8:	f0043b03 			; <UNDEFINED> instruction: 0xf0043b03
    12bc:	14000002 	strne	r0, [r0], #-2
    12c0:	00008212 	andeq	r8, r0, r2, lsl r2
    12c4:	043c0300 	ldrteq	r0, [ip], #-768	; 0xfffffd00
    12c8:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    12cc:	008a1218 	addeq	r1, sl, r8, lsl r2
    12d0:	3d030000 	stccc	0, cr0, [r3, #-0]
    12d4:	0002f004 	andeq	pc, r2, r4
    12d8:	0e121c00 	cdpeq	12, 1, cr1, cr2, cr0, {0}
    12dc:	03000000 	movweq	r0, #0
    12e0:	02f0043e 	rscseq	r0, r0, #1040187392	; 0x3e000000
    12e4:	11200000 	teqne	r0, r0
    12e8:	00525343 	subseq	r5, r2, r3, asr #6
    12ec:	f0043f03 			; <UNDEFINED> instruction: 0xf0043f03
    12f0:	24000002 	strcs	r0, [r0], #-2
    12f4:	01660400 	cmneq	r6, r0, lsl #8
    12f8:	4a030000 	bmi	c1300 <__RW_SIZE__+0xc0d7c>
    12fc:	00044004 	andeq	r4, r4, r4
    1300:	08010500 	stmdaeq	r1, {r8, sl}
    1304:	00000074 	andeq	r0, r0, r4, ror r0
    1308:	0007d513 	andeq	sp, r7, r3, lsl r5
    130c:	be0b0100 	adflte	f0, f3, f0
    1310:	01000001 	tsteq	r0, r1
    1314:	0004fe14 	andeq	pc, r4, r4, lsl lr	; <UNPREDICTABLE>
    1318:	06130200 	ldreq	r0, [r3], -r0, lsl #4
    131c:	00050403 	andeq	r0, r5, r3, lsl #8
    1320:	03e51500 	mvneq	r1, #0, 10
    1324:	13020000 	movwne	r0, #8192	; 0x2000
    1328:	00016406 	andeq	r6, r1, r6, lsl #8
    132c:	6c140000 	ldcvs	0, cr0, [r4], {-0}
    1330:	02000004 	andeq	r0, r0, #4
    1334:	1e0305de 	mcrne	5, 0, r0, cr3, cr14, {6}
    1338:	15000005 	strne	r0, [r0, #-5]
    133c:	000003e5 	andeq	r0, r0, r5, ror #7
    1340:	6405de02 	strvs	sp, [r5], #-3586	; 0xfffff1fe
    1344:	00000001 	andeq	r0, r0, r1
    1348:	0004c914 	andeq	ip, r4, r4, lsl r9
    134c:	05eb0200 	strbeq	r0, [fp, #512]!	; 0x200
    1350:	00053803 	andeq	r3, r5, r3, lsl #16
    1354:	03e51500 	mvneq	r1, #0, 10
    1358:	eb020000 	bl	81360 <__RW_SIZE__+0x80ddc>
    135c:	00016405 	andeq	r6, r1, r5, lsl #8
    1360:	7d160000 	ldcvc	0, cr0, [r6, #-0]
    1364:	01000007 	tsteq	r0, r7
    1368:	0034a403 	eorseq	sl, r4, r3, lsl #8
    136c:	00002608 	andeq	r2, r0, r8, lsl #12
    1370:	179c0100 	ldrne	r0, [ip, r0, lsl #2]
    1374:	000007f2 	strdeq	r0, [r0], -r2
    1378:	01be1001 			; <UNDEFINED> instruction: 0x01be1001
    137c:	6c010000 	stcvs	0, cr0, [r1], {-0}
    1380:	18000005 	stmdane	r0, {r0, r2}
    1384:	12010069 	andne	r0, r1, #105	; 0x69
    1388:	000001c5 	andeq	r0, r0, r5, asr #3
    138c:	01006b18 	tsteq	r0, r8, lsl fp
    1390:	0001c512 	andeq	ip, r1, r2, lsl r5
    1394:	49190000 	ldmdbmi	r9, {}	; <UNPREDICTABLE>
    1398:	cc000005 	stcgt	0, cr0, [r0], {5}
    139c:	2a080034 	bcs	201474 <__RW_SIZE__+0x200ef0>
    13a0:	01000000 	mrseq	r0, (UNDEF: 0)
    13a4:	0005aa9c 	muleq	r5, ip, sl
    13a8:	05591a00 	ldrbeq	r1, [r9, #-2560]	; 0xfffff600
    13ac:	621b0000 	andsvs	r0, fp, #0
    13b0:	01000005 	tsteq	r0, r5
    13b4:	04de1c50 	ldrbeq	r1, [lr], #3152	; 0xc50
    13b8:	34cc0000 	strbcc	r0, [ip], #0
    13bc:	00160800 	andseq	r0, r6, r0, lsl #16
    13c0:	16010000 	strne	r0, [r1], -r0
    13c4:	0004de1c 	andeq	sp, r4, ip, lsl lr
    13c8:	0034e200 	eorseq	lr, r4, r0, lsl #4
    13cc:	00000a08 	andeq	r0, r0, r8, lsl #20
    13d0:	001a0100 	andseq	r0, sl, r0, lsl #2
    13d4:	00079b1d 	andeq	r9, r7, sp, lsl fp
    13d8:	f8260100 			; <UNDEFINED> instruction: 0xf8260100
    13dc:	2e080034 	mcrcs	0, 0, r0, cr8, cr4, {1}
    13e0:	01000000 	mrseq	r0, (UNDEF: 0)
    13e4:	0006049c 	muleq	r6, ip, r4
    13e8:	05491e00 	strbeq	r1, [r9, #-3584]	; 0xfffff200
    13ec:	34f80000 	ldrbtcc	r0, [r8], #0
    13f0:	00280800 	eoreq	r0, r8, r0, lsl #16
    13f4:	28010000 	stmdacs	r1, {}	; <UNPREDICTABLE>
    13f8:	0034f81f 	eorseq	pc, r4, pc, lsl r8	; <UNPREDICTABLE>
    13fc:	00002808 	andeq	r2, r0, r8, lsl #16
    1400:	05591a00 	ldrbeq	r1, [r9, #-2560]	; 0xfffff600
    1404:	621b0000 	andsvs	r0, fp, #0
    1408:	01000005 	tsteq	r0, r5
    140c:	04de1c51 	ldrbeq	r1, [lr], #3153	; 0xc51
    1410:	34f80000 	ldrbtcc	r0, [r8], #0
    1414:	00160800 	andseq	r0, r6, r0, lsl #16
    1418:	16010000 	strne	r0, [r1], -r0
    141c:	0004de1c 	andeq	sp, r4, ip, lsl lr
    1420:	00350e00 	eorseq	r0, r5, r0, lsl #28
    1424:	00000a08 	andeq	r0, r0, r8, lsl #20
    1428:	001a0100 	andseq	r0, sl, r0, lsl #2
    142c:	c0200000 	eorgt	r0, r0, r0
    1430:	01000007 	tsteq	r0, r7
    1434:	0001be2b 	andeq	fp, r1, fp, lsr #28
    1438:	00352800 	eorseq	r2, r5, r0, lsl #16
    143c:	00002e08 	andeq	r2, r0, r8, lsl #28
    1440:	6b9c0100 	blvs	fe701848 <MSP_BASE+0xde6fc848>
    1444:	18000006 	stmdane	r0, {r1, r2}
    1448:	2d01006b 	stccs	0, cr0, [r1, #-428]	; 0xfffffe54
    144c:	000001be 			; <UNDEFINED> instruction: 0x000001be
    1450:	0005491e 	andeq	r4, r5, lr, lsl r9
    1454:	00352800 	eorseq	r2, r5, r0, lsl #16
    1458:	00002808 	andeq	r2, r0, r8, lsl #16
    145c:	1f2f0100 	svcne	0x002f0100
    1460:	08003528 	stmdaeq	r0, {r3, r5, r8, sl, ip, sp}
    1464:	00000028 	andeq	r0, r0, r8, lsr #32
    1468:	0005591a 	andeq	r5, r5, sl, lsl r9
    146c:	05621b00 	strbeq	r1, [r2, #-2816]!	; 0xfffff500
    1470:	50010000 	andpl	r0, r1, r0
    1474:	0004de1c 	andeq	sp, r4, ip, lsl lr
    1478:	00352800 	eorseq	r2, r5, r0, lsl #16
    147c:	00001608 	andeq	r1, r0, r8, lsl #12
    1480:	1c160100 	ldfnes	f0, [r6], {-0}
    1484:	000004de 	ldrdeq	r0, [r0], -lr
    1488:	0800353e 	stmdaeq	r0, {r1, r2, r3, r4, r5, r8, sl, ip, sp}
    148c:	0000000a 	andeq	r0, r0, sl
    1490:	00001a01 	andeq	r1, r0, r1, lsl #20
    1494:	07b11d00 	ldreq	r1, [r1, r0, lsl #26]!
    1498:	33010000 	movwcc	r0, #4096	; 0x1000
    149c:	08003558 	stmdaeq	r0, {r3, r4, r6, r8, sl, ip, sp}
    14a0:	000000a4 	andeq	r0, r0, r4, lsr #1
    14a4:	06dc9c01 	ldrbeq	r9, [ip], r1, lsl #24
    14a8:	65210000 	strvs	r0, [r1, #-0]!
    14ac:	3301006e 	movwcc	r0, #4206	; 0x106e
    14b0:	000001be 			; <UNDEFINED> instruction: 0x000001be
    14b4:	000005ef 	andeq	r0, r0, pc, ror #11
    14b8:	00051e22 	andeq	r1, r5, r2, lsr #28
    14bc:	00355c00 	eorseq	r5, r5, r0, lsl #24
    14c0:	00007008 	andeq	r7, r0, r8
    14c4:	ab450100 	blge	11418cc <__RW_SIZE__+0x1141348>
    14c8:	23000006 	movwcs	r0, #6
    14cc:	0000052b 	andeq	r0, r0, fp, lsr #10
    14d0:	00000610 	andeq	r0, r0, r0, lsl r6
    14d4:	04ea2200 	strbteq	r2, [sl], #512	; 0x200
    14d8:	35d20000 	ldrbcc	r0, [r2]
    14dc:	00880800 	addeq	r0, r8, r0, lsl #16
    14e0:	3e010000 	cdpcc	0, 0, cr0, cr1, cr0, {0}
    14e4:	000006c5 	andeq	r0, r0, r5, asr #13
    14e8:	0004f724 	andeq	pc, r4, r4, lsr #14
    14ec:	1e001700 	cdpne	7, 0, cr1, cr0, cr0, {0}
    14f0:	00000504 	andeq	r0, r0, r4, lsl #10
    14f4:	080035f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r8, sl, ip, sp}
    14f8:	00000002 	andeq	r0, r0, r2
    14fc:	11244001 	teqne	r4, r1
    1500:	17000005 	strne	r0, [r0, -r5]
    1504:	56250000 	strtpl	r0, [r5], -r0
    1508:	02000000 	andeq	r0, r0, #0
    150c:	06e806ce 	strbteq	r0, [r8], lr, asr #13
    1510:	be0e0000 	cdplt	0, 0, cr0, cr14, cr0, {0}
    1514:	00000001 	andeq	r0, r0, r1
    1518:	000001f7 	strdeq	r0, [r0], -r7
    151c:	05e40004 	strbeq	r0, [r4, #4]!
    1520:	01040000 	mrseq	r0, (UNDEF: 4)
    1524:	000000b2 	strheq	r0, [r0], -r2
    1528:	00085b01 	andeq	r5, r8, r1, lsl #22
    152c:	00017200 	andeq	r7, r1, r0, lsl #4
    1530:	0035fc00 	eorseq	pc, r5, r0, lsl #24
    1534:	00007208 	andeq	r7, r0, r8, lsl #4
    1538:	00040b00 	andeq	r0, r4, r0, lsl #22
    153c:	06010200 	streq	r0, [r1], -r0, lsl #4
    1540:	0000006d 	andeq	r0, r0, sp, rrx
    1544:	6b080102 	blvs	201954 <__RW_SIZE__+0x2013d0>
    1548:	02000000 	andeq	r0, r0, #0
    154c:	015c0502 	cmpeq	ip, r2, lsl #10
    1550:	02020000 	andeq	r0, r2, #0
    1554:	00004307 	andeq	r4, r0, r7, lsl #6
    1558:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    155c:	00000005 	andeq	r0, r0, r5
    1560:	0001bb03 	andeq	fp, r1, r3, lsl #22
    1564:	53500300 	cmppl	r0, #0, 6
    1568:	02000000 	andeq	r0, r0, #0
    156c:	00a00704 	adceq	r0, r0, r4, lsl #14
    1570:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1574:	00000005 	andeq	r0, r0, r5
    1578:	07080200 	streq	r0, [r8, -r0, lsl #4]
    157c:	0000009b 	muleq	r0, fp, r0
    1580:	69050404 	stmdbvs	r5, {r2, sl}
    1584:	0200746e 	andeq	r7, r0, #1845493760	; 0x6e000000
    1588:	00a50704 	adceq	r0, r5, r4, lsl #14
    158c:	04020000 	streq	r0, [r2], #-0
    1590:	00014807 	andeq	r4, r1, r7, lsl #16
    1594:	00480500 	subeq	r0, r8, r0, lsl #10
    1598:	1c060000 	stcne	0, cr0, [r6], {-0}
    159c:	e703e902 	str	lr, [r3, -r2, lsl #18]
    15a0:	07000000 	streq	r0, [r0, -r0]
    15a4:	004c5243 	subeq	r5, ip, r3, asr #4
    15a8:	7d03eb02 	vstrvc	d14, [r3, #-8]
    15ac:	00000000 	andeq	r0, r0, r0
    15b0:	48524307 	ldmdami	r2, {r0, r1, r2, r8, r9, lr}^
    15b4:	03ec0200 	mvneq	r0, #0, 4
    15b8:	0000007d 	andeq	r0, r0, sp, ror r0
    15bc:	44490704 	strbmi	r0, [r9], #-1796	; 0xfffff8fc
    15c0:	ed020052 	stc	0, cr0, [r2, #-328]	; 0xfffffeb8
    15c4:	00007d03 	andeq	r7, r0, r3, lsl #26
    15c8:	4f070800 	svcmi	0x00070800
    15cc:	02005244 	andeq	r5, r0, #68, 4	; 0x40000004
    15d0:	007d03ee 	rsbseq	r0, sp, lr, ror #7
    15d4:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    15d8:	0000078b 	andeq	r0, r0, fp, lsl #15
    15dc:	7d03ef02 	stcvc	15, cr14, [r3, #-8]
    15e0:	10000000 	andne	r0, r0, r0
    15e4:	52524207 	subspl	r4, r2, #1879048192	; 0x70000000
    15e8:	03f00200 	mvnseq	r0, #0, 4
    15ec:	0000007d 	andeq	r0, r0, sp, ror r0
    15f0:	083e0814 	ldmdaeq	lr!, {r2, r4, fp}
    15f4:	f1020000 	cps	#0
    15f8:	00007d03 	andeq	r7, r0, r3, lsl #26
    15fc:	09001800 	stmdbeq	r0, {fp, ip}
    1600:	0000081b 	andeq	r0, r0, fp, lsl r8
    1604:	8203f202 	andhi	pc, r3, #536870912	; 0x20000000
    1608:	06000000 	streq	r0, [r0], -r0
    160c:	04340228 	ldrteq	r0, [r4], #-552	; 0xfffffdd8
    1610:	0000017e 	andeq	r0, r0, lr, ror r1
    1614:	00524307 	subseq	r4, r2, r7, lsl #6
    1618:	7d043602 	stcvc	6, cr3, [r4, #-8]
    161c:	00000000 	andeq	r0, r0, r0
    1620:	00001308 	andeq	r1, r0, r8, lsl #6
    1624:	04370200 	ldrteq	r0, [r7], #-512	; 0xfffffe00
    1628:	0000007d 	andeq	r0, r0, sp, ror r0
    162c:	49430704 	stmdbmi	r3, {r2, r8, r9, sl}^
    1630:	38020052 	stmdacc	r2, {r1, r4, r6}
    1634:	00007d04 	andeq	r7, r0, r4, lsl #26
    1638:	92080800 	andls	r0, r8, #0, 16
    163c:	02000000 	andeq	r0, r0, #0
    1640:	007d0439 	rsbseq	r0, sp, r9, lsr r4
    1644:	080c0000 	stmdaeq	ip, {}	; <UNPREDICTABLE>
    1648:	0000003a 	andeq	r0, r0, sl, lsr r0
    164c:	7d043a02 	vstrvc	s6, [r4, #-8]
    1650:	10000000 	andne	r0, r0, r0
    1654:	00002608 	andeq	r2, r0, r8, lsl #12
    1658:	043b0200 	ldrteq	r0, [fp], #-512	; 0xfffffe00
    165c:	0000007d 	andeq	r0, r0, sp, ror r0
    1660:	00820814 	addeq	r0, r2, r4, lsl r8
    1664:	3c020000 	stccc	0, cr0, [r2], {-0}
    1668:	00007d04 	andeq	r7, r0, r4, lsl #26
    166c:	8a081800 	bhi	207674 <__RW_SIZE__+0x2070f0>
    1670:	02000000 	andeq	r0, r0, #0
    1674:	007d043d 	rsbseq	r0, sp, sp, lsr r4
    1678:	081c0000 	ldmdaeq	ip, {}	; <UNPREDICTABLE>
    167c:	0000000e 	andeq	r0, r0, lr
    1680:	7d043e02 	stcvc	14, cr3, [r4, #-8]
    1684:	20000000 	andcs	r0, r0, r0
    1688:	52534307 	subspl	r4, r3, #469762048	; 0x1c000000
    168c:	043f0200 	ldrteq	r0, [pc], #-512	; 1694 <__RW_SIZE__+0x1110>
    1690:	0000007d 	andeq	r0, r0, sp, ror r0
    1694:	66090024 	strvs	r0, [r9], -r4, lsr #32
    1698:	02000001 	andeq	r0, r0, #1
    169c:	00f3044a 	rscseq	r0, r3, sl, asr #8
    16a0:	01020000 	mrseq	r0, (UNDEF: 2)
    16a4:	00007408 	andeq	r7, r0, r8, lsl #8
    16a8:	086c0a00 	stmdaeq	ip!, {r9, fp}^
    16ac:	03010000 	movweq	r0, #4096	; 0x1000
    16b0:	080035fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
    16b4:	0000002e 	andeq	r0, r0, lr, lsr #32
    16b8:	4f0b9c01 	svcmi	0x000b9c01
    16bc:	01000008 	tsteq	r0, r8
    16c0:	00362c0a 	eorseq	r2, r6, sl, lsl #24
    16c4:	00001c08 	andeq	r1, r0, r8, lsl #24
    16c8:	c79c0100 	ldrgt	r0, [ip, r0, lsl #2]
    16cc:	0c000001 	stceq	0, cr0, [r0], {1}
    16d0:	006d756e 	rsbeq	r7, sp, lr, ror #10
    16d4:	006f0a01 	rsbeq	r0, pc, r1, lsl #20
    16d8:	06240000 	strteq	r0, [r4], -r0
    16dc:	0a000000 	beq	16e4 <__RW_SIZE__+0x1160>
    16e0:	00000861 	andeq	r0, r0, r1, ror #16
    16e4:	36480f01 	strbcc	r0, [r8], -r1, lsl #30
    16e8:	00120800 	andseq	r0, r2, r0, lsl #16
    16ec:	9c010000 	stcls	0, cr0, [r1], {-0}
    16f0:	0008430a 	andeq	r4, r8, sl, lsl #6
    16f4:	5c140100 	ldfpls	f0, [r4], {-0}
    16f8:	12080036 	andne	r0, r8, #54	; 0x36
    16fc:	01000000 	mrseq	r0, (UNDEF: 0)
    1700:	00560d9c 			; <UNDEFINED> instruction: 0x00560d9c
    1704:	ce040000 	cdpgt	0, 0, cr0, cr4, cr0, {0}
    1708:	0001f506 	andeq	pc, r1, r6, lsl #10
    170c:	00680500 	rsbeq	r0, r8, r0, lsl #10
    1710:	0d000000 	stceq	0, cr0, [r0, #-0]
    1714:	04000004 	streq	r0, [r0], #-4
    1718:	0006ac00 	andeq	sl, r6, r0, lsl #24
    171c:	b2010400 	andlt	r0, r1, #0, 8
    1720:	01000000 	mrseq	r0, (UNDEF: 0)
    1724:	000008fe 	strdeq	r0, [r0], -lr
    1728:	00000172 	andeq	r0, r0, r2, ror r1
    172c:	08003670 	stmdaeq	r0, {r4, r5, r6, r9, sl, ip, sp}
    1730:	000000c0 	andeq	r0, r0, r0, asr #1
    1734:	000004aa 	andeq	r0, r0, sl, lsr #9
    1738:	6d060102 	stfvss	f0, [r6, #-8]
    173c:	03000000 	movweq	r0, #0
    1740:	0000027a 	andeq	r0, r0, sl, ror r2
    1744:	00372a02 	eorseq	r2, r7, r2, lsl #20
    1748:	01020000 	mrseq	r0, (UNDEF: 2)
    174c:	00006b08 	andeq	r6, r0, r8, lsl #22
    1750:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    1754:	0000015c 	andeq	r0, r0, ip, asr r1
    1758:	43070202 	movwmi	r0, #29186	; 0x7202
    175c:	02000000 	andeq	r0, r0, #0
    1760:	00050504 	andeq	r0, r5, r4, lsl #10
    1764:	bb030000 	bllt	c176c <__RW_SIZE__+0xc11e8>
    1768:	02000001 	andeq	r0, r0, #1
    176c:	00005e50 	andeq	r5, r0, r0, asr lr
    1770:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1774:	000000a0 	andeq	r0, r0, r0, lsr #1
    1778:	00050802 	andeq	r0, r5, r2, lsl #16
    177c:	02000000 	andeq	r0, r0, #0
    1780:	009b0708 	addseq	r0, fp, r8, lsl #14
    1784:	04040000 	streq	r0, [r4], #-0
    1788:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    178c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    1790:	000000a5 	andeq	r0, r0, r5, lsr #1
    1794:	48070402 	stmdami	r7, {r1, sl}
    1798:	05000001 	streq	r0, [r0, #-1]
    179c:	00000053 	andeq	r0, r0, r3, asr r0
    17a0:	9b037406 	blls	de7c0 <__RW_SIZE__+0xde23c>
    17a4:	0000017a 	andeq	r0, r0, sl, ror r1
    17a8:	0008f807 	andeq	pc, r8, r7, lsl #16
    17ac:	7a9d0300 	bvc	fe7423b4 <MSP_BASE+0xde73d3b4>
    17b0:	00000001 	andeq	r0, r0, r1
    17b4:	0008de07 	andeq	sp, r8, r7, lsl #28
    17b8:	889e0300 	ldmhi	lr, {r8, r9}
    17bc:	04000000 	streq	r0, [r0], #-0
    17c0:	0008bb07 	andeq	fp, r8, r7, lsl #22
    17c4:	889f0300 	ldmhi	pc, {r8, r9}	; <UNPREDICTABLE>
    17c8:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    17cc:	0008e307 	andeq	lr, r8, r7, lsl #6
    17d0:	88a00300 	stmiahi	r0!, {r8, r9}
    17d4:	0c000000 	stceq	0, cr0, [r0], {-0}
    17d8:	52435308 	subpl	r5, r3, #8, 6	; 0x20000000
    17dc:	88a10300 	stmiahi	r1!, {r8, r9}
    17e0:	10000000 	andne	r0, r0, r0
    17e4:	52434308 	subpl	r4, r3, #8, 6	; 0x20000000
    17e8:	88a20300 	stmiahi	r2!, {r8, r9}
    17ec:	14000000 	strne	r0, [r0], #-0
    17f0:	50485308 	subpl	r5, r8, r8, lsl #6
    17f4:	8fa30300 	svchi	0x00a30300
    17f8:	18000001 	stmdane	r0, {r0}
    17fc:	00088307 	andeq	r8, r8, r7, lsl #6
    1800:	88a40300 	stmiahi	r4!, {r8, r9}
    1804:	24000000 	strcs	r0, [r0], #-0
    1808:	00089907 	andeq	r9, r8, r7, lsl #18
    180c:	88a50300 	stmiahi	r5!, {r8, r9}
    1810:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    1814:	0008c007 	andeq	ip, r8, r7
    1818:	88a60300 	stmiahi	r6!, {r8, r9}
    181c:	2c000000 	stccs	0, cr0, [r0], {-0}
    1820:	0008d907 	andeq	sp, r8, r7, lsl #18
    1824:	88a70300 	stmiahi	r7!, {r8, r9}
    1828:	30000000 	andcc	r0, r0, r0
    182c:	00091907 	andeq	r1, r9, r7, lsl #18
    1830:	88a80300 	stmiahi	r8!, {r8, r9}
    1834:	34000000 	strcc	r0, [r0], #-0
    1838:	0008ee07 	andeq	lr, r8, r7, lsl #28
    183c:	88a90300 	stmiahi	r9!, {r8, r9}
    1840:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
    1844:	00093507 	andeq	r3, r9, r7, lsl #10
    1848:	88aa0300 	stmiahi	sl!, {r8, r9}
    184c:	3c000000 	stccc	0, cr0, [r0], {-0}
    1850:	52465008 	subpl	r5, r6, #8
    1854:	a4ab0300 	strtge	r0, [fp], #768	; 0x300
    1858:	40000001 	andmi	r0, r0, r1
    185c:	52464408 	subpl	r4, r6, #8, 8	; 0x8000000
    1860:	7aac0300 	bvc	feb02468 <MSP_BASE+0xdeafd468>
    1864:	48000001 	stmdami	r0, {r0}
    1868:	52444108 	subpl	r4, r4, #8, 2
    186c:	7aad0300 	bvc	feb42474 <MSP_BASE+0xdeb3d474>
    1870:	4c000001 	stcmi	0, cr0, [r0], {1}
    1874:	00087e07 	andeq	r7, r8, r7, lsl #28
    1878:	beae0300 	cdplt	3, 10, cr0, cr14, cr0, {0}
    187c:	50000001 	andpl	r0, r0, r1
    1880:	0008e907 	andeq	lr, r8, r7, lsl #18
    1884:	d8af0300 	stmiale	pc!, {r8, r9}	; <UNPREDICTABLE>
    1888:	60000001 	andvs	r0, r0, r1
    188c:	00880900 	addeq	r0, r8, r0, lsl #18
    1890:	2c0a0000 	stccs	0, cr0, [sl], {-0}
    1894:	8f000000 	svchi	0x00000000
    1898:	0b000001 	bleq	18a4 <__RW_SIZE__+0x1320>
    189c:	00000081 	andeq	r0, r0, r1, lsl #1
    18a0:	7f05000b 	svcvc	0x0005000b
    18a4:	0a000001 	beq	18b0 <__RW_SIZE__+0x132c>
    18a8:	00000053 	andeq	r0, r0, r3, asr r0
    18ac:	000001a4 	andeq	r0, r0, r4, lsr #3
    18b0:	0000810b 	andeq	r8, r0, fp, lsl #2
    18b4:	09000100 	stmdbeq	r0, {r8}
    18b8:	000001a9 	andeq	r0, r0, r9, lsr #3
    18bc:	00019405 	andeq	r9, r1, r5, lsl #8
    18c0:	00530a00 	subseq	r0, r3, r0, lsl #20
    18c4:	01be0000 			; <UNDEFINED> instruction: 0x01be0000
    18c8:	810b0000 	mrshi	r0, (UNDEF: 11)
    18cc:	03000000 	movweq	r0, #0
    18d0:	01c30900 	biceq	r0, r3, r0, lsl #18
    18d4:	ae050000 	cdpge	0, 0, cr0, cr5, cr0, {0}
    18d8:	0a000001 	beq	18e4 <__RW_SIZE__+0x1360>
    18dc:	00000053 	andeq	r0, r0, r3, asr r0
    18e0:	000001d8 	ldrdeq	r0, [r0], -r8
    18e4:	0000810b 	andeq	r8, r0, fp, lsl #2
    18e8:	09000400 	stmdbeq	r0, {sl}
    18ec:	000001dd 	ldrdeq	r0, [r0], -sp
    18f0:	0001c805 	andeq	ip, r1, r5, lsl #16
    18f4:	08c50300 	stmiaeq	r5, {r8, r9}^
    18f8:	b0030000 	andlt	r0, r3, r0
    18fc:	0000008d 	andeq	r0, r0, sp, lsl #1
    1900:	040d040c 	streq	r0, [sp], #-1036	; 0xfffffbf4
    1904:	000001f5 	strdeq	r0, [r0], -r5
    1908:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    190c:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
    1910:	0000091f 	andeq	r0, r0, pc, lsl r9
    1914:	0f010301 	svceq	0x00010301
    1918:	000008f3 	strdeq	r0, [r0], -r3
    191c:	36701701 	ldrbtcc	r1, [r0], -r1, lsl #14
    1920:	00c00800 	sbceq	r0, r0, r0, lsl #16
    1924:	9c010000 	stcls	0, cr0, [r1], {-0}
    1928:	00000322 	andeq	r0, r0, r2, lsr #6
    192c:	01006910 	tsteq	r0, r0, lsl r9
    1930:	00007a19 	andeq	r7, r0, r9, lsl sl
    1934:	00065300 	andeq	r5, r6, r0, lsl #6
    1938:	01fc1100 	mvnseq	r1, r0, lsl #2
    193c:	36720000 	ldrbtcc	r0, [r2], -r0
    1940:	00a80800 	adceq	r0, r8, r0, lsl #16
    1944:	1b010000 	blne	4194c <__RW_SIZE__+0x413c8>
    1948:	0000026b 	andeq	r0, r0, fp, ror #4
    194c:	00367612 	eorseq	r7, r6, r2, lsl r6
    1950:	00037008 	andeq	r7, r3, r8
    1954:	367a1200 	ldrbtcc	r1, [sl], -r0, lsl #4
    1958:	03770800 	cmneq	r7, #0, 16
    195c:	82130000 	andshi	r0, r3, #0
    1960:	7e080036 	mcrvc	0, 0, r0, cr8, cr6, {1}
    1964:	61000003 	tstvs	r0, r3
    1968:	14000002 	strne	r0, [r0], #-2
    196c:	08045001 	stmdaeq	r4, {r0, ip, lr}
    1970:	002439e1 	eoreq	r3, r4, r1, ror #19
    1974:	00368612 	eorseq	r8, r6, r2, lsl r6
    1978:	00038f08 	andeq	r8, r3, r8, lsl #30
    197c:	c8150000 	ldmdagt	r5, {}	; <UNPREDICTABLE>
    1980:	8f000000 	svchi	0x00000000
    1984:	16000002 	strne	r0, [r0], -r2
    1988:	0064656c 	rsbeq	r6, r4, ip, ror #10
    198c:	007a3701 	rsbseq	r3, sl, r1, lsl #14
    1990:	03050000 	movweq	r0, #20480	; 0x5000
    1994:	20000000 	andcs	r0, r0, r0
    1998:	00372412 	eorseq	r2, r7, r2, lsl r4
    199c:	00039608 	andeq	r9, r3, r8, lsl #12
    19a0:	a8130000 	ldmdage	r3, {}	; <UNPREDICTABLE>
    19a4:	a7080036 	smladxge	r8, r6, r0, r0
    19a8:	a6000003 	strge	r0, [r0], -r3
    19ac:	14000002 	strne	r0, [r0], #-2
    19b0:	03055001 	movweq	r5, #20481	; 0x5001
    19b4:	0800a730 	stmdaeq	r0, {r4, r5, r8, r9, sl, sp, pc}
    19b8:	36b21300 	ldrtcc	r1, [r2], r0, lsl #6
    19bc:	03b90800 			; <UNDEFINED> instruction: 0x03b90800
    19c0:	02c00000 	sbceq	r0, r0, #0
    19c4:	01140000 	tsteq	r4, r0
    19c8:	e80a0351 	stmda	sl, {r0, r4, r6, r8, r9}
    19cc:	50011403 	andpl	r1, r1, r3, lsl #8
    19d0:	13003101 	movwne	r3, #257	; 0x101
    19d4:	080036ca 	stmdaeq	r0, {r1, r3, r6, r7, r9, sl, ip, sp}
    19d8:	000003cf 	andeq	r0, r0, pc, asr #7
    19dc:	000002e2 	andeq	r0, r0, r2, ror #5
    19e0:	02520114 	subseq	r0, r2, #20, 2
    19e4:	0114a008 	tsteq	r4, r8
    19e8:	14300151 	ldrtne	r0, [r0], #-337	; 0xfffffeaf
    19ec:	03055001 	movweq	r5, #20481	; 0x5001
    19f0:	20000640 	andcs	r0, r0, r0, asr #12
    19f4:	36d61300 	ldrbcc	r1, [r6], r0, lsl #6
    19f8:	03ec0800 	mvneq	r0, #0, 16
    19fc:	03080000 	movweq	r0, #32768	; 0x8000
    1a00:	01140000 	tsteq	r4, r0
    1a04:	a0080252 	andge	r0, r8, r2, asr r2
    1a08:	05510114 	ldrbeq	r0, [r1, #-276]	; 0xfffffeec
    1a0c:	0005a003 	andeq	sl, r5, r3
    1a10:	50011420 	andpl	r1, r1, r0, lsr #8
    1a14:	06400305 	strbeq	r0, [r0], -r5, lsl #6
    1a18:	17002000 	strne	r2, [r0, -r0]
    1a1c:	080036ee 	stmdaeq	r0, {r1, r2, r3, r5, r6, r7, r9, sl, ip, sp}
    1a20:	000003a7 	andeq	r0, r0, r7, lsr #7
    1a24:	02510114 	subseq	r0, r1, #20, 2
    1a28:	01147f74 	tsteq	r4, r4, ror pc
    1a2c:	44030550 	strmi	r0, [r3], #-1360	; 0xfffffab0
    1a30:	000800a7 	andeq	r0, r8, r7, lsr #1
    1a34:	00561800 	subseq	r1, r6, r0, lsl #16
    1a38:	ce030000 	cdpgt	0, 0, cr0, cr3, cr0, {0}
    1a3c:	00032e06 	andeq	r2, r3, r6, lsl #28
    1a40:	00730500 	rsbseq	r0, r3, r0, lsl #10
    1a44:	05190000 	ldreq	r0, [r9, #-0]
    1a48:	01000009 	tsteq	r0, r9
    1a4c:	00032e10 	andeq	r2, r3, r0, lsl lr
    1a50:	007a0a00 	rsbseq	r0, sl, r0, lsl #20
    1a54:	034e0000 	movteq	r0, #57344	; 0xe000
    1a58:	810b0000 	mrshi	r0, (UNDEF: 11)
    1a5c:	27000000 	strcs	r0, [r0, -r0]
    1a60:	08751a00 	ldmdaeq	r5!, {r9, fp, ip}^
    1a64:	14010000 	strne	r0, [r1], #-0
    1a68:	0000033e 	andeq	r0, r0, lr, lsr r3
    1a6c:	05a00305 	streq	r0, [r0, #773]!	; 0x305
    1a70:	901a2000 	andsls	r2, sl, r0
    1a74:	01000008 	tsteq	r0, r8
    1a78:	00033e15 	andeq	r3, r3, r5, lsl lr
    1a7c:	40030500 	andmi	r0, r3, r0, lsl #10
    1a80:	1b200006 	blne	801aa0 <__RW_SIZE__+0x80151c>
    1a84:	00000151 	andeq	r0, r0, r1, asr r1
    1a88:	6c1b1f04 	ldcvs	15, cr1, [fp], {4}
    1a8c:	04000008 	streq	r0, [r0], #-8
    1a90:	08ce1c18 	stmiaeq	lr, {r3, r4, sl, fp, ip}^
    1a94:	0d040000 	stceq	0, cr0, [r4, #-0]
    1a98:	0000038f 	andeq	r0, r0, pc, lsl #7
    1a9c:	0000731d 	andeq	r7, r0, sp, lsl r3
    1aa0:	7d1b0000 	ldcvc	0, cr0, [fp, #-0]
    1aa4:	04000007 	streq	r0, [r0], #-7
    1aa8:	084f1c23 	stmdaeq	pc, {r0, r1, r5, sl, fp, ip}^	; <UNPREDICTABLE>
    1aac:	19040000 	stmdbne	r4, {}	; <UNPREDICTABLE>
    1ab0:	000003a7 	andeq	r0, r0, r7, lsr #7
    1ab4:	00007a1d 	andeq	r7, r0, sp, lsl sl
    1ab8:	281c0000 	ldmdacs	ip, {}	; <UNPREDICTABLE>
    1abc:	04000009 	streq	r0, [r0], #-9
    1ac0:	0003b910 	andeq	fp, r3, r0, lsl r9
    1ac4:	01ef1d00 	mvneq	r1, r0, lsl #26
    1ac8:	001e0000 	andseq	r0, lr, r0
    1acc:	00089e1c 	andeq	r9, r8, ip, lsl lr
    1ad0:	cf3e0400 	svcgt	0x003e0400
    1ad4:	1d000003 	stcne	0, cr0, [r0, #-12]
    1ad8:	00000073 	andeq	r0, r0, r3, ror r0
    1adc:	0000731d 	andeq	r7, r0, sp, lsl r3
    1ae0:	891f0000 	ldmdbhi	pc, {}	; <UNPREDICTABLE>
    1ae4:	ed000008 	stc	0, cr0, [r0, #-32]	; 0xffffffe0
    1ae8:	ec000001 	stc	0, cr0, [r0], {1}
    1aec:	1d000003 	stcne	0, cr0, [r0, #-12]
    1af0:	000001ed 	andeq	r0, r0, sp, ror #3
    1af4:	0000731d 	andeq	r7, r0, sp, lsl r3
    1af8:	00811d00 	addeq	r1, r1, r0, lsl #26
    1afc:	1f000000 	svcne	0x00000000
    1b00:	00000912 	andeq	r0, r0, r2, lsl r9
    1b04:	000001ed 	andeq	r0, r0, sp, ror #3
    1b08:	00000409 	andeq	r0, r0, r9, lsl #8
    1b0c:	0001ed1d 	andeq	lr, r1, sp, lsl sp
    1b10:	04091d00 	streq	r1, [r9], #-3328	; 0xfffff300
    1b14:	811d0000 	tsthi	sp, r0
    1b18:	00000000 	andeq	r0, r0, r0
    1b1c:	040f040d 	streq	r0, [pc], #-1037	; 1b24 <__RW_SIZE__+0x15a0>
    1b20:	00200000 	eoreq	r0, r0, r0
    1b24:	000000fb 	strdeq	r0, [r0], -fp
    1b28:	08490004 	stmdaeq	r9, {r2}^
    1b2c:	01040000 	mrseq	r0, (UNDEF: 4)
    1b30:	000000b2 	strheq	r0, [r0], -r2
    1b34:	00095101 	andeq	r5, r9, r1, lsl #2
    1b38:	00017200 	andeq	r7, r1, r0, lsl #4
    1b3c:	00373000 	eorseq	r3, r7, r0
    1b40:	00004408 	andeq	r4, r0, r8, lsl #8
    1b44:	00058600 	andeq	r8, r5, r0, lsl #12
    1b48:	06010200 	streq	r0, [r1], -r0, lsl #4
    1b4c:	0000006d 	andeq	r0, r0, sp, rrx
    1b50:	6b080102 	blvs	201f60 <__RW_SIZE__+0x2019dc>
    1b54:	02000000 	andeq	r0, r0, #0
    1b58:	015c0502 	cmpeq	ip, r2, lsl #10
    1b5c:	02020000 	andeq	r0, r2, #0
    1b60:	00004307 	andeq	r4, r0, r7, lsl #6
    1b64:	05040200 	streq	r0, [r4, #-512]	; 0xfffffe00
    1b68:	00000005 	andeq	r0, r0, r5
    1b6c:	a0070402 	andge	r0, r7, r2, lsl #8
    1b70:	02000000 	andeq	r0, r0, #0
    1b74:	00000508 	andeq	r0, r0, r8, lsl #10
    1b78:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
    1b7c:	00009b07 	andeq	r9, r0, r7, lsl #22
    1b80:	05040300 	streq	r0, [r4, #-768]	; 0xfffffd00
    1b84:	00746e69 	rsbseq	r6, r4, r9, ror #28
    1b88:	a5070402 	strge	r0, [r7, #-1026]	; 0xfffffbfe
    1b8c:	02000000 	andeq	r0, r0, #0
    1b90:	01480704 	cmpeq	r8, r4, lsl #14
    1b94:	04040000 	streq	r0, [r4], #-0
    1b98:	00000078 	andeq	r0, r0, r8, ror r0
    1b9c:	74080102 	strvc	r0, [r8], #-258	; 0xfffffefe
    1ba0:	05000000 	streq	r0, [r0, #-0]
    1ba4:	0000095b 	andeq	r0, r0, fp, asr r9
    1ba8:	00720301 	rsbseq	r0, r2, r1, lsl #6
    1bac:	37300000 	ldrcc	r0, [r0, -r0]!
    1bb0:	00440800 	subeq	r0, r4, r0, lsl #16
    1bb4:	9c010000 	stcls	0, cr0, [r1], {-0}
    1bb8:	000000e2 	andeq	r0, r0, r2, ror #1
    1bbc:	636e6906 	cmnvs	lr, #98304	; 0x18000
    1bc0:	5d030100 	stfpls	f0, [r3, #-0]
    1bc4:	cc000000 	stcgt	0, cr0, [r0], {-0}
    1bc8:	07000006 	streq	r0, [r0, -r6]
    1bcc:	00000961 	andeq	r0, r0, r1, ror #18
    1bd0:	002c0501 	eoreq	r0, ip, r1, lsl #10
    1bd4:	3a080000 	bcc	201bdc <__RW_SIZE__+0x201658>
    1bd8:	01000009 	tsteq	r0, r9
    1bdc:	00007206 	andeq	r7, r0, r6, lsl #4
    1be0:	e0030500 	and	r0, r3, r0, lsl #10
    1be4:	09200006 	stmdbeq	r0!, {r1, r2}
    1be8:	0000093f 	andeq	r0, r0, pc, lsr r9
    1bec:	00720801 	rsbseq	r0, r2, r1, lsl #16
    1bf0:	071b0000 	ldreq	r0, [fp, -r0]
    1bf4:	48090000 	stmdami	r9, {}	; <UNPREDICTABLE>
    1bf8:	01000009 	tsteq	r0, r9
    1bfc:	00007209 	andeq	r7, r0, r9, lsl #4
    1c00:	00072e00 	andeq	r2, r7, r0, lsl #28
    1c04:	560a0000 	strpl	r0, [sl], -r0
    1c08:	02000000 	andeq	r0, r0, #0
    1c0c:	00ee06ce 	rsceq	r0, lr, lr, asr #13
    1c10:	5d0b0000 	stcpl	0, cr0, [fp, #-0]
    1c14:	07000000 	streq	r0, [r0, -r0]
    1c18:	00000961 	andeq	r0, r0, r1, ror #18
    1c1c:	002c0501 	eoreq	r0, ip, r1, lsl #10
    1c20:	f3000000 	vhadd.u8	d0, d0, d0
    1c24:	04000016 	streq	r0, [r0], #-22	; 0xffffffea
    1c28:	0008ee00 	andeq	lr, r8, r0, lsl #28
    1c2c:	b2010400 	andlt	r0, r1, #0, 8
    1c30:	01000000 	mrseq	r0, (UNDEF: 0)
    1c34:	00000c76 	andeq	r0, r0, r6, ror ip
    1c38:	00000172 	andeq	r0, r0, r2, ror r1
    1c3c:	08003774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
    1c40:	000006aa 	andeq	r0, r0, sl, lsr #13
    1c44:	000005dc 	ldrdeq	r0, [r0], -ip
    1c48:	0003e502 	andeq	lr, r3, r2, lsl #10
    1c4c:	a8030100 	stmdage	r3, {r8}
    1c50:	00000164 	andeq	r0, r0, r4, ror #2
    1c54:	00061f03 	andeq	r1, r6, r3, lsl #30
    1c58:	0a037200 	beq	de460 <__RW_SIZE__+0xddedc>
    1c5c:	74000004 	strvc	r0, [r0], #-4
    1c60:	00055703 	andeq	r5, r5, r3, lsl #14
    1c64:	bd037500 	cfstr32lt	mvfx7, [r3, #-0]
    1c68:	76000006 	strvc	r0, [r0], -r6
    1c6c:	0006e203 	andeq	lr, r6, r3, lsl #4
    1c70:	ab037b00 	blge	e0878 <__RW_SIZE__+0xe02f4>
    1c74:	7c000006 	stcvc	0, cr0, [r0], {6}
    1c78:	0003ef03 	andeq	lr, r3, r3, lsl #30
    1c7c:	94037e00 	strls	r7, [r3], #-3584	; 0xfffff200
    1c80:	7f000006 	svcvc	0x00000006
    1c84:	00054d03 	andeq	r4, r5, r3, lsl #26
    1c88:	7b030000 	blvc	c1c90 <__RW_SIZE__+0xc170c>
    1c8c:	01000005 	tsteq	r0, r5
    1c90:	00076303 	andeq	r6, r7, r3, lsl #6
    1c94:	d3030200 	movwle	r0, #12800	; 0x3200
    1c98:	03000005 	movweq	r0, #5
    1c9c:	0003b103 	andeq	fp, r3, r3, lsl #2
    1ca0:	01030400 	tsteq	r3, r0, lsl #8
    1ca4:	05000004 	streq	r0, [r0, #-4]
    1ca8:	0003bc03 	andeq	fp, r3, r3, lsl #24
    1cac:	50030600 	andpl	r0, r3, r0, lsl #12
    1cb0:	07000006 	streq	r0, [r0, -r6]
    1cb4:	0004be03 	andeq	fp, r4, r3, lsl #28
    1cb8:	1a030800 	bne	c3cc0 <__RW_SIZE__+0xc373c>
    1cbc:	09000007 	stmdbeq	r0, {r0, r1, r2}
    1cc0:	00057003 	andeq	r7, r5, r3
    1cc4:	1d030a00 	vstrne	s0, [r3, #-0]
    1cc8:	0b000005 	bleq	1ce4 <__RW_SIZE__+0x1760>
    1ccc:	00039603 	andeq	r9, r3, r3, lsl #12
    1cd0:	8f030c00 	svchi	0x00030c00
    1cd4:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    1cd8:	00045903 	andeq	r5, r4, r3, lsl #18
    1cdc:	02030e00 	andeq	r0, r3, #0, 28
    1ce0:	0f000007 	svceq	0x00000007
    1ce4:	0004e603 	andeq	lr, r4, r3, lsl #12
    1ce8:	66031000 	strvs	r1, [r3], -r0
    1cec:	11000003 	tstne	r0, r3
    1cf0:	00074b03 	andeq	r4, r7, r3, lsl #22
    1cf4:	94031200 	strls	r1, [r3], #-512	; 0xfffffe00
    1cf8:	13000004 	movwne	r0, #4
    1cfc:	00031403 	andeq	r1, r3, r3, lsl #8
    1d00:	81031400 	tsthi	r3, r0, lsl #8
    1d04:	15000004 	strne	r0, [r0, #-4]
    1d08:	00035803 	andeq	r5, r3, r3, lsl #16
    1d0c:	d5031600 	strle	r1, [r3, #-1536]	; 0xfffffa00
    1d10:	17000006 	strne	r0, [r0, -r6]
    1d14:	00043803 	andeq	r3, r4, r3, lsl #16
    1d18:	b9031800 	stmdblt	r3, {fp, ip}
    1d1c:	19000005 	stmdbne	r0, {r0, r2}
    1d20:	00067503 	andeq	r7, r6, r3, lsl #10
    1d24:	33031a00 	movwcc	r1, #14848	; 0x3a00
    1d28:	1b000006 	blne	1d48 <__RW_SIZE__+0x17c4>
    1d2c:	0006a103 	andeq	sl, r6, r3, lsl #2
    1d30:	13031c00 	movwne	r1, #15360	; 0x3c00
    1d34:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
    1d38:	00038c03 	andeq	r8, r3, r3, lsl #24
    1d3c:	a2031e00 	andge	r1, r3, #0, 28
    1d40:	1f000005 	svcne	0x00000005
    1d44:	00068703 	andeq	r8, r6, r3, lsl #14
    1d48:	d9032000 	stmdble	r3, {sp}
    1d4c:	21000004 	tstcs	r0, r4
    1d50:	00037903 	andeq	r7, r3, r3, lsl #18
    1d54:	4f032200 	svcmi	0x00032200
    1d58:	23000004 	movwcs	r0, #4
    1d5c:	0006f303 	andeq	pc, r6, r3, lsl #6
    1d60:	0e032400 	cfcpyseq	mvf2, mvf3
    1d64:	25000006 	strcs	r0, [r0, #-6]
    1d68:	0004b203 	andeq	fp, r4, r3, lsl #4
    1d6c:	57032600 	strpl	r2, [r3, -r0, lsl #12]
    1d70:	27000007 	strcs	r0, [r0, -r7]
    1d74:	0003db03 	andeq	sp, r3, r3, lsl #22
    1d78:	6f032800 	svcvs	0x00032800
    1d7c:	29000007 	stmdbcs	r0, {r0, r1, r2}
    1d80:	00053e03 	andeq	r3, r5, r3, lsl #28
    1d84:	04002a00 	streq	r2, [r0], #-2560	; 0xfffff600
    1d88:	000004a8 	andeq	r0, r0, r8, lsr #9
    1d8c:	2501d903 	strcs	sp, [r1, #-2307]	; 0xfffff6fd
    1d90:	05000000 	streq	r0, [r0, #-0]
    1d94:	006d0601 	rsbeq	r0, sp, r1, lsl #12
    1d98:	7a060000 	bvc	181da0 <__RW_SIZE__+0x18181c>
    1d9c:	04000002 	streq	r0, [r0], #-2
    1da0:	0001822a 	andeq	r8, r1, sl, lsr #4
    1da4:	08010500 	stmdaeq	r1, {r8, sl}
    1da8:	0000006b 	andeq	r0, r0, fp, rrx
    1dac:	5c050205 	sfmpl	f0, 4, [r5], {5}
    1db0:	06000001 	streq	r0, [r0], -r1
    1db4:	000002d7 	ldrdeq	r0, [r0], -r7
    1db8:	019b3604 	orrseq	r3, fp, r4, lsl #12
    1dbc:	02050000 	andeq	r0, r5, #0
    1dc0:	00004307 	andeq	r4, r0, r7, lsl #6
    1dc4:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    1dc8:	00000005 	andeq	r0, r0, r5
    1dcc:	0001bb06 	andeq	fp, r1, r6, lsl #22
    1dd0:	b4500400 	ldrblt	r0, [r0], #-1024	; 0xfffffc00
    1dd4:	05000001 	streq	r0, [r0, #-1]
    1dd8:	00a00704 	adceq	r0, r0, r4, lsl #14
    1ddc:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    1de0:	00000005 	andeq	r0, r0, r5
    1de4:	07080500 	streq	r0, [r8, -r0, lsl #10]
    1de8:	0000009b 	muleq	r0, fp, r0
    1dec:	69050407 	stmdbvs	r5, {r0, r1, r2, sl}
    1df0:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    1df4:	00a50704 	adceq	r0, r5, r4, lsl #14
    1df8:	04080000 	streq	r0, [r8], #-0
    1dfc:	8584020e 	strhi	r0, [r4, #526]	; 0x20e
    1e00:	09000002 	stmdbeq	r0, {r1}
    1e04:	0000042d 	andeq	r0, r0, sp, lsr #8
    1e08:	029c8602 	addseq	r8, ip, #2097152	; 0x200000
    1e0c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1e10:	000005dc 	ldrdeq	r0, [r0], -ip
    1e14:	02a18702 	adceq	r8, r1, #524288	; 0x80000
    1e18:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    1e1c:	000006ee 	andeq	r0, r0, lr, ror #13
    1e20:	02b18802 	adcseq	r8, r1, #131072	; 0x20000
    1e24:	09800000 	stmibeq	r0, {}	; <UNPREDICTABLE>
    1e28:	00000446 	andeq	r0, r0, r6, asr #8
    1e2c:	02a18902 	adceq	r8, r1, #32768	; 0x8000
    1e30:	0aa00000 	beq	fe801e38 <MSP_BASE+0xde7fce38>
    1e34:	00000746 	andeq	r0, r0, r6, asr #14
    1e38:	02b68a02 	adcseq	r8, r6, #8192	; 0x2000
    1e3c:	01000000 	mrseq	r0, (UNDEF: 0)
    1e40:	0005e60a 	andeq	lr, r5, sl, lsl #12
    1e44:	a18b0200 	orrge	r0, fp, r0, lsl #4
    1e48:	20000002 	andcs	r0, r0, r2
    1e4c:	058a0a01 	streq	r0, [sl, #2561]	; 0xa01
    1e50:	8c020000 	stchi	0, cr0, [r2], {-0}
    1e54:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
    1e58:	f00a0180 			; <UNDEFINED> instruction: 0xf00a0180
    1e5c:	02000005 	andeq	r0, r0, #5
    1e60:	0002a18d 	andeq	sl, r2, sp, lsl #3
    1e64:	0a01a000 	beq	69e6c <__RW_SIZE__+0x698e8>
    1e68:	000006fd 	strdeq	r0, [r0], -sp
    1e6c:	02c08e02 	sbceq	r8, r0, #2, 28
    1e70:	02000000 	andeq	r0, r0, #0
    1e74:	0005fa0a 	andeq	pc, r5, sl, lsl #20
    1e78:	c58f0200 	strgt	r0, [pc, #512]	; 2080 <__RW_SIZE__+0x1afc>
    1e7c:	20000002 	andcs	r0, r0, r2
    1e80:	50490b02 	subpl	r0, r9, r2, lsl #22
    1e84:	e5900200 	ldr	r0, [r0, #512]	; 0x200
    1e88:	00000002 	andeq	r0, r0, r2
    1e8c:	06040a03 	streq	r0, [r4], -r3, lsl #20
    1e90:	91020000 	mrsls	r0, (UNDEF: 2)
    1e94:	000002ea 	andeq	r0, r0, sl, ror #5
    1e98:	c60a03f0 			; <UNDEFINED> instruction: 0xc60a03f0
    1e9c:	02000005 	andeq	r0, r0, #5
    1ea0:	0002fb92 	muleq	r2, r2, fp
    1ea4:	000e0000 	andeq	r0, lr, r0
    1ea8:	0001a90c 	andeq	sl, r1, ip, lsl #18
    1eac:	00029500 	andeq	r9, r2, r0, lsl #10
    1eb0:	02950d00 	addseq	r0, r5, #0, 26
    1eb4:	00070000 	andeq	r0, r7, r0
    1eb8:	48070405 	stmdami	r7, {r0, r2, sl}
    1ebc:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    1ec0:	00000285 	andeq	r0, r0, r5, lsl #5
    1ec4:	0001a90c 	andeq	sl, r1, ip, lsl #18
    1ec8:	0002b100 	andeq	fp, r2, r0, lsl #2
    1ecc:	02950d00 	addseq	r0, r5, #0, 26
    1ed0:	00170000 	andseq	r0, r7, r0
    1ed4:	0002850e 	andeq	r8, r2, lr, lsl #10
    1ed8:	02850e00 	addeq	r0, r5, #0, 28
    1edc:	850e0000 	strhi	r0, [lr, #-0]
    1ee0:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    1ee4:	00000285 	andeq	r0, r0, r5, lsl #5
    1ee8:	0001a90c 	andeq	sl, r1, ip, lsl #18
    1eec:	0002d500 	andeq	sp, r2, r0, lsl #10
    1ef0:	02950d00 	addseq	r0, r5, #0, 26
    1ef4:	00370000 	eorseq	r0, r7, r0
    1ef8:	0001770c 	andeq	r7, r1, ip, lsl #14
    1efc:	0002e500 	andeq	lr, r2, r0, lsl #10
    1f00:	02950d00 	addseq	r0, r5, #0, 26
    1f04:	00ef0000 	rsceq	r0, pc, r0
    1f08:	0002d50e 	andeq	sp, r2, lr, lsl #10
    1f0c:	01a90c00 			; <UNDEFINED> instruction: 0x01a90c00
    1f10:	02fb0000 	rscseq	r0, fp, #0
    1f14:	950f0000 	strls	r0, [pc, #-0]	; 1f1c <__RW_SIZE__+0x1998>
    1f18:	83000002 	movwhi	r0, #2
    1f1c:	a90e0002 	stmdbge	lr, {r1}
    1f20:	06000001 	streq	r0, [r0], -r1
    1f24:	0000065b 	andeq	r0, r0, fp, asr r6
    1f28:	01d79302 	bicseq	r9, r7, r2, lsl #6
    1f2c:	74100000 	ldrvc	r0, [r0], #-0
    1f30:	03f89b02 	mvnseq	r9, #2048	; 0x800
    1f34:	f8090000 			; <UNDEFINED> instruction: 0xf8090000
    1f38:	02000008 	andeq	r0, r0, #8
    1f3c:	0003f89d 	muleq	r3, sp, r8
    1f40:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
    1f44:	02000008 	andeq	r0, r0, #8
    1f48:	0002fb9e 	muleq	r2, lr, fp
    1f4c:	bb090400 	bllt	242f54 <__RW_SIZE__+0x2429d0>
    1f50:	02000008 	andeq	r0, r0, #8
    1f54:	0002fb9f 	muleq	r2, pc, fp	; <UNPREDICTABLE>
    1f58:	e3090800 	movw	r0, #38912	; 0x9800
    1f5c:	02000008 	andeq	r0, r0, #8
    1f60:	0002fba0 	andeq	pc, r2, r0, lsr #23
    1f64:	53110c00 	tstpl	r1, #0, 24
    1f68:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    1f6c:	0002fba1 	andeq	pc, r2, r1, lsr #23
    1f70:	43111000 	tstmi	r1, #0
    1f74:	02005243 	andeq	r5, r0, #805306372	; 0x30000004
    1f78:	0002fba2 	andeq	pc, r2, r2, lsr #23
    1f7c:	53111400 	tstpl	r1, #0, 8
    1f80:	02005048 	andeq	r5, r0, #72	; 0x48
    1f84:	00040da3 	andeq	r0, r4, r3, lsr #27
    1f88:	83091800 	movwhi	r1, #38912	; 0x9800
    1f8c:	02000008 	andeq	r0, r0, #8
    1f90:	0002fba4 	andeq	pc, r2, r4, lsr #23
    1f94:	99092400 	stmdbls	r9, {sl, sp}
    1f98:	02000008 	andeq	r0, r0, #8
    1f9c:	0002fba5 	andeq	pc, r2, r5, lsr #23
    1fa0:	c0092800 	andgt	r2, r9, r0, lsl #16
    1fa4:	02000008 	andeq	r0, r0, #8
    1fa8:	0002fba6 	andeq	pc, r2, r6, lsr #23
    1fac:	d9092c00 	stmdble	r9, {sl, fp, sp}
    1fb0:	02000008 	andeq	r0, r0, #8
    1fb4:	0002fba7 	andeq	pc, r2, r7, lsr #23
    1fb8:	19093000 	stmdbne	r9, {ip, sp}
    1fbc:	02000009 	andeq	r0, r0, #9
    1fc0:	0002fba8 	andeq	pc, r2, r8, lsr #23
    1fc4:	ee093400 	cfcpys	mvf3, mvf9
    1fc8:	02000008 	andeq	r0, r0, #8
    1fcc:	0002fba9 	andeq	pc, r2, r9, lsr #23
    1fd0:	35093800 	strcc	r3, [r9, #-2048]	; 0xfffff800
    1fd4:	02000009 	andeq	r0, r0, #9
    1fd8:	0002fbaa 	andeq	pc, r2, sl, lsr #23
    1fdc:	50113c00 	andspl	r3, r1, r0, lsl #24
    1fe0:	02005246 	andeq	r5, r0, #1610612740	; 0x60000004
    1fe4:	000422ab 	andeq	r2, r4, fp, lsr #5
    1fe8:	44114000 	ldrmi	r4, [r1], #-0
    1fec:	02005246 	andeq	r5, r0, #1610612740	; 0x60000004
    1ff0:	0003f8ac 	andeq	pc, r3, ip, lsr #17
    1ff4:	41114800 	tstmi	r1, r0, lsl #16
    1ff8:	02005244 	andeq	r5, r0, #68, 4	; 0x40000004
    1ffc:	0003f8ad 	andeq	pc, r3, sp, lsr #17
    2000:	7e094c00 	cdpvc	12, 0, cr4, cr9, cr0, {0}
    2004:	02000008 	andeq	r0, r0, #8
    2008:	00043cae 	andeq	r3, r4, lr, lsr #25
    200c:	e9095000 	stmdb	r9, {ip, lr}
    2010:	02000008 	andeq	r0, r0, #8
    2014:	000456af 	andeq	r5, r4, pc, lsr #13
    2018:	12006000 	andne	r6, r0, #0
    201c:	000002fb 	strdeq	r0, [r0], -fp
    2020:	0001770c 	andeq	r7, r1, ip, lsl #14
    2024:	00040d00 	andeq	r0, r4, r0, lsl #26
    2028:	02950d00 	addseq	r0, r5, #0, 26
    202c:	000b0000 	andeq	r0, fp, r0
    2030:	0003fd0e 	andeq	pc, r3, lr, lsl #26
    2034:	01a90c00 			; <UNDEFINED> instruction: 0x01a90c00
    2038:	04220000 	strteq	r0, [r2], #-0
    203c:	950d0000 	strls	r0, [sp, #-0]
    2040:	01000002 	tsteq	r0, r2
    2044:	04271200 	strteq	r1, [r7], #-512	; 0xfffffe00
    2048:	120e0000 	andne	r0, lr, #0
    204c:	0c000004 	stceq	0, cr0, [r0], {4}
    2050:	000001a9 	andeq	r0, r0, r9, lsr #3
    2054:	0000043c 	andeq	r0, r0, ip, lsr r4
    2058:	0002950d 	andeq	r9, r2, sp, lsl #10
    205c:	12000300 	andne	r0, r0, #0, 6
    2060:	00000441 	andeq	r0, r0, r1, asr #8
    2064:	00042c0e 	andeq	r2, r4, lr, lsl #24
    2068:	01a90c00 			; <UNDEFINED> instruction: 0x01a90c00
    206c:	04560000 	ldrbeq	r0, [r6], #-0
    2070:	950d0000 	strls	r0, [sp, #-0]
    2074:	04000002 	streq	r0, [r0], #-2
    2078:	045b1200 	ldrbeq	r1, [fp], #-512	; 0xfffffe00
    207c:	460e0000 	strmi	r0, [lr], -r0
    2080:	06000004 	streq	r0, [r0], -r4
    2084:	000008c5 	andeq	r0, r0, r5, asr #17
    2088:	030bb002 	movweq	fp, #45058	; 0xb002
    208c:	900e0000 	andls	r0, lr, r0
    2090:	13000001 	movwne	r0, #1
    2094:	03260308 	teqeq	r6, #8, 6	; 0x20000000
    2098:	00000494 	muleq	r0, r4, r4
    209c:	52534914 	subspl	r4, r3, #20, 18	; 0x50000
    20a0:	03280300 	teqeq	r8, #0, 6
    20a4:	000002fb 	strdeq	r0, [r0], -fp
    20a8:	07351500 	ldreq	r1, [r5, -r0, lsl #10]!
    20ac:	29030000 	stmdbcs	r3, {}	; <UNPREDICTABLE>
    20b0:	0002fb03 	andeq	pc, r2, r3, lsl #22
    20b4:	04000400 	streq	r0, [r0], #-1024	; 0xfffffc00
    20b8:	0000073a 	andeq	r0, r0, sl, lsr r7
    20bc:	70032a03 	andvc	r2, r3, r3, lsl #20
    20c0:	13000004 	movwne	r0, #4
    20c4:	03770318 	cmneq	r7, #24, 6	; 0x60000000
    20c8:	000004f7 	strdeq	r0, [r0], -r7
    20cc:	524d4914 	subpl	r4, sp, #20, 18	; 0x50000
    20d0:	03790300 	cmneq	r9, #0, 6
    20d4:	000002fb 	strdeq	r0, [r0], -fp
    20d8:	4d451400 	cfstrdmi	mvd1, [r5, #-0]
    20dc:	7a030052 	bvc	c222c <__RW_SIZE__+0xc1ca8>
    20e0:	0002fb03 	andeq	pc, r2, r3, lsl #22
    20e4:	16150400 	ldrne	r0, [r5], -r0, lsl #8
    20e8:	03000008 	movweq	r0, #8
    20ec:	02fb037b 	rscseq	r0, fp, #-335544319	; 0xec000001
    20f0:	15080000 	strne	r0, [r8, #-0]
    20f4:	00000834 	andeq	r0, r0, r4, lsr r8
    20f8:	fb037c03 	blx	e110e <__RW_SIZE__+0xe0b8a>
    20fc:	0c000002 	stceq	0, cr0, [r0], {2}
    2100:	00082e15 	andeq	r2, r8, r5, lsl lr
    2104:	037d0300 	cmneq	sp, #0, 6
    2108:	000002fb 	strdeq	r0, [r0], -fp
    210c:	52501410 	subspl	r1, r0, #16, 8	; 0x10000000
    2110:	037e0300 	cmneq	lr, #0, 6
    2114:	000002fb 	strdeq	r0, [r0], -fp
    2118:	09040014 	stmdbeq	r4, {r2, r4}
    211c:	03000008 	movweq	r0, #8
    2120:	04a0037f 	strteq	r0, [r0], #895	; 0x37f
    2124:	50130000 	andspl	r0, r3, r0
    2128:	1404a203 	strne	sl, [r4], #-515	; 0xfffffdfd
    212c:	14000007 	strne	r0, [r0], #-7
    2130:	00315243 	eorseq	r5, r1, r3, asr #4
    2134:	6b04a403 	blvs	12b148 <__RW_SIZE__+0x12abc4>
    2138:	00000004 	andeq	r0, r0, r4
    213c:	0005dc15 	andeq	sp, r5, r5, lsl ip
    2140:	04a50300 	strteq	r0, [r5], #768	; 0x300
    2144:	00000190 	muleq	r0, r0, r1
    2148:	52431402 	subpl	r1, r3, #33554432	; 0x2000000
    214c:	a6030032 			; <UNDEFINED> instruction: 0xa6030032
    2150:	00046b04 	andeq	r6, r4, r4, lsl #22
    2154:	99150400 	ldmdbls	r5, {sl}
    2158:	0300000c 	movweq	r0, #12
    215c:	019004a7 	orrseq	r0, r0, r7, lsr #9
    2160:	15060000 	strne	r0, [r6, #-0]
    2164:	00000d88 	andeq	r0, r0, r8, lsl #27
    2168:	6b04a803 	blvs	12c17c <__RW_SIZE__+0x12bbf8>
    216c:	08000004 	stmdaeq	r0, {r2}
    2170:	0005e615 	andeq	lr, r5, r5, lsl r6
    2174:	04a90300 	strteq	r0, [r9], #768	; 0x300
    2178:	00000190 	muleq	r0, r0, r1
    217c:	097a150a 	ldmdbeq	sl!, {r1, r3, r8, sl, ip}^
    2180:	aa030000 	bge	c2188 <__RW_SIZE__+0xc1c04>
    2184:	00046b04 	andeq	r6, r4, r4, lsl #22
    2188:	f0150c00 			; <UNDEFINED> instruction: 0xf0150c00
    218c:	03000005 	movweq	r0, #5
    2190:	019004ab 	orrseq	r0, r0, fp, lsr #9
    2194:	140e0000 	strne	r0, [lr], #-0
    2198:	03005253 	movweq	r5, #595	; 0x253
    219c:	046b04ac 	strbteq	r0, [fp], #-1196	; 0xfffffb54
    21a0:	15100000 	ldrne	r0, [r0, #-0]
    21a4:	000005fa 	strdeq	r0, [r0], -sl
    21a8:	9004ad03 	andls	sl, r4, r3, lsl #26
    21ac:	12000001 	andne	r0, r0, #1
    21b0:	52474514 	subpl	r4, r7, #20, 10	; 0x5000000
    21b4:	04ae0300 	strteq	r0, [lr], #768	; 0x300
    21b8:	0000046b 	andeq	r0, r0, fp, ror #8
    21bc:	06041514 			; <UNDEFINED> instruction: 0x06041514
    21c0:	af030000 	svcge	0x00030000
    21c4:	00019004 	andeq	r9, r1, r4
    21c8:	3e151600 	cfmsub32cc	mvax0, mvfx1, mvfx5, mvfx0
    21cc:	0300000a 	movweq	r0, #10
    21d0:	046b04b0 	strbteq	r0, [fp], #-1200	; 0xfffffb50
    21d4:	15180000 	ldrne	r0, [r8, #-0]
    21d8:	00000ca3 	andeq	r0, r0, r3, lsr #25
    21dc:	9004b103 	andls	fp, r4, r3, lsl #2
    21e0:	1a000001 	bne	21ec <__RW_SIZE__+0x1c68>
    21e4:	000a4415 	andeq	r4, sl, r5, lsl r4
    21e8:	04b20300 	ldrteq	r0, [r2], #768	; 0x300
    21ec:	0000046b 	andeq	r0, r0, fp, ror #8
    21f0:	0d4e151c 	cfstr64eq	mvdx1, [lr, #-112]	; 0xffffff90
    21f4:	b3030000 	movwlt	r0, #12288	; 0x3000
    21f8:	00019004 	andeq	r9, r1, r4
    21fc:	15151e00 	ldrne	r1, [r5, #-3584]	; 0xfffff200
    2200:	0300000b 	movweq	r0, #11
    2204:	046b04b4 	strbteq	r0, [fp], #-1204	; 0xfffffb4c
    2208:	15200000 	strne	r0, [r0, #-0]!
    220c:	00000de3 	andeq	r0, r0, r3, ror #27
    2210:	9004b503 	andls	fp, r4, r3, lsl #10
    2214:	22000001 	andcs	r0, r0, #1
    2218:	544e4314 	strbpl	r4, [lr], #-788	; 0xfffffcec
    221c:	04b60300 	ldrteq	r0, [r6], #768	; 0x300
    2220:	0000046b 	andeq	r0, r0, fp, ror #8
    2224:	0cc61524 	cfstr64eq	mvdx1, [r6], {36}	; 0x24
    2228:	b7030000 	strlt	r0, [r3, -r0]
    222c:	00019004 	andeq	r9, r1, r4
    2230:	50142600 	andspl	r2, r4, r0, lsl #12
    2234:	03004353 	movweq	r4, #851	; 0x353
    2238:	046b04b8 	strbteq	r0, [fp], #-1208	; 0xfffffb48
    223c:	15280000 	strne	r0, [r8, #-0]!
    2240:	00000a92 	muleq	r0, r2, sl
    2244:	9004b903 	andls	fp, r4, r3, lsl #18
    2248:	2a000001 	bcs	2254 <__RW_SIZE__+0x1cd0>
    224c:	52524114 	subspl	r4, r2, #20, 2
    2250:	04ba0300 	ldrteq	r0, [sl], #768	; 0x300
    2254:	0000046b 	andeq	r0, r0, fp, ror #8
    2258:	0a9d152c 	beq	fe747710 <MSP_BASE+0xde742710>
    225c:	bb030000 	bllt	c2264 <__RW_SIZE__+0xc1ce0>
    2260:	00019004 	andeq	r9, r1, r4
    2264:	52142e00 	andspl	r2, r4, #0, 28
    2268:	03005243 	movweq	r5, #579	; 0x243
    226c:	046b04bc 	strbteq	r0, [fp], #-1212	; 0xfffffb44
    2270:	15300000 	ldrne	r0, [r0, #-0]!
    2274:	00000aa8 	andeq	r0, r0, r8, lsr #21
    2278:	9004bd03 	andls	fp, r4, r3, lsl #26
    227c:	32000001 	andcc	r0, r0, #1
    2280:	000ded15 	andeq	lr, sp, r5, lsl sp
    2284:	04be0300 	ldrteq	r0, [lr], #768	; 0x300
    2288:	0000046b 	andeq	r0, r0, fp, ror #8
    228c:	0ab31534 	beq	fecc7764 <MSP_BASE+0xdecc2764>
    2290:	bf030000 	svclt	0x00030000
    2294:	00019004 	andeq	r9, r1, r4
    2298:	01153600 	tsteq	r5, r0, lsl #12
    229c:	0300000a 	movweq	r0, #10
    22a0:	046b04c0 	strbteq	r0, [fp], #-1216	; 0xfffffb40
    22a4:	15380000 	ldrne	r0, [r8, #-0]!
    22a8:	00000abe 			; <UNDEFINED> instruction: 0x00000abe
    22ac:	9004c103 	andls	ip, r4, r3, lsl #2
    22b0:	3a000001 	bcc	22bc <__RW_SIZE__+0x1d38>
    22b4:	000df215 	andeq	pc, sp, r5, lsl r2	; <UNPREDICTABLE>
    22b8:	04c20300 	strbeq	r0, [r2], #768	; 0x300
    22bc:	0000046b 	andeq	r0, r0, fp, ror #8
    22c0:	0ac9153c 	beq	ff2477b8 <MSP_BASE+0xdf2427b8>
    22c4:	c3030000 	movwgt	r0, #12288	; 0x3000
    22c8:	00019004 	andeq	r9, r1, r4
    22cc:	f7153e00 			; <UNDEFINED> instruction: 0xf7153e00
    22d0:	0300000d 	movweq	r0, #13
    22d4:	046b04c4 	strbteq	r0, [fp], #-1220	; 0xfffffb3c
    22d8:	15400000 	strbne	r0, [r0, #-0]
    22dc:	00000dfc 	strdeq	r0, [r0], -ip
    22e0:	9004c503 	andls	ip, r4, r3, lsl #10
    22e4:	42000001 	andmi	r0, r0, #1
    22e8:	000b9a15 	andeq	r9, fp, r5, lsl sl
    22ec:	04c60300 	strbeq	r0, [r6], #768	; 0x300
    22f0:	0000046b 	andeq	r0, r0, fp, ror #8
    22f4:	0ae11544 	beq	ff84780c <MSP_BASE+0xdf84280c>
    22f8:	c7030000 	strgt	r0, [r3, -r0]
    22fc:	00019004 	andeq	r9, r1, r4
    2300:	44144600 	ldrmi	r4, [r4], #-1536	; 0xfffffa00
    2304:	03005243 	movweq	r5, #579	; 0x243
    2308:	046b04c8 	strbteq	r0, [fp], #-1224	; 0xfffffb38
    230c:	15480000 	strbne	r0, [r8, #-0]
    2310:	00000aec 	andeq	r0, r0, ip, ror #21
    2314:	9004c903 	andls	ip, r4, r3, lsl #18
    2318:	4a000001 	bmi	2324 <__RW_SIZE__+0x1da0>
    231c:	000db115 	andeq	fp, sp, r5, lsl r1
    2320:	04ca0300 	strbeq	r0, [sl], #768	; 0x300
    2324:	0000046b 	andeq	r0, r0, fp, ror #8
    2328:	0af7154c 	beq	ffdc7860 <MSP_BASE+0xdfdc2860>
    232c:	cb030000 	blgt	c2334 <__RW_SIZE__+0xc1db0>
    2330:	00019004 	andeq	r9, r1, r4
    2334:	04004e00 	streq	r4, [r0], #-3584	; 0xfffff200
    2338:	000009ca 	andeq	r0, r0, sl, asr #19
    233c:	0304cc03 	movweq	ip, #19459	; 0x4c03
    2340:	13000005 	movwne	r0, #5
    2344:	04d2031c 	ldrbeq	r0, [r2], #796	; 0x31c
    2348:	000007de 	ldrdeq	r0, [r0], -lr
    234c:	00525314 	subseq	r5, r2, r4, lsl r3
    2350:	6b04d403 	blvs	137364 <__RW_SIZE__+0x136de0>
    2354:	00000004 	andeq	r0, r0, r4
    2358:	0005dc15 	andeq	sp, r5, r5, lsl ip
    235c:	04d50300 	ldrbeq	r0, [r5], #768	; 0x300
    2360:	00000190 	muleq	r0, r0, r1
    2364:	52441402 	subpl	r1, r4, #33554432	; 0x2000000
    2368:	04d60300 	ldrbeq	r0, [r6], #768	; 0x300
    236c:	0000046b 	andeq	r0, r0, fp, ror #8
    2370:	0c991504 	cfldr32eq	mvfx1, [r9], {4}
    2374:	d7030000 	strle	r0, [r3, -r0]
    2378:	00019004 	andeq	r9, r1, r4
    237c:	42140600 	andsmi	r0, r4, #0, 12
    2380:	03005252 	movweq	r5, #594	; 0x252
    2384:	046b04d8 	strbteq	r0, [fp], #-1240	; 0xfffffb28
    2388:	15080000 	strne	r0, [r8, #-0]
    238c:	000005e6 	andeq	r0, r0, r6, ror #11
    2390:	9004d903 	andls	sp, r4, r3, lsl #18
    2394:	0a000001 	beq	23a0 <__RW_SIZE__+0x1e1c>
    2398:	31524314 	cmpcc	r2, r4, lsl r3
    239c:	04da0300 	ldrbeq	r0, [sl], #768	; 0x300
    23a0:	0000046b 	andeq	r0, r0, fp, ror #8
    23a4:	05f0150c 	ldrbeq	r1, [r0, #1292]!	; 0x50c
    23a8:	db030000 	blle	c23b0 <__RW_SIZE__+0xc1e2c>
    23ac:	00019004 	andeq	r9, r1, r4
    23b0:	43140e00 	tstmi	r4, #0, 28
    23b4:	03003252 	movweq	r3, #594	; 0x252
    23b8:	046b04dc 	strbteq	r0, [fp], #-1244	; 0xfffffb24
    23bc:	15100000 	ldrne	r0, [r0, #-0]
    23c0:	000005fa 	strdeq	r0, [r0], -sl
    23c4:	9004dd03 	andls	sp, r4, r3, lsl #26
    23c8:	12000001 	andne	r0, r0, #1
    23cc:	33524314 	cmpcc	r2, #20, 6	; 0x50000000
    23d0:	04de0300 	ldrbeq	r0, [lr], #768	; 0x300
    23d4:	0000046b 	andeq	r0, r0, fp, ror #8
    23d8:	06041514 			; <UNDEFINED> instruction: 0x06041514
    23dc:	df030000 	svcle	0x00030000
    23e0:	00019004 	andeq	r9, r1, r4
    23e4:	5a151600 	bpl	547bec <__RW_SIZE__+0x547668>
    23e8:	0300000a 	movweq	r0, #10
    23ec:	046b04e0 	strbteq	r0, [fp], #-1248	; 0xfffffb20
    23f0:	15180000 	ldrne	r0, [r8, #-0]
    23f4:	00000ca3 	andeq	r0, r0, r3, lsr #25
    23f8:	9004e103 	andls	lr, r4, r3, lsl #2
    23fc:	1a000001 	bne	2408 <__RW_SIZE__+0x1e84>
    2400:	0bd80400 	bleq	ff603408 <MSP_BASE+0xdf5fe408>
    2404:	e2030000 	and	r0, r3, #0
    2408:	00072004 	andeq	r2, r7, r4
    240c:	f0041600 			; <UNDEFINED> instruction: 0xf0041600
    2410:	05000007 	streq	r0, [r0, #-7]
    2414:	00740801 	rsbseq	r0, r4, r1, lsl #16
    2418:	04160000 	ldreq	r0, [r6], #-0
    241c:	000007fd 	strdeq	r0, [r0], -sp
    2420:	0007f012 	andeq	pc, r7, r2, lsl r0	; <UNPREDICTABLE>
    2424:	04fe1700 	ldrbteq	r1, [lr], #1792	; 0x700
    2428:	13020000 	movwne	r0, #8192	; 0x2000
    242c:	081c0306 	ldmdaeq	ip, {r1, r2, r8, r9}
    2430:	e5180000 	ldr	r0, [r8, #-0]
    2434:	02000003 	andeq	r0, r0, #3
    2438:	01640613 	cmneq	r4, r3, lsl r6
    243c:	19000000 	stmdbne	r0, {}	; <UNPREDICTABLE>
    2440:	00000d33 	andeq	r0, r0, r3, lsr sp
    2444:	37742501 	ldrbcc	r2, [r4, -r1, lsl #10]!
    2448:	00380800 	eorseq	r0, r8, r0, lsl #16
    244c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2450:	0000087b 	andeq	r0, r0, fp, ror r8
    2454:	000ea01a 	andeq	sl, lr, sl, lsl r0
    2458:	f7250100 			; <UNDEFINED> instruction: 0xf7250100
    245c:	41000007 	tstmi	r0, r7
    2460:	1b000007 	blne	2484 <__RW_SIZE__+0x1f00>
    2464:	01007073 	tsteq	r0, r3, ror r0
    2468:	00087b25 	andeq	r7, r8, r5, lsr #22
    246c:	00076d00 	andeq	r6, r7, r0, lsl #26
    2470:	00691c00 	rsbeq	r1, r9, r0, lsl #24
    2474:	01c92701 	biceq	r2, r9, r1, lsl #14
    2478:	07990000 	ldreq	r0, [r9, r0]
    247c:	9e1d0000 	cdpls	0, 1, cr0, cr13, cr0, {0}
    2480:	d2080037 	andle	r0, r8, #55	; 0x37
    2484:	1e000016 	mcrne	0, 0, r0, cr0, cr6, {0}
    2488:	74025201 	strvc	r5, [r2], #-513	; 0xfffffdff
    248c:	51011e7f 	tstpl	r1, pc, ror lr
    2490:	1e007602 	cfmadd32ne	mvax0, mvfx7, mvfx0, mvfx2
    2494:	03055001 	movweq	r5, #20481	; 0x5001
    2498:	0800a758 	stmdaeq	r0, {r3, r4, r6, r8, r9, sl, sp, pc}
    249c:	04160000 	ldreq	r0, [r6], #-0
    24a0:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    24a4:	000d7c1f 	andeq	r7, sp, pc, lsl ip
    24a8:	ac1c0100 	ldfges	f0, [ip], {-0}
    24ac:	32080037 	andcc	r0, r8, #55	; 0x37
    24b0:	01000000 	mrseq	r0, (UNDEF: 0)
    24b4:	0008c19c 	muleq	r8, ip, r1
    24b8:	37c82000 	strbcc	r2, [r8, r0]
    24bc:	16d20800 	ldrbne	r0, [r2], r0, lsl #16
    24c0:	08ad0000 	stmiaeq	sp!, {}	; <UNPREDICTABLE>
    24c4:	011e0000 	tsteq	lr, r0
    24c8:	6c030550 	cfstr32vs	mvfx0, [r3], {80}	; 0x50
    24cc:	000800a7 	andeq	r0, r8, r7, lsr #1
    24d0:	0037dc1d 	eorseq	sp, r7, sp, lsl ip
    24d4:	0016d208 	andseq	sp, r6, r8, lsl #4
    24d8:	50011e00 	andpl	r1, r1, r0, lsl #28
    24dc:	a7840305 	strge	r0, [r4, r5, lsl #6]
    24e0:	00000800 	andeq	r0, r0, r0, lsl #16
    24e4:	00096e1f 	andeq	r6, r9, pc, lsl lr
    24e8:	e0480100 	sub	r0, r8, r0, lsl #2
    24ec:	10080037 	andne	r0, r8, r7, lsr r0
    24f0:	01000000 	mrseq	r0, (UNDEF: 0)
    24f4:	0008ea9c 	muleq	r8, ip, sl
    24f8:	37ee1d00 	strbcc	r1, [lr, r0, lsl #26]!
    24fc:	16d20800 	ldrbne	r0, [r2], r0, lsl #16
    2500:	011e0000 	tsteq	lr, r0
    2504:	98030550 	stmdals	r3, {r4, r6, r8, sl}
    2508:	000800a7 	andeq	r0, r8, r7, lsr #1
    250c:	09f42100 	ldmibeq	r4!, {r8, sp}^
    2510:	2f010000 	svccs	0x00010000
    2514:	00091701 	andeq	r1, r9, r1, lsl #14
    2518:	736d2200 	cmnvc	sp, #0, 4
    251c:	2f010070 	svccs	0x00010070
    2520:	0000087b 	andeq	r0, r0, fp, ror r8
    2524:	00726c22 	rsbseq	r6, r2, r2, lsr #24
    2528:	01d02f01 	bicseq	r2, r0, r1, lsl #30
    252c:	70220000 	eorvc	r0, r2, r0
    2530:	01007073 	tsteq	r0, r3, ror r0
    2534:	00087b2f 	andeq	r7, r8, pc, lsr #22
    2538:	c61f0000 	ldrgt	r0, [pc], -r0
    253c:	0100000b 	tsteq	r0, fp
    2540:	0037f055 	eorseq	pc, r7, r5, asr r0	; <UNPREDICTABLE>
    2544:	00012a08 	andeq	r2, r1, r8, lsl #20
    2548:	049c0100 	ldreq	r0, [ip], #256	; 0x100
    254c:	1b00000b 	blne	2580 <__RW_SIZE__+0x1ffc>
    2550:	0070736d 	rsbseq	r7, r0, sp, ror #6
    2554:	087b5501 	ldmdaeq	fp!, {r0, r8, sl, ip, lr}^
    2558:	07e60000 	strbeq	r0, [r6, r0]!
    255c:	6c1b0000 	ldcvs	0, cr0, [fp], {-0}
    2560:	55010072 	strpl	r0, [r1, #-114]	; 0xffffff8e
    2564:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2568:	0000081d 	andeq	r0, r0, sp, lsl r8
    256c:	7073701b 	rsbsvc	r7, r3, fp, lsl r0
    2570:	7b550100 	blvc	1542978 <__RW_SIZE__+0x15423f4>
    2574:	3b000008 	blcc	259c <__RW_SIZE__+0x2018>
    2578:	23000008 	movwcs	r0, #8
    257c:	000008ea 	andeq	r0, r0, sl, ror #17
    2580:	08003804 	stmdaeq	r0, {r2, fp, ip, sp}
    2584:	000000e0 	andeq	r0, r0, r0, ror #1
    2588:	0a7d5901 	beq	1f58994 <__RW_SIZE__+0x1f58410>
    258c:	0b240000 	bleq	902594 <__RW_SIZE__+0x902010>
    2590:	01000009 	tsteq	r0, r9
    2594:	09012456 	stmdbeq	r1, {r1, r2, r4, r6, sl, sp}
    2598:	55010000 	strpl	r0, [r1, #-0]
    259c:	0008f625 	andeq	pc, r8, r5, lsr #12
    25a0:	00085900 	andeq	r5, r8, r0, lsl #18
    25a4:	38122000 	ldmdacc	r2, {sp}
    25a8:	16d20800 	ldrbne	r0, [r2], r0, lsl #16
    25ac:	099f0000 	ldmibeq	pc, {}	; <UNPREDICTABLE>
    25b0:	011e0000 	tsteq	lr, r0
    25b4:	00750251 	rsbseq	r0, r5, r1, asr r2
    25b8:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    25bc:	00a7b003 	adceq	fp, r7, r3
    25c0:	20200008 	eorcs	r0, r0, r8
    25c4:	d2080038 	andle	r0, r8, #56	; 0x38
    25c8:	bc000016 	stclt	0, cr0, [r0], {22}
    25cc:	1e000009 	cdpne	0, 0, cr0, cr0, cr9, {0}
    25d0:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    25d4:	50011e00 	andpl	r1, r1, r0, lsl #28
    25d8:	a7c80305 	strbge	r0, [r8, r5, lsl #6]
    25dc:	20000800 	andcs	r0, r0, r0, lsl #16
    25e0:	0800382e 	stmdaeq	r0, {r1, r2, r3, r5, fp, ip, sp}
    25e4:	000016d2 	ldrdeq	r1, [r0], -r2
    25e8:	000009d9 	ldrdeq	r0, [r0], -r9
    25ec:	0251011e 	subseq	r0, r1, #-2147483641	; 0x80000007
    25f0:	011e0076 	tsteq	lr, r6, ror r0
    25f4:	d4030550 	strle	r0, [r3], #-1360	; 0xfffffab0
    25f8:	000800a7 	andeq	r0, r8, r7, lsr #1
    25fc:	00386e20 	eorseq	r6, r8, r0, lsr #28
    2600:	0016d208 	andseq	sp, r6, r8, lsl #4
    2604:	0009f800 	andeq	pc, r9, r0, lsl #16
    2608:	51011e00 	tstpl	r1, r0, lsl #28
    260c:	3f007504 	svccc	0x00007504
    2610:	50011e1a 	andpl	r1, r1, sl, lsl lr
    2614:	a8640305 	stmdage	r4!, {r0, r2, r8, r9}^
    2618:	20000800 	andcs	r0, r0, r0, lsl #16
    261c:	08003884 	stmdaeq	r0, {r2, r7, fp, ip, sp}
    2620:	000016d2 	ldrdeq	r1, [r0], -r2
    2624:	00000a0f 	andeq	r0, r0, pc, lsl #20
    2628:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    262c:	00a89003 	adceq	r9, r8, r3
    2630:	92200008 	eorls	r0, r0, #8
    2634:	d2080038 	andle	r0, r8, #56	; 0x38
    2638:	26000016 			; <UNDEFINED> instruction: 0x26000016
    263c:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    2640:	03055001 	movweq	r5, #20481	; 0x5001
    2644:	0800a8a0 	stmdaeq	r0, {r5, r7, fp, sp, pc}
    2648:	38ee2600 	stmiacc	lr!, {r9, sl, sp}^
    264c:	16d20800 	ldrbne	r0, [r2], r0, lsl #16
    2650:	fc200000 	stc2	0, cr0, [r0], #-0
    2654:	1c080038 	stcne	0, cr0, [r8], {56}	; 0x38
    2658:	4c000008 	stcmi	0, cr0, [r0], {8}
    265c:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    2660:	74025101 	strvc	r5, [r2], #-257	; 0xfffffeff
    2664:	50011e00 	andpl	r1, r1, r0, lsl #28
    2668:	a8040305 	stmdage	r4, {r0, r2, r8, r9}
    266c:	20000800 	andcs	r0, r0, r0, lsl #16
    2670:	0800390a 	stmdaeq	r0, {r1, r3, r8, fp, ip, sp}
    2674:	000016d2 	ldrdeq	r1, [r0], -r2
    2678:	00000a63 	andeq	r0, r0, r3, ror #20
    267c:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    2680:	00a83403 	adceq	r3, r8, r3, lsl #8
    2684:	181d0008 	ldmdane	sp, {r3}
    2688:	1c080039 	stcne	0, cr0, [r8], {57}	; 0x39
    268c:	1e000008 	cdpne	0, 0, cr0, cr0, cr8, {0}
    2690:	76025101 	strvc	r5, [r2], -r1, lsl #2
    2694:	50011e00 	andpl	r1, r1, r0, lsl #28
    2698:	a8600305 	stmdage	r0!, {r0, r2, r8, r9}^
    269c:	00000800 	andeq	r0, r0, r0, lsl #16
    26a0:	00380420 	eorseq	r0, r8, r0, lsr #8
    26a4:	0016d208 	andseq	sp, r6, r8, lsl #4
    26a8:	000a9400 	andeq	r9, sl, r0, lsl #8
    26ac:	50011e00 	andpl	r1, r1, r0, lsl #28
    26b0:	a7a00305 	strge	r0, [r0, r5, lsl #6]!
    26b4:	20000800 	andcs	r0, r0, r0, lsl #16
    26b8:	080038a4 	stmdaeq	r0, {r2, r5, r7, fp, ip, sp}
    26bc:	000016d2 	ldrdeq	r1, [r0], -r2
    26c0:	00000aab 	andeq	r0, r0, fp, lsr #21
    26c4:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    26c8:	00a8c003 	adceq	ip, r8, r3
    26cc:	b2200008 	eorlt	r0, r0, #8
    26d0:	d2080038 	andle	r0, r8, #56	; 0x38
    26d4:	c2000016 	andgt	r0, r0, #22
    26d8:	1e00000a 	cdpne	0, 0, cr0, cr0, cr10, {0}
    26dc:	03055001 	movweq	r5, #20481	; 0x5001
    26e0:	0800a8d4 	stmdaeq	r0, {r2, r4, r6, r7, fp, sp, pc}
    26e4:	38c42000 	stmiacc	r4, {sp}^
    26e8:	16d20800 	ldrbne	r0, [r2], r0, lsl #16
    26ec:	0ad90000 	beq	ff6426f4 <MSP_BASE+0xdf63d6f4>
    26f0:	011e0000 	tsteq	lr, r0
    26f4:	e4030550 	str	r0, [r3], #-1360	; 0xfffffab0
    26f8:	000800a8 	andeq	r0, r8, r8, lsr #1
    26fc:	0038d220 	eorseq	sp, r8, r0, lsr #4
    2700:	0016d208 	andseq	sp, r6, r8, lsl #4
    2704:	000af000 	andeq	pc, sl, r0
    2708:	50011e00 	andpl	r1, r1, r0, lsl #28
    270c:	a8f80305 	ldmge	r8!, {r0, r2, r8, r9}^
    2710:	1d000800 	stcne	8, cr0, [r0, #-0]
    2714:	080038e0 	stmdaeq	r0, {r5, r6, r7, fp, ip, sp}
    2718:	000016d2 	ldrdeq	r1, [r0], -r2
    271c:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    2720:	00a90803 	adceq	r0, r9, r3, lsl #16
    2724:	1f000008 	svcne	0x00000008
    2728:	00000bb4 			; <UNDEFINED> instruction: 0x00000bb4
    272c:	391c6b01 	ldmdbcc	ip, {r0, r8, r9, fp, sp, lr}
    2730:	00100800 	andseq	r0, r0, r0, lsl #16
    2734:	9c010000 	stcls	0, cr0, [r1], {-0}
    2738:	00000b59 	andeq	r0, r0, r9, asr fp
    273c:	70736d1b 	rsbsvc	r6, r3, fp, lsl sp
    2740:	7b6b0100 	blvc	1ac2b48 <__RW_SIZE__+0x1ac25c4>
    2744:	85000008 	strhi	r0, [r0, #-8]
    2748:	1b000008 	blne	2770 <__RW_SIZE__+0x21ec>
    274c:	0100726c 	tsteq	r0, ip, ror #4
    2750:	0001d06b 	andeq	sp, r1, fp, rrx
    2754:	0008a600 	andeq	sl, r8, r0, lsl #12
    2758:	73701b00 	cmnvc	r0, #0, 22
    275c:	6b010070 	blvs	42924 <__RW_SIZE__+0x423a0>
    2760:	0000087b 	andeq	r0, r0, fp, ror r8
    2764:	000008c7 	andeq	r0, r0, r7, asr #17
    2768:	00392a1d 	eorseq	r2, r9, sp, lsl sl
    276c:	0016d208 	andseq	sp, r6, r8, lsl #4
    2770:	50011e00 	andpl	r1, r1, r0, lsl #28
    2774:	a92c0305 	stmdbge	ip!, {r0, r2, r8, r9}
    2778:	00000800 	andeq	r0, r0, r0, lsl #16
    277c:	000d8d1f 	andeq	r8, sp, pc, lsl sp
    2780:	2c780100 	ldfcse	f0, [r8], #-0
    2784:	10080039 	andne	r0, r8, r9, lsr r0
    2788:	01000000 	mrseq	r0, (UNDEF: 0)
    278c:	000bae9c 	muleq	fp, ip, lr
    2790:	736d1b00 	cmnvc	sp, #0, 22
    2794:	78010070 	stmdavc	r1, {r4, r5, r6}
    2798:	0000087b 	andeq	r0, r0, fp, ror r8
    279c:	000008e8 	andeq	r0, r0, r8, ror #17
    27a0:	00726c1b 	rsbseq	r6, r2, fp, lsl ip
    27a4:	01d07801 	bicseq	r7, r0, r1, lsl #16
    27a8:	09090000 	stmdbeq	r9, {}	; <UNPREDICTABLE>
    27ac:	701b0000 	andsvc	r0, fp, r0
    27b0:	01007073 	tsteq	r0, r3, ror r0
    27b4:	00087b78 	andeq	r7, r8, r8, ror fp
    27b8:	00092a00 	andeq	r2, r9, r0, lsl #20
    27bc:	393a1d00 	ldmdbcc	sl!, {r8, sl, fp, ip}
    27c0:	16d20800 	ldrbne	r0, [r2], r0, lsl #16
    27c4:	011e0000 	tsteq	lr, r0
    27c8:	48030550 	stmdami	r3, {r4, r6, r8, sl}
    27cc:	000800a9 	andeq	r0, r8, r9, lsr #1
    27d0:	0b021f00 	bleq	8a3d8 <__RW_SIZE__+0x89e54>
    27d4:	85010000 	strhi	r0, [r1, #-0]
    27d8:	0800393c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, ip, sp}
    27dc:	00000010 	andeq	r0, r0, r0, lsl r0
    27e0:	0c039c01 	stceq	12, cr9, [r3], {1}
    27e4:	6d1b0000 	ldcvs	0, cr0, [fp, #-0]
    27e8:	01007073 	tsteq	r0, r3, ror r0
    27ec:	00087b85 	andeq	r7, r8, r5, lsl #23
    27f0:	00094b00 	andeq	r4, r9, r0, lsl #22
    27f4:	726c1b00 	rsbvc	r1, ip, #0, 22
    27f8:	d0850100 	addle	r0, r5, r0, lsl #2
    27fc:	6c000001 	stcvs	0, cr0, [r0], {1}
    2800:	1b000009 	blne	282c <__RW_SIZE__+0x22a8>
    2804:	00707370 	rsbseq	r7, r0, r0, ror r3
    2808:	087b8501 	ldmdaeq	fp!, {r0, r8, sl, pc}^
    280c:	098d0000 	stmibeq	sp, {}	; <UNPREDICTABLE>
    2810:	4a1d0000 	bmi	742818 <__RW_SIZE__+0x742294>
    2814:	d2080039 	andle	r0, r8, #57	; 0x39
    2818:	1e000016 	mcrne	0, 0, r0, cr0, cr6, {0}
    281c:	03055001 	movweq	r5, #20481	; 0x5001
    2820:	0800a954 	stmdaeq	r0, {r2, r4, r6, r8, fp, sp, pc}
    2824:	271f0000 	ldrcs	r0, [pc, -r0]
    2828:	0100000d 	tsteq	r0, sp
    282c:	00394c92 	mlaseq	r9, r2, ip, r4
    2830:	00001008 	andeq	r1, r0, r8
    2834:	2c9c0100 	ldfcss	f0, [ip], {0}
    2838:	1d00000c 	stcne	0, cr0, [r0, #-48]	; 0xffffffd0
    283c:	0800395a 	stmdaeq	r0, {r1, r3, r4, r6, r8, fp, ip, sp}
    2840:	000016d2 	ldrdeq	r1, [r0], -r2
    2844:	0550011e 	ldrbeq	r0, [r0, #-286]	; 0xfffffee2
    2848:	00a96403 	adceq	r6, r9, r3, lsl #8
    284c:	1f000008 	svcne	0x00000008
    2850:	0000097f 	andeq	r0, r0, pc, ror r9
    2854:	395c9f01 	ldmdbcc	ip, {r0, r8, r9, sl, fp, ip, pc}^
    2858:	00100800 	andseq	r0, r0, r0, lsl #16
    285c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2860:	00000c55 	andeq	r0, r0, r5, asr ip
    2864:	00396a1d 	eorseq	r6, r9, sp, lsl sl
    2868:	0016d208 	andseq	sp, r6, r8, lsl #4
    286c:	50011e00 	andpl	r1, r1, r0, lsl #28
    2870:	a9700305 	ldmdbge	r0!, {r0, r2, r8, r9}^
    2874:	00000800 	andeq	r0, r0, r0, lsl #16
    2878:	000c671f 	andeq	r6, ip, pc, lsl r7
    287c:	6cac0100 	stfvss	f0, [ip]
    2880:	10080039 	andne	r0, r8, r9, lsr r0
    2884:	01000000 	mrseq	r0, (UNDEF: 0)
    2888:	000c7e9c 	muleq	ip, ip, lr
    288c:	397a1d00 	ldmdbcc	sl!, {r8, sl, fp, ip}^
    2890:	16d20800 	ldrbne	r0, [r2], r0, lsl #16
    2894:	011e0000 	tsteq	lr, r0
    2898:	80030550 	andhi	r0, r3, r0, asr r5
    289c:	000800a9 	andeq	r0, r8, r9, lsr #1
    28a0:	0d582700 	ldcleq	7, cr2, [r8, #-0]
    28a4:	bb010000 	bllt	428ac <__RW_SIZE__+0x42328>
    28a8:	0800397c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp, ip, sp}
    28ac:	0000000e 	andeq	r0, r0, lr
    28b0:	ba1f9c01 	blt	7e98bc <__RW_SIZE__+0x7e9338>
    28b4:	01000009 	tsteq	r0, r9
    28b8:	00398cc7 	eorseq	r8, r9, r7, asr #25
    28bc:	00000608 	andeq	r0, r0, r8, lsl #12
    28c0:	ae9c0100 	fmlgee	f0, f4, f0
    28c4:	2600000c 	strcs	r0, [r0], -ip
    28c8:	08003992 	stmdaeq	r0, {r1, r4, r7, r8, fp, ip, sp}
    28cc:	00000881 	andeq	r0, r0, r1, lsl #17
    28d0:	0a5f1f00 	beq	17ca4d8 <__RW_SIZE__+0x17c9f54>
    28d4:	d3010000 	movwle	r0, #4096	; 0x1000
    28d8:	08003994 	stmdaeq	r0, {r2, r4, r7, r8, fp, ip, sp}
    28dc:	00000006 	andeq	r0, r0, r6
    28e0:	0ccd9c01 	stcleq	12, cr9, [sp], {1}
    28e4:	9a260000 	bls	9828ec <__RW_SIZE__+0x982368>
    28e8:	81080039 	tsthi	r8, r9, lsr r0
    28ec:	00000008 	andeq	r0, r0, r8
    28f0:	000e311f 	andeq	r3, lr, pc, lsl r1
    28f4:	9cdf0100 	ldflse	f0, [pc], {0}
    28f8:	06080039 			; <UNDEFINED> instruction: 0x06080039
    28fc:	01000000 	mrseq	r0, (UNDEF: 0)
    2900:	000cec9c 	muleq	ip, ip, ip
    2904:	39a22600 	stmibcc	r2!, {r9, sl, sp}
    2908:	08810800 	stmeq	r1, {fp}
    290c:	1f000000 	svcne	0x00000000
    2910:	00000d0b 	andeq	r0, r0, fp, lsl #26
    2914:	39a4eb01 	stmibcc	r4!, {r0, r8, r9, fp, sp, lr, pc}
    2918:	00060800 	andeq	r0, r6, r0, lsl #16
    291c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2920:	00000d0b 	andeq	r0, r0, fp, lsl #26
    2924:	0039aa26 	eorseq	sl, r9, r6, lsr #20
    2928:	00088108 	andeq	r8, r8, r8, lsl #2
    292c:	e61f0000 	ldr	r0, [pc], -r0
    2930:	0100000b 	tsteq	r0, fp
    2934:	0039acf7 	ldrshteq	sl, [r9], -r7
    2938:	00000608 	andeq	r0, r0, r8, lsl #12
    293c:	2a9c0100 	bcs	fe702d44 <MSP_BASE+0xde6fdd44>
    2940:	2600000d 	strcs	r0, [r0], -sp
    2944:	080039b2 	stmdaeq	r0, {r1, r4, r5, r7, r8, fp, ip, sp}
    2948:	00000881 	andeq	r0, r0, r1, lsl #17
    294c:	0cde2800 	ldcleq	8, cr2, [lr], {0}
    2950:	03010000 	movweq	r0, #4096	; 0x1000
    2954:	0039b401 	eorseq	fp, r9, r1, lsl #8
    2958:	00000608 	andeq	r0, r0, r8, lsl #12
    295c:	4a9c0100 	bmi	fe702d64 <MSP_BASE+0xde6fdd64>
    2960:	2600000d 	strcs	r0, [r0], -sp
    2964:	080039ba 	stmdaeq	r0, {r1, r3, r4, r5, r7, r8, fp, ip, sp}
    2968:	00000881 	andeq	r0, r0, r1, lsl #17
    296c:	0bf72800 	bleq	ffdcc974 <MSP_BASE+0xdfdc7974>
    2970:	0f010000 	svceq	0x00010000
    2974:	0039bc01 	eorseq	fp, r9, r1, lsl #24
    2978:	00000608 	andeq	r0, r0, r8, lsl #12
    297c:	6a9c0100 	bvs	fe702d84 <MSP_BASE+0xde6fdd84>
    2980:	2600000d 	strcs	r0, [r0], -sp
    2984:	080039c2 	stmdaeq	r0, {r1, r6, r7, r8, fp, ip, sp}
    2988:	00000881 	andeq	r0, r0, r1, lsl #17
    298c:	0c562800 	mrrceq	8, 0, r2, r6, cr0
    2990:	1b010000 	blne	42998 <__RW_SIZE__+0x42414>
    2994:	0039c401 	eorseq	ip, r9, r1, lsl #8
    2998:	00000608 	andeq	r0, r0, r8, lsl #12
    299c:	8a9c0100 	bhi	fe702da4 <MSP_BASE+0xde6fdda4>
    29a0:	2600000d 	strcs	r0, [r0], -sp
    29a4:	080039ca 	stmdaeq	r0, {r1, r3, r6, r7, r8, fp, ip, sp}
    29a8:	00000881 	andeq	r0, r0, r1, lsl #17
    29ac:	0e202800 	cdpeq	8, 2, cr2, cr0, cr0, {0}
    29b0:	27010000 	strcs	r0, [r1, -r0]
    29b4:	0039cc01 	eorseq	ip, r9, r1, lsl #24
    29b8:	00000608 	andeq	r0, r0, r8, lsl #12
    29bc:	aa9c0100 	bge	fe702dc4 <MSP_BASE+0xde6fddc4>
    29c0:	2600000d 	strcs	r0, [r0], -sp
    29c4:	080039d2 	stmdaeq	r0, {r1, r4, r6, r7, r8, fp, ip, sp}
    29c8:	00000881 	andeq	r0, r0, r1, lsl #17
    29cc:	0a6e2800 	beq	1b8c9d4 <__RW_SIZE__+0x1b8c450>
    29d0:	33010000 	movwcc	r0, #4096	; 0x1000
    29d4:	0039d401 	eorseq	sp, r9, r1, lsl #8
    29d8:	00000608 	andeq	r0, r0, r8, lsl #12
    29dc:	ca9c0100 	bgt	fe702de4 <MSP_BASE+0xde6fdde4>
    29e0:	2600000d 	strcs	r0, [r0], -sp
    29e4:	080039da 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, fp, ip, sp}
    29e8:	00000881 	andeq	r0, r0, r1, lsl #17
    29ec:	09902800 	ldmibeq	r0, {fp, sp}
    29f0:	3f010000 	svccc	0x00010000
    29f4:	0039dc01 	eorseq	sp, r9, r1, lsl #24
    29f8:	00000608 	andeq	r0, r0, r8, lsl #12
    29fc:	ea9c0100 	b	fe702e04 <MSP_BASE+0xde6fde04>
    2a00:	2600000d 	strcs	r0, [r0], -sp
    2a04:	080039e2 	stmdaeq	r0, {r1, r5, r6, r7, r8, fp, ip, sp}
    2a08:	00000881 	andeq	r0, r0, r1, lsl #17
    2a0c:	0b332900 	bleq	ccce14 <__RW_SIZE__+0xccc890>
    2a10:	4d010000 	stcmi	0, cr0, [r1, #-0]
    2a14:	0e0f0101 	adfeqe	f0, f7, f1
    2a18:	632a0000 	teqvs	sl, #0
    2a1c:	4d010068 	stcmi	0, cr0, [r1, #-416]	; 0xfffffe60
    2a20:	0001c901 	andeq	ip, r1, r1, lsl #18
    2a24:	0ced2b00 	vstmiaeq	sp!, {d18-d17}
    2a28:	4f010000 	svcmi	0x00010000
    2a2c:	0001d001 	andeq	sp, r1, r1
    2a30:	ea2c0000 	b	b02a38 <__RW_SIZE__+0xb024b4>
    2a34:	e400000d 	str	r0, [r0], #-13
    2a38:	58080039 	stmdapl	r8, {r0, r3, r4, r5}
    2a3c:	01000000 	mrseq	r0, (UNDEF: 0)
    2a40:	000e789c 	muleq	lr, ip, r8
    2a44:	0df72500 	cfldr64eq	mvdx2, [r7]
    2a48:	09ae0000 	stmibeq	lr!, {}	; <UNPREDICTABLE>
    2a4c:	022d0000 	eoreq	r0, sp, #0
    2a50:	0500000e 	streq	r0, [r0, #-14]
    2a54:	1a3f0074 	bne	fc2c2c <__RW_SIZE__+0xfc26a8>
    2a58:	3a0a209f 	bcc	28acdc <__RW_SIZE__+0x28a758>
    2a5c:	16e40800 	strbtne	r0, [r4], r0, lsl #16
    2a60:	0e4f0000 	cdpeq	0, 4, cr0, cr15, cr0, {0}
    2a64:	011e0000 	tsteq	lr, r0
    2a68:	1e320151 	mrcne	1, 1, r0, cr2, cr1, {2}
    2a6c:	75025001 	strvc	r5, [r2, #-1]
    2a70:	32200000 	eorcc	r0, r0, #0
    2a74:	e408003a 	str	r0, [r8], #-58	; 0xffffffc6
    2a78:	68000016 	stmdavs	r0, {r1, r2, r4}
    2a7c:	1e00000e 	cdpne	0, 0, cr0, cr0, cr14, {0}
    2a80:	33015101 	movwcc	r5, #4353	; 0x1101
    2a84:	0250011e 	subseq	r0, r0, #-2147483641	; 0x80000007
    2a88:	1d000075 	stcne	0, cr0, [r0, #-468]	; 0xfffffe2c
    2a8c:	08003a3a 	stmdaeq	r0, {r1, r3, r4, r5, r9, fp, ip, sp}
    2a90:	000016e4 	andeq	r1, r0, r4, ror #13
    2a94:	0151011e 	cmpeq	r1, lr, lsl r1
    2a98:	28000034 	stmdacs	r0, {r2, r4, r5}
    2a9c:	00000e43 	andeq	r0, r0, r3, asr #28
    2aa0:	3c015901 	stccc	9, cr5, [r1], {1}
    2aa4:	5a08003a 	bpl	202b94 <__RW_SIZE__+0x202610>
    2aa8:	01000000 	mrseq	r0, (UNDEF: 0)
    2aac:	000f179c 	muleq	pc, ip, r7	; <UNPREDICTABLE>
    2ab0:	0dea2e00 	stcleq	14, cr2, [sl]
    2ab4:	3a3e0000 	bcc	f82abc <__RW_SIZE__+0xf82538>
    2ab8:	00f80800 	rscseq	r0, r8, r0, lsl #16
    2abc:	5b010000 	blpl	42ac4 <__RW_SIZE__+0x42540>
    2ac0:	000efc01 	andeq	pc, lr, r1, lsl #24
    2ac4:	0df72f00 	ldcleq	15, cr2, [r7]
    2ac8:	30010000 	andcc	r0, r1, r0
    2acc:	000000f8 	strdeq	r0, [r0], -r8
    2ad0:	000e0231 	andeq	r0, lr, r1, lsr r2
    2ad4:	0009e200 	andeq	lr, r9, r0, lsl #4
    2ad8:	3a5a2000 	bcc	168aae0 <__RW_SIZE__+0x168a55c>
    2adc:	16e40800 	strbtne	r0, [r4], r0, lsl #16
    2ae0:	0ece0000 	cdpeq	0, 12, cr0, cr14, cr0, {0}
    2ae4:	011e0000 	tsteq	lr, r0
    2ae8:	1e320151 	mrcne	1, 1, r0, cr2, cr1, {2}
    2aec:	31015001 	tstcc	r1, r1
    2af0:	3a8a2000 	bcc	fe28aaf8 <MSP_BASE+0xde285af8>
    2af4:	16e40800 	strbtne	r0, [r4], r0, lsl #16
    2af8:	0ee60000 	cdpeq	0, 14, cr0, cr6, cr0, {0}
    2afc:	011e0000 	tsteq	lr, r0
    2b00:	1e330151 	mrcne	1, 1, r0, cr3, cr1, {2}
    2b04:	31015001 	tstcc	r1, r1
    2b08:	3a941d00 	bcc	fe509f10 <MSP_BASE+0xde504f10>
    2b0c:	16e40800 	strbtne	r0, [r4], r0, lsl #16
    2b10:	011e0000 	tsteq	lr, r0
    2b14:	1e340151 	mrcne	1, 1, r0, cr4, cr1, {2}
    2b18:	31015001 	tstcc	r1, r1
    2b1c:	32000000 	andcc	r0, r0, #0
    2b20:	00000802 	andeq	r0, r0, r2, lsl #16
    2b24:	08003a60 	stmdaeq	r0, {r5, r6, r9, fp, ip, sp}
    2b28:	00000120 	andeq	r0, r0, r0, lsr #2
    2b2c:	25015c01 	strcs	r5, [r1, #-3073]	; 0xfffff3ff
    2b30:	0000080f 	andeq	r0, r0, pc, lsl #16
    2b34:	00000a08 	andeq	r0, r0, r8, lsl #20
    2b38:	3d280000 	stccc	0, cr0, [r8, #-0]
    2b3c:	0100000c 	tsteq	r0, ip
    2b40:	3a980166 	bcc	fe6030e0 <MSP_BASE+0xde5fe0e0>
    2b44:	005c0800 	subseq	r0, ip, r0, lsl #16
    2b48:	9c010000 	stcls	0, cr0, [r1], {-0}
    2b4c:	00000fb6 			; <UNDEFINED> instruction: 0x00000fb6
    2b50:	000dea2e 	andeq	lr, sp, lr, lsr #20
    2b54:	003a9a00 	eorseq	r9, sl, r0, lsl #20
    2b58:	00014008 	andeq	r4, r1, r8
    2b5c:	01680100 	cmneq	r8, r0, lsl #2
    2b60:	00000f9b 	muleq	r0, fp, pc	; <UNPREDICTABLE>
    2b64:	000df72f 	andeq	pc, sp, pc, lsr #14
    2b68:	40300200 	eorsmi	r0, r0, r0, lsl #4
    2b6c:	31000001 	tstcc	r0, r1
    2b70:	00000e02 	andeq	r0, r0, r2, lsl #28
    2b74:	00000a1c 	andeq	r0, r0, ip, lsl sl
    2b78:	003ab820 	eorseq	fp, sl, r0, lsr #16
    2b7c:	0016e408 	andseq	lr, r6, r8, lsl #8
    2b80:	000f6d00 	andeq	r6, pc, r0, lsl #26
    2b84:	51011e00 	tstpl	r1, r0, lsl #28
    2b88:	011e3201 	tsteq	lr, r1, lsl #4
    2b8c:	00320150 	eorseq	r0, r2, r0, asr r1
    2b90:	003ae820 	eorseq	lr, sl, r0, lsr #16
    2b94:	0016e408 	andseq	lr, r6, r8, lsl #8
    2b98:	000f8500 	andeq	r8, pc, r0, lsl #10
    2b9c:	51011e00 	tstpl	r1, r0, lsl #28
    2ba0:	011e3301 	tsteq	lr, r1, lsl #6
    2ba4:	00320150 	eorseq	r0, r2, r0, asr r1
    2ba8:	003af21d 	eorseq	pc, sl, sp, lsl r2	; <UNPREDICTABLE>
    2bac:	0016e408 	andseq	lr, r6, r8, lsl #8
    2bb0:	51011e00 	tstpl	r1, r0, lsl #28
    2bb4:	011e3401 	tsteq	lr, r1, lsl #8
    2bb8:	00320150 	eorseq	r0, r2, r0, asr r1
    2bbc:	02320000 	eorseq	r0, r2, #0
    2bc0:	be000008 	cdplt	0, 0, cr0, cr0, cr8, {0}
    2bc4:	6808003a 	stmdavs	r8, {r1, r3, r4, r5}
    2bc8:	01000001 	tsteq	r0, r1
    2bcc:	0f250169 	svceq	0x00250169
    2bd0:	42000008 	andmi	r0, r0, #8
    2bd4:	0000000a 	andeq	r0, r0, sl
    2bd8:	0e072800 	cdpeq	8, 0, cr2, cr7, cr0, {0}
    2bdc:	73010000 	movwvc	r0, #4096	; 0x1000
    2be0:	003af401 	eorseq	pc, sl, r1, lsl #8
    2be4:	00005e08 	andeq	r5, r0, r8, lsl #28
    2be8:	559c0100 	ldrpl	r0, [ip, #256]	; 0x100
    2bec:	2e000010 	mcrcs	0, 0, r0, cr0, cr0, {0}
    2bf0:	00000dea 	andeq	r0, r0, sl, ror #27
    2bf4:	08003af6 	stmdaeq	r0, {r1, r2, r4, r5, r6, r7, r9, fp, ip, sp}
    2bf8:	00000188 	andeq	r0, r0, r8, lsl #3
    2bfc:	3a017501 	bcc	60008 <__RW_SIZE__+0x5fa84>
    2c00:	2f000010 	svccs	0x00000010
    2c04:	00000df7 	strdeq	r0, [r0], -r7
    2c08:	01883003 	orreq	r3, r8, r3
    2c0c:	02310000 	eorseq	r0, r1, #0
    2c10:	5600000e 	strpl	r0, [r0], -lr
    2c14:	2000000a 	andcs	r0, r0, sl
    2c18:	08003b14 	stmdaeq	r0, {r2, r4, r8, r9, fp, ip, sp}
    2c1c:	000016e4 	andeq	r1, r0, r4, ror #13
    2c20:	0000100c 	andeq	r1, r0, ip
    2c24:	0151011e 	cmpeq	r1, lr, lsl r1
    2c28:	50011e32 	andpl	r1, r1, r2, lsr lr
    2c2c:	20003301 	andcs	r3, r0, r1, lsl #6
    2c30:	08003b46 	stmdaeq	r0, {r1, r2, r6, r8, r9, fp, ip, sp}
    2c34:	000016e4 	andeq	r1, r0, r4, ror #13
    2c38:	00001024 	andeq	r1, r0, r4, lsr #32
    2c3c:	0151011e 	cmpeq	r1, lr, lsl r1
    2c40:	50011e33 	andpl	r1, r1, r3, lsr lr
    2c44:	1d003301 	stcne	3, cr3, [r0, #-4]
    2c48:	08003b50 	stmdaeq	r0, {r4, r6, r8, r9, fp, ip, sp}
    2c4c:	000016e4 	andeq	r1, r0, r4, ror #13
    2c50:	0151011e 	cmpeq	r1, lr, lsl r1
    2c54:	50011e34 	andpl	r1, r1, r4, lsr lr
    2c58:	00003301 	andeq	r3, r0, r1, lsl #6
    2c5c:	08023200 	stmdaeq	r2, {r9, ip, sp}
    2c60:	3b1a0000 	blcc	682c68 <__RW_SIZE__+0x6826e4>
    2c64:	01b00800 	lslseq	r0, r0, #16
    2c68:	76010000 	strvc	r0, [r1], -r0
    2c6c:	080f2501 	stmdaeq	pc, {r0, r8, sl, sp}	; <UNPREDICTABLE>
    2c70:	0a7c0000 	beq	1f02c78 <__RW_SIZE__+0x1f026f4>
    2c74:	00000000 	andeq	r0, r0, r0
    2c78:	000b4f28 	andeq	r4, fp, r8, lsr #30
    2c7c:	01800100 	orreq	r0, r0, r0, lsl #2
    2c80:	08003b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, ip, sp}
    2c84:	0000005e 	andeq	r0, r0, lr, asr r0
    2c88:	10f49c01 	rscsne	r9, r4, r1, lsl #24
    2c8c:	ea2e0000 	b	b82c94 <__RW_SIZE__+0xb82710>
    2c90:	5600000d 	strpl	r0, [r0], -sp
    2c94:	d008003b 	andle	r0, r8, fp, lsr r0
    2c98:	01000001 	tsteq	r0, r1
    2c9c:	10d90182 	sbcsne	r0, r9, r2, lsl #3
    2ca0:	f72f0000 			; <UNDEFINED> instruction: 0xf72f0000
    2ca4:	0400000d 	streq	r0, [r0], #-13
    2ca8:	0001d030 	andeq	sp, r1, r0, lsr r0
    2cac:	0e023100 	adfeqs	f3, f2, f0
    2cb0:	0a900000 	beq	fe402cb8 <MSP_BASE+0xde3fdcb8>
    2cb4:	74200000 	strtvc	r0, [r0], #-0
    2cb8:	e408003b 	str	r0, [r8], #-59	; 0xffffffc5
    2cbc:	ab000016 	blge	2d1c <__RW_SIZE__+0x2798>
    2cc0:	1e000010 	mcrne	0, 0, r0, cr0, cr0, {0}
    2cc4:	32015101 	andcc	r5, r1, #1073741824	; 0x40000000
    2cc8:	0150011e 	cmpeq	r0, lr, lsl r1
    2ccc:	a6200034 			; <UNDEFINED> instruction: 0xa6200034
    2cd0:	e408003b 	str	r0, [r8], #-59	; 0xffffffc5
    2cd4:	c3000016 	movwgt	r0, #22
    2cd8:	1e000010 	mcrne	0, 0, r0, cr0, cr0, {0}
    2cdc:	33015101 	movwcc	r5, #4353	; 0x1101
    2ce0:	0150011e 	cmpeq	r0, lr, lsl r1
    2ce4:	b01d0034 	andslt	r0, sp, r4, lsr r0
    2ce8:	e408003b 	str	r0, [r8], #-59	; 0xffffffc5
    2cec:	1e000016 	mcrne	0, 0, r0, cr0, cr6, {0}
    2cf0:	34015101 	strcc	r5, [r1], #-257	; 0xfffffeff
    2cf4:	0150011e 	cmpeq	r0, lr, lsl r1
    2cf8:	00000034 	andeq	r0, r0, r4, lsr r0
    2cfc:	00080232 	andeq	r0, r8, r2, lsr r2
    2d00:	003b7a00 	eorseq	r7, fp, r0, lsl #20
    2d04:	0001f808 	andeq	pc, r1, r8, lsl #16
    2d08:	01830100 	orreq	r0, r3, r0, lsl #2
    2d0c:	00080f25 	andeq	r0, r8, r5, lsr #30
    2d10:	000ab600 	andeq	fp, sl, r0, lsl #12
    2d14:	28000000 	stmdacs	r0, {}	; <UNPREDICTABLE>
    2d18:	00000cad 	andeq	r0, r0, sp, lsr #25
    2d1c:	b4018d01 	strlt	r8, [r1], #-3329	; 0xfffff2ff
    2d20:	5e08003b 	mcrpl	0, 0, r0, cr8, cr11, {1}
    2d24:	01000000 	mrseq	r0, (UNDEF: 0)
    2d28:	0011939c 	mulseq	r1, ip, r3
    2d2c:	0dea2e00 	stcleq	14, cr2, [sl]
    2d30:	3bb60000 	blcc	fed82d38 <MSP_BASE+0xded7dd38>
    2d34:	02180800 	andseq	r0, r8, #0, 16
    2d38:	8f010000 	svchi	0x00010000
    2d3c:	00117801 	andseq	r7, r1, r1, lsl #16
    2d40:	0df72f00 	ldcleq	15, cr2, [r7]
    2d44:	30050000 	andcc	r0, r5, r0
    2d48:	00000218 	andeq	r0, r0, r8, lsl r2
    2d4c:	000e0231 	andeq	r0, lr, r1, lsr r2
    2d50:	000aca00 	andeq	ip, sl, r0, lsl #20
    2d54:	3bd42000 	blcc	ff50ad5c <MSP_BASE+0xdf505d5c>
    2d58:	16e40800 	strbtne	r0, [r4], r0, lsl #16
    2d5c:	114a0000 	mrsne	r0, (UNDEF: 74)
    2d60:	011e0000 	tsteq	lr, r0
    2d64:	1e320151 	mrcne	1, 1, r0, cr2, cr1, {2}
    2d68:	35015001 	strcc	r5, [r1, #-1]
    2d6c:	3c062000 	stccc	0, cr2, [r6], {-0}
    2d70:	16e40800 	strbtne	r0, [r4], r0, lsl #16
    2d74:	11620000 	cmnne	r2, r0
    2d78:	011e0000 	tsteq	lr, r0
    2d7c:	1e330151 	mrcne	1, 1, r0, cr3, cr1, {2}
    2d80:	35015001 	strcc	r5, [r1, #-1]
    2d84:	3c101d00 	ldccc	13, cr1, [r0], {-0}
    2d88:	16e40800 	strbtne	r0, [r4], r0, lsl #16
    2d8c:	011e0000 	tsteq	lr, r0
    2d90:	1e340151 	mrcne	1, 1, r0, cr4, cr1, {2}
    2d94:	35015001 	strcc	r5, [r1, #-1]
    2d98:	32000000 	andcc	r0, r0, #0
    2d9c:	00000802 	andeq	r0, r0, r2, lsl #16
    2da0:	08003bda 	stmdaeq	r0, {r1, r3, r4, r6, r7, r8, r9, fp, ip, sp}
    2da4:	00000240 	andeq	r0, r0, r0, asr #4
    2da8:	25019001 	strcs	r9, [r1, #-1]
    2dac:	0000080f 	andeq	r0, r0, pc, lsl #16
    2db0:	00000af0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    2db4:	f2280000 	vhadd.s32	d0, d8, d0
    2db8:	0100000c 	tsteq	r0, ip
    2dbc:	3c14019a 	ldfccs	f0, [r4], {154}	; 0x9a
    2dc0:	005e0800 	subseq	r0, lr, r0, lsl #16
    2dc4:	9c010000 	stcls	0, cr0, [r1], {-0}
    2dc8:	00001232 	andeq	r1, r0, r2, lsr r2
    2dcc:	000dea2e 	andeq	lr, sp, lr, lsr #20
    2dd0:	003c1600 	eorseq	r1, ip, r0, lsl #12
    2dd4:	00026008 	andeq	r6, r2, r8
    2dd8:	019c0100 	orrseq	r0, ip, r0, lsl #2
    2ddc:	00001217 	andeq	r1, r0, r7, lsl r2
    2de0:	000df72f 	andeq	pc, sp, pc, lsr #14
    2de4:	60300600 	eorsvs	r0, r0, r0, lsl #12
    2de8:	31000002 	tstcc	r0, r2
    2dec:	00000e02 	andeq	r0, r0, r2, lsl #28
    2df0:	00000b04 	andeq	r0, r0, r4, lsl #22
    2df4:	003c3420 	eorseq	r3, ip, r0, lsr #8
    2df8:	0016e408 	andseq	lr, r6, r8, lsl #8
    2dfc:	0011e900 	andseq	lr, r1, r0, lsl #18
    2e00:	51011e00 	tstpl	r1, r0, lsl #28
    2e04:	011e3201 	tsteq	lr, r1, lsl #4
    2e08:	00360150 	eorseq	r0, r6, r0, asr r1
    2e0c:	003c6620 	eorseq	r6, ip, r0, lsr #12
    2e10:	0016e408 	andseq	lr, r6, r8, lsl #8
    2e14:	00120100 	andseq	r0, r2, r0, lsl #2
    2e18:	51011e00 	tstpl	r1, r0, lsl #28
    2e1c:	011e3301 	tsteq	lr, r1, lsl #6
    2e20:	00360150 	eorseq	r0, r6, r0, asr r1
    2e24:	003c701d 	eorseq	r7, ip, sp, lsl r0
    2e28:	0016e408 	andseq	lr, r6, r8, lsl #8
    2e2c:	51011e00 	tstpl	r1, r0, lsl #28
    2e30:	011e3401 	tsteq	lr, r1, lsl #8
    2e34:	00360150 	eorseq	r0, r6, r0, asr r1
    2e38:	02320000 	eorseq	r0, r2, #0
    2e3c:	3a000008 	bcc	2e64 <__RW_SIZE__+0x28e0>
    2e40:	8808003c 	stmdahi	r8, {r2, r3, r4, r5}
    2e44:	01000002 	tsteq	r0, r2
    2e48:	0f25019d 	svceq	0x0025019d
    2e4c:	2a000008 	bcs	2e74 <__RW_SIZE__+0x28f0>
    2e50:	0000000b 	andeq	r0, r0, fp
    2e54:	09a12800 	stmibeq	r1!, {fp, sp}
    2e58:	a7010000 	strge	r0, [r1, -r0]
    2e5c:	003c7401 	eorseq	r7, ip, r1, lsl #8
    2e60:	00005e08 	andeq	r5, r0, r8, lsl #28
    2e64:	d19c0100 	orrsle	r0, ip, r0, lsl #2
    2e68:	2e000012 	mcrcs	0, 0, r0, cr0, cr2, {0}
    2e6c:	00000dea 	andeq	r0, r0, sl, ror #27
    2e70:	08003c76 	stmdaeq	r0, {r1, r2, r4, r5, r6, sl, fp, ip, sp}
    2e74:	000002a8 	andeq	r0, r0, r8, lsr #5
    2e78:	b601a901 	strlt	sl, [r1], -r1, lsl #18
    2e7c:	2f000012 	svccs	0x00000012
    2e80:	00000df7 	strdeq	r0, [r0], -r7
    2e84:	02a83007 	adceq	r3, r8, #7
    2e88:	02310000 	eorseq	r0, r1, #0
    2e8c:	3e00000e 	cdpcc	0, 0, cr0, cr0, cr14, {0}
    2e90:	2000000b 	andcs	r0, r0, fp
    2e94:	08003c94 	stmdaeq	r0, {r2, r4, r7, sl, fp, ip, sp}
    2e98:	000016e4 	andeq	r1, r0, r4, ror #13
    2e9c:	00001288 	andeq	r1, r0, r8, lsl #5
    2ea0:	0151011e 	cmpeq	r1, lr, lsl r1
    2ea4:	50011e32 	andpl	r1, r1, r2, lsr lr
    2ea8:	20003701 	andcs	r3, r0, r1, lsl #14
    2eac:	08003cc6 	stmdaeq	r0, {r1, r2, r6, r7, sl, fp, ip, sp}
    2eb0:	000016e4 	andeq	r1, r0, r4, ror #13
    2eb4:	000012a0 	andeq	r1, r0, r0, lsr #5
    2eb8:	0151011e 	cmpeq	r1, lr, lsl r1
    2ebc:	50011e33 	andpl	r1, r1, r3, lsr lr
    2ec0:	1d003701 	stcne	7, cr3, [r0, #-4]
    2ec4:	08003cd0 	stmdaeq	r0, {r4, r6, r7, sl, fp, ip, sp}
    2ec8:	000016e4 	andeq	r1, r0, r4, ror #13
    2ecc:	0151011e 	cmpeq	r1, lr, lsl r1
    2ed0:	50011e34 	andpl	r1, r1, r4, lsr lr
    2ed4:	00003701 	andeq	r3, r0, r1, lsl #14
    2ed8:	08023200 	stmdaeq	r2, {r9, ip, sp}
    2edc:	3c9a0000 	ldccc	0, cr0, [sl], {0}
    2ee0:	02d00800 	sbcseq	r0, r0, #0, 16
    2ee4:	aa010000 	bge	42eec <__RW_SIZE__+0x42968>
    2ee8:	080f2501 	stmdaeq	pc, {r0, r8, sl, sp}	; <UNPREDICTABLE>
    2eec:	0b640000 	bleq	1902ef4 <__RW_SIZE__+0x1902970>
    2ef0:	00000000 	andeq	r0, r0, r0
    2ef4:	000c0828 	andeq	r0, ip, r8, lsr #16
    2ef8:	01b40100 			; <UNDEFINED> instruction: 0x01b40100
    2efc:	08003cd4 	stmdaeq	r0, {r2, r4, r6, r7, sl, fp, ip, sp}
    2f00:	00000006 	andeq	r0, r0, r6
    2f04:	12f19c01 	rscsne	r9, r1, #256	; 0x100
    2f08:	da260000 	ble	982f10 <__RW_SIZE__+0x98298c>
    2f0c:	8108003c 	tsthi	r8, ip, lsr r0
    2f10:	00000008 	andeq	r0, r0, r8
    2f14:	000b1a28 	andeq	r1, fp, r8, lsr #20
    2f18:	01c10100 	biceq	r0, r1, r0, lsl #2
    2f1c:	08003cdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, fp, ip, sp}
    2f20:	00000006 	andeq	r0, r0, r6
    2f24:	13119c01 	tstne	r1, #256	; 0x100
    2f28:	e2260000 	eor	r0, r6, #0
    2f2c:	8108003c 	tsthi	r8, ip, lsr r0
    2f30:	00000008 	andeq	r0, r0, r8
    2f34:	000dc928 	andeq	ip, sp, r8, lsr #18
    2f38:	01ce0100 	biceq	r0, lr, r0, lsl #2
    2f3c:	08003ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, ip, sp}
    2f40:	00000006 	andeq	r0, r0, r6
    2f44:	13319c01 	teqne	r1, #256	; 0x100
    2f48:	ea260000 	b	982f50 <__RW_SIZE__+0x9829cc>
    2f4c:	8108003c 	tsthi	r8, ip, lsr r0
    2f50:	00000008 	andeq	r0, r0, r8
    2f54:	000c1a28 	andeq	r1, ip, r8, lsr #20
    2f58:	01da0100 	bicseq	r0, sl, r0, lsl #2
    2f5c:	08003cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, ip, sp}
    2f60:	00000006 	andeq	r0, r0, r6
    2f64:	13519c01 	cmpne	r1, #256	; 0x100
    2f68:	f2260000 	vhadd.s32	d0, d6, d0
    2f6c:	8108003c 	tsthi	r8, ip, lsr r0
    2f70:	00000008 	andeq	r0, r0, r8
    2f74:	000a0628 	andeq	r0, sl, r8, lsr #12
    2f78:	01e60100 	mvneq	r0, r0, lsl #2
    2f7c:	08003cf4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, fp, ip, sp}
    2f80:	00000006 	andeq	r0, r0, r6
    2f84:	13719c01 	cmnne	r1, #256	; 0x100
    2f88:	fa260000 	blx	982f90 <__RW_SIZE__+0x982a0c>
    2f8c:	8108003c 	tsthi	r8, ip, lsr r0
    2f90:	00000008 	andeq	r0, r0, r8
    2f94:	000e8328 	andeq	r8, lr, r8, lsr #6
    2f98:	01f40100 	mvnseq	r0, r0, lsl #2
    2f9c:	08003cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp, ip, sp}
    2fa0:	00000032 	andeq	r0, r0, r2, lsr r0
    2fa4:	139f9c01 	orrsne	r9, pc, #256	; 0x100
    2fa8:	02320000 	eorseq	r0, r2, #0
    2fac:	0c000008 	stceq	0, cr0, [r0], {8}
    2fb0:	f008003d 			; <UNDEFINED> instruction: 0xf008003d
    2fb4:	01000002 	tsteq	r0, r2
    2fb8:	0f2f01f9 	svceq	0x002f01f9
    2fbc:	17000008 	strne	r0, [r0, -r8]
    2fc0:	68280000 	stmdavs	r8!, {}	; <UNPREDICTABLE>
    2fc4:	0100000d 	tsteq	r0, sp
    2fc8:	3d300203 	lfmcc	f0, 4, [r0, #-12]!
    2fcc:	00060800 	andeq	r0, r6, r0, lsl #16
    2fd0:	9c010000 	stcls	0, cr0, [r1], {-0}
    2fd4:	000013bf 			; <UNDEFINED> instruction: 0x000013bf
    2fd8:	003d3626 	eorseq	r3, sp, r6, lsr #12
    2fdc:	00088108 	andeq	r8, r8, r8, lsl #2
    2fe0:	3c280000 	stccc	0, cr0, [r8], #-0
    2fe4:	0100000b 	tsteq	r0, fp
    2fe8:	3d380210 	lfmcc	f0, 4, [r8, #-64]!	; 0xffffffc0
    2fec:	00060800 	andeq	r0, r6, r0, lsl #16
    2ff0:	9c010000 	stcls	0, cr0, [r1], {-0}
    2ff4:	000013df 	ldrdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    2ff8:	003d3e26 	eorseq	r3, sp, r6, lsr #28
    2ffc:	00088108 	andeq	r8, r8, r8, lsl #2
    3000:	82280000 	eorhi	r0, r8, #0
    3004:	0100000b 	tsteq	r0, fp
    3008:	3d40021d 	sfmcc	f0, 2, [r0, #-116]	; 0xffffff8c
    300c:	00060800 	andeq	r0, r6, r0, lsl #16
    3010:	9c010000 	stcls	0, cr0, [r1], {-0}
    3014:	000013ff 	strdeq	r1, [r0], -pc	; <UNPREDICTABLE>
    3018:	003d4626 	eorseq	r4, sp, r6, lsr #12
    301c:	00088108 	andeq	r8, r8, r8, lsl #2
    3020:	7f280000 	svcvc	0x00280000
    3024:	0100000a 	tsteq	r0, sl
    3028:	3d480229 	sfmcc	f0, 2, [r8, #-164]	; 0xffffff5c
    302c:	00060800 	andeq	r0, r6, r0, lsl #16
    3030:	9c010000 	stcls	0, cr0, [r1], {-0}
    3034:	0000141f 	andeq	r1, r0, pc, lsl r4
    3038:	003d4e26 	eorseq	r4, sp, r6, lsr #28
    303c:	00088108 	andeq	r8, r8, r8, lsl #2
    3040:	b9280000 	stmdblt	r8!, {}	; <UNPREDICTABLE>
    3044:	0100000e 	tsteq	r0, lr
    3048:	3d500235 	lfmcc	f0, 2, [r0, #-212]	; 0xffffff2c
    304c:	00060800 	andeq	r0, r6, r0, lsl #16
    3050:	9c010000 	stcls	0, cr0, [r1], {-0}
    3054:	0000143f 	andeq	r1, r0, pc, lsr r4
    3058:	003d5626 	eorseq	r5, sp, r6, lsr #12
    305c:	00088108 	andeq	r8, r8, r8, lsl #2
    3060:	68280000 	stmdavs	r8!, {}	; <UNPREDICTABLE>
    3064:	0100000b 	tsteq	r0, fp
    3068:	3d580241 	lfmcc	f0, 2, [r8, #-260]	; 0xfffffefc
    306c:	00060800 	andeq	r0, r6, r0, lsl #16
    3070:	9c010000 	stcls	0, cr0, [r1], {-0}
    3074:	0000145f 	andeq	r1, r0, pc, asr r4
    3078:	003d5e26 	eorseq	r5, sp, r6, lsr #28
    307c:	00088108 	andeq	r8, r8, r8, lsl #2
    3080:	3e280000 	cdpcc	0, 2, cr0, cr8, cr0, {0}
    3084:	0100000d 	tsteq	r0, sp
    3088:	3d60024f 	sfmcc	f0, 2, [r0, #-316]!	; 0xfffffec4
    308c:	00360800 	eorseq	r0, r6, r0, lsl #16
    3090:	9c010000 	stcls	0, cr0, [r1], {-0}
    3094:	0000148d 	andeq	r1, r0, sp, lsl #9
    3098:	00080232 	andeq	r0, r8, r2, lsr r2
    309c:	003d6c00 	eorseq	r6, sp, r0, lsl #24
    30a0:	00031008 	andeq	r1, r3, r8
    30a4:	02520100 	subseq	r0, r2, #0, 2
    30a8:	00080f2f 	andeq	r0, r8, pc, lsr #30
    30ac:	00001e00 	andeq	r1, r0, r0, lsl #28
    30b0:	000ea628 	andeq	sl, lr, r8, lsr #12
    30b4:	025d0100 	subseq	r0, sp, #0, 2
    30b8:	08003d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp, ip, sp}
    30bc:	00000006 	andeq	r0, r0, r6
    30c0:	14ad9c01 	strtne	r9, [sp], #3073	; 0xc01
    30c4:	9e260000 	cdpls	0, 2, cr0, cr6, cr0, {0}
    30c8:	8108003d 	tsthi	r8, sp, lsr r0
    30cc:	00000008 	andeq	r0, r0, r8
    30d0:	000db628 	andeq	fp, sp, r8, lsr #12
    30d4:	02690100 	rsbeq	r0, r9, #0, 2
    30d8:	08003da0 	stmdaeq	r0, {r5, r7, r8, sl, fp, ip, sp}
    30dc:	00000006 	andeq	r0, r0, r6
    30e0:	14cd9c01 	strbne	r9, [sp], #3073	; 0xc01
    30e4:	a6260000 	strtge	r0, [r6], -r0
    30e8:	8108003d 	tsthi	r8, sp, lsr r0
    30ec:	00000008 	andeq	r0, r0, r8
    30f0:	000d9e28 	andeq	r9, sp, r8, lsr #28
    30f4:	02750100 	rsbseq	r0, r5, #0, 2
    30f8:	08003da8 	stmdaeq	r0, {r3, r5, r7, r8, sl, fp, ip, sp}
    30fc:	00000006 	andeq	r0, r0, r6
    3100:	14ed9c01 	strbtne	r9, [sp], #3073	; 0xc01
    3104:	ae260000 	cdpge	0, 2, cr0, cr6, cr0, {0}
    3108:	8108003d 	tsthi	r8, sp, lsr r0
    310c:	00000008 	andeq	r0, r0, r8
    3110:	000a1928 	andeq	r1, sl, r8, lsr #18
    3114:	02810100 	addeq	r0, r1, #0, 2
    3118:	08003db0 	stmdaeq	r0, {r4, r5, r7, r8, sl, fp, ip, sp}
    311c:	00000006 	andeq	r0, r0, r6
    3120:	150d9c01 	strne	r9, [sp, #-3073]	; 0xfffff3ff
    3124:	b6260000 	strtlt	r0, [r6], -r0
    3128:	8108003d 	tsthi	r8, sp, lsr r0
    312c:	00000008 	andeq	r0, r0, r8
    3130:	000a4a28 	andeq	r4, sl, r8, lsr #20
    3134:	028d0100 	addeq	r0, sp, #0, 2
    3138:	08003db8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, fp, ip, sp}
    313c:	00000006 	andeq	r0, r0, r6
    3140:	152d9c01 	strne	r9, [sp, #-3073]!	; 0xfffff3ff
    3144:	be260000 	cdplt	0, 2, cr0, cr6, cr0, {0}
    3148:	8108003d 	tsthi	r8, sp, lsr r0
    314c:	00000008 	andeq	r0, r0, r8
    3150:	000c2d28 	andeq	r2, ip, r8, lsr #26
    3154:	02990100 	addseq	r0, r9, #0, 2
    3158:	08003dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, ip, sp}
    315c:	00000006 	andeq	r0, r0, r6
    3160:	154d9c01 	strbne	r9, [sp, #-3073]	; 0xfffff3ff
    3164:	c6260000 	strtgt	r0, [r6], -r0
    3168:	8108003d 	tsthi	r8, sp, lsr r0
    316c:	00000008 	andeq	r0, r0, r8
    3170:	0009d628 	andeq	sp, r9, r8, lsr #12
    3174:	02a80100 	adceq	r0, r8, #0, 2
    3178:	08003dc8 	stmdaeq	r0, {r3, r6, r7, r8, sl, fp, ip, sp}
    317c:	00000030 	andeq	r0, r0, r0, lsr r0
    3180:	157b9c01 	ldrbne	r9, [fp, #-3073]!	; 0xfffff3ff
    3184:	02320000 	eorseq	r0, r2, #0
    3188:	d4000008 	strle	r0, [r0], #-8
    318c:	3808003d 	stmdacc	r8, {r0, r2, r3, r4, r5}
    3190:	01000003 	tsteq	r0, r3
    3194:	0f2f02ac 	svceq	0x002f02ac
    3198:	25000008 	strcs	r0, [r0, #-8]
    319c:	2c280000 	stccs	0, cr0, [r8], #-0
    31a0:	0100000a 	tsteq	r0, sl
    31a4:	3df802b6 	lfmcc	f0, 2, [r8, #728]!	; 0x2d8
    31a8:	00060800 	andeq	r0, r6, r0, lsl #16
    31ac:	9c010000 	stcls	0, cr0, [r1], {-0}
    31b0:	0000159b 	muleq	r0, fp, r5
    31b4:	003dfe26 	eorseq	pc, sp, r6, lsr #28
    31b8:	00088108 	andeq	r8, r8, r8, lsl #2
    31bc:	5c280000 	stcpl	0, cr0, [r8], #-0
    31c0:	0100000e 	tsteq	r0, lr
    31c4:	3e0002c2 	cdpcc	2, 0, cr0, cr0, cr2, {6}
    31c8:	00060800 	andeq	r0, r6, r0, lsl #16
    31cc:	9c010000 	stcls	0, cr0, [r1], {-0}
    31d0:	000015bb 			; <UNDEFINED> instruction: 0x000015bb
    31d4:	003e0626 	eorseq	r0, lr, r6, lsr #12
    31d8:	00088108 	andeq	r8, r8, r8, lsl #2
    31dc:	6e280000 	cdpvs	0, 2, cr0, cr8, cr0, {0}
    31e0:	0100000e 	tsteq	r0, lr
    31e4:	3e0802ce 	cdpcc	2, 0, cr0, cr8, cr14, {6}
    31e8:	00060800 	andeq	r0, r6, r0, lsl #16
    31ec:	9c010000 	stcls	0, cr0, [r1], {-0}
    31f0:	000015db 	ldrdeq	r1, [r0], -fp
    31f4:	003e0e26 	eorseq	r0, lr, r6, lsr #28
    31f8:	00088108 	andeq	r8, r8, r8, lsl #2
    31fc:	85280000 	strhi	r0, [r8, #-0]!
    3200:	0100000c 	tsteq	r0, ip
    3204:	3e1002da 	mrccc	2, 0, r0, cr0, cr10, {6}
    3208:	00060800 	andeq	r0, r6, r0, lsl #16
    320c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3210:	000015fb 	strdeq	r1, [r0], -fp
    3214:	003e1626 	eorseq	r1, lr, r6, lsr #12
    3218:	00088108 	andeq	r8, r8, r8, lsl #2
    321c:	9f280000 	svcls	0x00280000
    3220:	0100000b 	tsteq	r0, fp
    3224:	3e1802e6 	cdpcc	2, 1, cr0, cr8, cr6, {7}
    3228:	00060800 	andeq	r0, r6, r0, lsl #16
    322c:	9c010000 	stcls	0, cr0, [r1], {-0}
    3230:	0000161b 	andeq	r1, r0, fp, lsl r6
    3234:	003e1e26 	eorseq	r1, lr, r6, lsr #28
    3238:	00088108 	andeq	r8, r8, r8, lsl #2
    323c:	ea0c0000 	b	303244 <__RW_SIZE__+0x302cc0>
    3240:	2b000007 	blcs	3264 <__RW_SIZE__+0x2ce0>
    3244:	0d000016 	stceq	0, cr0, [r0, #-88]	; 0xffffffa8
    3248:	00000295 	muleq	r0, r5, r2
    324c:	78330007 	ldmdavc	r3!, {r0, r1, r2}
    3250:	0100000b 	tsteq	r0, fp
    3254:	00163c23 	andseq	r3, r6, r3, lsr #24
    3258:	a4030500 	strge	r0, [r3], #-1280	; 0xfffffb00
    325c:	120800a5 	andne	r0, r8, #165	; 0xa5
    3260:	0000161b 	andeq	r1, r0, fp, lsl r6
    3264:	00005634 	andeq	r5, r0, r4, lsr r6
    3268:	06ce0200 	strbeq	r0, [lr], r0, lsl #4
    326c:	0000164d 	andeq	r1, r0, sp, asr #12
    3270:	0001c90e 	andeq	ip, r1, lr, lsl #18
    3274:	0ad43500 	beq	ff51067c <MSP_BASE+0xdf50b67c>
    3278:	b9010000 	stmdblt	r1, {}	; <UNPREDICTABLE>
    327c:	0000164d 	andeq	r1, r0, sp, asr #12
    3280:	06e40305 	strbteq	r0, [r4], r5, lsl #6
    3284:	c90c2000 	stmdbgt	ip, {sp}
    3288:	73000001 	movwvc	r0, #1
    328c:	0d000016 	stceq	0, cr0, [r0, #-88]	; 0xffffffa8
    3290:	00000295 	muleq	r0, r5, r2
    3294:	1a360007 	bne	d832b8 <__RW_SIZE__+0xd82d34>
    3298:	0100000d 	tsteq	r0, sp
    329c:	1685014b 	strne	r0, [r5], fp, asr #2
    32a0:	03050000 	movweq	r0, #20480	; 0x5000
    32a4:	200006e8 	andcs	r0, r0, r8, ror #13
    32a8:	0016630e 	andseq	r6, r6, lr, lsl #6
    32ac:	0e963600 	cdpeq	6, 9, cr3, cr6, cr0, {0}
    32b0:	f2010000 	vhadd.s8	d0, d1, d0
    32b4:	00164d01 	andseq	r4, r6, r1, lsl #26
    32b8:	08030500 	stmdaeq	r3, {r8, sl}
    32bc:	36200007 	strtcc	r0, [r0], -r7
    32c0:	00000905 	andeq	r0, r0, r5, lsl #18
    32c4:	4d024d01 	stcmi	13, cr4, [r2, #-4]
    32c8:	05000016 	streq	r0, [r0, #-22]	; 0xffffffea
    32cc:	00070c03 	andeq	r0, r7, r3, lsl #24
    32d0:	09e83620 	stmibeq	r8!, {r5, r9, sl, ip, sp}^
    32d4:	a5010000 	strge	r0, [r1, #-0]
    32d8:	00164d02 	andseq	r4, r6, r2, lsl #26
    32dc:	14030500 	strne	r0, [r3], #-1280	; 0xfffffb00
    32e0:	36200007 	strtcc	r0, [r0], -r7
    32e4:	00000cd0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    32e8:	4d02a601 	stcmi	6, cr10, [r2, #-4]
    32ec:	05000016 	streq	r0, [r0, #-22]	; 0xffffffea
    32f0:	00071003 	andeq	r1, r7, r3
    32f4:	09283720 	stmdbeq	r8!, {r5, r8, r9, sl, ip, sp}
    32f8:	10050000 	andne	r0, r5, r0
    32fc:	000016e4 	andeq	r1, r0, r4, ror #13
    3300:	0007ea38 	andeq	lr, r7, r8, lsr sl
    3304:	3a003900 	bcc	1170c <__RW_SIZE__+0x11188>
    3308:	00000665 	andeq	r0, r0, r5, ror #12
    330c:	c9387505 	ldmdbgt	r8!, {r0, r2, r8, sl, ip, sp, lr}
    3310:	38000001 	stmdacc	r0, {r0}
    3314:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3318:	01800000 	orreq	r0, r0, r0
    331c:	00040000 	andeq	r0, r4, r0
    3320:	00000c0f 	andeq	r0, r0, pc, lsl #24
    3324:	00b20104 	adcseq	r0, r2, r4, lsl #2
    3328:	d6010000 	strle	r0, [r1], -r0
    332c:	7200000e 	andvc	r0, r0, #14
    3330:	20000001 	andcs	r0, r0, r1
    3334:	c808003e 	stmdagt	r8, {r1, r2, r3, r4, r5}
    3338:	8f000000 	svchi	0x00000000
    333c:	02000009 	andeq	r0, r0, #9
    3340:	006d0601 	rsbeq	r0, sp, r1, lsl #12
    3344:	01020000 	mrseq	r0, (UNDEF: 2)
    3348:	00006b08 	andeq	r6, r0, r8, lsl #22
    334c:	05020200 	streq	r0, [r2, #-512]	; 0xfffffe00
    3350:	0000015c 	andeq	r0, r0, ip, asr r1
    3354:	43070202 	movwmi	r0, #29186	; 0x7202
    3358:	02000000 	andeq	r0, r0, #0
    335c:	00050504 	andeq	r0, r5, r4, lsl #10
    3360:	bb030000 	bllt	c3368 <__RW_SIZE__+0xc2de4>
    3364:	03000001 	movweq	r0, #1
    3368:	00005350 	andeq	r5, r0, r0, asr r3
    336c:	07040200 	streq	r0, [r4, -r0, lsl #4]
    3370:	000000a0 	andeq	r0, r0, r0, lsr #1
    3374:	00050802 	andeq	r0, r5, r2, lsl #16
    3378:	02000000 	andeq	r0, r0, #0
    337c:	009b0708 	addseq	r0, fp, r8, lsl #14
    3380:	04040000 	streq	r0, [r4], #-0
    3384:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3388:	07040200 	streq	r0, [r4, -r0, lsl #4]
    338c:	000000a5 	andeq	r0, r0, r5, lsr #1
    3390:	48070402 	stmdami	r7, {r1, sl}
    3394:	05000001 	streq	r0, [r0, #-1]
    3398:	00000048 	andeq	r0, r0, r8, asr #32
    339c:	00007d06 	andeq	r7, r0, r6, lsl #26
    33a0:	02100700 	andseq	r0, r0, #0, 14
    33a4:	00c5016d 	sbceq	r0, r5, sp, ror #2
    33a8:	fc080000 	stc2	0, cr0, [r8], {-0}
    33ac:	0200000e 	andeq	r0, r0, #14
    33b0:	007d016f 	rsbseq	r0, sp, pc, ror #2
    33b4:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    33b8:	00000f01 	andeq	r0, r0, r1, lsl #30
    33bc:	7d017002 	stcvc	0, cr7, [r1, #-8]
    33c0:	04000000 	streq	r0, [r0], #-0
    33c4:	4c415609 	mcrrmi	6, 0, r5, r1, cr9
    33c8:	01710200 	cmneq	r1, r0, lsl #4
    33cc:	0000007d 	andeq	r0, r0, sp, ror r0
    33d0:	0ee00808 	cdpeq	8, 14, cr0, cr0, cr8, {0}
    33d4:	72020000 	andvc	r0, r2, #0
    33d8:	00008201 	andeq	r8, r0, r1, lsl #4
    33dc:	0a000c00 	beq	63e4 <__RW_SIZE__+0x5e60>
    33e0:	00000f12 	andeq	r0, r0, r2, lsl pc
    33e4:	87017302 	strhi	r7, [r1, -r2, lsl #6]
    33e8:	02000000 	andeq	r0, r0, #0
    33ec:	00740801 	rsbseq	r0, r4, r1, lsl #16
    33f0:	060b0000 	streq	r0, [fp], -r0
    33f4:	0100000f 	tsteq	r0, pc
    33f8:	003e2003 	eorseq	r2, lr, r3
    33fc:	00004808 	andeq	r4, r0, r8, lsl #16
    3400:	fd9c0100 	ldc2	1, cr0, [ip]
    3404:	0c000000 	stceq	0, cr0, [r0], {-0}
    3408:	00000f1f 	andeq	r0, r0, pc, lsl pc
    340c:	006f0301 	rsbeq	r0, pc, r1, lsl #6
    3410:	0b780000 	bleq	1e03418 <__RW_SIZE__+0x1e02e94>
    3414:	0d000000 	stceq	0, cr0, [r0, #-0]
    3418:	00000ee6 	andeq	r0, r0, r6, ror #29
    341c:	00680b01 	rsbeq	r0, r8, r1, lsl #22
    3420:	3e680000 	cdpcc	0, 6, cr0, cr8, cr0, {0}
    3424:	00100800 	andseq	r0, r0, r0, lsl #16
    3428:	9c010000 	stcls	0, cr0, [r1], {-0}
    342c:	000f340d 	andeq	r3, pc, sp, lsl #8
    3430:	6f100100 	svcvs	0x00100100
    3434:	78000000 	stmdavc	r0, {}	; <UNPREDICTABLE>
    3438:	0c08003e 	stceq	0, cr0, [r8], {62}	; 0x3e
    343c:	01000000 	mrseq	r0, (UNDEF: 0)
    3440:	0f450d9c 	svceq	0x00450d9c
    3444:	15010000 	strne	r0, [r1, #-0]
    3448:	0000006f 	andeq	r0, r0, pc, rrx
    344c:	08003e84 	stmdaeq	r0, {r2, r7, r9, sl, fp, ip, sp}
    3450:	0000000c 	andeq	r0, r0, ip
    3454:	c90e9c01 	stmdbgt	lr, {r0, sl, fp, ip, pc}
    3458:	0100000e 	tsteq	r0, lr
    345c:	003e901a 	eorseq	r9, lr, sl, lsl r0
    3460:	00000e08 	andeq	r0, r0, r8, lsl #28
    3464:	0b9c0100 	bleq	fe70386c <MSP_BASE+0xde6fe86c>
    3468:	00000f24 	andeq	r0, r0, r4, lsr #30
    346c:	3ea01f01 	cdpcc	15, 10, cr1, cr0, cr1, {0}
    3470:	00480800 	subeq	r0, r8, r0, lsl #16
    3474:	9c010000 	stcls	0, cr0, [r1], {-0}
    3478:	00000172 	andeq	r0, r0, r2, ror r1
    347c:	000f1f0c 	andeq	r1, pc, ip, lsl #30
    3480:	6f1f0100 	svcvs	0x001f0100
    3484:	99000000 	stmdbls	r0, {}	; <UNPREDICTABLE>
    3488:	0000000b 	andeq	r0, r0, fp
    348c:	0000560f 	andeq	r5, r0, pc, lsl #12
    3490:	06ce0200 	strbeq	r0, [lr], r0, lsl #4
    3494:	0000017e 	andeq	r0, r0, lr, ror r1
    3498:	00006805 	andeq	r6, r0, r5, lsl #16
    349c:	08510000 	ldmdaeq	r1, {}^	; <UNPREDICTABLE>
    34a0:	00040000 	andeq	r0, r4, r0
    34a4:	00000cf8 	strdeq	r0, [r0], -r8
    34a8:	00b20104 	adcseq	r0, r2, r4, lsl #2
    34ac:	88010000 	stmdahi	r1, {}	; <UNPREDICTABLE>
    34b0:	7200000f 	andvc	r0, r0, #15
    34b4:	e8000001 	stmda	r0, {r0}
    34b8:	7c08003e 	stcvc	0, cr0, [r8], {62}	; 0x3e
    34bc:	2e000003 	cdpcs	0, 0, cr0, cr0, cr3, {0}
    34c0:	0200000a 	andeq	r0, r0, #10
    34c4:	000003e5 	andeq	r0, r0, r5, ror #7
    34c8:	64a80301 	strtvs	r0, [r8], #769	; 0x301
    34cc:	03000001 	movweq	r0, #1
    34d0:	0000061f 	andeq	r0, r0, pc, lsl r6
    34d4:	040a0372 	streq	r0, [sl], #-882	; 0xfffffc8e
    34d8:	03740000 	cmneq	r4, #0
    34dc:	00000557 	andeq	r0, r0, r7, asr r5
    34e0:	06bd0375 			; <UNDEFINED> instruction: 0x06bd0375
    34e4:	03760000 	cmneq	r6, #0
    34e8:	000006e2 	andeq	r0, r0, r2, ror #13
    34ec:	06ab037b 			; <UNDEFINED> instruction: 0x06ab037b
    34f0:	037c0000 	cmneq	ip, #0
    34f4:	000003ef 	andeq	r0, r0, pc, ror #7
    34f8:	0694037e 			; <UNDEFINED> instruction: 0x0694037e
    34fc:	037f0000 	cmneq	pc, #0
    3500:	0000054d 	andeq	r0, r0, sp, asr #10
    3504:	057b0300 	ldrbeq	r0, [fp, #-768]!	; 0xfffffd00
    3508:	03010000 	movweq	r0, #4096	; 0x1000
    350c:	00000763 	andeq	r0, r0, r3, ror #14
    3510:	05d30302 	ldrbeq	r0, [r3, #770]	; 0x302
    3514:	03030000 	movweq	r0, #12288	; 0x3000
    3518:	000003b1 			; <UNDEFINED> instruction: 0x000003b1
    351c:	04010304 	streq	r0, [r1], #-772	; 0xfffffcfc
    3520:	03050000 	movweq	r0, #20480	; 0x5000
    3524:	000003bc 			; <UNDEFINED> instruction: 0x000003bc
    3528:	06500306 	ldrbeq	r0, [r0], -r6, lsl #6
    352c:	03070000 	movweq	r0, #28672	; 0x7000
    3530:	000004be 			; <UNDEFINED> instruction: 0x000004be
    3534:	071a0308 	ldreq	r0, [sl, -r8, lsl #6]
    3538:	03090000 	movweq	r0, #36864	; 0x9000
    353c:	00000570 	andeq	r0, r0, r0, ror r5
    3540:	051d030a 	ldreq	r0, [sp, #-778]	; 0xfffffcf6
    3544:	030b0000 	movweq	r0, #45056	; 0xb000
    3548:	00000396 	muleq	r0, r6, r3
    354c:	058f030c 	streq	r0, [pc, #780]	; 3860 <__RW_SIZE__+0x32dc>
    3550:	030d0000 	movweq	r0, #53248	; 0xd000
    3554:	00000459 	andeq	r0, r0, r9, asr r4
    3558:	0702030e 	streq	r0, [r2, -lr, lsl #6]
    355c:	030f0000 	movweq	r0, #61440	; 0xf000
    3560:	000004e6 	andeq	r0, r0, r6, ror #9
    3564:	03660310 	cmneq	r6, #16, 6	; 0x40000000
    3568:	03110000 	tsteq	r1, #0
    356c:	0000074b 	andeq	r0, r0, fp, asr #14
    3570:	04940312 	ldreq	r0, [r4], #786	; 0x312
    3574:	03130000 	tsteq	r3, #0
    3578:	00000314 	andeq	r0, r0, r4, lsl r3
    357c:	04810314 	streq	r0, [r1], #788	; 0x314
    3580:	03150000 	tsteq	r5, #0
    3584:	00000358 	andeq	r0, r0, r8, asr r3
    3588:	06d50316 			; <UNDEFINED> instruction: 0x06d50316
    358c:	03170000 	tsteq	r7, #0
    3590:	00000438 	andeq	r0, r0, r8, lsr r4
    3594:	05b90318 	ldreq	r0, [r9, #792]!	; 0x318
    3598:	03190000 	tsteq	r9, #0
    359c:	00000675 	andeq	r0, r0, r5, ror r6
    35a0:	0633031a 			; <UNDEFINED> instruction: 0x0633031a
    35a4:	031b0000 	tsteq	fp, #0
    35a8:	000006a1 	andeq	r0, r0, r1, lsr #13
    35ac:	0513031c 	ldreq	r0, [r3, #-796]	; 0xfffffce4
    35b0:	031d0000 	tsteq	sp, #0
    35b4:	0000038c 	andeq	r0, r0, ip, lsl #7
    35b8:	05a2031e 	streq	r0, [r2, #798]!	; 0x31e
    35bc:	031f0000 	tsteq	pc, #0
    35c0:	00000687 	andeq	r0, r0, r7, lsl #13
    35c4:	04d90320 	ldrbeq	r0, [r9], #800	; 0x320
    35c8:	03210000 	teqeq	r1, #0
    35cc:	00000379 	andeq	r0, r0, r9, ror r3
    35d0:	044f0322 	strbeq	r0, [pc], #-802	; 35d8 <__RW_SIZE__+0x3054>
    35d4:	03230000 	teqeq	r3, #0
    35d8:	000006f3 	strdeq	r0, [r0], -r3
    35dc:	060e0324 	streq	r0, [lr], -r4, lsr #6
    35e0:	03250000 	teqeq	r5, #0
    35e4:	000004b2 			; <UNDEFINED> instruction: 0x000004b2
    35e8:	07570326 	ldrbeq	r0, [r7, -r6, lsr #6]
    35ec:	03270000 	teqeq	r7, #0
    35f0:	000003db 	ldrdeq	r0, [r0], -fp
    35f4:	076f0328 	strbeq	r0, [pc, -r8, lsr #6]!
    35f8:	03290000 	teqeq	r9, #0
    35fc:	0000053e 	andeq	r0, r0, lr, lsr r5
    3600:	a804002a 	stmdage	r4, {r1, r3, r5}
    3604:	03000004 	movweq	r0, #4
    3608:	002501d9 	ldrdeq	r0, [r5], -r9	; <UNPREDICTABLE>
    360c:	01050000 	mrseq	r0, (UNDEF: 5)
    3610:	00006d06 	andeq	r6, r0, r6, lsl #26
    3614:	027a0600 	rsbseq	r0, sl, #0, 12
    3618:	2a040000 	bcs	103620 <__RW_SIZE__+0x10309c>
    361c:	00000182 	andeq	r0, r0, r2, lsl #3
    3620:	6b080105 	blvs	203a3c <__RW_SIZE__+0x2034b8>
    3624:	05000000 	streq	r0, [r0, #-0]
    3628:	015c0502 	cmpeq	ip, r2, lsl #10
    362c:	d7060000 	strle	r0, [r6, -r0]
    3630:	04000002 	streq	r0, [r0], #-2
    3634:	00019b36 	andeq	r9, r1, r6, lsr fp
    3638:	07020500 	streq	r0, [r2, -r0, lsl #10]
    363c:	00000043 	andeq	r0, r0, r3, asr #32
    3640:	05050405 	streq	r0, [r5, #-1029]	; 0xfffffbfb
    3644:	06000000 	streq	r0, [r0], -r0
    3648:	000001bb 			; <UNDEFINED> instruction: 0x000001bb
    364c:	01b45004 			; <UNDEFINED> instruction: 0x01b45004
    3650:	04050000 	streq	r0, [r5], #-0
    3654:	0000a007 	andeq	sl, r0, r7
    3658:	05080500 	streq	r0, [r8, #-1280]	; 0xfffffb00
    365c:	00000000 	andeq	r0, r0, r0
    3660:	9b070805 	blls	1c567c <__RW_SIZE__+0x1c50f8>
    3664:	07000000 	streq	r0, [r0, -r0]
    3668:	6e690504 	cdpvs	5, 6, cr0, cr9, cr4, {0}
    366c:	04050074 	streq	r0, [r5], #-116	; 0xffffff8c
    3670:	0000a507 	andeq	sl, r0, r7, lsl #10
    3674:	0e040800 	cdpeq	8, 0, cr0, cr4, cr0, {0}
    3678:	02858402 	addeq	r8, r5, #33554432	; 0x2000000
    367c:	2d090000 	stccs	0, cr0, [r9, #-0]
    3680:	02000004 	andeq	r0, r0, #4
    3684:	00029c86 	andeq	r9, r2, r6, lsl #25
    3688:	dc090000 	stcle	0, cr0, [r9], {-0}
    368c:	02000005 	andeq	r0, r0, #5
    3690:	0002a187 	andeq	sl, r2, r7, lsl #3
    3694:	ee092000 	cdp	0, 0, cr2, cr9, cr0, {0}
    3698:	02000006 	andeq	r0, r0, #6
    369c:	0002b188 	andeq	fp, r2, r8, lsl #3
    36a0:	46098000 	strmi	r8, [r9], -r0
    36a4:	02000004 	andeq	r0, r0, #4
    36a8:	0002a189 	andeq	sl, r2, r9, lsl #3
    36ac:	460aa000 	strmi	sl, [sl], -r0
    36b0:	02000007 	andeq	r0, r0, #7
    36b4:	0002b68a 	andeq	fp, r2, sl, lsl #13
    36b8:	0a010000 	beq	436c0 <__RW_SIZE__+0x4313c>
    36bc:	000005e6 	andeq	r0, r0, r6, ror #11
    36c0:	02a18b02 	adceq	r8, r1, #2048	; 0x800
    36c4:	01200000 	teqeq	r0, r0
    36c8:	00058a0a 	andeq	r8, r5, sl, lsl #20
    36cc:	bb8c0200 	bllt	fe303ed4 <MSP_BASE+0xde2feed4>
    36d0:	80000002 	andhi	r0, r0, r2
    36d4:	05f00a01 	ldrbeq	r0, [r0, #2561]!	; 0xa01
    36d8:	8d020000 	stchi	0, cr0, [r2, #-0]
    36dc:	000002a1 	andeq	r0, r0, r1, lsr #5
    36e0:	fd0a01a0 	stc2	1, cr0, [sl, #-640]	; 0xfffffd80
    36e4:	02000006 	andeq	r0, r0, #6
    36e8:	0002c08e 	andeq	ip, r2, lr, lsl #1
    36ec:	0a020000 	beq	836f4 <__RW_SIZE__+0x83170>
    36f0:	000005fa 	strdeq	r0, [r0], -sl
    36f4:	02c58f02 	sbceq	r8, r5, #2, 30
    36f8:	02200000 	eoreq	r0, r0, #0
    36fc:	0050490b 	subseq	r4, r0, fp, lsl #18
    3700:	02e59002 	rsceq	r9, r5, #2
    3704:	03000000 	movweq	r0, #0
    3708:	0006040a 	andeq	r0, r6, sl, lsl #8
    370c:	ea910200 	b	fe443f14 <MSP_BASE+0xde43ef14>
    3710:	f0000002 			; <UNDEFINED> instruction: 0xf0000002
    3714:	05c60a03 	strbeq	r0, [r6, #2563]	; 0xa03
    3718:	92020000 	andls	r0, r2, #0
    371c:	000002fb 	strdeq	r0, [r0], -fp
    3720:	0c000e00 	stceq	14, cr0, [r0], {-0}
    3724:	000001a9 	andeq	r0, r0, r9, lsr #3
    3728:	00000295 	muleq	r0, r5, r2
    372c:	0002950d 	andeq	r9, r2, sp, lsl #10
    3730:	05000700 	streq	r0, [r0, #-1792]	; 0xfffff900
    3734:	01480704 	cmpeq	r8, r4, lsl #14
    3738:	850e0000 	strhi	r0, [lr, #-0]
    373c:	0c000002 	stceq	0, cr0, [r0], {2}
    3740:	000001a9 	andeq	r0, r0, r9, lsr #3
    3744:	000002b1 			; <UNDEFINED> instruction: 0x000002b1
    3748:	0002950d 	andeq	r9, r2, sp, lsl #10
    374c:	0e001700 	cdpeq	7, 0, cr1, cr0, cr0, {0}
    3750:	00000285 	andeq	r0, r0, r5, lsl #5
    3754:	0002850e 	andeq	r8, r2, lr, lsl #10
    3758:	02850e00 	addeq	r0, r5, #0, 28
    375c:	850e0000 	strhi	r0, [lr, #-0]
    3760:	0c000002 	stceq	0, cr0, [r0], {2}
    3764:	000001a9 	andeq	r0, r0, r9, lsr #3
    3768:	000002d5 	ldrdeq	r0, [r0], -r5
    376c:	0002950d 	andeq	r9, r2, sp, lsl #10
    3770:	0c003700 	stceq	7, cr3, [r0], {-0}
    3774:	00000177 	andeq	r0, r0, r7, ror r1
    3778:	000002e5 	andeq	r0, r0, r5, ror #5
    377c:	0002950d 	andeq	r9, r2, sp, lsl #10
    3780:	0e00ef00 	cdpeq	15, 0, cr14, cr0, cr0, {0}
    3784:	000002d5 	ldrdeq	r0, [r0], -r5
    3788:	0001a90c 	andeq	sl, r1, ip, lsl #18
    378c:	0002fb00 	andeq	pc, r2, r0, lsl #22
    3790:	02950f00 	addseq	r0, r5, #0, 30
    3794:	02830000 	addeq	r0, r3, #0
    3798:	01a90e00 			; <UNDEFINED> instruction: 0x01a90e00
    379c:	5b060000 	blpl	1837a4 <__RW_SIZE__+0x183220>
    37a0:	02000006 	andeq	r0, r0, #6
    37a4:	0001d793 	muleq	r1, r3, r7
    37a8:	01900e00 	orrseq	r0, r0, r0, lsl #28
    37ac:	1c100000 	ldcne	0, cr0, [r0], {-0}
    37b0:	7503e903 	strvc	lr, [r3, #-2307]	; 0xfffff6fd
    37b4:	11000003 	tstne	r0, r3
    37b8:	004c5243 	subeq	r5, ip, r3, asr #4
    37bc:	fb03eb03 	blx	fe3d2 <__RW_SIZE__+0xfde4e>
    37c0:	00000002 	andeq	r0, r0, r2
    37c4:	48524311 	ldmdami	r2, {r0, r4, r8, r9, lr}^
    37c8:	03ec0300 	mvneq	r0, #0, 6
    37cc:	000002fb 	strdeq	r0, [r0], -fp
    37d0:	44491104 	strbmi	r1, [r9], #-260	; 0xfffffefc
    37d4:	ed030052 	stc	0, cr0, [r3, #-328]	; 0xfffffeb8
    37d8:	0002fb03 	andeq	pc, r2, r3, lsl #22
    37dc:	4f110800 	svcmi	0x00110800
    37e0:	03005244 	movweq	r5, #580	; 0x244
    37e4:	02fb03ee 	rscseq	r0, fp, #-1207959549	; 0xb8000003
    37e8:	120c0000 	andne	r0, ip, #0
    37ec:	0000078b 	andeq	r0, r0, fp, lsl #15
    37f0:	fb03ef03 	blx	ff406 <__RW_SIZE__+0xfee82>
    37f4:	10000002 	andne	r0, r0, r2
    37f8:	52524211 	subspl	r4, r2, #268435457	; 0x10000001
    37fc:	03f00300 	mvnseq	r0, #0, 6
    3800:	000002fb 	strdeq	r0, [r0], -fp
    3804:	083e1214 	ldmdaeq	lr!, {r2, r4, r9, ip}
    3808:	f1030000 			; <UNDEFINED> instruction: 0xf1030000
    380c:	0002fb03 	andeq	pc, r2, r3, lsl #22
    3810:	04001800 	streq	r1, [r0], #-2048	; 0xfffff800
    3814:	0000081b 	andeq	r0, r0, fp, lsl r8
    3818:	1003f203 	andne	pc, r3, r3, lsl #4
    381c:	10000003 	andne	r0, r0, r3
    3820:	04340328 	ldrteq	r0, [r4], #-808	; 0xfffffcd8
    3824:	0000040c 	andeq	r0, r0, ip, lsl #8
    3828:	00524311 	subseq	r4, r2, r1, lsl r3
    382c:	fb043603 	blx	111042 <__RW_SIZE__+0x110abe>
    3830:	00000002 	andeq	r0, r0, r2
    3834:	00001312 	andeq	r1, r0, r2, lsl r3
    3838:	04370300 	ldrteq	r0, [r7], #-768	; 0xfffffd00
    383c:	000002fb 	strdeq	r0, [r0], -fp
    3840:	49431104 	stmdbmi	r3, {r2, r8, ip}^
    3844:	38030052 	stmdacc	r3, {r1, r4, r6}
    3848:	0002fb04 	andeq	pc, r2, r4, lsl #22
    384c:	92120800 	andsls	r0, r2, #0, 16
    3850:	03000000 	movweq	r0, #0
    3854:	02fb0439 	rscseq	r0, fp, #956301312	; 0x39000000
    3858:	120c0000 	andne	r0, ip, #0
    385c:	0000003a 	andeq	r0, r0, sl, lsr r0
    3860:	fb043a03 	blx	112076 <__RW_SIZE__+0x111af2>
    3864:	10000002 	andne	r0, r0, r2
    3868:	00002612 	andeq	r2, r0, r2, lsl r6
    386c:	043b0300 	ldrteq	r0, [fp], #-768	; 0xfffffd00
    3870:	000002fb 	strdeq	r0, [r0], -fp
    3874:	00821214 	addeq	r1, r2, r4, lsl r2
    3878:	3c030000 	stccc	0, cr0, [r3], {-0}
    387c:	0002fb04 	andeq	pc, r2, r4, lsl #22
    3880:	8a121800 	bhi	489888 <__RW_SIZE__+0x489304>
    3884:	03000000 	movweq	r0, #0
    3888:	02fb043d 	rscseq	r0, fp, #1023410176	; 0x3d000000
    388c:	121c0000 	andsne	r0, ip, #0
    3890:	0000000e 	andeq	r0, r0, lr
    3894:	fb043e03 	blx	1130aa <__RW_SIZE__+0x112b26>
    3898:	20000002 	andcs	r0, r0, r2
    389c:	52534311 	subspl	r4, r3, #1140850688	; 0x44000000
    38a0:	043f0300 	ldrteq	r0, [pc], #-768	; 38a8 <__RW_SIZE__+0x3324>
    38a4:	000002fb 	strdeq	r0, [r0], -fp
    38a8:	66040024 	strvs	r0, [r4], -r4, lsr #32
    38ac:	03000001 	movweq	r0, #1
    38b0:	0381044a 	orreq	r0, r1, #1241513984	; 0x4a000000
    38b4:	50100000 	andspl	r0, r0, r0
    38b8:	2904a203 	stmdbcs	r4, {r0, r1, r9, sp, pc}
    38bc:	11000006 	tstne	r0, r6
    38c0:	00315243 	eorseq	r5, r1, r3, asr #4
    38c4:	0b04a403 	bleq	12c8d8 <__RW_SIZE__+0x12c354>
    38c8:	00000003 	andeq	r0, r0, r3
    38cc:	0005dc12 	andeq	sp, r5, r2, lsl ip
    38d0:	04a50300 	strteq	r0, [r5], #768	; 0x300
    38d4:	00000190 	muleq	r0, r0, r1
    38d8:	52431102 	subpl	r1, r3, #-2147483648	; 0x80000000
    38dc:	a6030032 			; <UNDEFINED> instruction: 0xa6030032
    38e0:	00030b04 	andeq	r0, r3, r4, lsl #22
    38e4:	99120400 	ldmdbls	r2, {sl}
    38e8:	0300000c 	movweq	r0, #12
    38ec:	019004a7 	orrseq	r0, r0, r7, lsr #9
    38f0:	12060000 	andne	r0, r6, #0
    38f4:	00000d88 	andeq	r0, r0, r8, lsl #27
    38f8:	0b04a803 	bleq	12d90c <__RW_SIZE__+0x12d388>
    38fc:	08000003 	stmdaeq	r0, {r0, r1}
    3900:	0005e612 	andeq	lr, r5, r2, lsl r6
    3904:	04a90300 	strteq	r0, [r9], #768	; 0x300
    3908:	00000190 	muleq	r0, r0, r1
    390c:	097a120a 	ldmdbeq	sl!, {r1, r3, r9, ip}^
    3910:	aa030000 	bge	c3918 <__RW_SIZE__+0xc3394>
    3914:	00030b04 	andeq	r0, r3, r4, lsl #22
    3918:	f0120c00 			; <UNDEFINED> instruction: 0xf0120c00
    391c:	03000005 	movweq	r0, #5
    3920:	019004ab 	orrseq	r0, r0, fp, lsr #9
    3924:	110e0000 	mrsne	r0, (UNDEF: 14)
    3928:	03005253 	movweq	r5, #595	; 0x253
    392c:	030b04ac 	movweq	r0, #46252	; 0xb4ac
    3930:	12100000 	andsne	r0, r0, #0
    3934:	000005fa 	strdeq	r0, [r0], -sl
    3938:	9004ad03 	andls	sl, r4, r3, lsl #26
    393c:	12000001 	andne	r0, r0, #1
    3940:	52474511 	subpl	r4, r7, #71303168	; 0x4400000
    3944:	04ae0300 	strteq	r0, [lr], #768	; 0x300
    3948:	0000030b 	andeq	r0, r0, fp, lsl #6
    394c:	06041214 			; <UNDEFINED> instruction: 0x06041214
    3950:	af030000 	svcge	0x00030000
    3954:	00019004 	andeq	r9, r1, r4
    3958:	3e121600 	cfmsub32cc	mvax0, mvfx1, mvfx2, mvfx0
    395c:	0300000a 	movweq	r0, #10
    3960:	030b04b0 	movweq	r0, #46256	; 0xb4b0
    3964:	12180000 	andsne	r0, r8, #0
    3968:	00000ca3 	andeq	r0, r0, r3, lsr #25
    396c:	9004b103 	andls	fp, r4, r3, lsl #2
    3970:	1a000001 	bne	397c <__RW_SIZE__+0x33f8>
    3974:	000a4412 	andeq	r4, sl, r2, lsl r4
    3978:	04b20300 	ldrteq	r0, [r2], #768	; 0x300
    397c:	0000030b 	andeq	r0, r0, fp, lsl #6
    3980:	0d4e121c 	sfmeq	f1, 2, [lr, #-112]	; 0xffffff90
    3984:	b3030000 	movwlt	r0, #12288	; 0x3000
    3988:	00019004 	andeq	r9, r1, r4
    398c:	15121e00 	ldrne	r1, [r2, #-3584]	; 0xfffff200
    3990:	0300000b 	movweq	r0, #11
    3994:	030b04b4 	movweq	r0, #46260	; 0xb4b4
    3998:	12200000 	eorne	r0, r0, #0
    399c:	00000de3 	andeq	r0, r0, r3, ror #27
    39a0:	9004b503 	andls	fp, r4, r3, lsl #10
    39a4:	22000001 	andcs	r0, r0, #1
    39a8:	544e4311 	strbpl	r4, [lr], #-785	; 0xfffffcef
    39ac:	04b60300 	ldrteq	r0, [r6], #768	; 0x300
    39b0:	0000030b 	andeq	r0, r0, fp, lsl #6
    39b4:	0cc61224 	sfmeq	f1, 2, [r6], {36}	; 0x24
    39b8:	b7030000 	strlt	r0, [r3, -r0]
    39bc:	00019004 	andeq	r9, r1, r4
    39c0:	50112600 	andspl	r2, r1, r0, lsl #12
    39c4:	03004353 	movweq	r4, #851	; 0x353
    39c8:	030b04b8 	movweq	r0, #46264	; 0xb4b8
    39cc:	12280000 	eorne	r0, r8, #0
    39d0:	00000a92 	muleq	r0, r2, sl
    39d4:	9004b903 	andls	fp, r4, r3, lsl #18
    39d8:	2a000001 	bcs	39e4 <__RW_SIZE__+0x3460>
    39dc:	52524111 	subspl	r4, r2, #1073741828	; 0x40000004
    39e0:	04ba0300 	ldrteq	r0, [sl], #768	; 0x300
    39e4:	0000030b 	andeq	r0, r0, fp, lsl #6
    39e8:	0a9d122c 	beq	fe7482a0 <MSP_BASE+0xde7432a0>
    39ec:	bb030000 	bllt	c39f4 <__RW_SIZE__+0xc3470>
    39f0:	00019004 	andeq	r9, r1, r4
    39f4:	52112e00 	andspl	r2, r1, #0, 28
    39f8:	03005243 	movweq	r5, #579	; 0x243
    39fc:	030b04bc 	movweq	r0, #46268	; 0xb4bc
    3a00:	12300000 	eorsne	r0, r0, #0
    3a04:	00000aa8 	andeq	r0, r0, r8, lsr #21
    3a08:	9004bd03 	andls	fp, r4, r3, lsl #26
    3a0c:	32000001 	andcc	r0, r0, #1
    3a10:	000ded12 	andeq	lr, sp, r2, lsl sp
    3a14:	04be0300 	ldrteq	r0, [lr], #768	; 0x300
    3a18:	0000030b 	andeq	r0, r0, fp, lsl #6
    3a1c:	0ab31234 	beq	fecc82f4 <MSP_BASE+0xdecc32f4>
    3a20:	bf030000 	svclt	0x00030000
    3a24:	00019004 	andeq	r9, r1, r4
    3a28:	01123600 	tsteq	r2, r0, lsl #12
    3a2c:	0300000a 	movweq	r0, #10
    3a30:	030b04c0 	movweq	r0, #46272	; 0xb4c0
    3a34:	12380000 	eorsne	r0, r8, #0
    3a38:	00000abe 			; <UNDEFINED> instruction: 0x00000abe
    3a3c:	9004c103 	andls	ip, r4, r3, lsl #2
    3a40:	3a000001 	bcc	3a4c <__RW_SIZE__+0x34c8>
    3a44:	000df212 	andeq	pc, sp, r2, lsl r2	; <UNPREDICTABLE>
    3a48:	04c20300 	strbeq	r0, [r2], #768	; 0x300
    3a4c:	0000030b 	andeq	r0, r0, fp, lsl #6
    3a50:	0ac9123c 	beq	ff248348 <MSP_BASE+0xdf243348>
    3a54:	c3030000 	movwgt	r0, #12288	; 0x3000
    3a58:	00019004 	andeq	r9, r1, r4
    3a5c:	f7123e00 			; <UNDEFINED> instruction: 0xf7123e00
    3a60:	0300000d 	movweq	r0, #13
    3a64:	030b04c4 	movweq	r0, #46276	; 0xb4c4
    3a68:	12400000 	subne	r0, r0, #0
    3a6c:	00000dfc 	strdeq	r0, [r0], -ip
    3a70:	9004c503 	andls	ip, r4, r3, lsl #10
    3a74:	42000001 	andmi	r0, r0, #1
    3a78:	000b9a12 	andeq	r9, fp, r2, lsl sl
    3a7c:	04c60300 	strbeq	r0, [r6], #768	; 0x300
    3a80:	0000030b 	andeq	r0, r0, fp, lsl #6
    3a84:	0ae11244 	beq	ff84839c <MSP_BASE+0xdf84339c>
    3a88:	c7030000 	strgt	r0, [r3, -r0]
    3a8c:	00019004 	andeq	r9, r1, r4
    3a90:	44114600 	ldrmi	r4, [r1], #-1536	; 0xfffffa00
    3a94:	03005243 	movweq	r5, #579	; 0x243
    3a98:	030b04c8 	movweq	r0, #46280	; 0xb4c8
    3a9c:	12480000 	subne	r0, r8, #0
    3aa0:	00000aec 	andeq	r0, r0, ip, ror #21
    3aa4:	9004c903 	andls	ip, r4, r3, lsl #18
    3aa8:	4a000001 	bmi	3ab4 <__RW_SIZE__+0x3530>
    3aac:	000db112 	andeq	fp, sp, r2, lsl r1
    3ab0:	04ca0300 	strbeq	r0, [sl], #768	; 0x300
    3ab4:	0000030b 	andeq	r0, r0, fp, lsl #6
    3ab8:	0af7124c 	beq	ffdc83f0 <MSP_BASE+0xdfdc33f0>
    3abc:	cb030000 	blgt	c3ac4 <__RW_SIZE__+0xc3540>
    3ac0:	00019004 	andeq	r9, r1, r4
    3ac4:	04004e00 	streq	r4, [r0], #-3584	; 0xfffff200
    3ac8:	000009ca 	andeq	r0, r0, sl, asr #19
    3acc:	1804cc03 	stmdane	r4, {r0, r1, sl, fp, lr, pc}
    3ad0:	05000004 	streq	r0, [r0, #-4]
    3ad4:	00740801 	rsbseq	r0, r4, r1, lsl #16
    3ad8:	fe130000 	cdp2	0, 1, cr0, cr3, cr0, {0}
    3adc:	02000004 	andeq	r0, r0, #4
    3ae0:	56030613 			; <UNDEFINED> instruction: 0x56030613
    3ae4:	14000006 	strne	r0, [r0], #-6
    3ae8:	000003e5 	andeq	r0, r0, r5, ror #7
    3aec:	64061302 	strvs	r1, [r6], #-770	; 0xfffffcfe
    3af0:	00000001 	andeq	r0, r0, r1
    3af4:	00046c13 	andeq	r6, r4, r3, lsl ip
    3af8:	05de0200 	ldrbeq	r0, [lr, #512]	; 0x200
    3afc:	00067003 	andeq	r7, r6, r3
    3b00:	03e51400 	mvneq	r1, #0, 8
    3b04:	de020000 	cdple	0, 0, cr0, cr2, cr0, {0}
    3b08:	00016405 	andeq	r6, r1, r5, lsl #8
    3b0c:	c9130000 	ldmdbgt	r3, {}	; <UNPREDICTABLE>
    3b10:	02000004 	andeq	r0, r0, #4
    3b14:	8a0305eb 	bhi	c52c8 <__RW_SIZE__+0xc4d44>
    3b18:	14000006 	strne	r0, [r0], #-6
    3b1c:	000003e5 	andeq	r0, r0, r5, ror #7
    3b20:	6405eb02 	strvs	lr, [r5], #-2818	; 0xfffff4fe
    3b24:	00000001 	andeq	r0, r0, r1
    3b28:	000fda15 	andeq	sp, pc, r5, lsl sl	; <UNPREDICTABLE>
    3b2c:	e8110100 	ldmda	r1, {r8}
    3b30:	3e08003e 	mcrcc	0, 0, r0, cr8, cr14, {1}
    3b34:	01000000 	mrseq	r0, (UNDEF: 0)
    3b38:	0fef169c 	svceq	0x00ef169c
    3b3c:	1d010000 	stcne	0, cr0, [r1, #-0]
    3b40:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3b44:	08003f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp, ip, sp}
    3b48:	00000026 	andeq	r0, r0, r6, lsr #32
    3b4c:	06cf9c01 	strbeq	r9, [pc], r1, lsl #24
    3b50:	79170000 	ldmdbvc	r7, {}	; <UNPREDICTABLE>
    3b54:	0100000f 	tsteq	r0, pc
    3b58:	0001d01f 	andeq	sp, r1, pc, lsl r0
    3b5c:	00730e00 	rsbseq	r0, r3, r0, lsl #28
    3b60:	1affff0a 	bne	3790 <__RW_SIZE__+0x320c>
    3b64:	231eec09 	tstcs	lr, #2304	; 0x900
    3b68:	9f4fffec 	svcls	0x004fffec
    3b6c:	0fb61800 	svceq	0x00b61800
    3b70:	41010000 	mrsmi	r0, (UNDEF: 1)
    3b74:	08003f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, ip, sp}
    3b78:	000000e4 	andeq	r0, r0, r4, ror #1
    3b7c:	070c9c01 	streq	r9, [ip, -r1, lsl #24]
    3b80:	79190000 	ldmdbvc	r9, {}	; <UNPREDICTABLE>
    3b84:	0100000f 	tsteq	r0, pc
    3b88:	0001c941 	andeq	ip, r1, r1, asr #18
    3b8c:	000bba00 	andeq	fp, fp, r0, lsl #20
    3b90:	00691a00 	rsbeq	r1, r9, r0, lsl #20
    3b94:	01c94301 	biceq	r4, r9, r1, lsl #6
    3b98:	0bdb0000 	bleq	ff6c3ba0 <MSP_BASE+0xdf6beba0>
    3b9c:	741b0000 	ldrvc	r0, [fp], #-0
    3ba0:	d0440100 	suble	r0, r4, r0, lsl #2
    3ba4:	01000001 	tsteq	r0, r1
    3ba8:	5b180050 	blpl	603cf0 <__RW_SIZE__+0x60376c>
    3bac:	0100000f 	tsteq	r0, pc
    3bb0:	00403462 	subeq	r3, r0, r2, ror #8
    3bb4:	00006208 	andeq	r6, r0, r8, lsl #4
    3bb8:	319c0100 	orrscc	r0, ip, r0, lsl #2
    3bbc:	19000007 	stmdbne	r0, {r0, r1, r2}
    3bc0:	00000f79 	andeq	r0, r0, r9, ror pc
    3bc4:	01c96201 	biceq	r6, r9, r1, lsl #4
    3bc8:	0bfa0000 	bleq	ffe83bd0 <MSP_BASE+0xdfe7ebd0>
    3bcc:	1c000000 	stcne	0, cr0, [r0], {-0}
    3bd0:	00000fa3 	andeq	r0, r0, r3, lsr #31
    3bd4:	01c97001 	biceq	r7, r9, r1
    3bd8:	40980000 	addsmi	r0, r8, r0
    3bdc:	00200800 	eoreq	r0, r0, r0, lsl #16
    3be0:	9c010000 	stcls	0, cr0, [r1], {-0}
    3be4:	000f7e15 	andeq	r7, pc, r5, lsl lr	; <UNPREDICTABLE>
    3be8:	b87d0100 	ldmdalt	sp!, {r8}^
    3bec:	22080040 	andcs	r0, r8, #64	; 0x40
    3bf0:	01000000 	mrseq	r0, (UNDEF: 0)
    3bf4:	0f67189c 	svceq	0x0067189c
    3bf8:	83010000 	movwhi	r0, #4096	; 0x1000
    3bfc:	080040dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, lr}
    3c00:	00000018 	andeq	r0, r0, r8, lsl r0
    3c04:	077c9c01 	ldrbeq	r9, [ip, -r1, lsl #24]!
    3c08:	79190000 	ldmdbvc	r9, {}	; <UNPREDICTABLE>
    3c0c:	0100000f 	tsteq	r0, pc
    3c10:	0001c983 	andeq	ip, r1, r3, lsl #19
    3c14:	000c1b00 	andeq	r1, ip, r0, lsl #22
    3c18:	90150000 	andsls	r0, r5, r0
    3c1c:	0100000f 	tsteq	r0, pc
    3c20:	0040f488 	subeq	pc, r0, r8, lsl #9
    3c24:	00004c08 	andeq	r4, r0, r8, lsl #24
    3c28:	1d9c0100 	ldfnes	f0, [ip]
    3c2c:	00000fc1 	andeq	r0, r0, r1, asr #31
    3c30:	41409101 	cmpmi	r0, r1, lsl #2
    3c34:	00580800 	subseq	r0, r8, r0, lsl #16
    3c38:	9c010000 	stcls	0, cr0, [r1], {-0}
    3c3c:	000007b2 			; <UNDEFINED> instruction: 0x000007b2
    3c40:	000f9e19 	andeq	r9, pc, r9, lsl lr	; <UNPREDICTABLE>
    3c44:	9b910100 	blls	fe44404c <MSP_BASE+0xde43f04c>
    3c48:	3c000001 	stccc	0, cr0, [r0], {1}
    3c4c:	0000000c 	andeq	r0, r0, ip
    3c50:	00100315 	andseq	r0, r0, r5, lsl r3
    3c54:	989b0100 	ldmls	fp, {r8}
    3c58:	22080041 	andcs	r0, r8, #65	; 0x41
    3c5c:	01000000 	mrseq	r0, (UNDEF: 0)
    3c60:	089e189c 	ldmeq	lr, {r2, r3, r4, r7, fp, ip}
    3c64:	a1010000 	mrsge	r0, (UNDEF: 1)
    3c68:	080041bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, lr}
    3c6c:	000000a8 	andeq	r0, r0, r8, lsr #1
    3c70:	08439c01 	stmdaeq	r3, {r0, sl, fp, ip, pc}^
    3c74:	651e0000 	ldrvs	r0, [lr, #-0]
    3c78:	a101006e 	tstge	r1, lr, rrx
    3c7c:	000001c9 	andeq	r0, r0, r9, asr #3
    3c80:	00000c5d 	andeq	r0, r0, sp, asr ip
    3c84:	000f7919 	andeq	r7, pc, r9, lsl r9	; <UNPREDICTABLE>
    3c88:	c9a10100 	stmibgt	r1!, {r8}
    3c8c:	7e000001 	cdpvc	0, 0, cr0, cr0, cr1, {0}
    3c90:	1f00000c 	svcne	0x0000000c
    3c94:	00000670 	andeq	r0, r0, r0, ror r6
    3c98:	080041c0 	stmdaeq	r0, {r6, r7, r8, lr}
    3c9c:	00000358 	andeq	r0, r0, r8, asr r3
    3ca0:	0812b501 	ldmdaeq	r2, {r0, r8, sl, ip, sp, pc}
    3ca4:	7d200000 	stcvc	0, cr0, [r0, #-0]
    3ca8:	b8000006 	stmdalt	r0, {r1, r2}
    3cac:	0000000c 	andeq	r0, r0, ip
    3cb0:	00063c1f 	andeq	r3, r6, pc, lsl ip
    3cb4:	00422600 	subeq	r2, r2, r0, lsl #12
    3cb8:	00037008 	andeq	r7, r3, r8
    3cbc:	2cad0100 	stfcss	f0, [sp]
    3cc0:	21000008 	tstcs	r0, r8
    3cc4:	00000649 	andeq	r0, r0, r9, asr #12
    3cc8:	5622001e 			; <UNDEFINED> instruction: 0x5622001e
    3ccc:	54000006 	strpl	r0, [r0], #-6
    3cd0:	02080042 	andeq	r0, r8, #66	; 0x42
    3cd4:	01000000 	mrseq	r0, (UNDEF: 0)
    3cd8:	066321af 	strbteq	r2, [r3], -pc, lsr #3
    3cdc:	001e0000 	andseq	r0, lr, r0
    3ce0:	00562300 	subseq	r2, r6, r0, lsl #6
    3ce4:	ce020000 	cdpgt	0, 0, cr0, cr2, cr0, {0}
    3ce8:	00084f06 	andeq	r4, r8, r6, lsl #30
    3cec:	01c90e00 	biceq	r0, r9, r0, lsl #28
    3cf0:	ef000000 	svc	0x00000000
    3cf4:	04000007 	streq	r0, [r0], #-7
    3cf8:	000f0900 	andeq	r0, pc, r0, lsl #18
    3cfc:	b2010400 	andlt	r0, r1, #0, 8
    3d00:	01000000 	mrseq	r0, (UNDEF: 0)
    3d04:	00001047 	andeq	r1, r0, r7, asr #32
    3d08:	00000172 	andeq	r0, r0, r2, ror r1
    3d0c:	08004268 	stmdaeq	r0, {r3, r5, r6, r9, lr}
    3d10:	0000021c 	andeq	r0, r0, ip, lsl r2
    3d14:	00000bb1 			; <UNDEFINED> instruction: 0x00000bb1
    3d18:	0003e502 	andeq	lr, r3, r2, lsl #10
    3d1c:	a8030100 	stmdage	r3, {r8}
    3d20:	00000164 	andeq	r0, r0, r4, ror #2
    3d24:	00061f03 	andeq	r1, r6, r3, lsl #30
    3d28:	0a037200 	beq	e0530 <__RW_SIZE__+0xdffac>
    3d2c:	74000004 	strvc	r0, [r0], #-4
    3d30:	00055703 	andeq	r5, r5, r3, lsl #14
    3d34:	bd037500 	cfstr32lt	mvfx7, [r3, #-0]
    3d38:	76000006 	strvc	r0, [r0], -r6
    3d3c:	0006e203 	andeq	lr, r6, r3, lsl #4
    3d40:	ab037b00 	blge	e2948 <__RW_SIZE__+0xe23c4>
    3d44:	7c000006 	stcvc	0, cr0, [r0], {6}
    3d48:	0003ef03 	andeq	lr, r3, r3, lsl #30
    3d4c:	94037e00 	strls	r7, [r3], #-3584	; 0xfffff200
    3d50:	7f000006 	svcvc	0x00000006
    3d54:	00054d03 	andeq	r4, r5, r3, lsl #26
    3d58:	7b030000 	blvc	c3d60 <__RW_SIZE__+0xc37dc>
    3d5c:	01000005 	tsteq	r0, r5
    3d60:	00076303 	andeq	r6, r7, r3, lsl #6
    3d64:	d3030200 	movwle	r0, #12800	; 0x3200
    3d68:	03000005 	movweq	r0, #5
    3d6c:	0003b103 	andeq	fp, r3, r3, lsl #2
    3d70:	01030400 	tsteq	r3, r0, lsl #8
    3d74:	05000004 	streq	r0, [r0, #-4]
    3d78:	0003bc03 	andeq	fp, r3, r3, lsl #24
    3d7c:	50030600 	andpl	r0, r3, r0, lsl #12
    3d80:	07000006 	streq	r0, [r0, -r6]
    3d84:	0004be03 	andeq	fp, r4, r3, lsl #28
    3d88:	1a030800 	bne	c5d90 <__RW_SIZE__+0xc580c>
    3d8c:	09000007 	stmdbeq	r0, {r0, r1, r2}
    3d90:	00057003 	andeq	r7, r5, r3
    3d94:	1d030a00 	vstrne	s0, [r3, #-0]
    3d98:	0b000005 	bleq	3db4 <__RW_SIZE__+0x3830>
    3d9c:	00039603 	andeq	r9, r3, r3, lsl #12
    3da0:	8f030c00 	svchi	0x00030c00
    3da4:	0d000005 	stceq	0, cr0, [r0, #-20]	; 0xffffffec
    3da8:	00045903 	andeq	r5, r4, r3, lsl #18
    3dac:	02030e00 	andeq	r0, r3, #0, 28
    3db0:	0f000007 	svceq	0x00000007
    3db4:	0004e603 	andeq	lr, r4, r3, lsl #12
    3db8:	66031000 	strvs	r1, [r3], -r0
    3dbc:	11000003 	tstne	r0, r3
    3dc0:	00074b03 	andeq	r4, r7, r3, lsl #22
    3dc4:	94031200 	strls	r1, [r3], #-512	; 0xfffffe00
    3dc8:	13000004 	movwne	r0, #4
    3dcc:	00031403 	andeq	r1, r3, r3, lsl #8
    3dd0:	81031400 	tsthi	r3, r0, lsl #8
    3dd4:	15000004 	strne	r0, [r0, #-4]
    3dd8:	00035803 	andeq	r5, r3, r3, lsl #16
    3ddc:	d5031600 	strle	r1, [r3, #-1536]	; 0xfffffa00
    3de0:	17000006 	strne	r0, [r0, -r6]
    3de4:	00043803 	andeq	r3, r4, r3, lsl #16
    3de8:	b9031800 	stmdblt	r3, {fp, ip}
    3dec:	19000005 	stmdbne	r0, {r0, r2}
    3df0:	00067503 	andeq	r7, r6, r3, lsl #10
    3df4:	33031a00 	movwcc	r1, #14848	; 0x3a00
    3df8:	1b000006 	blne	3e18 <__RW_SIZE__+0x3894>
    3dfc:	0006a103 	andeq	sl, r6, r3, lsl #2
    3e00:	13031c00 	movwne	r1, #15360	; 0x3c00
    3e04:	1d000005 	stcne	0, cr0, [r0, #-20]	; 0xffffffec
    3e08:	00038c03 	andeq	r8, r3, r3, lsl #24
    3e0c:	a2031e00 	andge	r1, r3, #0, 28
    3e10:	1f000005 	svcne	0x00000005
    3e14:	00068703 	andeq	r8, r6, r3, lsl #14
    3e18:	d9032000 	stmdble	r3, {sp}
    3e1c:	21000004 	tstcs	r0, r4
    3e20:	00037903 	andeq	r7, r3, r3, lsl #18
    3e24:	4f032200 	svcmi	0x00032200
    3e28:	23000004 	movwcs	r0, #4
    3e2c:	0006f303 	andeq	pc, r6, r3, lsl #6
    3e30:	0e032400 	cfcpyseq	mvf2, mvf3
    3e34:	25000006 	strcs	r0, [r0, #-6]
    3e38:	0004b203 	andeq	fp, r4, r3, lsl #4
    3e3c:	57032600 	strpl	r2, [r3, -r0, lsl #12]
    3e40:	27000007 	strcs	r0, [r0, -r7]
    3e44:	0003db03 	andeq	sp, r3, r3, lsl #22
    3e48:	6f032800 	svcvs	0x00032800
    3e4c:	29000007 	stmdbcs	r0, {r0, r1, r2}
    3e50:	00053e03 	andeq	r3, r5, r3, lsl #28
    3e54:	04002a00 	streq	r2, [r0], #-2560	; 0xfffff600
    3e58:	000004a8 	andeq	r0, r0, r8, lsr #9
    3e5c:	2501d903 	strcs	sp, [r1, #-2307]	; 0xfffff6fd
    3e60:	05000000 	streq	r0, [r0, #-0]
    3e64:	006d0601 	rsbeq	r0, sp, r1, lsl #12
    3e68:	7a060000 	bvc	183e70 <__RW_SIZE__+0x1838ec>
    3e6c:	04000002 	streq	r0, [r0], #-2
    3e70:	0001822a 	andeq	r8, r1, sl, lsr #4
    3e74:	08010500 	stmdaeq	r1, {r8, sl}
    3e78:	0000006b 	andeq	r0, r0, fp, rrx
    3e7c:	5c050205 	sfmpl	f0, 4, [r5], {5}
    3e80:	06000001 	streq	r0, [r0], -r1
    3e84:	000002d7 	ldrdeq	r0, [r0], -r7
    3e88:	019b3604 	orrseq	r3, fp, r4, lsl #12
    3e8c:	02050000 	andeq	r0, r5, #0
    3e90:	00004307 	andeq	r4, r0, r7, lsl #6
    3e94:	05040500 	streq	r0, [r4, #-1280]	; 0xfffffb00
    3e98:	00000005 	andeq	r0, r0, r5
    3e9c:	0001bb06 	andeq	fp, r1, r6, lsl #22
    3ea0:	b4500400 	ldrblt	r0, [r0], #-1024	; 0xfffffc00
    3ea4:	05000001 	streq	r0, [r0, #-1]
    3ea8:	00a00704 	adceq	r0, r0, r4, lsl #14
    3eac:	08050000 	stmdaeq	r5, {}	; <UNPREDICTABLE>
    3eb0:	00000005 	andeq	r0, r0, r5
    3eb4:	07080500 	streq	r0, [r8, -r0, lsl #10]
    3eb8:	0000009b 	muleq	r0, fp, r0
    3ebc:	69050407 	stmdbvs	r5, {r0, r1, r2, sl}
    3ec0:	0500746e 	streq	r7, [r0, #-1134]	; 0xfffffb92
    3ec4:	00a50704 	adceq	r0, r5, r4, lsl #14
    3ec8:	04080000 	streq	r0, [r8], #-0
    3ecc:	8584020e 	strhi	r0, [r4, #526]	; 0x20e
    3ed0:	09000002 	stmdbeq	r0, {r1}
    3ed4:	0000042d 	andeq	r0, r0, sp, lsr #8
    3ed8:	029c8602 	addseq	r8, ip, #2097152	; 0x200000
    3edc:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    3ee0:	000005dc 	ldrdeq	r0, [r0], -ip
    3ee4:	02a18702 	adceq	r8, r1, #524288	; 0x80000
    3ee8:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    3eec:	000006ee 	andeq	r0, r0, lr, ror #13
    3ef0:	02b18802 	adcseq	r8, r1, #131072	; 0x20000
    3ef4:	09800000 	stmibeq	r0, {}	; <UNPREDICTABLE>
    3ef8:	00000446 	andeq	r0, r0, r6, asr #8
    3efc:	02a18902 	adceq	r8, r1, #32768	; 0x8000
    3f00:	0aa00000 	beq	fe803f08 <MSP_BASE+0xde7fef08>
    3f04:	00000746 	andeq	r0, r0, r6, asr #14
    3f08:	02b68a02 	adcseq	r8, r6, #8192	; 0x2000
    3f0c:	01000000 	mrseq	r0, (UNDEF: 0)
    3f10:	0005e60a 	andeq	lr, r5, sl, lsl #12
    3f14:	a18b0200 	orrge	r0, fp, r0, lsl #4
    3f18:	20000002 	andcs	r0, r0, r2
    3f1c:	058a0a01 	streq	r0, [sl, #2561]	; 0xa01
    3f20:	8c020000 	stchi	0, cr0, [r2], {-0}
    3f24:	000002bb 			; <UNDEFINED> instruction: 0x000002bb
    3f28:	f00a0180 			; <UNDEFINED> instruction: 0xf00a0180
    3f2c:	02000005 	andeq	r0, r0, #5
    3f30:	0002a18d 	andeq	sl, r2, sp, lsl #3
    3f34:	0a01a000 	beq	6bf3c <__RW_SIZE__+0x6b9b8>
    3f38:	000006fd 	strdeq	r0, [r0], -sp
    3f3c:	02c08e02 	sbceq	r8, r0, #2, 28
    3f40:	02000000 	andeq	r0, r0, #0
    3f44:	0005fa0a 	andeq	pc, r5, sl, lsl #20
    3f48:	c58f0200 	strgt	r0, [pc, #512]	; 4150 <__RW_SIZE__+0x3bcc>
    3f4c:	20000002 	andcs	r0, r0, r2
    3f50:	50490b02 	subpl	r0, r9, r2, lsl #22
    3f54:	e5900200 	ldr	r0, [r0, #512]	; 0x200
    3f58:	00000002 	andeq	r0, r0, r2
    3f5c:	06040a03 	streq	r0, [r4], -r3, lsl #20
    3f60:	91020000 	mrsls	r0, (UNDEF: 2)
    3f64:	000002ea 	andeq	r0, r0, sl, ror #5
    3f68:	c60a03f0 			; <UNDEFINED> instruction: 0xc60a03f0
    3f6c:	02000005 	andeq	r0, r0, #5
    3f70:	0002fb92 	muleq	r2, r2, fp
    3f74:	000e0000 	andeq	r0, lr, r0
    3f78:	0001a90c 	andeq	sl, r1, ip, lsl #18
    3f7c:	00029500 	andeq	r9, r2, r0, lsl #10
    3f80:	02950d00 	addseq	r0, r5, #0, 26
    3f84:	00070000 	andeq	r0, r7, r0
    3f88:	48070405 	stmdami	r7, {r0, r2, sl}
    3f8c:	0e000001 	cdpeq	0, 0, cr0, cr0, cr1, {0}
    3f90:	00000285 	andeq	r0, r0, r5, lsl #5
    3f94:	0001a90c 	andeq	sl, r1, ip, lsl #18
    3f98:	0002b100 	andeq	fp, r2, r0, lsl #2
    3f9c:	02950d00 	addseq	r0, r5, #0, 26
    3fa0:	00170000 	andseq	r0, r7, r0
    3fa4:	0002850e 	andeq	r8, r2, lr, lsl #10
    3fa8:	02850e00 	addeq	r0, r5, #0, 28
    3fac:	850e0000 	strhi	r0, [lr, #-0]
    3fb0:	0e000002 	cdpeq	0, 0, cr0, cr0, cr2, {0}
    3fb4:	00000285 	andeq	r0, r0, r5, lsl #5
    3fb8:	0001a90c 	andeq	sl, r1, ip, lsl #18
    3fbc:	0002d500 	andeq	sp, r2, r0, lsl #10
    3fc0:	02950d00 	addseq	r0, r5, #0, 26
    3fc4:	00370000 	eorseq	r0, r7, r0
    3fc8:	0001770c 	andeq	r7, r1, ip, lsl #14
    3fcc:	0002e500 	andeq	lr, r2, r0, lsl #10
    3fd0:	02950d00 	addseq	r0, r5, #0, 26
    3fd4:	00ef0000 	rsceq	r0, pc, r0
    3fd8:	0002d50e 	andeq	sp, r2, lr, lsl #10
    3fdc:	01a90c00 			; <UNDEFINED> instruction: 0x01a90c00
    3fe0:	02fb0000 	rscseq	r0, fp, #0
    3fe4:	950f0000 	strls	r0, [pc, #-0]	; 3fec <__RW_SIZE__+0x3a68>
    3fe8:	83000002 	movwhi	r0, #2
    3fec:	a90e0002 	stmdbge	lr, {r1}
    3ff0:	06000001 	streq	r0, [r0], -r1
    3ff4:	0000065b 	andeq	r0, r0, fp, asr r6
    3ff8:	01d79302 	bicseq	r9, r7, r2, lsl #6
    3ffc:	900e0000 	andls	r0, lr, r0
    4000:	10000001 	andne	r0, r0, r1
    4004:	03e9031c 	mvneq	r0, #28, 6	; 0x70000000
    4008:	00000375 	andeq	r0, r0, r5, ror r3
    400c:	4c524311 	mrrcmi	3, 1, r4, r2, cr1
    4010:	03eb0300 	mvneq	r0, #0, 6
    4014:	000002fb 	strdeq	r0, [r0], -fp
    4018:	52431100 	subpl	r1, r3, #0, 2
    401c:	ec030048 	stc	0, cr0, [r3], {72}	; 0x48
    4020:	0002fb03 	andeq	pc, r2, r3, lsl #22
    4024:	49110400 	ldmdbmi	r1, {sl}
    4028:	03005244 	movweq	r5, #580	; 0x244
    402c:	02fb03ed 	rscseq	r0, fp, #-1275068413	; 0xb4000003
    4030:	11080000 	mrsne	r0, (UNDEF: 8)
    4034:	0052444f 	subseq	r4, r2, pc, asr #8
    4038:	fb03ee03 	blx	ff84e <__RW_SIZE__+0xff2ca>
    403c:	0c000002 	stceq	0, cr0, [r0], {2}
    4040:	00078b12 	andeq	r8, r7, r2, lsl fp
    4044:	03ef0300 	mvneq	r0, #0, 6
    4048:	000002fb 	strdeq	r0, [r0], -fp
    404c:	52421110 	subpl	r1, r2, #16, 2
    4050:	f0030052 			; <UNDEFINED> instruction: 0xf0030052
    4054:	0002fb03 	andeq	pc, r2, r3, lsl #22
    4058:	3e121400 	cfmulscc	mvf1, mvf2, mvf0
    405c:	03000008 	movweq	r0, #8
    4060:	02fb03f1 	rscseq	r0, fp, #-1006632957	; 0xc4000003
    4064:	00180000 	andseq	r0, r8, r0
    4068:	00081b04 	andeq	r1, r8, r4, lsl #22
    406c:	03f20300 	mvnseq	r0, #0, 6
    4070:	00000310 	andeq	r0, r0, r0, lsl r3
    4074:	34032810 	strcc	r2, [r3], #-2064	; 0xfffff7f0
    4078:	00040c04 	andeq	r0, r4, r4, lsl #24
    407c:	52431100 	subpl	r1, r3, #0, 2
    4080:	04360300 	ldrteq	r0, [r6], #-768	; 0xfffffd00
    4084:	000002fb 	strdeq	r0, [r0], -fp
    4088:	00131200 	andseq	r1, r3, r0, lsl #4
    408c:	37030000 	strcc	r0, [r3, -r0]
    4090:	0002fb04 	andeq	pc, r2, r4, lsl #22
    4094:	43110400 	tstmi	r1, #0, 8
    4098:	03005249 	movweq	r5, #585	; 0x249
    409c:	02fb0438 	rscseq	r0, fp, #56, 8	; 0x38000000
    40a0:	12080000 	andne	r0, r8, #0
    40a4:	00000092 	muleq	r0, r2, r0
    40a8:	fb043903 	blx	1124be <__RW_SIZE__+0x111f3a>
    40ac:	0c000002 	stceq	0, cr0, [r0], {2}
    40b0:	00003a12 	andeq	r3, r0, r2, lsl sl
    40b4:	043a0300 	ldrteq	r0, [sl], #-768	; 0xfffffd00
    40b8:	000002fb 	strdeq	r0, [r0], -fp
    40bc:	00261210 	eoreq	r1, r6, r0, lsl r2
    40c0:	3b030000 	blcc	c40c8 <__RW_SIZE__+0xc3b44>
    40c4:	0002fb04 	andeq	pc, r2, r4, lsl #22
    40c8:	82121400 	andshi	r1, r2, #0, 8
    40cc:	03000000 	movweq	r0, #0
    40d0:	02fb043c 	rscseq	r0, fp, #60, 8	; 0x3c000000
    40d4:	12180000 	andsne	r0, r8, #0
    40d8:	0000008a 	andeq	r0, r0, sl, lsl #1
    40dc:	fb043d03 	blx	1134f2 <__RW_SIZE__+0x112f6e>
    40e0:	1c000002 	stcne	0, cr0, [r0], {2}
    40e4:	00000e12 	andeq	r0, r0, r2, lsl lr
    40e8:	043e0300 	ldrteq	r0, [lr], #-768	; 0xfffffd00
    40ec:	000002fb 	strdeq	r0, [r0], -fp
    40f0:	53431120 	movtpl	r1, #12576	; 0x3120
    40f4:	3f030052 	svccc	0x00030052
    40f8:	0002fb04 	andeq	pc, r2, r4, lsl #22
    40fc:	04002400 	streq	r2, [r0], #-1024	; 0xfffffc00
    4100:	00000166 	andeq	r0, r0, r6, ror #2
    4104:	81044a03 	tsthi	r4, r3, lsl #20
    4108:	10000003 	andne	r0, r0, r3
    410c:	04d2031c 	ldrbeq	r0, [r2], #796	; 0x31c
    4110:	000004d6 	ldrdeq	r0, [r0], -r6
    4114:	00525311 	subseq	r5, r2, r1, lsl r3
    4118:	0b04d403 	bleq	13912c <__RW_SIZE__+0x138ba8>
    411c:	00000003 	andeq	r0, r0, r3
    4120:	0005dc12 	andeq	sp, r5, r2, lsl ip
    4124:	04d50300 	ldrbeq	r0, [r5], #768	; 0x300
    4128:	00000190 	muleq	r0, r0, r1
    412c:	52441102 	subpl	r1, r4, #-2147483648	; 0x80000000
    4130:	04d60300 	ldrbeq	r0, [r6], #768	; 0x300
    4134:	0000030b 	andeq	r0, r0, fp, lsl #6
    4138:	0c991204 	lfmeq	f1, 4, [r9], {4}
    413c:	d7030000 	strle	r0, [r3, -r0]
    4140:	00019004 	andeq	r9, r1, r4
    4144:	42110600 	andsmi	r0, r1, #0, 12
    4148:	03005252 	movweq	r5, #594	; 0x252
    414c:	030b04d8 	movweq	r0, #46296	; 0xb4d8
    4150:	12080000 	andne	r0, r8, #0
    4154:	000005e6 	andeq	r0, r0, r6, ror #11
    4158:	9004d903 	andls	sp, r4, r3, lsl #18
    415c:	0a000001 	beq	4168 <__RW_SIZE__+0x3be4>
    4160:	31524311 	cmpcc	r2, r1, lsl r3
    4164:	04da0300 	ldrbeq	r0, [sl], #768	; 0x300
    4168:	0000030b 	andeq	r0, r0, fp, lsl #6
    416c:	05f0120c 	ldrbeq	r1, [r0, #524]!	; 0x20c
    4170:	db030000 	blle	c4178 <__RW_SIZE__+0xc3bf4>
    4174:	00019004 	andeq	r9, r1, r4
    4178:	43110e00 	tstmi	r1, #0, 28
    417c:	03003252 	movweq	r3, #594	; 0x252
    4180:	030b04dc 	movweq	r0, #46300	; 0xb4dc
    4184:	12100000 	andsne	r0, r0, #0
    4188:	000005fa 	strdeq	r0, [r0], -sl
    418c:	9004dd03 	andls	sp, r4, r3, lsl #26
    4190:	12000001 	andne	r0, r0, #1
    4194:	33524311 	cmpcc	r2, #1140850688	; 0x44000000
    4198:	04de0300 	ldrbeq	r0, [lr], #768	; 0x300
    419c:	0000030b 	andeq	r0, r0, fp, lsl #6
    41a0:	06041214 			; <UNDEFINED> instruction: 0x06041214
    41a4:	df030000 	svcle	0x00030000
    41a8:	00019004 	andeq	r9, r1, r4
    41ac:	5a121600 	bpl	4899b4 <__RW_SIZE__+0x489430>
    41b0:	0300000a 	movweq	r0, #10
    41b4:	030b04e0 	movweq	r0, #46304	; 0xb4e0
    41b8:	12180000 	andsne	r0, r8, #0
    41bc:	00000ca3 	andeq	r0, r0, r3, lsr #25
    41c0:	9004e103 	andls	lr, r4, r3, lsl #2
    41c4:	1a000001 	bne	41d0 <__RW_SIZE__+0x3c4c>
    41c8:	0bd80400 	bleq	ff6051d0 <MSP_BASE+0xdf6001d0>
    41cc:	e2030000 	and	r0, r3, #0
    41d0:	00041804 	andeq	r1, r4, r4, lsl #16
    41d4:	14041300 	strne	r1, [r4], #-768	; 0xfffffd00
    41d8:	0004ea04 	andeq	lr, r4, r4, lsl #20
    41dc:	08010500 	stmdaeq	r1, {r8, sl}
    41e0:	00000074 	andeq	r0, r0, r4, ror r0
    41e4:	04f70414 	ldrbteq	r0, [r7], #1044	; 0x414
    41e8:	ea150000 	b	5441f0 <__RW_SIZE__+0x543c6c>
    41ec:	06000004 	streq	r0, [r0], -r4
    41f0:	000010b7 	strheq	r1, [r0], -r7
    41f4:	05072805 	streq	r2, [r7, #-2053]	; 0xfffff7fb
    41f8:	3d160000 	ldccc	0, cr0, [r6, #-0]
    41fc:	04000010 	streq	r0, [r0], #-16
    4200:	051e0007 	ldreq	r0, [lr, #-7]
    4204:	c6170000 	ldrgt	r0, [r7], -r0
    4208:	e2000010 	and	r0, r0, #16
    420c:	00000004 	andeq	r0, r0, r4
    4210:	103f0600 	eorsne	r0, pc, r0, lsl #12
    4214:	62050000 	andvs	r0, r5, #0
    4218:	000004fc 	strdeq	r0, [r0], -ip
    421c:	00109418 	andseq	r9, r0, r8, lsl r4
    4220:	012b0100 	teqeq	fp, r0, lsl #2
    4224:	00000540 	andeq	r0, r0, r0, asr #10
    4228:	00747019 	rsbseq	r7, r4, r9, lsl r0
    422c:	04e42b01 	strbteq	r2, [r4], #2817	; 0xb01
    4230:	1a000000 	bne	4238 <__RW_SIZE__+0x3cb4>
    4234:	00001011 	andeq	r1, r0, r1, lsl r0
    4238:	04ea3e01 	strbteq	r3, [sl], #3585	; 0xe01
    423c:	1b010000 	blne	44244 <__RW_SIZE__+0x43cc0>
    4240:	000004fe 	strdeq	r0, [r0], -lr
    4244:	03061302 	movweq	r1, #25346	; 0x6302
    4248:	00000566 	andeq	r0, r0, r6, ror #10
    424c:	0003e51c 	andeq	lr, r3, ip, lsl r5
    4250:	06130200 	ldreq	r0, [r3], -r0, lsl #4
    4254:	00000164 	andeq	r0, r0, r4, ror #2
    4258:	046c1b00 	strbteq	r1, [ip], #-2816	; 0xfffff500
    425c:	de020000 	cdple	0, 0, cr0, cr2, cr0, {0}
    4260:	05800305 	streq	r0, [r0, #773]	; 0x305
    4264:	e51c0000 	ldr	r0, [ip, #-0]
    4268:	02000003 	andeq	r0, r0, #3
    426c:	016405de 	ldrdeq	r0, [r4, #-94]!	; 0xffffffa2
    4270:	1b000000 	blne	4278 <__RW_SIZE__+0x3cf4>
    4274:	000004c9 	andeq	r0, r0, r9, asr #9
    4278:	0305eb02 	movweq	lr, #23298	; 0x5b02
    427c:	0000059a 	muleq	r0, sl, r5
    4280:	0003e51c 	andeq	lr, r3, ip, lsl r5
    4284:	05eb0200 	strbeq	r0, [fp, #512]!	; 0x200
    4288:	00000164 	andeq	r0, r0, r4, ror #2
    428c:	08ce1d00 	stmiaeq	lr, {r8, sl, fp, ip}^
    4290:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    4294:	08004268 	stmdaeq	r0, {r3, r5, r6, r9, lr}
    4298:	000000b8 	strheq	r0, [r0], -r8
    429c:	05ec9c01 	strbeq	r9, [ip, #3073]!	; 0xc01
    42a0:	8f1e0000 	svchi	0x001e0000
    42a4:	01000010 	tsteq	r0, r0, lsl r0
    42a8:	0001c908 	andeq	ip, r1, r8, lsl #18
    42ac:	000ccc00 	andeq	ip, ip, r0, lsl #24
    42b0:	69641f00 	stmdbvs	r4!, {r8, r9, sl, fp, ip}^
    42b4:	0a010076 	beq	44494 <__RW_SIZE__+0x43f10>
    42b8:	000005ec 	andeq	r0, r0, ip, ror #11
    42bc:	00000ced 	andeq	r0, r0, sp, ror #25
    42c0:	0010ab20 	andseq	sl, r0, r0, lsr #22
    42c4:	d00b0100 	andle	r0, fp, r0, lsl #2
    42c8:	05000001 	streq	r0, [r0, #-1]
    42cc:	2000000d 	andcs	r0, r0, sp
    42d0:	000010a6 	andeq	r1, r0, r6, lsr #1
    42d4:	01d00c01 	bicseq	r0, r0, r1, lsl #24
    42d8:	0d400000 	stcleq	0, cr0, [r0, #-0]
    42dc:	05000000 	streq	r0, [r0, #-0]
    42e0:	104e0408 	subne	r0, lr, r8, lsl #8
    42e4:	70180000 	andsvc	r0, r8, r0
    42e8:	01000010 	tsteq	r0, r0, lsl r0
    42ec:	060b011f 			; <UNDEFINED> instruction: 0x060b011f
    42f0:	ac210000 	stcge	0, cr0, [r1], #-0
    42f4:	01000003 	tsteq	r0, r3
    42f8:	0004ea1f 	andeq	lr, r4, pc, lsl sl
    42fc:	f3220000 	vhadd.u32	d0, d2, d0
    4300:	20000005 	andcs	r0, r0, r5
    4304:	3a080043 	bcc	204418 <__RW_SIZE__+0x203e94>
    4308:	01000000 	mrseq	r0, (UNDEF: 0)
    430c:	0006269c 	muleq	r6, ip, r6
    4310:	05ff2300 	ldrbeq	r2, [pc, #768]!	; 4618 <__RW_SIZE__+0x4094>
    4314:	50010000 	andpl	r0, r1, r0
    4318:	05292200 	streq	r2, [r9, #-512]!	; 0xfffffe00
    431c:	435c0000 	cmpmi	ip, #0
    4320:	00420800 	subeq	r0, r2, r0, lsl #16
    4324:	9c010000 	stcls	0, cr0, [r1], {-0}
    4328:	0000065c 	andeq	r0, r0, ip, asr r6
    432c:	00053524 	andeq	r3, r5, r4, lsr #10
    4330:	000d6200 	andeq	r6, sp, r0, lsl #4
    4334:	05f32500 	ldrbeq	r2, [r3, #1280]!	; 0x500
    4338:	43620000 	cmnmi	r2, #0
    433c:	03980800 	orrseq	r0, r8, #0, 16
    4340:	2f010000 	svccs	0x00010000
    4344:	0005ff24 	andeq	pc, r5, r4, lsr #30
    4348:	000d9a00 	andeq	r9, sp, r0, lsl #20
    434c:	26000000 	strcs	r0, [r0], -r0
    4350:	00000928 	andeq	r0, r0, r8, lsr #18
    4354:	43a03301 	movmi	r3, #67108864	; 0x4000000
    4358:	00600800 	rsbeq	r0, r0, r0, lsl #16
    435c:	9c010000 	stcls	0, cr0, [r1], {-0}
    4360:	000006f2 	strdeq	r0, [r0], -r2
    4364:	746d6627 	strbtvc	r6, [sp], #-1575	; 0xfffff9d9
    4368:	e4330100 	ldrt	r0, [r3], #-256	; 0xffffff00
    436c:	02000004 	andeq	r0, r0, #4
    4370:	29287091 	stmdbcs	r8!, {r0, r4, r7, ip, sp, lr}
    4374:	01007061 	tsteq	r0, r1, rrx
    4378:	00051e35 	andeq	r1, r5, r5, lsr lr
    437c:	dc910300 	ldcle	3, cr0, [r1], {0}
    4380:	10b02a7d 	adcsne	r2, r0, sp, ror sl
    4384:	36010000 	strcc	r0, [r1], -r0
    4388:	000006f2 	strdeq	r0, [r0], -r2
    438c:	7de09103 	stfvcp	f1, [r0, #12]!
    4390:	0005292b 	andeq	r2, r5, fp, lsr #18
    4394:	0043b600 	subeq	fp, r3, r0, lsl #12
    4398:	0003b008 	andeq	fp, r3, r8
    439c:	d33a0100 	teqle	sl, #0, 2
    43a0:	24000006 	strcs	r0, [r0], #-6
    43a4:	00000535 	andeq	r0, r0, r5, lsr r5
    43a8:	00000db8 			; <UNDEFINED> instruction: 0x00000db8
    43ac:	0005f325 	andeq	pc, r5, r5, lsr #6
    43b0:	0043bc00 	subeq	fp, r3, r0, lsl #24
    43b4:	0003c808 	andeq	ip, r3, r8, lsl #16
    43b8:	242f0100 	strtcs	r0, [pc], #-256	; 43c0 <__RW_SIZE__+0x3e3c>
    43bc:	000005ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    43c0:	00000dfe 	strdeq	r0, [r0], -lr
    43c4:	b62c0000 	strtlt	r0, [ip], -r0
    43c8:	d7080043 	strle	r0, [r8, -r3, asr #32]
    43cc:	2d000007 	stccs	0, cr0, [r0, #-28]	; 0xffffffe4
    43d0:	91025201 	tstls	r2, r1, lsl #4
    43d4:	51012d54 	tstpl	r1, r4, asr sp
    43d8:	06509103 	ldrbeq	r9, [r0], -r3, lsl #2
    43dc:	0350012d 	cmpeq	r0, #1073741835	; 0x4000000b
    43e0:	007dc091 			; <UNDEFINED> instruction: 0x007dc091
    43e4:	04ea0c00 	strbteq	r0, [sl], #3072	; 0xc00
    43e8:	07020000 	streq	r0, [r2, -r0]
    43ec:	950d0000 	strls	r0, [sp, #-0]
    43f0:	ff000002 			; <UNDEFINED> instruction: 0xff000002
    43f4:	05402e00 	strbeq	r2, [r0, #-3584]	; 0xfffff200
    43f8:	44000000 	strmi	r0, [r0], #-0
    43fc:	00160800 	andseq	r0, r6, r0, lsl #16
    4400:	9c010000 	stcls	0, cr0, [r1], {-0}
    4404:	0010802f 	andseq	r8, r0, pc, lsr #32
    4408:	ea4b0100 	b	12c4810 <__RW_SIZE__+0x12c428c>
    440c:	18000004 	stmdane	r0, {r2}
    4410:	18080044 	stmdane	r8, {r2, r6}
    4414:	01000000 	mrseq	r0, (UNDEF: 0)
    4418:	0007449c 	muleq	r7, ip, r4
    441c:	78723000 	ldmdavc	r2!, {ip, sp}^
    4420:	ea4d0100 	b	1344828 <__RW_SIZE__+0x13442a4>
    4424:	31000004 	tstcc	r0, r4
    4428:	00000540 	andeq	r0, r0, r0, asr #10
    442c:	08004418 	stmdaeq	r0, {r3, r4, sl, lr}
    4430:	00000012 	andeq	r0, r0, r2, lsl r0
    4434:	26004f01 	strcs	r4, [r0], -r1, lsl #30
    4438:	00001023 	andeq	r1, r0, r3, lsr #32
    443c:	44305401 	ldrtmi	r5, [r0], #-1025	; 0xfffffbff
    4440:	00420800 	subeq	r0, r2, r0, lsl #16
    4444:	9c010000 	stcls	0, cr0, [r1], {-0}
    4448:	000007b5 			; <UNDEFINED> instruction: 0x000007b5
    444c:	006e6532 	rsbeq	r6, lr, r2, lsr r5
    4450:	01c95401 	biceq	r5, r9, r1, lsl #8
    4454:	0e1c0000 	cdpeq	0, 1, cr0, cr12, cr0, {0}
    4458:	802b0000 	eorhi	r0, fp, r0
    445c:	3c000005 	stccc	0, cr0, [r0], {5}
    4460:	e0080044 	and	r0, r8, r4, asr #32
    4464:	01000003 	tsteq	r0, r3
    4468:	00078460 	andeq	r8, r7, r0, ror #8
    446c:	058d2400 	streq	r2, [sp, #1024]	; 0x400
    4470:	0e560000 	cdpeq	0, 5, cr0, cr6, cr0, {0}
    4474:	2b000000 	blcs	447c <__RW_SIZE__+0x3ef8>
    4478:	0000054c 	andeq	r0, r0, ip, asr #10
    447c:	08004458 	stmdaeq	r0, {r3, r4, r6, sl, lr}
    4480:	00000400 	andeq	r0, r0, r0, lsl #8
    4484:	079e5901 	ldreq	r5, [lr, r1, lsl #18]
    4488:	59330000 	ldmdbpl	r3!, {}	; <UNPREDICTABLE>
    448c:	25000005 	strcs	r0, [r0, #-5]
    4490:	05663400 	strbeq	r3, [r6, #-1024]!	; 0xfffffc00
    4494:	446e0000 	strbtmi	r0, [lr], #-0
    4498:	00040800 	andeq	r0, r4, r0, lsl #16
    449c:	5a010000 	bpl	444a4 <__RW_SIZE__+0x43f20>
    44a0:	00057333 	andeq	r7, r5, r3, lsr r3
    44a4:	00002500 	andeq	r2, r0, r0, lsl #10
    44a8:	00105535 	andseq	r5, r0, r5, lsr r5
    44ac:	74640100 	strbtvc	r0, [r4], #-256	; 0xffffff00
    44b0:	10080044 	andne	r0, r8, r4, asr #32
    44b4:	01000000 	mrseq	r0, (UNDEF: 0)
    44b8:	0056369c 			; <UNDEFINED> instruction: 0x0056369c
    44bc:	ce020000 	cdpgt	0, 0, cr0, cr2, cr0, {0}
    44c0:	0007d206 	andeq	sp, r7, r6, lsl #4
    44c4:	01c90e00 	biceq	r0, r9, r0, lsl #28
    44c8:	cb370000 	blgt	dc44d0 <__RW_SIZE__+0xdc3f4c>
    44cc:	06000010 			; <UNDEFINED> instruction: 0x06000010
    44d0:	0001c9dc 	ldrdeq	ip, [r1], -ip	; <UNPREDICTABLE>
    44d4:	04e43800 	strbteq	r3, [r4], #2048	; 0x800
    44d8:	f1380000 			; <UNDEFINED> instruction: 0xf1380000
    44dc:	38000004 	stmdacc	r0, {r2}
    44e0:	000004fc 	strdeq	r0, [r0], -ip
    44e4:	00750000 	rsbseq	r0, r5, r0
    44e8:	00020000 	andeq	r0, r2, r0
    44ec:	0000121d 	andeq	r1, r0, sp, lsl r2
    44f0:	0d710104 	ldfeqe	f0, [r1, #-16]!
    44f4:	30000000 	andcc	r0, r0, r0
    44f8:	31ec0800 	mvncc	r0, r0, lsl #16
    44fc:	72630800 	rsbvc	r0, r3, #0, 16
    4500:	732e3074 	teqvc	lr, #116	; 0x74
    4504:	5c3a4300 	ldcpl	3, cr4, [sl], #-0
    4508:	72657355 	rsbvc	r7, r5, #1409286145	; 0x54000001
    450c:	4f495c73 	svcmi	0x00495c73
    4510:	6f445c54 	svcvs	0x00445c54
    4514:	6f6c6e77 	svcvs	0x006c6e77
    4518:	5c736461 	cfldrdpl	mvd6, [r3], #-388	; 0xfffffe7c
    451c:	febfdfc6 	cdp2	15, 11, cr13, cr15, cr6, {6}
    4520:	bd5feebe 	ldcllt	14, cr14, [pc, #-760]	; 4230 <__RW_SIZE__+0x3cac>
    4524:	c0c0bdc7 	sbcgt	fp, r0, r7, asr #27
    4528:	28e1b7da 	stmiacs	r1!, {r1, r3, r4, r6, r7, r8, r9, sl, ip, sp, pc}^
    452c:	2942414c 	stmdbcs	r2, {r2, r3, r6, r8, lr}^
    4530:	6353565c 	cmpvs	r3, #92, 12	; 0x5c00000
    4534:	5c65646f 	cfstrdpl	mvd6, [r5], #-444	; 0xfffffe44
    4538:	2e333230 	mrccs	2, 1, r3, cr3, cr0, {1}
    453c:	5f414d44 	svcpl	0x00414d44
    4540:	545f5753 	ldrbpl	r5, [pc], #-1875	; 4548 <__RW_SIZE__+0x3fc4>
    4544:	47474952 	smlsldmi	r4, r7, r2, r9
    4548:	455f5245 	ldrbmi	r5, [pc, #-581]	; 430b <__RW_SIZE__+0x3d87>
    454c:	4e470058 	mcrmi	0, 2, r0, cr7, cr8, {2}
    4550:	53412055 	movtpl	r2, #4181	; 0x1055
    4554:	322e3220 	eorcc	r3, lr, #32, 4
    4558:	32352e33 	eorscc	r2, r5, #816	; 0x330
    455c:	Address 0x0000455c is out of bounds.


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
       0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
       4:	030b130e 	movweq	r1, #45838	; 0xb30e
       8:	110e1b0e 	tstne	lr, lr, lsl #22
       c:	10061201 	andne	r1, r6, r1, lsl #4
      10:	02000017 	andeq	r0, r0, #23
      14:	0b0b0024 	bleq	2c00ac <__RW_SIZE__+0x2bfb28>
      18:	0e030b3e 	vmoveq.16	d3[0], r0
      1c:	16030000 	strne	r0, [r3], -r0
      20:	3a0e0300 	bcc	380c28 <__RW_SIZE__+0x3806a4>
      24:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
      28:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
      2c:	0b0b0024 	bleq	2c00c4 <__RW_SIZE__+0x2bfb40>
      30:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
      34:	35050000 	strcc	r0, [r5, #-0]
      38:	00134900 	andseq	r4, r3, r0, lsl #18
      3c:	01130600 	tsteq	r3, r0, lsl #12
      40:	0b3a0b0b 	bleq	e82c74 <__RW_SIZE__+0xe826f0>
      44:	1301053b 	movwne	r0, #5435	; 0x153b
      48:	0d070000 	stceq	0, cr0, [r7, #-0]
      4c:	3a080300 	bcc	200c54 <__RW_SIZE__+0x2006d0>
      50:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
      54:	000b3813 	andeq	r3, fp, r3, lsl r8
      58:	000d0800 	andeq	r0, sp, r0, lsl #16
      5c:	0b3a0e03 	bleq	e83870 <__RW_SIZE__+0xe832ec>
      60:	1349053b 	movtne	r0, #38203	; 0x953b
      64:	00000b38 	andeq	r0, r0, r8, lsr fp
      68:	03001609 	movweq	r1, #1545	; 0x609
      6c:	3b0b3a0e 	blcc	2ce8ac <__RW_SIZE__+0x2ce328>
      70:	00134905 	andseq	r4, r3, r5, lsl #18
      74:	002e0a00 	eoreq	r0, lr, r0, lsl #20
      78:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
      7c:	0b3b0b3a 	bleq	ec2d6c <__RW_SIZE__+0xec27e8>
      80:	01111927 	tsteq	r1, r7, lsr #18
      84:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
      88:	00194297 	mulseq	r9, r7, r2
      8c:	00340b00 	eorseq	r0, r4, r0, lsl #22
      90:	0b3a0e03 	bleq	e838a4 <__RW_SIZE__+0xe83320>
      94:	1349053b 	movtne	r0, #38203	; 0x953b
      98:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
      9c:	01000000 	mrseq	r0, (UNDEF: 0)
      a0:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
      a4:	0e030b13 	vmoveq.32	d3[0], r0
      a8:	17550e1b 	smmlane	r5, fp, lr, r0
      ac:	17100111 			; <UNDEFINED> instruction: 0x17100111
      b0:	24020000 	strcs	r0, [r2], #-0
      b4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      b8:	000e030b 	andeq	r0, lr, fp, lsl #6
      bc:	00160300 	andseq	r0, r6, r0, lsl #6
      c0:	0b3a0e03 	bleq	e838d4 <__RW_SIZE__+0xe83350>
      c4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
      c8:	24040000 	strcs	r0, [r4], #-0
      cc:	3e0b0b00 	vmlacc.f64	d0, d11, d0
      d0:	0008030b 	andeq	r0, r8, fp, lsl #6
      d4:	012e0500 	teqeq	lr, r0, lsl #10
      d8:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
      dc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
      e0:	13491927 	movtne	r1, #39207	; 0x9927
      e4:	06120111 			; <UNDEFINED> instruction: 0x06120111
      e8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
      ec:	00130119 	andseq	r0, r3, r9, lsl r1
      f0:	00340600 	eorseq	r0, r4, r0, lsl #12
      f4:	0b3a0e03 	bleq	e83908 <__RW_SIZE__+0xe83384>
      f8:	1349053b 	movtne	r0, #38203	; 0x953b
      fc:	00001702 	andeq	r1, r0, r2, lsl #14
     100:	3f012e07 	svccc	0x00012e07
     104:	3a0e0319 	bcc	380d70 <__RW_SIZE__+0x3807ec>
     108:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     10c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     110:	97184006 	ldrls	r4, [r8, -r6]
     114:	13011942 	movwne	r1, #6466	; 0x1942
     118:	05080000 	streq	r0, [r8, #-0]
     11c:	3a0e0300 	bcc	380d24 <__RW_SIZE__+0x3807a0>
     120:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     124:	00180213 	andseq	r0, r8, r3, lsl r2
     128:	00050900 	andeq	r0, r5, r0, lsl #18
     12c:	0b3a0e03 	bleq	e83940 <__RW_SIZE__+0xe833bc>
     130:	1349053b 	movtne	r0, #38203	; 0x953b
     134:	00001702 	andeq	r1, r0, r2, lsl #14
     138:	0b000f0a 	bleq	3d68 <__RW_SIZE__+0x37e4>
     13c:	0013490b 	andseq	r4, r3, fp, lsl #18
     140:	012e0b00 	teqeq	lr, r0, lsl #22
     144:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     148:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     14c:	13491927 	movtne	r1, #39207	; 0x9927
     150:	06120111 			; <UNDEFINED> instruction: 0x06120111
     154:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     158:	00000019 	andeq	r0, r0, r9, lsl r0
     15c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     160:	030b130e 	movweq	r1, #45838	; 0xb30e
     164:	110e1b0e 	tstne	lr, lr, lsl #22
     168:	10061201 	andne	r1, r6, r1, lsl #4
     16c:	02000017 	andeq	r0, r0, #23
     170:	0e030104 	adfeqs	f0, f3, f4
     174:	0b3a0b0b 	bleq	e82da8 <__RW_SIZE__+0xe82824>
     178:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     17c:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
     180:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     184:	0400000d 	streq	r0, [r0], #-13
     188:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     18c:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     190:	00001349 	andeq	r1, r0, r9, asr #6
     194:	0b002405 	bleq	91b0 <__RW_SIZE__+0x8c2c>
     198:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     19c:	0600000e 	streq	r0, [r0], -lr
     1a0:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     1a4:	0b3b0b3a 	bleq	ec2e94 <__RW_SIZE__+0xec2910>
     1a8:	00001349 	andeq	r1, r0, r9, asr #6
     1ac:	0b002407 	bleq	91d0 <__RW_SIZE__+0x8c4c>
     1b0:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     1b4:	08000008 	stmdaeq	r0, {r3}
     1b8:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
     1bc:	0b3b0b3a 	bleq	ec2eac <__RW_SIZE__+0xec2928>
     1c0:	00001301 	andeq	r1, r0, r1, lsl #6
     1c4:	03000d09 	movweq	r0, #3337	; 0xd09
     1c8:	3b0b3a0e 	blcc	2cea08 <__RW_SIZE__+0x2ce484>
     1cc:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     1d0:	0a00000b 	beq	204 <__ZI_SIZE__+0x2c>
     1d4:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     1d8:	0b3b0b3a 	bleq	ec2ec8 <__RW_SIZE__+0xec2944>
     1dc:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     1e0:	0d0b0000 	stceq	0, cr0, [fp, #-0]
     1e4:	3a080300 	bcc	200dec <__RW_SIZE__+0x200868>
     1e8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     1ec:	00053813 	andeq	r3, r5, r3, lsl r8
     1f0:	01010c00 	tsteq	r1, r0, lsl #24
     1f4:	13011349 	movwne	r1, #4937	; 0x1349
     1f8:	210d0000 	mrscs	r0, (UNDEF: 13)
     1fc:	2f134900 	svccs	0x00134900
     200:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
     204:	13490035 	movtne	r0, #36917	; 0x9035
     208:	210f0000 	mrscs	r0, CPSR
     20c:	2f134900 	svccs	0x00134900
     210:	10000005 	andne	r0, r0, r5
     214:	0b0b0113 	bleq	2c0668 <__RW_SIZE__+0x2c00e4>
     218:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     21c:	00001301 	andeq	r1, r0, r1, lsl #6
     220:	03000d11 	movweq	r0, #3345	; 0xd11
     224:	3b0b3a08 	blcc	2cea4c <__RW_SIZE__+0x2ce4c8>
     228:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     22c:	1200000b 	andne	r0, r0, #11
     230:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     234:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     238:	0b381349 	bleq	e04f64 <__RW_SIZE__+0xe049e0>
     23c:	0f130000 	svceq	0x00130000
     240:	000b0b00 	andeq	r0, fp, r0, lsl #22
     244:	01131400 	tsteq	r3, r0, lsl #8
     248:	0b0b0e03 	bleq	2c3a5c <__RW_SIZE__+0x2c34d8>
     24c:	0b3b0b3a 	bleq	ec2f3c <__RW_SIZE__+0xec29b8>
     250:	00001301 	andeq	r1, r0, r1, lsl #6
     254:	03000d15 	movweq	r0, #3349	; 0xd15
     258:	3b0b3a0e 	blcc	2cea98 <__RW_SIZE__+0x2ce514>
     25c:	0b13490b 	bleq	4d2690 <__RW_SIZE__+0x4d210c>
     260:	0c0b0d0b 	stceq	13, cr0, [fp], {11}
     264:	000b380b 	andeq	r3, fp, fp, lsl #16
     268:	000d1600 	andeq	r1, sp, r0, lsl #12
     26c:	0b3a0803 	bleq	e82280 <__RW_SIZE__+0xe81cfc>
     270:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     274:	0b0d0b0b 	bleq	342ea8 <__RW_SIZE__+0x342924>
     278:	0b380b0c 	bleq	e02eb0 <__RW_SIZE__+0xe0292c>
     27c:	17170000 	ldrne	r0, [r7, -r0]
     280:	0b0e0301 	bleq	380e8c <__RW_SIZE__+0x380908>
     284:	3b0b3a0b 	blcc	2ceab8 <__RW_SIZE__+0x2ce534>
     288:	0013010b 	andseq	r0, r3, fp, lsl #2
     28c:	000d1800 	andeq	r1, sp, r0, lsl #16
     290:	0b3a0e03 	bleq	e83aa4 <__RW_SIZE__+0xe83520>
     294:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     298:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
     29c:	03193f01 	tsteq	r9, #1, 30
     2a0:	3b0b3a0e 	blcc	2ceae0 <__RW_SIZE__+0x2ce55c>
     2a4:	2019270b 	andscs	r2, r9, fp, lsl #14
     2a8:	0013010b 	andseq	r0, r3, fp, lsl #2
     2ac:	00051a00 	andeq	r1, r5, r0, lsl #20
     2b0:	0b3a0803 	bleq	e822c4 <__RW_SIZE__+0xe81d40>
     2b4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     2b8:	2e1b0000 	cdpcs	0, 1, cr0, cr11, cr0, {0}
     2bc:	3a0e0301 	bcc	380ec8 <__RW_SIZE__+0x380944>
     2c0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     2c4:	010b2019 	tsteq	fp, r9, lsl r0
     2c8:	1c000013 	stcne	0, cr0, [r0], {19}
     2cc:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     2d0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     2d4:	00001349 	andeq	r1, r0, r9, asr #6
     2d8:	3f012e1d 	svccc	0x00012e1d
     2dc:	3a0e0319 	bcc	380f48 <__RW_SIZE__+0x3809c4>
     2e0:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     2e4:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     2e8:	97184006 	ldrls	r4, [r8, -r6]
     2ec:	13011942 	movwne	r1, #6466	; 0x1942
     2f0:	051e0000 	ldreq	r0, [lr, #-0]
     2f4:	3a080300 	bcc	200efc <__RW_SIZE__+0x200978>
     2f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     2fc:	00170213 	andseq	r0, r7, r3, lsl r2
     300:	00051f00 	andeq	r1, r5, r0, lsl #30
     304:	0b3a0e03 	bleq	e83b18 <__RW_SIZE__+0xe83594>
     308:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     30c:	00001802 	andeq	r1, r0, r2, lsl #16
     310:	03000520 	movweq	r0, #1312	; 0x520
     314:	3b0b3a0e 	blcc	2ceb54 <__RW_SIZE__+0x2ce5d0>
     318:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     31c:	21000017 	tstcs	r0, r7, lsl r0
     320:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     324:	06120111 			; <UNDEFINED> instruction: 0x06120111
     328:	0b590b58 	bleq	1643090 <__RW_SIZE__+0x1642b0c>
     32c:	05220000 	streq	r0, [r2, #-0]!
     330:	02133100 	andseq	r3, r3, #0, 2
     334:	23000017 	movwcs	r0, #23
     338:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
     33c:	06120111 			; <UNDEFINED> instruction: 0x06120111
     340:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     344:	00130119 	andseq	r0, r3, r9, lsl r1
     348:	011d2400 	tsteq	sp, r0, lsl #8
     34c:	01521331 	cmpeq	r2, r1, lsr r3
     350:	0b581755 	bleq	16060ac <__RW_SIZE__+0x1605b28>
     354:	13010b59 	movwne	r0, #7001	; 0x1b59
     358:	1d250000 	stcne	0, cr0, [r5, #-0]
     35c:	11133101 	tstne	r3, r1, lsl #2
     360:	58061201 	stmdapl	r6, {r0, r9, ip}
     364:	010b590b 	tsteq	fp, fp, lsl #18
     368:	26000013 			; <UNDEFINED> instruction: 0x26000013
     36c:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     370:	17550152 			; <UNDEFINED> instruction: 0x17550152
     374:	0b590b58 	bleq	16430dc <__RW_SIZE__+0x1642b58>
     378:	2e270000 	cdpcs	0, 2, cr0, cr7, cr0, {0}
     37c:	03193f01 	tsteq	r9, #1, 30
     380:	3b0b3a0e 	blcc	2cebc0 <__RW_SIZE__+0x2ce63c>
     384:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     388:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     38c:	97184006 	ldrls	r4, [r8, -r6]
     390:	13011942 	movwne	r1, #6466	; 0x1942
     394:	34280000 	strtcc	r0, [r8], #-0
     398:	3a080300 	bcc	200fa0 <__RW_SIZE__+0x200a1c>
     39c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     3a0:	00180213 	andseq	r0, r8, r3, lsl r2
     3a4:	00342900 	eorseq	r2, r4, r0, lsl #18
     3a8:	0b3a0e03 	bleq	e83bbc <__RW_SIZE__+0xe83638>
     3ac:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     3b0:	00001802 	andeq	r1, r0, r2, lsl #16
     3b4:	0b000f2a 	bleq	4064 <__RW_SIZE__+0x3ae0>
     3b8:	0013490b 	andseq	r4, r3, fp, lsl #18
     3bc:	00262b00 	eoreq	r2, r6, r0, lsl #22
     3c0:	00001349 	andeq	r1, r0, r9, asr #6
     3c4:	0300342c 	movweq	r3, #1068	; 0x42c
     3c8:	3b0b3a0e 	blcc	2cec08 <__RW_SIZE__+0x2ce684>
     3cc:	3f134905 	svccc	0x00134905
     3d0:	00193c19 	andseq	r3, r9, r9, lsl ip
     3d4:	11010000 	mrsne	r0, (UNDEF: 1)
     3d8:	130e2501 	movwne	r2, #58625	; 0xe501
     3dc:	1b0e030b 	blne	381010 <__RW_SIZE__+0x380a8c>
     3e0:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     3e4:	00171006 	andseq	r1, r7, r6
     3e8:	01040200 	mrseq	r0, R12_usr
     3ec:	0b0b0e03 	bleq	2c3c00 <__RW_SIZE__+0x2c367c>
     3f0:	0b3b0b3a 	bleq	ec30e0 <__RW_SIZE__+0xec2b5c>
     3f4:	00001301 	andeq	r1, r0, r1, lsl #6
     3f8:	03002803 	movweq	r2, #2051	; 0x803
     3fc:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     400:	00160400 	andseq	r0, r6, r0, lsl #8
     404:	0b3a0e03 	bleq	e83c18 <__RW_SIZE__+0xe83694>
     408:	1349053b 	movtne	r0, #38203	; 0x953b
     40c:	24050000 	strcs	r0, [r5], #-0
     410:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     414:	000e030b 	andeq	r0, lr, fp, lsl #6
     418:	00160600 	andseq	r0, r6, r0, lsl #12
     41c:	0b3a0e03 	bleq	e83c30 <__RW_SIZE__+0xe836ac>
     420:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     424:	24070000 	strcs	r0, [r7], #-0
     428:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     42c:	0008030b 	andeq	r0, r8, fp, lsl #6
     430:	01130800 	tsteq	r3, r0, lsl #16
     434:	0b3a050b 	bleq	e81868 <__RW_SIZE__+0xe812e4>
     438:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     43c:	0d090000 	stceq	0, cr0, [r9, #-0]
     440:	3a0e0300 	bcc	381048 <__RW_SIZE__+0x380ac4>
     444:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     448:	000b3813 	andeq	r3, fp, r3, lsl r8
     44c:	000d0a00 	andeq	r0, sp, r0, lsl #20
     450:	0b3a0e03 	bleq	e83c64 <__RW_SIZE__+0xe836e0>
     454:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     458:	00000538 	andeq	r0, r0, r8, lsr r5
     45c:	03000d0b 	movweq	r0, #3339	; 0xd0b
     460:	3b0b3a08 	blcc	2cec88 <__RW_SIZE__+0x2ce704>
     464:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     468:	0c000005 	stceq	0, cr0, [r0], {5}
     46c:	13490101 	movtne	r0, #37121	; 0x9101
     470:	00001301 	andeq	r1, r0, r1, lsl #6
     474:	4900210d 	stmdbmi	r0, {r0, r2, r3, r8, sp}
     478:	000b2f13 	andeq	r2, fp, r3, lsl pc
     47c:	00350e00 	eorseq	r0, r5, r0, lsl #28
     480:	00001349 	andeq	r1, r0, r9, asr #6
     484:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
     488:	00052f13 	andeq	r2, r5, r3, lsl pc
     48c:	01131000 	tsteq	r3, r0
     490:	0b3a0b0b 	bleq	e830c4 <__RW_SIZE__+0xe82b40>
     494:	1301053b 	movwne	r0, #5435	; 0x153b
     498:	0d110000 	ldceq	0, cr0, [r1, #-0]
     49c:	3a080300 	bcc	2010a4 <__RW_SIZE__+0x200b20>
     4a0:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4a4:	000b3813 	andeq	r3, fp, r3, lsl r8
     4a8:	000d1200 	andeq	r1, sp, r0, lsl #4
     4ac:	0b3a0e03 	bleq	e83cc0 <__RW_SIZE__+0xe8373c>
     4b0:	1349053b 	movtne	r0, #38203	; 0x953b
     4b4:	00000b38 	andeq	r0, r0, r8, lsr fp
     4b8:	03002e13 	movweq	r2, #3603	; 0xe13
     4bc:	3b0b3a0e 	blcc	2cecfc <__RW_SIZE__+0x2ce778>
     4c0:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     4c4:	000b2013 	andeq	r2, fp, r3, lsl r0
     4c8:	012e1400 	teqeq	lr, r0, lsl #8
     4cc:	0b3a0e03 	bleq	e83ce0 <__RW_SIZE__+0xe8375c>
     4d0:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     4d4:	13010b20 	movwne	r0, #6944	; 0x1b20
     4d8:	05150000 	ldreq	r0, [r5, #-0]
     4dc:	3a0e0300 	bcc	3810e4 <__RW_SIZE__+0x380b60>
     4e0:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     4e4:	16000013 			; <UNDEFINED> instruction: 0x16000013
     4e8:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
     4ec:	0b3a0e03 	bleq	e83d00 <__RW_SIZE__+0xe8377c>
     4f0:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     4f4:	06120111 			; <UNDEFINED> instruction: 0x06120111
     4f8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     4fc:	17000019 	smladne	r0, r9, r0, r0
     500:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     504:	0b3a0e03 	bleq	e83d18 <__RW_SIZE__+0xe83794>
     508:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     50c:	0b201349 	bleq	805238 <__RW_SIZE__+0x804cb4>
     510:	00001301 	andeq	r1, r0, r1, lsl #6
     514:	03003418 	movweq	r3, #1048	; 0x418
     518:	3b0b3a08 	blcc	2ced40 <__RW_SIZE__+0x2ce7bc>
     51c:	0013490b 	andseq	r4, r3, fp, lsl #18
     520:	012e1900 	teqeq	lr, r0, lsl #18
     524:	01111331 	tsteq	r1, r1, lsr r3
     528:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     52c:	01194297 			; <UNDEFINED> instruction: 0x01194297
     530:	1a000013 	bne	584 <__RW_SIZE__>
     534:	13310034 	teqne	r1, #52	; 0x34
     538:	341b0000 	ldrcc	r0, [fp], #-0
     53c:	02133100 	andseq	r3, r3, #0, 2
     540:	1c000018 	stcne	0, cr0, [r0], {24}
     544:	1331001d 	teqne	r1, #29
     548:	06120111 			; <UNDEFINED> instruction: 0x06120111
     54c:	0b590b58 	bleq	16432b4 <__RW_SIZE__+0x1642d30>
     550:	2e1d0000 	cdpcs	0, 1, cr0, cr13, cr0, {0}
     554:	03193f01 	tsteq	r9, #1, 30
     558:	3b0b3a0e 	blcc	2ced98 <__RW_SIZE__+0x2ce814>
     55c:	1119270b 	tstne	r9, fp, lsl #14
     560:	40061201 	andmi	r1, r6, r1, lsl #4
     564:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     568:	00001301 	andeq	r1, r0, r1, lsl #6
     56c:	31011d1e 	tstcc	r1, lr, lsl sp
     570:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     574:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     578:	1f00000b 	svcne	0x0000000b
     57c:	0111010b 	tsteq	r1, fp, lsl #2
     580:	00000612 	andeq	r0, r0, r2, lsl r6
     584:	3f012e20 	svccc	0x00012e20
     588:	3a0e0319 	bcc	3811f4 <__RW_SIZE__+0x380c70>
     58c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     590:	11134919 	tstne	r3, r9, lsl r9
     594:	40061201 	andmi	r1, r6, r1, lsl #4
     598:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     59c:	00001301 	andeq	r1, r0, r1, lsl #6
     5a0:	03000521 	movweq	r0, #1313	; 0x521
     5a4:	3b0b3a08 	blcc	2cedcc <__RW_SIZE__+0x2ce848>
     5a8:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     5ac:	22000017 	andcs	r0, r0, #23
     5b0:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     5b4:	17550152 			; <UNDEFINED> instruction: 0x17550152
     5b8:	0b590b58 	bleq	1643320 <__RW_SIZE__+0x1642d9c>
     5bc:	00001301 	andeq	r1, r0, r1, lsl #6
     5c0:	31000523 	tstcc	r0, r3, lsr #10
     5c4:	00170213 	andseq	r0, r7, r3, lsl r2
     5c8:	00052400 	andeq	r2, r5, r0, lsl #8
     5cc:	0b1c1331 	bleq	705298 <__RW_SIZE__+0x704d14>
     5d0:	34250000 	strtcc	r0, [r5], #-0
     5d4:	3a0e0300 	bcc	3811dc <__RW_SIZE__+0x380c58>
     5d8:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     5dc:	3c193f13 	ldccc	15, cr3, [r9], {19}
     5e0:	00000019 	andeq	r0, r0, r9, lsl r0
     5e4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     5e8:	030b130e 	movweq	r1, #45838	; 0xb30e
     5ec:	110e1b0e 	tstne	lr, lr, lsl #22
     5f0:	10061201 	andne	r1, r6, r1, lsl #4
     5f4:	02000017 	andeq	r0, r0, #23
     5f8:	0b0b0024 	bleq	2c0690 <__RW_SIZE__+0x2c010c>
     5fc:	0e030b3e 	vmoveq.16	d3[0], r0
     600:	16030000 	strne	r0, [r3], -r0
     604:	3a0e0300 	bcc	38120c <__RW_SIZE__+0x380c88>
     608:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     60c:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     610:	0b0b0024 	bleq	2c06a8 <__RW_SIZE__+0x2c0124>
     614:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     618:	35050000 	strcc	r0, [r5, #-0]
     61c:	00134900 	andseq	r4, r3, r0, lsl #18
     620:	01130600 	tsteq	r3, r0, lsl #12
     624:	0b3a0b0b 	bleq	e83258 <__RW_SIZE__+0xe82cd4>
     628:	1301053b 	movwne	r0, #5435	; 0x153b
     62c:	0d070000 	stceq	0, cr0, [r7, #-0]
     630:	3a080300 	bcc	201238 <__RW_SIZE__+0x200cb4>
     634:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     638:	000b3813 	andeq	r3, fp, r3, lsl r8
     63c:	000d0800 	andeq	r0, sp, r0, lsl #16
     640:	0b3a0e03 	bleq	e83e54 <__RW_SIZE__+0xe838d0>
     644:	1349053b 	movtne	r0, #38203	; 0x953b
     648:	00000b38 	andeq	r0, r0, r8, lsr fp
     64c:	03001609 	movweq	r1, #1545	; 0x609
     650:	3b0b3a0e 	blcc	2cee90 <__RW_SIZE__+0x2ce90c>
     654:	00134905 	andseq	r4, r3, r5, lsl #18
     658:	002e0a00 	eoreq	r0, lr, r0, lsl #20
     65c:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     660:	0b3b0b3a 	bleq	ec3350 <__RW_SIZE__+0xec2dcc>
     664:	01111927 	tsteq	r1, r7, lsr #18
     668:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     66c:	00194297 	mulseq	r9, r7, r2
     670:	012e0b00 	teqeq	lr, r0, lsl #22
     674:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     678:	0b3b0b3a 	bleq	ec3368 <__RW_SIZE__+0xec2de4>
     67c:	01111927 	tsteq	r1, r7, lsr #18
     680:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     684:	01194297 			; <UNDEFINED> instruction: 0x01194297
     688:	0c000013 	stceq	0, cr0, [r0], {19}
     68c:	08030005 	stmdaeq	r3, {r0, r2}
     690:	0b3b0b3a 	bleq	ec3380 <__RW_SIZE__+0xec2dfc>
     694:	17021349 	strne	r1, [r2, -r9, asr #6]
     698:	340d0000 	strcc	r0, [sp], #-0
     69c:	3a0e0300 	bcc	3812a4 <__RW_SIZE__+0x380d20>
     6a0:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     6a4:	3c193f13 	ldccc	15, cr3, [r9], {19}
     6a8:	00000019 	andeq	r0, r0, r9, lsl r0
     6ac:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     6b0:	030b130e 	movweq	r1, #45838	; 0xb30e
     6b4:	110e1b0e 	tstne	lr, lr, lsl #22
     6b8:	10061201 	andne	r1, r6, r1, lsl #4
     6bc:	02000017 	andeq	r0, r0, #23
     6c0:	0b0b0024 	bleq	2c0758 <__RW_SIZE__+0x2c01d4>
     6c4:	0e030b3e 	vmoveq.16	d3[0], r0
     6c8:	16030000 	strne	r0, [r3], -r0
     6cc:	3a0e0300 	bcc	3812d4 <__RW_SIZE__+0x380d50>
     6d0:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     6d4:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
     6d8:	0b0b0024 	bleq	2c0770 <__RW_SIZE__+0x2c01ec>
     6dc:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     6e0:	35050000 	strcc	r0, [r5, #-0]
     6e4:	00134900 	andseq	r4, r3, r0, lsl #18
     6e8:	01130600 	tsteq	r3, r0, lsl #12
     6ec:	0b3a0b0b 	bleq	e83320 <__RW_SIZE__+0xe82d9c>
     6f0:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     6f4:	0d070000 	stceq	0, cr0, [r7, #-0]
     6f8:	3a0e0300 	bcc	381300 <__RW_SIZE__+0x380d7c>
     6fc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     700:	000b3813 	andeq	r3, fp, r3, lsl r8
     704:	000d0800 	andeq	r0, sp, r0, lsl #16
     708:	0b3a0803 	bleq	e8271c <__RW_SIZE__+0xe82198>
     70c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     710:	00000b38 	andeq	r0, r0, r8, lsr fp
     714:	49002609 	stmdbmi	r0, {r0, r3, r9, sl, sp}
     718:	0a000013 	beq	76c <__RW_SIZE__+0x1e8>
     71c:	13490101 	movtne	r0, #37121	; 0x9101
     720:	00001301 	andeq	r1, r0, r1, lsl #6
     724:	4900210b 	stmdbmi	r0, {r0, r1, r3, r8, sp}
     728:	000b2f13 	andeq	r2, fp, r3, lsl pc
     72c:	000f0c00 	andeq	r0, pc, r0, lsl #24
     730:	00000b0b 	andeq	r0, r0, fp, lsl #22
     734:	0b000f0d 	bleq	4370 <__RW_SIZE__+0x3dec>
     738:	0013490b 	andseq	r4, r3, fp, lsl #18
     73c:	002e0e00 	eoreq	r0, lr, r0, lsl #28
     740:	0b3a0e03 	bleq	e83f54 <__RW_SIZE__+0xe839d0>
     744:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     748:	00000b20 	andeq	r0, r0, r0, lsr #22
     74c:	3f012e0f 	svccc	0x00012e0f
     750:	3a0e0319 	bcc	3813bc <__RW_SIZE__+0x380e38>
     754:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     758:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     75c:	97184006 	ldrls	r4, [r8, -r6]
     760:	13011942 	movwne	r1, #6466	; 0x1942
     764:	34100000 	ldrcc	r0, [r0], #-0
     768:	3a080300 	bcc	201370 <__RW_SIZE__+0x200dec>
     76c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     770:	00170213 	andseq	r0, r7, r3, lsl r2
     774:	011d1100 	tsteq	sp, r0, lsl #2
     778:	01521331 	cmpeq	r2, r1, lsr r3
     77c:	0b581755 	bleq	16064d8 <__RW_SIZE__+0x1605f54>
     780:	13010b59 	movwne	r0, #7001	; 0x1b59
     784:	89120000 	ldmdbhi	r2, {}	; <UNPREDICTABLE>
     788:	11000182 	smlabbne	r0, r2, r1, r0
     78c:	00133101 	andseq	r3, r3, r1, lsl #2
     790:	82891300 	addhi	r1, r9, #0, 6
     794:	01110101 	tsteq	r1, r1, lsl #2
     798:	13011331 	movwne	r1, #4913	; 0x1331
     79c:	8a140000 	bhi	5007a4 <__RW_SIZE__+0x500220>
     7a0:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     7a4:	18429118 	stmdane	r2, {r3, r4, r8, ip, pc}^
     7a8:	0b150000 	bleq	5407b0 <__RW_SIZE__+0x54022c>
     7ac:	01175501 	tsteq	r7, r1, lsl #10
     7b0:	16000013 			; <UNDEFINED> instruction: 0x16000013
     7b4:	08030034 	stmdaeq	r3, {r2, r4, r5}
     7b8:	0b3b0b3a 	bleq	ec34a8 <__RW_SIZE__+0xec2f24>
     7bc:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     7c0:	89170000 	ldmdbhi	r7, {}	; <UNPREDICTABLE>
     7c4:	11010182 	smlabbne	r1, r2, r1, r0
     7c8:	00133101 	andseq	r3, r3, r1, lsl #2
     7cc:	00341800 	eorseq	r1, r4, r0, lsl #16
     7d0:	0b3a0e03 	bleq	e83fe4 <__RW_SIZE__+0xe83a60>
     7d4:	1349053b 	movtne	r0, #38203	; 0x953b
     7d8:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     7dc:	34190000 	ldrcc	r0, [r9], #-0
     7e0:	3a0e0300 	bcc	3813e8 <__RW_SIZE__+0x380e64>
     7e4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     7e8:	3c193f13 	ldccc	15, cr3, [r9], {19}
     7ec:	1a000019 	bne	858 <__RW_SIZE__+0x2d4>
     7f0:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     7f4:	0b3b0b3a 	bleq	ec34e4 <__RW_SIZE__+0xec2f60>
     7f8:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     7fc:	00001802 	andeq	r1, r0, r2, lsl #16
     800:	3f002e1b 	svccc	0x00002e1b
     804:	3a0e0319 	bcc	381470 <__RW_SIZE__+0x380eec>
     808:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     80c:	00193c19 	andseq	r3, r9, r9, lsl ip
     810:	012e1c00 	teqeq	lr, r0, lsl #24
     814:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     818:	0b3b0b3a 	bleq	ec3508 <__RW_SIZE__+0xec2f84>
     81c:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
     820:	00001301 	andeq	r1, r0, r1, lsl #6
     824:	4900051d 	stmdbmi	r0, {r0, r2, r3, r4, r8, sl}
     828:	1e000013 	mcrne	0, 0, r0, cr0, cr3, {0}
     82c:	00000018 	andeq	r0, r0, r8, lsl r0
     830:	3f012e1f 	svccc	0x00012e1f
     834:	270e0319 	smladcs	lr, r9, r3, r0
     838:	34134919 	ldrcc	r4, [r3], #-2329	; 0xfffff6e7
     83c:	01193c19 	tsteq	r9, r9, lsl ip
     840:	20000013 	andcs	r0, r0, r3, lsl r0
     844:	00000026 	andeq	r0, r0, r6, lsr #32
     848:	01110100 	tsteq	r1, r0, lsl #2
     84c:	0b130e25 	bleq	4c40e8 <__RW_SIZE__+0x4c3b64>
     850:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     854:	06120111 			; <UNDEFINED> instruction: 0x06120111
     858:	00001710 	andeq	r1, r0, r0, lsl r7
     85c:	0b002402 	bleq	986c <__RW_SIZE__+0x92e8>
     860:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     864:	0300000e 	movweq	r0, #14
     868:	0b0b0024 	bleq	2c0900 <__RW_SIZE__+0x2c037c>
     86c:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
     870:	0f040000 	svceq	0x00040000
     874:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     878:	05000013 	streq	r0, [r0, #-19]	; 0xffffffed
     87c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     880:	0b3a0e03 	bleq	e84094 <__RW_SIZE__+0xe83b10>
     884:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     888:	01111349 	tsteq	r1, r9, asr #6
     88c:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     890:	01194297 			; <UNDEFINED> instruction: 0x01194297
     894:	06000013 			; <UNDEFINED> instruction: 0x06000013
     898:	08030005 	stmdaeq	r3, {r0, r2}
     89c:	0b3b0b3a 	bleq	ec358c <__RW_SIZE__+0xec3008>
     8a0:	17021349 	strne	r1, [r2, -r9, asr #6]
     8a4:	34070000 	strcc	r0, [r7], #-0
     8a8:	3a0e0300 	bcc	3814b0 <__RW_SIZE__+0x380f2c>
     8ac:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8b0:	3c193f13 	ldccc	15, cr3, [r9], {19}
     8b4:	08000019 	stmdaeq	r0, {r0, r3, r4}
     8b8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     8bc:	0b3b0b3a 	bleq	ec35ac <__RW_SIZE__+0xec3028>
     8c0:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     8c4:	34090000 	strcc	r0, [r9], #-0
     8c8:	3a0e0300 	bcc	3814d0 <__RW_SIZE__+0x380f4c>
     8cc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     8d0:	00170213 	andseq	r0, r7, r3, lsl r2
     8d4:	00340a00 	eorseq	r0, r4, r0, lsl #20
     8d8:	0b3a0e03 	bleq	e840ec <__RW_SIZE__+0xe83b68>
     8dc:	1349053b 	movtne	r0, #38203	; 0x953b
     8e0:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     8e4:	350b0000 	strcc	r0, [fp, #-0]
     8e8:	00134900 	andseq	r4, r3, r0, lsl #18
     8ec:	11010000 	mrsne	r0, (UNDEF: 1)
     8f0:	130e2501 	movwne	r2, #58625	; 0xe501
     8f4:	1b0e030b 	blne	381528 <__RW_SIZE__+0x380fa4>
     8f8:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
     8fc:	00171006 	andseq	r1, r7, r6
     900:	01040200 	mrseq	r0, R12_usr
     904:	0b0b0e03 	bleq	2c4118 <__RW_SIZE__+0x2c3b94>
     908:	0b3b0b3a 	bleq	ec35f8 <__RW_SIZE__+0xec3074>
     90c:	00001301 	andeq	r1, r0, r1, lsl #6
     910:	03002803 	movweq	r2, #2051	; 0x803
     914:	000d1c0e 	andeq	r1, sp, lr, lsl #24
     918:	00160400 	andseq	r0, r6, r0, lsl #8
     91c:	0b3a0e03 	bleq	e84130 <__RW_SIZE__+0xe83bac>
     920:	1349053b 	movtne	r0, #38203	; 0x953b
     924:	24050000 	strcs	r0, [r5], #-0
     928:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     92c:	000e030b 	andeq	r0, lr, fp, lsl #6
     930:	00160600 	andseq	r0, r6, r0, lsl #12
     934:	0b3a0e03 	bleq	e84148 <__RW_SIZE__+0xe83bc4>
     938:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     93c:	24070000 	strcs	r0, [r7], #-0
     940:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     944:	0008030b 	andeq	r0, r8, fp, lsl #6
     948:	01130800 	tsteq	r3, r0, lsl #16
     94c:	0b3a050b 	bleq	e81d80 <__RW_SIZE__+0xe817fc>
     950:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     954:	0d090000 	stceq	0, cr0, [r9, #-0]
     958:	3a0e0300 	bcc	381560 <__RW_SIZE__+0x380fdc>
     95c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     960:	000b3813 	andeq	r3, fp, r3, lsl r8
     964:	000d0a00 	andeq	r0, sp, r0, lsl #20
     968:	0b3a0e03 	bleq	e8417c <__RW_SIZE__+0xe83bf8>
     96c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     970:	00000538 	andeq	r0, r0, r8, lsr r5
     974:	03000d0b 	movweq	r0, #3339	; 0xd0b
     978:	3b0b3a08 	blcc	2cf1a0 <__RW_SIZE__+0x2cec1c>
     97c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     980:	0c000005 	stceq	0, cr0, [r0], {5}
     984:	13490101 	movtne	r0, #37121	; 0x9101
     988:	00001301 	andeq	r1, r0, r1, lsl #6
     98c:	4900210d 	stmdbmi	r0, {r0, r2, r3, r8, sp}
     990:	000b2f13 	andeq	r2, fp, r3, lsl pc
     994:	00350e00 	eorseq	r0, r5, r0, lsl #28
     998:	00001349 	andeq	r1, r0, r9, asr #6
     99c:	4900210f 	stmdbmi	r0, {r0, r1, r2, r3, r8, sp}
     9a0:	00052f13 	andeq	r2, r5, r3, lsl pc
     9a4:	01131000 	tsteq	r3, r0
     9a8:	0b3a0b0b 	bleq	e835dc <__RW_SIZE__+0xe83058>
     9ac:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     9b0:	0d110000 	ldceq	0, cr0, [r1, #-0]
     9b4:	3a080300 	bcc	2015bc <__RW_SIZE__+0x201038>
     9b8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     9bc:	000b3813 	andeq	r3, fp, r3, lsl r8
     9c0:	00261200 	eoreq	r1, r6, r0, lsl #4
     9c4:	00001349 	andeq	r1, r0, r9, asr #6
     9c8:	0b011313 	bleq	4561c <__RW_SIZE__+0x45098>
     9cc:	3b0b3a0b 	blcc	2cf200 <__RW_SIZE__+0x2cec7c>
     9d0:	00130105 	andseq	r0, r3, r5, lsl #2
     9d4:	000d1400 	andeq	r1, sp, r0, lsl #8
     9d8:	0b3a0803 	bleq	e829ec <__RW_SIZE__+0xe82468>
     9dc:	1349053b 	movtne	r0, #38203	; 0x953b
     9e0:	00000b38 	andeq	r0, r0, r8, lsr fp
     9e4:	03000d15 	movweq	r0, #3349	; 0xd15
     9e8:	3b0b3a0e 	blcc	2cf228 <__RW_SIZE__+0x2ceca4>
     9ec:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     9f0:	1600000b 	strne	r0, [r0], -fp
     9f4:	0b0b000f 	bleq	2c0a38 <__RW_SIZE__+0x2c04b4>
     9f8:	00001349 	andeq	r1, r0, r9, asr #6
     9fc:	03012e17 	movweq	r2, #7703	; 0x1e17
     a00:	3b0b3a0e 	blcc	2cf240 <__RW_SIZE__+0x2cecbc>
     a04:	20192705 	andscs	r2, r9, r5, lsl #14
     a08:	0013010b 	andseq	r0, r3, fp, lsl #2
     a0c:	00051800 	andeq	r1, r5, r0, lsl #16
     a10:	0b3a0e03 	bleq	e84224 <__RW_SIZE__+0xe83ca0>
     a14:	1349053b 	movtne	r0, #38203	; 0x953b
     a18:	2e190000 	cdpcs	0, 1, cr0, cr9, cr0, {0}
     a1c:	3a0e0301 	bcc	381628 <__RW_SIZE__+0x3810a4>
     a20:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     a24:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     a28:	97184006 	ldrls	r4, [r8, -r6]
     a2c:	13011942 	movwne	r1, #6466	; 0x1942
     a30:	051a0000 	ldreq	r0, [sl, #-0]
     a34:	3a0e0300 	bcc	38163c <__RW_SIZE__+0x3810b8>
     a38:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     a3c:	00170213 	andseq	r0, r7, r3, lsl r2
     a40:	00051b00 	andeq	r1, r5, r0, lsl #22
     a44:	0b3a0803 	bleq	e82a58 <__RW_SIZE__+0xe824d4>
     a48:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     a4c:	00001702 	andeq	r1, r0, r2, lsl #14
     a50:	0300341c 	movweq	r3, #1052	; 0x41c
     a54:	3b0b3a08 	blcc	2cf27c <__RW_SIZE__+0x2cecf8>
     a58:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     a5c:	1d000017 	stcne	0, cr0, [r0, #-92]	; 0xffffffa4
     a60:	01018289 	smlabbeq	r1, r9, r2, r8
     a64:	13310111 	teqne	r1, #1073741828	; 0x40000004
     a68:	8a1e0000 	bhi	780a70 <__RW_SIZE__+0x7804ec>
     a6c:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
     a70:	18429118 	stmdane	r2, {r3, r4, r8, ip, pc}^
     a74:	2e1f0000 	cdpcs	0, 1, cr0, cr15, cr0, {0}
     a78:	03193f01 	tsteq	r9, #1, 30
     a7c:	3b0b3a0e 	blcc	2cf2bc <__RW_SIZE__+0x2ced38>
     a80:	1119270b 	tstne	r9, fp, lsl #14
     a84:	40061201 	andmi	r1, r6, r1, lsl #4
     a88:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     a8c:	00001301 	andeq	r1, r0, r1, lsl #6
     a90:	01828920 	orreq	r8, r2, r0, lsr #18
     a94:	31011101 	tstcc	r1, r1, lsl #2
     a98:	00130113 	andseq	r0, r3, r3, lsl r1
     a9c:	012e2100 	teqeq	lr, r0, lsl #2
     aa0:	0b3a0e03 	bleq	e842b4 <__RW_SIZE__+0xe83d30>
     aa4:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     aa8:	13010b20 	movwne	r0, #6944	; 0x1b20
     aac:	05220000 	streq	r0, [r2, #-0]!
     ab0:	3a080300 	bcc	2016b8 <__RW_SIZE__+0x201134>
     ab4:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ab8:	23000013 	movwcs	r0, #19
     abc:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     ac0:	17550152 			; <UNDEFINED> instruction: 0x17550152
     ac4:	0b590b58 	bleq	164382c <__RW_SIZE__+0x16432a8>
     ac8:	00001301 	andeq	r1, r0, r1, lsl #6
     acc:	31000524 	tstcc	r0, r4, lsr #10
     ad0:	00180213 	andseq	r0, r8, r3, lsl r2
     ad4:	00052500 	andeq	r2, r5, r0, lsl #10
     ad8:	17021331 	smladxne	r2, r1, r3, r1
     adc:	89260000 	stmdbhi	r6!, {}	; <UNPREDICTABLE>
     ae0:	11000182 	smlabbne	r0, r2, r1, r0
     ae4:	00133101 	andseq	r3, r3, r1, lsl #2
     ae8:	002e2700 	eoreq	r2, lr, r0, lsl #14
     aec:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     af0:	0b3b0b3a 	bleq	ec37e0 <__RW_SIZE__+0xec325c>
     af4:	01111927 	tsteq	r1, r7, lsr #18
     af8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     afc:	00194297 	mulseq	r9, r7, r2
     b00:	012e2800 	teqeq	lr, r0, lsl #16
     b04:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     b08:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b0c:	01111927 	tsteq	r1, r7, lsr #18
     b10:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
     b14:	01194297 			; <UNDEFINED> instruction: 0x01194297
     b18:	29000013 	stmdbcs	r0, {r0, r1, r4}
     b1c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     b20:	0b3a0e03 	bleq	e84334 <__RW_SIZE__+0xe83db0>
     b24:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
     b28:	13010b20 	movwne	r0, #6944	; 0x1b20
     b2c:	052a0000 	streq	r0, [sl, #-0]!
     b30:	3a080300 	bcc	201738 <__RW_SIZE__+0x2011b4>
     b34:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     b38:	2b000013 	blcs	b8c <__RW_SIZE__+0x608>
     b3c:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     b40:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     b44:	00001349 	andeq	r1, r0, r9, asr #6
     b48:	31012e2c 	tstcc	r1, ip, lsr #28
     b4c:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     b50:	97184006 	ldrls	r4, [r8, -r6]
     b54:	13011942 	movwne	r1, #6466	; 0x1942
     b58:	342d0000 	strtcc	r0, [sp], #-0
     b5c:	02133100 	andseq	r3, r3, #0, 2
     b60:	2e000018 	mcrcs	0, 0, r0, cr0, cr8, {0}
     b64:	1331011d 	teqne	r1, #1073741831	; 0x40000007
     b68:	17550152 			; <UNDEFINED> instruction: 0x17550152
     b6c:	05590b58 	ldrbeq	r0, [r9, #-2904]	; 0xfffff4a8
     b70:	00001301 	andeq	r1, r0, r1, lsl #6
     b74:	3100052f 	tstcc	r0, pc, lsr #10
     b78:	000b1c13 	andeq	r1, fp, r3, lsl ip
     b7c:	010b3000 	mrseq	r3, (UNDEF: 11)
     b80:	00001755 	andeq	r1, r0, r5, asr r7
     b84:	31003431 	tstcc	r0, r1, lsr r4
     b88:	00170213 	andseq	r0, r7, r3, lsl r2
     b8c:	011d3200 	tsteq	sp, r0, lsl #4
     b90:	01521331 	cmpeq	r2, r1, lsr r3
     b94:	0b581755 	bleq	16068f0 <__RW_SIZE__+0x160636c>
     b98:	00000559 	andeq	r0, r0, r9, asr r5
     b9c:	03003433 	movweq	r3, #1075	; 0x433
     ba0:	3b0b3a0e 	blcc	2cf3e0 <__RW_SIZE__+0x2cee5c>
     ba4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     ba8:	34000018 	strcc	r0, [r0], #-24	; 0xffffffe8
     bac:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     bb0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     bb4:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     bb8:	0000193c 	andeq	r1, r0, ip, lsr r9
     bbc:	03003435 	movweq	r3, #1077	; 0x435
     bc0:	3b0b3a0e 	blcc	2cf400 <__RW_SIZE__+0x2cee7c>
     bc4:	3f13490b 	svccc	0x0013490b
     bc8:	00180219 	andseq	r0, r8, r9, lsl r2
     bcc:	00343600 	eorseq	r3, r4, r0, lsl #12
     bd0:	0b3a0e03 	bleq	e843e4 <__RW_SIZE__+0xe83e60>
     bd4:	1349053b 	movtne	r0, #38203	; 0x953b
     bd8:	1802193f 	stmdane	r2, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
     bdc:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
     be0:	03193f01 	tsteq	r9, #1, 30
     be4:	3b0b3a0e 	blcc	2cf424 <__RW_SIZE__+0x2ceea0>
     be8:	3c19270b 	ldccc	7, cr2, [r9], {11}
     bec:	00130119 	andseq	r0, r3, r9, lsl r1
     bf0:	00053800 	andeq	r3, r5, r0, lsl #16
     bf4:	00001349 	andeq	r1, r0, r9, asr #6
     bf8:	00001839 	andeq	r1, r0, r9, lsr r8
     bfc:	012e3a00 	teqeq	lr, r0, lsl #20
     c00:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
     c04:	0b3b0b3a 	bleq	ec38f4 <__RW_SIZE__+0xec3370>
     c08:	193c1927 	ldmdbne	ip!, {r0, r1, r2, r5, r8, fp, ip}
     c0c:	01000000 	mrseq	r0, (UNDEF: 0)
     c10:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
     c14:	0e030b13 	vmoveq.32	d3[0], r0
     c18:	01110e1b 	tsteq	r1, fp, lsl lr
     c1c:	17100612 			; <UNDEFINED> instruction: 0x17100612
     c20:	24020000 	strcs	r0, [r2], #-0
     c24:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     c28:	000e030b 	andeq	r0, lr, fp, lsl #6
     c2c:	00160300 	andseq	r0, r6, r0, lsl #6
     c30:	0b3a0e03 	bleq	e84444 <__RW_SIZE__+0xe83ec0>
     c34:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     c38:	24040000 	strcs	r0, [r4], #-0
     c3c:	3e0b0b00 	vmlacc.f64	d0, d11, d0
     c40:	0008030b 	andeq	r0, r8, fp, lsl #6
     c44:	00350500 	eorseq	r0, r5, r0, lsl #10
     c48:	00001349 	andeq	r1, r0, r9, asr #6
     c4c:	49002606 	stmdbmi	r0, {r1, r2, r9, sl, sp}
     c50:	07000013 	smladeq	r0, r3, r0, r0
     c54:	0b0b0113 	bleq	2c10a8 <__RW_SIZE__+0x2c0b24>
     c58:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c5c:	00001301 	andeq	r1, r0, r1, lsl #6
     c60:	03000d08 	movweq	r0, #3336	; 0xd08
     c64:	3b0b3a0e 	blcc	2cf4a4 <__RW_SIZE__+0x2cef20>
     c68:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     c6c:	0900000b 	stmdbeq	r0, {r0, r1, r3}
     c70:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     c74:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     c78:	0b381349 	bleq	e059a4 <__RW_SIZE__+0xe05420>
     c7c:	160a0000 	strne	r0, [sl], -r0
     c80:	3a0e0300 	bcc	381888 <__RW_SIZE__+0x381304>
     c84:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     c88:	0b000013 	bleq	cdc <__RW_SIZE__+0x758>
     c8c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     c90:	0b3a0e03 	bleq	e844a4 <__RW_SIZE__+0xe83f20>
     c94:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     c98:	06120111 			; <UNDEFINED> instruction: 0x06120111
     c9c:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
     ca0:	00130119 	andseq	r0, r3, r9, lsl r1
     ca4:	00050c00 	andeq	r0, r5, r0, lsl #24
     ca8:	0b3a0e03 	bleq	e844bc <__RW_SIZE__+0xe83f38>
     cac:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     cb0:	00001702 	andeq	r1, r0, r2, lsl #14
     cb4:	3f002e0d 	svccc	0x00002e0d
     cb8:	3a0e0319 	bcc	381924 <__RW_SIZE__+0x3813a0>
     cbc:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     cc0:	11134919 	tstne	r3, r9, lsl r9
     cc4:	40061201 	andmi	r1, r6, r1, lsl #4
     cc8:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     ccc:	2e0e0000 	cdpcs	0, 0, cr0, cr14, cr0, {0}
     cd0:	03193f00 	tsteq	r9, #0, 30
     cd4:	3b0b3a0e 	blcc	2cf514 <__RW_SIZE__+0x2cef90>
     cd8:	1119270b 	tstne	r9, fp, lsl #14
     cdc:	40061201 	andmi	r1, r6, r1, lsl #4
     ce0:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     ce4:	340f0000 	strcc	r0, [pc], #-0	; cec <__RW_SIZE__+0x768>
     ce8:	3a0e0300 	bcc	3818f0 <__RW_SIZE__+0x38136c>
     cec:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
     cf0:	3c193f13 	ldccc	15, cr3, [r9], {19}
     cf4:	00000019 	andeq	r0, r0, r9, lsl r0
     cf8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
     cfc:	030b130e 	movweq	r1, #45838	; 0xb30e
     d00:	110e1b0e 	tstne	lr, lr, lsl #22
     d04:	10061201 	andne	r1, r6, r1, lsl #4
     d08:	02000017 	andeq	r0, r0, #23
     d0c:	0e030104 	adfeqs	f0, f3, f4
     d10:	0b3a0b0b 	bleq	e83944 <__RW_SIZE__+0xe833c0>
     d14:	13010b3b 	movwne	r0, #6971	; 0x1b3b
     d18:	28030000 	stmdacs	r3, {}	; <UNPREDICTABLE>
     d1c:	1c0e0300 	stcne	3, cr0, [lr], {-0}
     d20:	0400000d 	streq	r0, [r0], #-13
     d24:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     d28:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     d2c:	00001349 	andeq	r1, r0, r9, asr #6
     d30:	0b002405 	bleq	9d4c <__RW_SIZE__+0x97c8>
     d34:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     d38:	0600000e 	streq	r0, [r0], -lr
     d3c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
     d40:	0b3b0b3a 	bleq	ec3a30 <__RW_SIZE__+0xec34ac>
     d44:	00001349 	andeq	r1, r0, r9, asr #6
     d48:	0b002407 	bleq	9d6c <__RW_SIZE__+0x97e8>
     d4c:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
     d50:	08000008 	stmdaeq	r0, {r3}
     d54:	050b0113 	streq	r0, [fp, #-275]	; 0xfffffeed
     d58:	0b3b0b3a 	bleq	ec3a48 <__RW_SIZE__+0xec34c4>
     d5c:	00001301 	andeq	r1, r0, r1, lsl #6
     d60:	03000d09 	movweq	r0, #3337	; 0xd09
     d64:	3b0b3a0e 	blcc	2cf5a4 <__RW_SIZE__+0x2cf020>
     d68:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     d6c:	0a00000b 	beq	da0 <__RW_SIZE__+0x81c>
     d70:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     d74:	0b3b0b3a 	bleq	ec3a64 <__RW_SIZE__+0xec34e0>
     d78:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     d7c:	0d0b0000 	stceq	0, cr0, [fp, #-0]
     d80:	3a080300 	bcc	201988 <__RW_SIZE__+0x201404>
     d84:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     d88:	00053813 	andeq	r3, r5, r3, lsl r8
     d8c:	01010c00 	tsteq	r1, r0, lsl #24
     d90:	13011349 	movwne	r1, #4937	; 0x1349
     d94:	210d0000 	mrscs	r0, (UNDEF: 13)
     d98:	2f134900 	svccs	0x00134900
     d9c:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
     da0:	13490035 	movtne	r0, #36917	; 0x9035
     da4:	210f0000 	mrscs	r0, CPSR
     da8:	2f134900 	svccs	0x00134900
     dac:	10000005 	andne	r0, r0, r5
     db0:	0b0b0113 	bleq	2c1204 <__RW_SIZE__+0x2c0c80>
     db4:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     db8:	00001301 	andeq	r1, r0, r1, lsl #6
     dbc:	03000d11 	movweq	r0, #3345	; 0xd11
     dc0:	3b0b3a08 	blcc	2cf5e8 <__RW_SIZE__+0x2cf064>
     dc4:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     dc8:	1200000b 	andne	r0, r0, #11
     dcc:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
     dd0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     dd4:	0b381349 	bleq	e05b00 <__RW_SIZE__+0xe0557c>
     dd8:	2e130000 	cdpcs	0, 1, cr0, cr3, cr0, {0}
     ddc:	3a0e0301 	bcc	3819e8 <__RW_SIZE__+0x381464>
     de0:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
     de4:	010b2019 	tsteq	fp, r9, lsl r0
     de8:	14000013 	strne	r0, [r0], #-19	; 0xffffffed
     dec:	0e030005 	cdpeq	0, 0, cr0, cr3, cr5, {0}
     df0:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     df4:	00001349 	andeq	r1, r0, r9, asr #6
     df8:	3f002e15 	svccc	0x00002e15
     dfc:	3a0e0319 	bcc	381a68 <__RW_SIZE__+0x3814e4>
     e00:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     e04:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     e08:	97184006 	ldrls	r4, [r8, -r6]
     e0c:	00001942 	andeq	r1, r0, r2, asr #18
     e10:	3f012e16 	svccc	0x00012e16
     e14:	3a0e0319 	bcc	381a80 <__RW_SIZE__+0x3814fc>
     e18:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     e1c:	11134919 	tstne	r3, r9, lsl r9
     e20:	40061201 	andmi	r1, r6, r1, lsl #4
     e24:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
     e28:	00001301 	andeq	r1, r0, r1, lsl #6
     e2c:	03003417 	movweq	r3, #1047	; 0x417
     e30:	3b0b3a0e 	blcc	2cf670 <__RW_SIZE__+0x2cf0ec>
     e34:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e38:	18000018 	stmdane	r0, {r3, r4}
     e3c:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
     e40:	0b3a0e03 	bleq	e84654 <__RW_SIZE__+0xe840d0>
     e44:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
     e48:	06120111 			; <UNDEFINED> instruction: 0x06120111
     e4c:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
     e50:	00130119 	andseq	r0, r3, r9, lsl r1
     e54:	00051900 	andeq	r1, r5, r0, lsl #18
     e58:	0b3a0e03 	bleq	e8466c <__RW_SIZE__+0xe840e8>
     e5c:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     e60:	00001702 	andeq	r1, r0, r2, lsl #14
     e64:	0300341a 	movweq	r3, #1050	; 0x41a
     e68:	3b0b3a08 	blcc	2cf690 <__RW_SIZE__+0x2cf10c>
     e6c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
     e70:	1b000017 	blne	ed4 <__RW_SIZE__+0x950>
     e74:	08030034 	stmdaeq	r3, {r2, r4, r5}
     e78:	0b3b0b3a 	bleq	ec3b68 <__RW_SIZE__+0xec35e4>
     e7c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
     e80:	2e1c0000 	cdpcs	0, 1, cr0, cr12, cr0, {0}
     e84:	03193f00 	tsteq	r9, #0, 30
     e88:	3b0b3a0e 	blcc	2cf6c8 <__RW_SIZE__+0x2cf144>
     e8c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
     e90:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     e94:	97184006 	ldrls	r4, [r8, -r6]
     e98:	00001942 	andeq	r1, r0, r2, asr #18
     e9c:	3f012e1d 	svccc	0x00012e1d
     ea0:	3a0e0319 	bcc	381b0c <__RW_SIZE__+0x381588>
     ea4:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
     ea8:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
     eac:	96184006 	ldrls	r4, [r8], -r6
     eb0:	13011942 	movwne	r1, #6466	; 0x1942
     eb4:	051e0000 	ldreq	r0, [lr, #-0]
     eb8:	3a080300 	bcc	201ac0 <__RW_SIZE__+0x20153c>
     ebc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
     ec0:	00170213 	andseq	r0, r7, r3, lsl r2
     ec4:	011d1f00 	tsteq	sp, r0, lsl #30
     ec8:	01521331 	cmpeq	r2, r1, lsr r3
     ecc:	0b581755 	bleq	1606c28 <__RW_SIZE__+0x16066a4>
     ed0:	13010b59 	movwne	r0, #7001	; 0x1b59
     ed4:	05200000 	streq	r0, [r0, #-0]!
     ed8:	02133100 	andseq	r3, r3, #0, 2
     edc:	21000017 	tstcs	r0, r7, lsl r0
     ee0:	13310005 	teqne	r1, #5
     ee4:	00000b1c 	andeq	r0, r0, ip, lsl fp
     ee8:	31011d22 	tstcc	r1, r2, lsr #26
     eec:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
     ef0:	590b5806 	stmdbpl	fp, {r1, r2, fp, ip, lr}
     ef4:	2300000b 	movwcs	r0, #11
     ef8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
     efc:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
     f00:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
     f04:	0000193c 	andeq	r1, r0, ip, lsr r9
     f08:	01110100 	tsteq	r1, r0, lsl #2
     f0c:	0b130e25 	bleq	4c47a8 <__RW_SIZE__+0x4c4224>
     f10:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
     f14:	06120111 			; <UNDEFINED> instruction: 0x06120111
     f18:	00001710 	andeq	r1, r0, r0, lsl r7
     f1c:	03010402 	movweq	r0, #5122	; 0x1402
     f20:	3a0b0b0e 	bcc	2c3b60 <__RW_SIZE__+0x2c35dc>
     f24:	010b3b0b 	tsteq	fp, fp, lsl #22
     f28:	03000013 	movweq	r0, #19
     f2c:	0e030028 	cdpeq	0, 0, cr0, cr3, cr8, {1}
     f30:	00000d1c 	andeq	r0, r0, ip, lsl sp
     f34:	03001604 	movweq	r1, #1540	; 0x604
     f38:	3b0b3a0e 	blcc	2cf778 <__RW_SIZE__+0x2cf1f4>
     f3c:	00134905 	andseq	r4, r3, r5, lsl #18
     f40:	00240500 	eoreq	r0, r4, r0, lsl #10
     f44:	0b3e0b0b 	bleq	f83b78 <__RW_SIZE__+0xf835f4>
     f48:	00000e03 	andeq	r0, r0, r3, lsl #28
     f4c:	03001606 	movweq	r1, #1542	; 0x606
     f50:	3b0b3a0e 	blcc	2cf790 <__RW_SIZE__+0x2cf20c>
     f54:	0013490b 	andseq	r4, r3, fp, lsl #18
     f58:	00240700 	eoreq	r0, r4, r0, lsl #14
     f5c:	0b3e0b0b 	bleq	f83b90 <__RW_SIZE__+0xf8360c>
     f60:	00000803 	andeq	r0, r0, r3, lsl #16
     f64:	0b011308 	bleq	45b8c <__RW_SIZE__+0x45608>
     f68:	3b0b3a05 	blcc	2cf784 <__RW_SIZE__+0x2cf200>
     f6c:	0013010b 	andseq	r0, r3, fp, lsl #2
     f70:	000d0900 	andeq	r0, sp, r0, lsl #18
     f74:	0b3a0e03 	bleq	e84788 <__RW_SIZE__+0xe84204>
     f78:	13490b3b 	movtne	r0, #39739	; 0x9b3b
     f7c:	00000b38 	andeq	r0, r0, r8, lsr fp
     f80:	03000d0a 	movweq	r0, #3338	; 0xd0a
     f84:	3b0b3a0e 	blcc	2cf7c4 <__RW_SIZE__+0x2cf240>
     f88:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
     f8c:	0b000005 	bleq	fa8 <__RW_SIZE__+0xa24>
     f90:	0803000d 	stmdaeq	r3, {r0, r2, r3}
     f94:	0b3b0b3a 	bleq	ec3c84 <__RW_SIZE__+0xec3700>
     f98:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
     f9c:	010c0000 	mrseq	r0, (UNDEF: 12)
     fa0:	01134901 	tsteq	r3, r1, lsl #18
     fa4:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
     fa8:	13490021 	movtne	r0, #36897	; 0x9021
     fac:	00000b2f 	andeq	r0, r0, pc, lsr #22
     fb0:	4900350e 	stmdbmi	r0, {r1, r2, r3, r8, sl, ip, sp}
     fb4:	0f000013 	svceq	0x00000013
     fb8:	13490021 	movtne	r0, #36897	; 0x9021
     fbc:	0000052f 	andeq	r0, r0, pc, lsr #10
     fc0:	0b011310 	bleq	45c08 <__RW_SIZE__+0x45684>
     fc4:	3b0b3a0b 	blcc	2cf7f8 <__RW_SIZE__+0x2cf274>
     fc8:	00130105 	andseq	r0, r3, r5, lsl #2
     fcc:	000d1100 	andeq	r1, sp, r0, lsl #2
     fd0:	0b3a0803 	bleq	e82fe4 <__RW_SIZE__+0xe82a60>
     fd4:	1349053b 	movtne	r0, #38203	; 0x953b
     fd8:	00000b38 	andeq	r0, r0, r8, lsr fp
     fdc:	03000d12 	movweq	r0, #3346	; 0xd12
     fe0:	3b0b3a0e 	blcc	2cf820 <__RW_SIZE__+0x2cf29c>
     fe4:	38134905 	ldmdacc	r3, {r0, r2, r8, fp, lr}
     fe8:	1300000b 	movwne	r0, #11
     fec:	0b0b000f 	bleq	2c1030 <__RW_SIZE__+0x2c0aac>
     ff0:	0f140000 	svceq	0x00140000
     ff4:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
     ff8:	15000013 	strne	r0, [r0, #-19]	; 0xffffffed
     ffc:	13490026 	movtne	r0, #36902	; 0x9026
    1000:	13160000 	tstne	r6, #0
    1004:	0b0e0301 	bleq	381c10 <__RW_SIZE__+0x38168c>
    1008:	3b0b3a0b 	blcc	2cf83c <__RW_SIZE__+0x2cf2b8>
    100c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1010:	000d1700 	andeq	r1, sp, r0, lsl #14
    1014:	13490e03 	movtne	r0, #40451	; 0x9e03
    1018:	19340b38 	ldmdbne	r4!, {r3, r4, r5, r8, r9, fp}
    101c:	2e180000 	cdpcs	0, 1, cr0, cr8, cr0, {0}
    1020:	03193f01 	tsteq	r9, #1, 30
    1024:	3b0b3a0e 	blcc	2cf864 <__RW_SIZE__+0x2cf2e0>
    1028:	2019270b 	andscs	r2, r9, fp, lsl #14
    102c:	0013010b 	andseq	r0, r3, fp, lsl #2
    1030:	00051900 	andeq	r1, r5, r0, lsl #18
    1034:	0b3a0803 	bleq	e83048 <__RW_SIZE__+0xe82ac4>
    1038:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    103c:	2e1a0000 	cdpcs	0, 1, cr0, cr10, cr0, {0}
    1040:	03193f00 	tsteq	r9, #0, 30
    1044:	3b0b3a0e 	blcc	2cf884 <__RW_SIZE__+0x2cf300>
    1048:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    104c:	000b2013 	andeq	r2, fp, r3, lsl r0
    1050:	012e1b00 	teqeq	lr, r0, lsl #22
    1054:	0b3a0e03 	bleq	e84868 <__RW_SIZE__+0xe842e4>
    1058:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
    105c:	13010b20 	movwne	r0, #6944	; 0x1b20
    1060:	051c0000 	ldreq	r0, [ip, #-0]
    1064:	3a0e0300 	bcc	381c6c <__RW_SIZE__+0x3816e8>
    1068:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
    106c:	1d000013 	stcne	0, cr0, [r0, #-76]	; 0xffffffb4
    1070:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
    1074:	0b3a0e03 	bleq	e84888 <__RW_SIZE__+0xe84304>
    1078:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
    107c:	06120111 			; <UNDEFINED> instruction: 0x06120111
    1080:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
    1084:	00130119 	andseq	r0, r3, r9, lsl r1
    1088:	00051e00 	andeq	r1, r5, r0, lsl #28
    108c:	0b3a0e03 	bleq	e848a0 <__RW_SIZE__+0xe8431c>
    1090:	13490b3b 	movtne	r0, #39739	; 0x9b3b
    1094:	00001702 	andeq	r1, r0, r2, lsl #14
    1098:	0300341f 	movweq	r3, #1055	; 0x41f
    109c:	3b0b3a08 	blcc	2cf8c4 <__RW_SIZE__+0x2cf340>
    10a0:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    10a4:	20000017 	andcs	r0, r0, r7, lsl r0
    10a8:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    10ac:	0b3b0b3a 	bleq	ec3d9c <__RW_SIZE__+0xec3818>
    10b0:	17021349 	strne	r1, [r2, -r9, asr #6]
    10b4:	05210000 	streq	r0, [r1, #-0]!
    10b8:	3a0e0300 	bcc	381cc0 <__RW_SIZE__+0x38173c>
    10bc:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    10c0:	22000013 	andcs	r0, r0, #19
    10c4:	1331012e 	teqne	r1, #-2147483637	; 0x8000000b
    10c8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    10cc:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
    10d0:	00130119 	andseq	r0, r3, r9, lsl r1
    10d4:	00052300 	andeq	r2, r5, r0, lsl #6
    10d8:	18021331 	stmdane	r2, {r0, r4, r5, r8, r9, ip}
    10dc:	05240000 	streq	r0, [r4, #-0]!
    10e0:	02133100 	andseq	r3, r3, #0, 2
    10e4:	25000017 	strcs	r0, [r0, #-23]	; 0xffffffe9
    10e8:	1331011d 	teqne	r1, #1073741831	; 0x40000007
    10ec:	17550152 			; <UNDEFINED> instruction: 0x17550152
    10f0:	0b590b58 	bleq	1643e58 <__RW_SIZE__+0x16438d4>
    10f4:	2e260000 	cdpcs	0, 2, cr0, cr6, cr0, {0}
    10f8:	03193f01 	tsteq	r9, #1, 30
    10fc:	3b0b3a0e 	blcc	2cf93c <__RW_SIZE__+0x2cf3b8>
    1100:	1119270b 	tstne	r9, fp, lsl #14
    1104:	40061201 	andmi	r1, r6, r1, lsl #4
    1108:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    110c:	00001301 	andeq	r1, r0, r1, lsl #6
    1110:	03000527 	movweq	r0, #1319	; 0x527
    1114:	3b0b3a08 	blcc	2cf93c <__RW_SIZE__+0x2cf3b8>
    1118:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    111c:	28000018 	stmdacs	r0, {r3, r4}
    1120:	00000018 	andeq	r0, r0, r8, lsl r0
    1124:	03003429 	movweq	r3, #1065	; 0x429
    1128:	3b0b3a08 	blcc	2cf950 <__RW_SIZE__+0x2cf3cc>
    112c:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
    1130:	2a000018 	bcs	1198 <__RW_SIZE__+0xc14>
    1134:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
    1138:	0b3b0b3a 	bleq	ec3e28 <__RW_SIZE__+0xec38a4>
    113c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
    1140:	1d2b0000 	stcne	0, cr0, [fp, #-0]
    1144:	52133101 	andspl	r3, r3, #1073741824	; 0x40000000
    1148:	58175501 	ldmdapl	r7, {r0, r8, sl, ip, lr}
    114c:	010b590b 	tsteq	fp, fp, lsl #18
    1150:	2c000013 	stccs	0, cr0, [r0], {19}
    1154:	01018289 	smlabbeq	r1, r9, r2, r8
    1158:	13310111 	teqne	r1, #1073741828	; 0x40000004
    115c:	8a2d0000 	bhi	b41164 <__RW_SIZE__+0xb40be0>
    1160:	02000182 	andeq	r0, r0, #-2147483616	; 0x80000020
    1164:	18429118 	stmdane	r2, {r3, r4, r8, ip, pc}^
    1168:	2e2e0000 	cdpcs	0, 2, cr0, cr14, cr0, {0}
    116c:	11133100 	tstne	r3, r0, lsl #2
    1170:	40061201 	andmi	r1, r6, r1, lsl #4
    1174:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
    1178:	2e2f0000 	cdpcs	0, 2, cr0, cr15, cr0, {0}
    117c:	03193f01 	tsteq	r9, #1, 30
    1180:	3b0b3a0e 	blcc	2cf9c0 <__RW_SIZE__+0x2cf43c>
    1184:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1188:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
    118c:	97184006 	ldrls	r4, [r8, -r6]
    1190:	13011942 	movwne	r1, #6466	; 0x1942
    1194:	34300000 	ldrtcc	r0, [r0], #-0
    1198:	3a080300 	bcc	201da0 <__RW_SIZE__+0x20181c>
    119c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11a0:	31000013 	tstcc	r0, r3, lsl r0
    11a4:	1331001d 	teqne	r1, #29
    11a8:	06120111 			; <UNDEFINED> instruction: 0x06120111
    11ac:	0b590b58 	bleq	1643f14 <__RW_SIZE__+0x1643990>
    11b0:	05320000 	ldreq	r0, [r2, #-0]!
    11b4:	3a080300 	bcc	201dbc <__RW_SIZE__+0x201838>
    11b8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
    11bc:	00170213 	andseq	r0, r7, r3, lsl r2
    11c0:	00053300 	andeq	r3, r5, r0, lsl #6
    11c4:	0b1c1331 	bleq	705e90 <__RW_SIZE__+0x70590c>
    11c8:	1d340000 	ldcne	0, cr0, [r4, #-0]
    11cc:	11133101 	tstne	r3, r1, lsl #2
    11d0:	58061201 	stmdapl	r6, {r0, r9, ip}
    11d4:	000b590b 	andeq	r5, fp, fp, lsl #18
    11d8:	002e3500 	eoreq	r3, lr, r0, lsl #10
    11dc:	0e03193f 	mcreq	9, 0, r1, cr3, cr15, {1}
    11e0:	0b3b0b3a 	bleq	ec3ed0 <__RW_SIZE__+0xec394c>
    11e4:	01111927 	tsteq	r1, r7, lsr #18
    11e8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
    11ec:	00194297 	mulseq	r9, r7, r2
    11f0:	00343600 	eorseq	r3, r4, r0, lsl #12
    11f4:	0b3a0e03 	bleq	e84a08 <__RW_SIZE__+0xe84484>
    11f8:	1349053b 	movtne	r0, #38203	; 0x953b
    11fc:	193c193f 	ldmdbne	ip!, {r0, r1, r2, r3, r4, r5, r8, fp, ip}
    1200:	2e370000 	cdpcs	0, 3, cr0, cr7, cr0, {0}
    1204:	03193f01 	tsteq	r9, #1, 30
    1208:	3b0b3a0e 	blcc	2cfa48 <__RW_SIZE__+0x2cf4c4>
    120c:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
    1210:	00193c13 	andseq	r3, r9, r3, lsl ip
    1214:	00053800 	andeq	r3, r5, r0, lsl #16
    1218:	00001349 	andeq	r1, r0, r9, asr #6
    121c:	00110100 	andseq	r0, r1, r0, lsl #2
    1220:	01110610 	tsteq	r1, r0, lsl r6
    1224:	08030112 	stmdaeq	r3, {r1, r4, r8}
    1228:	0825081b 	stmdaeq	r5!, {r0, r1, r3, r4, fp}
    122c:	00000513 	andeq	r0, r0, r3, lsl r5
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	080031ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, ip, sp}
  14:	00000058 	andeq	r0, r0, r8, asr r0
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	01cb0002 	biceq	r0, fp, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	08003244 	stmdaeq	r0, {r2, r6, r9, ip, sp}
  34:	000000a2 	andeq	r0, r0, r2, lsr #1
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	06d40002 	ldrbeq	r0, [r4], r2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	080032e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, ip, sp}
  54:	000001ba 			; <UNDEFINED> instruction: 0x000001ba
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	0e2a0002 	cdpeq	0, 2, cr0, cr10, cr2, {0}
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	080034a4 	stmdaeq	r0, {r2, r5, r7, sl, ip, sp}
  74:	00000158 	andeq	r0, r0, r8, asr r1
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	15180002 	ldrne	r0, [r8, #-2]
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	080035fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
  94:	00000072 	andeq	r0, r0, r2, ror r0
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	17130002 	ldrne	r0, [r3, -r2]
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	08003670 	stmdaeq	r0, {r4, r5, r6, r9, sl, ip, sp}
  b4:	000000c0 	andeq	r0, r0, r0, asr #1
	...
  c0:	0000001c 	andeq	r0, r0, ip, lsl r0
  c4:	1b240002 	blne	9000d4 <__RW_SIZE__+0x8ffb50>
  c8:	00040000 	andeq	r0, r4, r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	08003730 	stmdaeq	r0, {r4, r5, r8, r9, sl, ip, sp}
  d4:	00000044 	andeq	r0, r0, r4, asr #32
	...
  e0:	0000001c 	andeq	r0, r0, ip, lsl r0
  e4:	1c230002 	stcne	0, cr0, [r3], #-8
  e8:	00040000 	andeq	r0, r4, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	08003774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
  f4:	000006aa 	andeq	r0, r0, sl, lsr #13
	...
 100:	0000001c 	andeq	r0, r0, ip, lsl r0
 104:	331a0002 	tstcc	sl, #2
 108:	00040000 	andeq	r0, r4, r0
 10c:	00000000 	andeq	r0, r0, r0
 110:	08003e20 	stmdaeq	r0, {r5, r9, sl, fp, ip, sp}
 114:	000000c8 	andeq	r0, r0, r8, asr #1
	...
 120:	0000001c 	andeq	r0, r0, ip, lsl r0
 124:	349e0002 	ldrcc	r0, [lr], #2
 128:	00040000 	andeq	r0, r4, r0
 12c:	00000000 	andeq	r0, r0, r0
 130:	08003ee8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, fp, ip, sp}
 134:	0000037c 	andeq	r0, r0, ip, ror r3
	...
 140:	0000001c 	andeq	r0, r0, ip, lsl r0
 144:	3cf30002 	ldclcc	0, cr0, [r3], #8
 148:	00040000 	andeq	r0, r4, r0
 14c:	00000000 	andeq	r0, r0, r0
 150:	08004268 	stmdaeq	r0, {r3, r5, r6, r9, lr}
 154:	0000021c 	andeq	r0, r0, ip, lsl r2
	...
 160:	0000001c 	andeq	r0, r0, ip, lsl r0
 164:	44e60002 	strbtmi	r0, [r6], #2
 168:	00040000 	andeq	r0, r4, r0
 16c:	00000000 	andeq	r0, r0, r0
 170:	08003000 	stmdaeq	r0, {ip, sp}
 174:	000001ec 	andeq	r0, r0, ip, ror #3
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	000000a3 	andeq	r0, r0, r3, lsr #1
   4:	007f0002 	rsbseq	r0, pc, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	43010000 	movwmi	r0, #4096	; 0x1000
  1c:	6f435c3a 	svcvs	0x00435c3a
  20:	6f536564 	svcvs	0x00536564
  24:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
  28:	535c7972 	cmppl	ip, #1867776	; 0x1c8000
  2c:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
  30:	20797265 	rsbscs	r7, r9, r5, ror #4
  34:	202b2b47 	eorcs	r2, fp, r7, asr #22
  38:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0xfffff6b4
  3c:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
  40:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
  44:	61652d65 	cmnvs	r5, r5, ror #26
  48:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
  4c:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
  50:	00006564 	andeq	r6, r0, r4, ror #10
  54:	636f6c63 	cmnvs	pc, #25344	; 0x6300
  58:	00632e6b 	rsbeq	r2, r3, fp, ror #28
  5c:	73000000 	movwvc	r0, #0
  60:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
  64:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
  68:	0000682e 	andeq	r6, r0, lr, lsr #16
  6c:	74730000 	ldrbtvc	r0, [r3], #-0
  70:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
  74:	0100682e 	tsteq	r0, lr, lsr #16
  78:	6f630000 	svcvs	0x00630000
  7c:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
  80:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
  84:	00000000 	andeq	r0, r0, r0
  88:	02050000 	andeq	r0, r5, #0
  8c:	080031ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, ip, sp}
  90:	21671315 	cmncs	r7, r5, lsl r3
  94:	212d2f2d 	teqcs	sp, sp, lsr #30
  98:	001f2121 	andseq	r2, pc, r1, lsr #2
  9c:	3d010402 	cfstrscc	mvf0, [r1, #-8]
  a0:	07029f75 	smlsdxeq	r2, r5, pc, r9	; <UNPREDICTABLE>
  a4:	e2010100 	and	r0, r1, #0, 2
  a8:	02000000 	andeq	r0, r0, #0
  ac:	00006500 	andeq	r6, r0, r0, lsl #10
  b0:	fb010200 	blx	408ba <__RW_SIZE__+0x40336>
  b4:	01000d0e 	tsteq	r0, lr, lsl #26
  b8:	00010101 	andeq	r0, r1, r1, lsl #2
  bc:	00010000 	andeq	r0, r1, r0
  c0:	3a430100 	bcc	10c04c8 <__RW_SIZE__+0x10bff44>
  c4:	646f435c 	strbtvs	r4, [pc], #-860	; cc <shift+0xcc>
  c8:	756f5365 	strbvc	r5, [pc, #-869]!	; fffffd6b <MSP_BASE+0xdfffad6b>
  cc:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
  d0:	6f535c79 	svcvs	0x00535c79
  d4:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
  d8:	47207972 			; <UNDEFINED> instruction: 0x47207972
  dc:	4c202b2b 	stcmi	11, cr2, [r0], #-172	; 0xffffff54
  e0:	2f657469 	svccs	0x00657469
  e4:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
  e8:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
  ec:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
  f0:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
  f4:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
  f8:	63000065 	movwvs	r0, #101	; 0x65
  fc:	5f65726f 	svcpl	0x0065726f
 100:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
 104:	00000063 	andeq	r0, r0, r3, rrx
 108:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
 10c:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
 110:	00010068 	andeq	r0, r1, r8, rrx
 114:	05000000 	streq	r0, [r0, #-0]
 118:	00324402 	eorseq	r4, r2, r2, lsl #8
 11c:	03bf0308 			; <UNDEFINED> instruction: 0x03bf0308
 120:	034e1501 	movteq	r1, #58625	; 0xe501
 124:	4c13010c 	ldfmis	f0, [r3], {12}
 128:	15010c03 	strne	r0, [r1, #-3075]	; 0xfffff3fd
 12c:	010c034e 	tsteq	ip, lr, asr #6
 130:	0a034c13 	beq	d3184 <__RW_SIZE__+0xd2c00>
 134:	03301501 	teqeq	r0, #4194304	; 0x400000
 138:	03132e0a 	tsteq	r3, #10, 28	; 0xa0
 13c:	30154a0b 	andscc	r4, r5, fp, lsl #20
 140:	132e0a03 	teqne	lr, #12288	; 0x3000
 144:	154a0b03 	strbne	r0, [sl, #-2819]	; 0xfffff4fd
 148:	2e0a0330 	mcrcs	3, 0, r0, cr10, cr0, {1}
 14c:	4a0b0313 	bmi	2c0da0 <__RW_SIZE__+0x2c081c>
 150:	0a033015 	beq	cc1ac <__RW_SIZE__+0xcbc28>
 154:	0d03132e 	stceq	3, cr1, [r3, #-184]	; 0xffffff48
 158:	0322154a 	teqeq	r2, #310378496	; 0x12800000
 15c:	2215200b 	andscs	r2, r5, #11
 160:	15200b03 	strne	r0, [r0, #-2819]!	; 0xfffff4fd
 164:	200b0322 	andcs	r0, fp, r2, lsr #6
 168:	0b033015 	bleq	cc1c4 <__RW_SIZE__+0xcbc40>
 16c:	0330152e 	teqeq	r0, #192937984	; 0xb800000
 170:	30152e0b 	andscc	r2, r5, fp, lsl #28
 174:	152e0b03 	strne	r0, [lr, #-2819]!	; 0xfffff4fd
 178:	2e0c0330 	mcrcs	3, 0, r0, cr12, cr0, {1}
 17c:	0c033e15 	stceq	14, cr3, [r3], {21}
 180:	033e1520 	teqeq	lr, #32, 10	; 0x8000000
 184:	3015200c 	andscc	r2, r5, ip
 188:	01000102 	tsteq	r0, r2, lsl #2
 18c:	00016201 	andeq	r6, r1, r1, lsl #4
 190:	90000200 	andls	r0, r0, r0, lsl #4
 194:	02000000 	andeq	r0, r0, #0
 198:	0d0efb01 	vstreq	d15, [lr, #-4]
 19c:	01010100 	mrseq	r0, (UNDEF: 17)
 1a0:	00000001 	andeq	r0, r0, r1
 1a4:	01000001 	tsteq	r0, r1
 1a8:	435c3a43 	cmpmi	ip, #274432	; 0x43000
 1ac:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
 1b0:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
 1b4:	5c797265 	lfmpl	f7, 2, [r9], #-404	; 0xfffffe6c
 1b8:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 1bc:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 1c0:	2b2b4720 	blcs	ad1e48 <__RW_SIZE__+0xad18c4>
 1c4:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xfffff3e0
 1c8:	72612f65 	rsbvc	r2, r1, #404	; 0x194
 1cc:	6f6e2d6d 	svcvs	0x006e2d6d
 1d0:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 1d4:	2f696261 	svccs	0x00696261
 1d8:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 1dc:	00656475 	rsbeq	r6, r5, r5, ror r4
 1e0:	616d6400 	cmnvs	sp, r0, lsl #8
 1e4:	0000632e 	andeq	r6, r0, lr, lsr #6
 1e8:	6f630000 	svcvs	0x00630000
 1ec:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
 1f0:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
 1f4:	00000000 	andeq	r0, r0, r0
 1f8:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 1fc:	30316632 	eorscc	r6, r1, r2, lsr r6
 200:	00682e78 	rsbeq	r2, r8, r8, ror lr
 204:	73000000 	movwvc	r0, #0
 208:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 20c:	00682e74 	rsbeq	r2, r8, r4, ror lr
 210:	64000001 	strvs	r0, [r0], #-1
 214:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 218:	72645f65 	rsbvc	r5, r4, #404	; 0x194
 21c:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 220:	0000682e 	andeq	r6, r0, lr, lsr #16
 224:	00000000 	andeq	r0, r0, r0
 228:	32e80205 	rsccc	r0, r8, #1342177280	; 0x50000000
 22c:	21180800 	tstcs	r8, r0, lsl #16
 230:	3a302c5a 	bcc	c0b3a0 <__RW_SIZE__+0xc0ae1c>
 234:	3c120322 	ldccc	3, cr0, [r2], {34}	; 0x22
 238:	2f1f2165 	svccs	0x001f2165
 23c:	213c7003 	teqcs	ip, r3
 240:	831f2121 	tsthi	pc, #1073741832	; 0x40000008
 244:	2d229321 	stccs	3, cr9, [r2, #-132]!	; 0xffffff7c
 248:	1f214921 	svcne	0x00214921
 24c:	301e3d2f 	andscc	r3, lr, pc, lsr #26
 250:	4d21301e 	stcmi	0, cr3, [r1, #-120]!	; 0xffffff88
 254:	49212d22 	stmdbmi	r1!, {r1, r5, r8, sl, fp, sp}
 258:	2d3d1f2f 	ldccs	15, cr1, [sp, #-188]!	; 0xffffff44
 25c:	2f3f212f 	svccs	0x003f212f
 260:	04213a4f 	strteq	r3, [r1], #-2639	; 0xfffff5b1
 264:	0bf00302 	bleq	ffc00e74 <MSP_BASE+0xdfbfbe74>
 268:	03010420 	movweq	r0, #5152	; 0x1420
 26c:	042e7490 	strteq	r7, [lr], #-1168	; 0xfffffb70
 270:	0bf00302 	bleq	ffc00e80 <MSP_BASE+0xdfbfbe80>
 274:	0301042e 	movweq	r0, #5166	; 0x142e
 278:	2c2e7490 	cfstrscs	mvf7, [lr], #-576	; 0xfffffdc0
 27c:	02047367 	andeq	r7, r4, #-1677721599	; 0x9c000001
 280:	2e0bf203 	cdpcs	2, 0, cr15, cr11, cr3, {0}
 284:	8e030104 	adfhis	f0, f3, f4
 288:	04212074 	strteq	r2, [r1], #-116	; 0xffffff8c
 28c:	0bf10302 	bleq	ffc40e9c <MSP_BASE+0xdfc3be9c>
 290:	03010466 	movweq	r0, #5222	; 0x1466
 294:	9f20748f 	svcls	0x0020748f
 298:	212d3d3b 	teqcs	sp, fp, lsr sp
 29c:	f0030204 			; <UNDEFINED> instruction: 0xf0030204
 2a0:	4b032e0b 	blmi	cbad4 <__RW_SIZE__+0xcb550>
 2a4:	0301042e 	movweq	r0, #5166	; 0x142e
 2a8:	3a2074ce 	bcc	81d5e8 <__RW_SIZE__+0x81d064>
 2ac:	c1030204 	tstgt	r3, r4, lsl #4
 2b0:	01043c0b 	tsteq	r4, fp, lsl #24
 2b4:	4a74be03 	bmi	1d2fac8 <__RW_SIZE__+0x1d2f544>
 2b8:	c2030204 	andgt	r0, r3, #4, 4	; 0x40000000
 2bc:	0104740b 	tsteq	r4, fp, lsl #8
 2c0:	2074be03 	rsbscs	fp, r4, r3, lsl #28
 2c4:	c2030204 	andgt	r0, r3, #4, 4	; 0x40000000
 2c8:	0104200b 	tsteq	r4, fp
 2cc:	3c74be03 	ldclcc	14, cr11, [r4], #-12
 2d0:	c2030204 	andgt	r0, r3, #4, 4	; 0x40000000
 2d4:	01042e0b 	tsteq	r4, fp, lsl #28
 2d8:	3c74be03 	ldclcc	14, cr11, [r4], #-12
 2dc:	c2030204 	andgt	r0, r3, #4, 4	; 0x40000000
 2e0:	0104200b 	tsteq	r4, fp
 2e4:	2e74c103 	expcss	f4, f3
 2e8:	1586133f 	strne	r1, [r6, #831]	; 0x33f
 2ec:	01025a76 	tsteq	r2, r6, ror sl
 2f0:	14010100 	strne	r0, [r1], #-256	; 0xffffff00
 2f4:	02000001 	andeq	r0, r0, #1
 2f8:	00007d00 	andeq	r7, r0, r0, lsl #26
 2fc:	fb010200 	blx	40b06 <__RW_SIZE__+0x40582>
 300:	01000d0e 	tsteq	r0, lr, lsl #26
 304:	00010101 	andeq	r0, r1, r1, lsl #2
 308:	00010000 	andeq	r0, r1, r0
 30c:	3a430100 	bcc	10c0714 <__RW_SIZE__+0x10c0190>
 310:	646f435c 	strbtvs	r4, [pc], #-860	; 318 <__ZI_SIZE__+0x140>
 314:	756f5365 	strbvc	r5, [pc, #-869]!	; ffffffb7 <MSP_BASE+0xdfffafb7>
 318:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
 31c:	6f535c79 	svcvs	0x00535c79
 320:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
 324:	47207972 			; <UNDEFINED> instruction: 0x47207972
 328:	4c202b2b 	stcmi	11, cr2, [r0], #-172	; 0xffffff54
 32c:	2f657469 	svccs	0x00657469
 330:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 334:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 338:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 33c:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
 340:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 344:	6b000065 	blvs	4e0 <MSP_SIZE+0xe0>
 348:	632e7965 	teqvs	lr, #1654784	; 0x194000
 34c:	00000000 	andeq	r0, r0, r0
 350:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
 354:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
 358:	0000682e 	andeq	r6, r0, lr, lsr #16
 35c:	74730000 	ldrbtvc	r0, [r3], #-0
 360:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
 364:	2e783031 	mrccs	0, 3, r3, cr8, cr1, {1}
 368:	00000068 	andeq	r0, r0, r8, rrx
 36c:	64747300 	ldrbtvs	r7, [r4], #-768	; 0xfffffd00
 370:	2e746e69 	cdpcs	14, 7, cr6, cr4, cr9, {3}
 374:	00010068 	andeq	r0, r1, r8, rrx
 378:	05000000 	streq	r0, [r0, #-0]
 37c:	0034a402 	eorseq	sl, r4, r2, lsl #8
 380:	59131508 	ldmdbpl	r3, {r3, r8, sl, ip}
 384:	0b033d2d 	bleq	cf840 <__RW_SIZE__+0xcf2bc>
 388:	0d030e9e 	stceq	14, cr0, [r3, #-632]	; 0xfffffd88
 38c:	0c032cf2 	stceq	12, cr2, [r3], {242}	; 0xf2
 390:	6603312e 	strvs	r3, [r3], -lr, lsr #2
 394:	f20d0301 	vcgt.s8	d0, d13, d1
 398:	2e10032c 	cdpcs	3, 1, cr0, cr0, cr12, {1}
 39c:	6103312f 	tstvs	r3, pc, lsr #2
 3a0:	f20d0301 	vcgt.s8	d0, d13, d1
 3a4:	2e17032c 	cdpcs	3, 1, cr0, cr7, cr12, {1}
 3a8:	04213130 	strteq	r3, [r1], #-304	; 0xfffffed0
 3ac:	0bb80302 	bleq	fee00fbc <MSP_BASE+0xdedfbfbc>
 3b0:	03010420 	movweq	r0, #5152	; 0x1420
 3b4:	046674d9 	strbteq	r7, [r6], #-1241	; 0xfffffb27
 3b8:	0ba70302 	bleq	fe9c0fc8 <MSP_BASE+0xde9bbfc8>
 3bc:	0301042e 	movweq	r0, #5166	; 0x142e
 3c0:	672e74d9 			; <UNDEFINED> instruction: 0x672e74d9
 3c4:	3c6e034c 	stclcc	3, cr0, [lr], #-304	; 0xfffffed0
 3c8:	223d2b5b 	eorscs	r2, sp, #93184	; 0x16c00
 3cc:	1f213e2c 	svcne	0x00213e2c
 3d0:	592d3d59 	pushpl	{r0, r3, r4, r6, r8, sl, fp, ip, sp}
 3d4:	d9030204 	stmdble	r3, {r2, r9}
 3d8:	01043c0b 	tsteq	r4, fp, lsl #24
 3dc:	2e74a703 	cdpcs	7, 7, cr10, cr4, cr3, {0}
 3e0:	0302042f 	movweq	r0, #9263	; 0x242f
 3e4:	04200bd8 	strteq	r0, [r0], #-3032	; 0xfffff428
 3e8:	74a70301 	strtvc	r0, [r7], #769	; 0x301
 3ec:	0204214a 	andeq	r2, r4, #-2147483630	; 0x80000012
 3f0:	200bd803 	andcs	sp, fp, r3, lsl #16
 3f4:	aa030104 	bge	c080c <__RW_SIZE__+0xc0288>
 3f8:	02042e74 	andeq	r2, r4, #116, 28	; 0x740
 3fc:	4a0ba103 	bmi	2e8810 <__RW_SIZE__+0x2e828c>
 400:	e9030104 	stmdb	r3, {r2, r8}
 404:	03022074 	movweq	r2, #8308	; 0x2074
 408:	9b010100 	blls	40810 <__RW_SIZE__+0x4028c>
 40c:	02000000 	andeq	r0, r0, #0
 410:	00007d00 	andeq	r7, r0, r0, lsl #26
 414:	fb010200 	blx	40c1e <__RW_SIZE__+0x4069a>
 418:	01000d0e 	tsteq	r0, lr, lsl #26
 41c:	00010101 	andeq	r0, r1, r1, lsl #2
 420:	00010000 	andeq	r0, r1, r0
 424:	3a430100 	bcc	10c082c <__RW_SIZE__+0x10c02a8>
 428:	646f435c 	strbtvs	r4, [pc], #-860	; 430 <MSP_SIZE+0x30>
 42c:	756f5365 	strbvc	r5, [pc, #-869]!	; cf <shift+0xcf>
 430:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
 434:	6f535c79 	svcvs	0x00535c79
 438:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
 43c:	47207972 			; <UNDEFINED> instruction: 0x47207972
 440:	4c202b2b 	stcmi	11, cr2, [r0], #-172	; 0xffffff54
 444:	2f657469 	svccs	0x00657469
 448:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 44c:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 450:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 454:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
 458:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 45c:	6c000065 	stcvs	0, cr0, [r0], {101}	; 0x65
 460:	632e6465 	teqvs	lr, #1694498816	; 0x65000000
 464:	00000000 	andeq	r0, r0, r0
 468:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 46c:	30316632 	eorscc	r6, r1, r2, lsr r6
 470:	00682e78 	rsbeq	r2, r8, r8, ror lr
 474:	73000000 	movwvc	r0, #0
 478:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 47c:	00682e74 	rsbeq	r2, r8, r4, ror lr
 480:	63000001 	movwvs	r0, #1
 484:	5f65726f 	svcpl	0x0065726f
 488:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
 48c:	00000068 	andeq	r0, r0, r8, rrx
 490:	05000000 	streq	r0, [r0, #-0]
 494:	0035fc02 	eorseq	pc, r5, r2, lsl #24
 498:	59131508 	ldmdbpl	r3, {r3, r8, sl, ip}
 49c:	6a833d2d 	bvs	fe0cf958 <MSP_BASE+0xde0ca958>
 4a0:	a213da13 	andsge	sp, r3, #77824	; 0x13000
 4a4:	00090213 	andeq	r0, r9, r3, lsl r2
 4a8:	00d80101 	sbcseq	r0, r8, r1, lsl #2
 4ac:	00020000 	andeq	r0, r2, r0
 4b0:	00000082 	andeq	r0, r0, r2, lsl #1
 4b4:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 4b8:	0101000d 	tsteq	r1, sp
 4bc:	00000101 	andeq	r0, r0, r1, lsl #2
 4c0:	00000100 	andeq	r0, r0, r0, lsl #2
 4c4:	5c3a4301 	ldcpl	3, cr4, [sl], #-4
 4c8:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 4cc:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 4d0:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 4d4:	756f535c 	strbvc	r5, [pc, #-860]!	; 180 <shift+0x180>
 4d8:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
 4dc:	2b472079 	blcs	11c86c8 <__RW_SIZE__+0x11c8144>
 4e0:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
 4e4:	612f6574 	teqvs	pc, r4, ror r5	; <UNPREDICTABLE>
 4e8:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 4ec:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 4f0:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 4f4:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 4f8:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 4fc:	616d0000 	cmnvs	sp, r0
 500:	632e6e69 	teqvs	lr, #1680	; 0x690
 504:	00000000 	andeq	r0, r0, r0
 508:	69647473 	stmdbvs	r4!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
 50c:	682e746e 	stmdavs	lr!, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
 510:	00000100 	andeq	r0, r0, r0, lsl #2
 514:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
 518:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
 51c:	0000682e 	andeq	r6, r0, lr, lsr #16
 520:	65640000 	strbvs	r0, [r4, #-0]!
 524:	65636976 	strbvs	r6, [r3, #-2422]!	; 0xfffff68a
 528:	6972645f 	ldmdbvs	r2!, {r0, r1, r2, r3, r4, r6, sl, sp, lr}^
 52c:	2e726576 	mrccs	5, 3, r6, cr2, cr6, {3}
 530:	00000068 	andeq	r0, r0, r8, rrx
 534:	05000000 	streq	r0, [r0, #-0]
 538:	00367002 	eorseq	r7, r6, r2
 53c:	01170308 	tsteq	r7, r8, lsl #6
 540:	2f206d03 	svccs	0x00206d03
 544:	83304b2f 	teqhi	r0, #48128	; 0xbc00
 548:	03201103 	teqeq	r0, #-1073741824	; 0xc0000000
 54c:	12032e6e 	andne	r2, r3, #1760	; 0x6e0
 550:	2e6f0320 	cdpcs	3, 6, cr0, cr15, cr0, {1}
 554:	30201103 	eorcc	r1, r0, r3, lsl #2
 558:	10033a78 	andne	r3, r3, r8, ror sl
 55c:	040200e4 	streq	r0, [r2], #-228	; 0xffffff1c
 560:	02001f02 	andeq	r1, r0, #2, 30
 564:	00640204 	rsbeq	r0, r4, r4, lsl #4
 568:	22020402 	andcs	r0, r2, #33554432	; 0x2000000
 56c:	02040200 	andeq	r0, r4, #0, 4
 570:	0402002c 	streq	r0, [r2], #-44	; 0xffffffd4
 574:	02002302 	andeq	r2, r0, #134217728	; 0x8000000
 578:	032b0204 	teqeq	fp, #4, 4	; 0x40000000
 57c:	771c900c 	ldrvc	r9, [ip, -ip]
 580:	00060275 	andeq	r0, r6, r5, ror r2
 584:	00520101 	subseq	r0, r2, r1, lsl #2
 588:	00020000 	andeq	r0, r2, r0
 58c:	0000002e 	andeq	r0, r0, lr, lsr #32
 590:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 594:	0101000d 	tsteq	r1, sp
 598:	00000101 	andeq	r0, r0, r1, lsl #2
 59c:	00000100 	andeq	r0, r0, r0, lsl #2
 5a0:	75720001 	ldrbvc	r0, [r2, #-1]!
 5a4:	6d69746e 	cfstrdvs	mvd7, [r9, #-440]!	; 0xfffffe48
 5a8:	00632e65 	rsbeq	r2, r3, r5, ror #28
 5ac:	63000000 	movwvs	r0, #0
 5b0:	5f65726f 	svcpl	0x0065726f
 5b4:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
 5b8:	00000068 	andeq	r0, r0, r8, rrx
 5bc:	05000000 	streq	r0, [r0, #-0]
 5c0:	00373002 	eorseq	r3, r7, r2
 5c4:	03271508 	teqeq	r7, #8, 10	; 0x2000000
 5c8:	5b275879 	blpl	9d67b4 <__RW_SIZE__+0x9d6230>
 5cc:	242c3e4c 	strtcs	r3, [ip], #-3660	; 0xfffff1b4
 5d0:	01040200 	mrseq	r0, R12_usr
 5d4:	023c7703 	eorseq	r7, ip, #786432	; 0xc0000
 5d8:	01010009 	tsteq	r1, r9
 5dc:	000003af 	andeq	r0, r0, pc, lsr #7
 5e0:	00990002 	addseq	r0, r9, r2
 5e4:	01020000 	mrseq	r0, (UNDEF: 2)
 5e8:	000d0efb 	strdeq	r0, [sp], -fp
 5ec:	01010101 	tsteq	r1, r1, lsl #2
 5f0:	01000000 	mrseq	r0, (UNDEF: 0)
 5f4:	43010000 	movwmi	r0, #4096	; 0x1000
 5f8:	6f435c3a 	svcvs	0x00435c3a
 5fc:	6f536564 	svcvs	0x00536564
 600:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
 604:	535c7972 	cmppl	ip, #1867776	; 0x1c8000
 608:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
 60c:	20797265 	rsbscs	r7, r9, r5, ror #4
 610:	202b2b47 	eorcs	r2, fp, r7, asr #22
 614:	6574694c 	ldrbvs	r6, [r4, #-2380]!	; 0xfffff6b4
 618:	6d72612f 	ldfvse	f6, [r2, #-188]!	; 0xffffff44
 61c:	6e6f6e2d 	cdpvs	14, 6, cr6, cr15, cr13, {1}
 620:	61652d65 	cmnvs	r5, r5, ror #26
 624:	692f6962 	stmdbvs	pc!, {r1, r5, r6, r8, fp, sp, lr}	; <UNPREDICTABLE>
 628:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 62c:	00006564 	andeq	r6, r0, r4, ror #10
 630:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 634:	30316632 	eorscc	r6, r1, r2, lsr r6
 638:	74695f78 	strbtvc	r5, [r9], #-3960	; 0xfffff088
 63c:	0000632e 	andeq	r6, r0, lr, lsr #6
 640:	6f630000 	svcvs	0x00630000
 644:	635f6572 	cmpvs	pc, #478150656	; 0x1c800000
 648:	682e336d 	stmdavs	lr!, {r0, r2, r3, r5, r6, r8, r9, ip, sp}
 64c:	00000000 	andeq	r0, r0, r0
 650:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 654:	30316632 	eorscc	r6, r1, r2, lsr r6
 658:	00682e78 	rsbeq	r2, r8, r8, ror lr
 65c:	73000000 	movwvc	r0, #0
 660:	6e696474 	mcrvs	4, 3, r6, cr9, cr4, {3}
 664:	00682e74 	rsbeq	r2, r8, r4, ror lr
 668:	64000001 	strvs	r0, [r0], #-1
 66c:	63697665 	cmnvs	r9, #105906176	; 0x6500000
 670:	72645f65 	rsbvc	r5, r4, #404	; 0x194
 674:	72657669 	rsbvc	r7, r5, #110100480	; 0x6900000
 678:	0000682e 	andeq	r6, r0, lr, lsr #16
 67c:	00000000 	andeq	r0, r0, r0
 680:	37740205 	ldrbcc	r0, [r4, -r5, lsl #4]!
 684:	25030800 	strcs	r0, [r3, #-2048]	; 0xfffff800
 688:	202b2301 	eorcs	r2, fp, r1, lsl #6
 68c:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
 690:	02002202 	andeq	r2, r0, #536870912	; 0x20000000
 694:	00aa0204 	adceq	r0, sl, r4, lsl #4
 698:	22020402 	andcs	r0, r2, #33554432	; 0x2000000
 69c:	02040200 	andeq	r0, r4, #0, 4
 6a0:	7003402c 	andvc	r4, r3, ip, lsr #32
 6a4:	03c9214a 	biceq	r2, r9, #-2147483630	; 0x80000012
 6a8:	2d13ba2a 	vldrcs	s22, [r3, #-168]	; 0xffffff58
 6ac:	580c0321 	stmdapl	ip, {r0, r5, r8, r9}
 6b0:	2d212d21 	stccs	13, cr2, [r1, #-132]!	; 0xffffff7c
 6b4:	2e5a032f 	cdpcs	3, 5, cr0, cr10, cr15, {1}
 6b8:	08767575 	ldmdaeq	r6!, {r0, r2, r4, r5, r6, r8, sl, ip, sp, lr}^
 6bc:	85255622 	strhi	r5, [r5, #-1570]!	; 0xfffff9de
 6c0:	741d03ad 	ldrvc	r0, [sp], #-941	; 0xfffffc53
 6c4:	75917591 	ldrvc	r7, [r1, #1425]	; 0x591
 6c8:	d7825903 	strle	r5, [r2, r3, lsl #18]
 6cc:	13e43303 	mvnne	r3, #201326592	; 0xc000000
 6d0:	0c03212d 	stfeqs	f2, [r3], {45}	; 0x2d
 6d4:	212d1358 	teqcs	sp, r8, asr r3
 6d8:	13580c03 	cmpne	r8, #768	; 0x300
 6dc:	0c03212d 	stfeqs	f2, [r3], {45}	; 0x2d
 6e0:	212d1358 	teqcs	sp, r8, asr r3
 6e4:	13580c03 	cmpne	r8, #768	; 0x300
 6e8:	0c03212d 	stfeqs	f2, [r3], {45}	; 0x2d
 6ec:	212d1358 	teqcs	sp, r8, asr r3
 6f0:	13580e03 	cmpne	r8, #3, 28	; 0x30
 6f4:	21820b03 	orrcs	r0, r2, r3, lsl #22
 6f8:	213c0b03 	teqcs	ip, r3, lsl #22
 6fc:	213c0b03 	teqcs	ip, r3, lsl #22
 700:	213c0b03 	teqcs	ip, r3, lsl #22
 704:	213c0b03 	teqcs	ip, r3, lsl #22
 708:	213c0b03 	teqcs	ip, r3, lsl #22
 70c:	213c0b03 	teqcs	ip, r3, lsl #22
 710:	213c0b03 	teqcs	ip, r3, lsl #22
 714:	213c0b03 	teqcs	ip, r3, lsl #22
 718:	213c0b03 	teqcs	ip, r3, lsl #22
 71c:	213c0b03 	teqcs	ip, r3, lsl #22
 720:	213c0d03 	teqcs	ip, r3, lsl #26
 724:	21231d76 	teqcs	r3, r6, ror sp
 728:	0402002f 	streq	r0, [r2], #-47	; 0xffffffd1
 72c:	062e0601 	strteq	r0, [lr], -r1, lsl #12
 730:	212d3d4c 	teqcs	sp, ip, asr #26
 734:	213b2f2d 	teqcs	fp, sp, lsr #30
 738:	01040200 	mrseq	r0, R12_usr
 73c:	0402002a 	streq	r0, [r2], #-42	; 0xffffffd6
 740:	09035701 	stmdbeq	r3, {r0, r8, r9, sl, ip, lr}
 744:	2075034a 	rsbscs	r0, r5, sl, asr #6
 748:	682f2f4c 	stmdavs	pc!, {r2, r3, r6, r8, r9, sl, fp, sp}	; <UNPREDICTABLE>
 74c:	03020421 	movweq	r0, #9249	; 0x2421
 750:	042e09bf 	strteq	r0, [lr], #-2495	; 0xfffff641
 754:	76c00301 	strbvc	r0, [r0], r1, lsl #6
 758:	02043d2e 	andeq	r3, r4, #2944	; 0xb80
 75c:	3c09bf03 	stccc	15, cr11, [r9], {3}
 760:	c0030104 	andgt	r0, r3, r4, lsl #2
 764:	04214a76 	strteq	r4, [r1], #-2678	; 0xfffff58a
 768:	09bf0302 	ldmibeq	pc!, {r1, r8, r9}	; <UNPREDICTABLE>
 76c:	03010420 	movweq	r0, #5152	; 0x1420
 770:	573c76bd 			; <UNDEFINED> instruction: 0x573c76bd
 774:	03661603 	cmneq	r6, #3145728	; 0x300000
 778:	2f5a2068 	svccs	0x005a2068
 77c:	0421682f 	strteq	r6, [r1], #-2095	; 0xfffff7d1
 780:	09bf0302 	ldmibeq	pc!, {r1, r8, r9}	; <UNPREDICTABLE>
 784:	0301042e 	movweq	r0, #5166	; 0x142e
 788:	3d2e76c0 	stccc	6, cr7, [lr, #-768]!	; 0xfffffd00
 78c:	bf030204 	svclt	0x00030204
 790:	01043c09 	tsteq	r4, r9, lsl #24
 794:	4a76c003 	bmi	1db07a8 <__RW_SIZE__+0x1db0224>
 798:	03020421 	movweq	r0, #9249	; 0x2421
 79c:	042009bf 	strteq	r0, [r0], #-2495	; 0xfffff641
 7a0:	76bd0301 	ldrtvc	r0, [sp], r1, lsl #6
 7a4:	2303573c 	movwcs	r5, #14140	; 0x373c
 7a8:	205b0358 	subscs	r0, fp, r8, asr r3
 7ac:	682f2f5a 	stmdavs	pc!, {r1, r3, r4, r6, r8, r9, sl, fp, sp}	; <UNPREDICTABLE>
 7b0:	03020421 	movweq	r0, #9249	; 0x2421
 7b4:	042e09bf 	strteq	r0, [lr], #-2495	; 0xfffff641
 7b8:	76c00301 	strbvc	r0, [r0], r1, lsl #6
 7bc:	02044b2e 	andeq	r4, r4, #47104	; 0xb800
 7c0:	3c09bf03 	stccc	15, cr11, [r9], {3}
 7c4:	c0030104 	andgt	r0, r3, r4, lsl #2
 7c8:	04214a76 	strteq	r4, [r1], #-2678	; 0xfffff58a
 7cc:	09bf0302 	ldmibeq	pc!, {r1, r8, r9}	; <UNPREDICTABLE>
 7d0:	03010420 	movweq	r0, #5152	; 0x1420
 7d4:	573c76bd 			; <UNDEFINED> instruction: 0x573c76bd
 7d8:	03663003 	cmneq	r6, #3
 7dc:	2f5a204e 	svccs	0x005a204e
 7e0:	0421682f 	strteq	r6, [r1], #-2095	; 0xfffff7d1
 7e4:	09bf0302 	ldmibeq	pc!, {r1, r8, r9}	; <UNPREDICTABLE>
 7e8:	0301042e 	movweq	r0, #5166	; 0x142e
 7ec:	4b2e76c0 	blmi	b9e2f4 <__RW_SIZE__+0xb9dd70>
 7f0:	bf030204 	svclt	0x00030204
 7f4:	01043c09 	tsteq	r4, r9, lsl #24
 7f8:	4a76c003 	bmi	1db080c <__RW_SIZE__+0x1db0288>
 7fc:	03020421 	movweq	r0, #9249	; 0x2421
 800:	042009bf 	strteq	r0, [r0], #-2495	; 0xfffff641
 804:	76bd0301 	ldrtvc	r0, [sp], r1, lsl #6
 808:	3d03573c 	stccc	7, cr5, [r3, #-240]	; 0xffffff10
 80c:	20410366 	subcs	r0, r1, r6, ror #6
 810:	682f2f5a 	stmdavs	pc!, {r1, r3, r4, r6, r8, r9, sl, fp, sp}	; <UNPREDICTABLE>
 814:	03020421 	movweq	r0, #9249	; 0x2421
 818:	042e09bf 	strteq	r0, [lr], #-2495	; 0xfffff641
 81c:	76c00301 	strbvc	r0, [r0], r1, lsl #6
 820:	02044b2e 	andeq	r4, r4, #47104	; 0xb800
 824:	3c09bf03 	stccc	15, cr11, [r9], {3}
 828:	c0030104 	andgt	r0, r3, r4, lsl #2
 82c:	04214a76 	strteq	r4, [r1], #-2678	; 0xfffff58a
 830:	09bf0302 	ldmibeq	pc!, {r1, r8, r9}	; <UNPREDICTABLE>
 834:	03010420 	movweq	r0, #5152	; 0x1420
 838:	573c76bd 			; <UNDEFINED> instruction: 0x573c76bd
 83c:	6600ca03 	strvs	ip, [r0], -r3, lsl #20
 840:	207fb403 	rsbscs	fp, pc, r3, lsl #8
 844:	682f2f5a 	stmdavs	pc!, {r1, r3, r4, r6, r8, r9, sl, fp, sp}	; <UNPREDICTABLE>
 848:	03020421 	movweq	r0, #9249	; 0x2421
 84c:	042e09bf 	strteq	r0, [lr], #-2495	; 0xfffff641
 850:	76c00301 	strbvc	r0, [r0], r1, lsl #6
 854:	02044b2e 	andeq	r4, r4, #47104	; 0xb800
 858:	3c09bf03 	stccc	15, cr11, [r9], {3}
 85c:	c0030104 	andgt	r0, r3, r4, lsl #2
 860:	04214a76 	strteq	r4, [r1], #-2678	; 0xfffff58a
 864:	09bf0302 	ldmibeq	pc!, {r1, r8, r9}	; <UNPREDICTABLE>
 868:	03010420 	movweq	r0, #5152	; 0x1420
 86c:	573c76bd 			; <UNDEFINED> instruction: 0x573c76bd
 870:	6600d703 	strvs	sp, [r0], -r3, lsl #14
 874:	207fa703 	rsbscs	sl, pc, r3, lsl #14
 878:	682f2f5a 	stmdavs	pc!, {r1, r3, r4, r6, r8, r9, sl, fp, sp}	; <UNPREDICTABLE>
 87c:	03020421 	movweq	r0, #9249	; 0x2421
 880:	042e09bf 	strteq	r0, [lr], #-2495	; 0xfffff641
 884:	76c00301 	strbvc	r0, [r0], r1, lsl #6
 888:	02044b2e 	andeq	r4, r4, #47104	; 0xb800
 88c:	3c09bf03 	stccc	15, cr11, [r9], {3}
 890:	c0030104 	andgt	r0, r3, r4, lsl #2
 894:	04214a76 	strteq	r4, [r1], #-2678	; 0xfffff58a
 898:	09bf0302 	ldmibeq	pc!, {r1, r8, r9}	; <UNPREDICTABLE>
 89c:	03010420 	movweq	r0, #5152	; 0x1420
 8a0:	573c76bd 			; <UNDEFINED> instruction: 0x573c76bd
 8a4:	6600e403 	strvs	lr, [r0], -r3, lsl #8
 8a8:	3c0c0321 	stccc	3, cr0, [ip], {33}	; 0x21
 8ac:	3c0c0321 	stccc	3, cr0, [ip], {33}	; 0x21
 8b0:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 8b4:	3c0b0321 	stccc	3, cr0, [fp], {33}	; 0x21
 8b8:	3c0d0321 	stccc	3, cr0, [sp], {33}	; 0x21
 8bc:	03020421 	movweq	r0, #9249	; 0x2421
 8c0:	0474089f 	ldrbteq	r0, [r4], #-2207	; 0xfffff761
 8c4:	77e10301 	strbvc	r0, [r1, r1, lsl #6]!
 8c8:	041e302e 	ldreq	r3, [lr], #-46	; 0xffffffd2
 8cc:	089f0302 	ldmeq	pc, {r1, r8, r9}	; <UNPREDICTABLE>
 8d0:	0301042e 	movweq	r0, #5166	; 0x142e
 8d4:	224a77e1 	subcs	r7, sl, #58982400	; 0x3840000
 8d8:	9d030204 	sfmls	f0, 4, [r3, #-16]
 8dc:	01042008 	tsteq	r4, r8
 8e0:	2e77e503 	cdpcs	5, 7, cr14, cr7, cr3, {0}
 8e4:	213c0a03 	teqcs	ip, r3, lsl #20
 8e8:	213c0c03 	teqcs	ip, r3, lsl #24
 8ec:	213c0c03 	teqcs	ip, r3, lsl #24
 8f0:	213c0b03 	teqcs	ip, r3, lsl #22
 8f4:	213c0b03 	teqcs	ip, r3, lsl #22
 8f8:	213c0b03 	teqcs	ip, r3, lsl #22
 8fc:	213c0d03 	teqcs	ip, r3, lsl #26
 900:	c4030204 	strgt	r0, [r3], #-516	; 0xfffffdfc
 904:	01045807 	tsteq	r4, r7, lsl #16
 908:	2e78bc03 	cdpcs	12, 7, cr11, cr8, cr3, {0}
 90c:	0302043e 	movweq	r0, #9278	; 0x243e
 910:	042e07c2 	strteq	r0, [lr], #-1986	; 0xfffff83e
 914:	78be0301 	ldmvc	lr!, {r0, r8, r9}
 918:	02041e2e 	andeq	r1, r4, #736	; 0x2e0
 91c:	2007c403 	andcs	ip, r7, r3, lsl #8
 920:	be030104 	adflts	f0, f3, f4
 924:	042c2e78 	strteq	r2, [ip], #-3704	; 0xfffff188
 928:	07c40302 	strbeq	r0, [r4, r2, lsl #6]
 92c:	03010420 	movweq	r0, #5152	; 0x1420
 930:	212e78be 			; <UNDEFINED> instruction: 0x212e78be
 934:	213c0a03 	teqcs	ip, r3, lsl #20
 938:	213c0b03 	teqcs	ip, r3, lsl #22
 93c:	213c0b03 	teqcs	ip, r3, lsl #22
 940:	213c0b03 	teqcs	ip, r3, lsl #22
 944:	213c0b03 	teqcs	ip, r3, lsl #22
 948:	213c0b03 	teqcs	ip, r3, lsl #22
 94c:	213c0e03 	teqcs	ip, r3, lsl #28
 950:	eb030204 	bl	c1168 <__RW_SIZE__+0xc0be4>
 954:	01045806 	tsteq	r4, r6, lsl #16
 958:	2e799503 	cdpcs	5, 7, cr9, cr9, cr3, {0}
 95c:	03020459 	movweq	r0, #9305	; 0x2459
 960:	042006ea 	strteq	r0, [r0], #-1770	; 0xfffff916
 964:	79950301 	ldmibvc	r5, {r0, r8, r9}
 968:	0204213c 	andeq	r2, r4, #60, 2
 96c:	2006ea03 	andcs	lr, r6, r3, lsl #20
 970:	98030104 	stmdals	r3, {r2, r8}
 974:	0a032e79 	beq	cc360 <__RW_SIZE__+0xcbddc>
 978:	0b03213c 	bleq	c8e70 <__RW_SIZE__+0xc88ec>
 97c:	0b03213c 	bleq	c8e74 <__RW_SIZE__+0xc88f0>
 980:	0b03213c 	bleq	c8e78 <__RW_SIZE__+0xc88f4>
 984:	0b03213c 	bleq	c8e7c <__RW_SIZE__+0xc88f8>
 988:	0202213c 	andeq	r2, r2, #60, 2
 98c:	9b010100 	blls	40d94 <__RW_SIZE__+0x40810>
 990:	02000000 	andeq	r0, r0, #0
 994:	00007200 	andeq	r7, r0, r0, lsl #4
 998:	fb010200 	blx	411a2 <__RW_SIZE__+0x40c1e>
 99c:	01000d0e 	tsteq	r0, lr, lsl #26
 9a0:	00010101 	andeq	r0, r1, r1, lsl #2
 9a4:	00010000 	andeq	r0, r1, r0
 9a8:	3a430100 	bcc	10c0db0 <__RW_SIZE__+0x10c082c>
 9ac:	646f435c 	strbtvs	r4, [pc], #-860	; 9b4 <__RW_SIZE__+0x430>
 9b0:	756f5365 	strbvc	r5, [pc, #-869]!	; 653 <__RW_SIZE__+0xcf>
 9b4:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
 9b8:	6f535c79 	svcvs	0x00535c79
 9bc:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
 9c0:	47207972 			; <UNDEFINED> instruction: 0x47207972
 9c4:	4c202b2b 	stcmi	11, cr2, [r0], #-172	; 0xffffff54
 9c8:	2f657469 	svccs	0x00657469
 9cc:	2d6d7261 	sfmcs	f7, 2, [sp, #-388]!	; 0xfffffe7c
 9d0:	656e6f6e 	strbvs	r6, [lr, #-3950]!	; 0xfffff092
 9d4:	6261652d 	rsbvs	r6, r1, #188743680	; 0xb400000
 9d8:	6e692f69 	cdpvs	15, 6, cr2, cr9, cr9, {3}
 9dc:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 9e0:	73000065 	movwvc	r0, #101	; 0x65
 9e4:	69747379 	ldmdbvs	r4!, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^
 9e8:	632e6b63 	teqvs	lr, #101376	; 0x18c00
 9ec:	00000000 	andeq	r0, r0, r0
 9f0:	65726f63 	ldrbvs	r6, [r2, #-3939]!	; 0xfffff09d
 9f4:	336d635f 	cmncc	sp, #2080374785	; 0x7c000001
 9f8:	0000682e 	andeq	r6, r0, lr, lsr #16
 9fc:	74730000 	ldrbtvc	r0, [r3], #-0
 a00:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
 a04:	0100682e 	tsteq	r0, lr, lsr #16
 a08:	00000000 	andeq	r0, r0, r0
 a0c:	3e200205 	cdpcc	2, 2, cr0, cr0, cr5, {0}
 a10:	21150800 	tstcs	r5, r0, lsl #16
 a14:	be21f367 	cdplt	3, 2, cr15, cr1, cr7, {3}
 a18:	133f5913 	teqne	pc, #311296	; 0x4c000
 a1c:	59132359 	ldmdbpl	r3, {r0, r3, r4, r6, r8, r9, sp}
 a20:	21861323 	orrcs	r1, r6, r3, lsr #6
 a24:	211fe567 	tstcs	pc, r7, ror #10
 a28:	000b0221 	andeq	r0, fp, r1, lsr #4
 a2c:	017f0101 	cmneq	pc, r1, lsl #2
 a30:	00020000 	andeq	r0, r2, r0
 a34:	0000007f 	andeq	r0, r0, pc, ror r0
 a38:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 a3c:	0101000d 	tsteq	r1, sp
 a40:	00000101 	andeq	r0, r0, r1, lsl #2
 a44:	00000100 	andeq	r0, r0, r0, lsl #2
 a48:	5c3a4301 	ldcpl	3, cr4, [sl], #-4
 a4c:	65646f43 	strbvs	r6, [r4, #-3907]!	; 0xfffff0bd
 a50:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 a54:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 a58:	756f535c 	strbvc	r5, [pc, #-860]!	; 704 <__RW_SIZE__+0x180>
 a5c:	72656372 	rsbvc	r6, r5, #-939524095	; 0xc8000001
 a60:	2b472079 	blcs	11c8c4c <__RW_SIZE__+0x11c86c8>
 a64:	694c202b 	stmdbvs	ip, {r0, r1, r3, r5, sp}^
 a68:	612f6574 	teqvs	pc, r4, ror r5	; <UNPREDICTABLE>
 a6c:	6e2d6d72 	mcrvs	13, 1, r6, cr13, cr2, {3}
 a70:	2d656e6f 	stclcs	14, cr6, [r5, #-444]!	; 0xfffffe44
 a74:	69626165 	stmdbvs	r2!, {r0, r2, r5, r6, r8, sp, lr}^
 a78:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 a7c:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 a80:	69740000 	ldmdbvs	r4!, {}^	; <UNPREDICTABLE>
 a84:	2e72656d 	cdpcs	5, 7, cr6, cr2, cr13, {3}
 a88:	00000063 	andeq	r0, r0, r3, rrx
 a8c:	726f6300 	rsbvc	r6, pc, #0, 6
 a90:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
 a94:	00682e33 	rsbeq	r2, r8, r3, lsr lr
 a98:	73000000 	movwvc	r0, #0
 a9c:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 aa0:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
 aa4:	0000682e 	andeq	r6, r0, lr, lsr #16
 aa8:	74730000 	ldrbtvc	r0, [r3], #-0
 aac:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
 ab0:	0100682e 	tsteq	r0, lr, lsr #16
 ab4:	00000000 	andeq	r0, r0, r0
 ab8:	3ee80205 	cdpcc	2, 14, cr0, cr8, cr5, {0}
 abc:	11030800 	tstne	r3, r0, lsl #16
 ac0:	2c5a2101 	ldfcse	f2, [sl], {1}
 ac4:	2a2f2130 	bcs	bc8f8c <__RW_SIZE__+0xbc8a08>
 ac8:	22212122 	eorcs	r2, r1, #-2147483640	; 0x80000008
 acc:	153f5959 	ldrne	r5, [pc, #-2393]!	; 17b <shift+0x17b>
 ad0:	68592d3d 	ldmdavs	r9, {r0, r2, r3, r4, r5, r8, sl, fp, sp}^
 ad4:	244a1e03 	strbcs	r1, [sl], #-3587	; 0xfffff1fd
 ad8:	2a212f5a 	bcs	84c848 <__RW_SIZE__+0x84c2c4>
 adc:	21222c30 	teqcs	r2, r0, lsr ip
 ae0:	207a0321 	rsbscs	r0, sl, r1, lsr #6
 ae4:	20790327 	rsbscs	r0, r9, r7, lsr #6
 ae8:	312b2335 	teqcc	fp, r5, lsr r3
 aec:	222c232b 	eorcs	r2, ip, #-1409286144	; 0xac000000
 af0:	593e4c1e 	ldmdbpl	lr!, {r1, r2, r3, r4, sl, fp, lr}
 af4:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
 af8:	44375901 	ldrtmi	r5, [r7], #-2305	; 0xfffff6ff
 afc:	4b1d23d7 	blmi	749a60 <__RW_SIZE__+0x7494dc>
 b00:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
 b04:	675a5901 	ldrbvs	r5, [sl, -r1, lsl #18]
 b08:	2a253367 	bcs	94d8ac <__RW_SIZE__+0x94d328>
 b0c:	2c242a4e 	stccs	10, cr2, [r4], #-312	; 0xfffffec8
 b10:	2b1f3256 	blcs	7cd470 <__RW_SIZE__+0x7cceec>
 b14:	22212122 	eorcs	r2, r1, #-2147483640	; 0x80000008
 b18:	59596759 	ldmdbpl	r9, {r0, r3, r4, r6, r8, r9, sl, sp, lr}^
 b1c:	2184133f 	orrcs	r1, r4, pc, lsr r3
 b20:	13235f1f 	teqne	r3, #31, 30	; 0x7c
 b24:	be13869f 	mrclt	6, 0, r8, cr3, cr15, {4}
 b28:	3d2c5a13 	vstmdbcc	ip!, {s10-s28}
 b2c:	213d2d21 	teqcs	sp, r1, lsr #26
 b30:	2d3d592d 	ldccs	9, cr5, [sp, #-180]!	; 0xffffff4c
 b34:	67213275 			; <UNDEFINED> instruction: 0x67213275
 b38:	1d232f08 	stcne	15, cr2, [r3, #-32]!	; 0xffffffe0
 b3c:	1386593e 	orrne	r5, r6, #1015808	; 0xf8000
 b40:	0421869f 	strteq	r8, [r1], #-1695	; 0xfffff961
 b44:	0aca0302 	beq	ff281754 <MSP_BASE+0xdf27c754>
 b48:	03010420 	movweq	r0, #5152	; 0x1420
 b4c:	046675c9 	strbteq	r7, [r6], #-1481	; 0xfffffa37
 b50:	0ab70302 	beq	fedc1760 <MSP_BASE+0xdedbc760>
 b54:	0301042e 	movweq	r0, #5166	; 0x142e
 b58:	832e75c9 	teqhi	lr, #843055104	; 0x32400000
 b5c:	2e6c0368 	cdpcs	3, 6, cr0, cr12, cr8, {3}
 b60:	3a242a4e 	bcc	90b4a0 <__RW_SIZE__+0x90af1c>
 b64:	2b311c5a 	blcs	c47cd4 <__RW_SIZE__+0xc47750>
 b68:	22212122 	eorcs	r2, r1, #-2147483640	; 0x80000008
 b6c:	ea030204 	b	c1384 <__RW_SIZE__+0xc0e00>
 b70:	0104200a 	tsteq	r4, sl
 b74:	2e759603 	cdpcs	6, 7, cr9, cr5, cr3, {0}
 b78:	0302044b 	movweq	r0, #9291	; 0x244b
 b7c:	04200ae9 	strteq	r0, [r0], #-2793	; 0xfffff517
 b80:	75970301 	ldrvc	r0, [r7, #769]	; 0x301
 b84:	0302042e 	movweq	r0, #9262	; 0x242e
 b88:	044a0ae9 	strbeq	r0, [sl], #-2793	; 0xfffff517
 b8c:	75970301 	ldrvc	r0, [r7, #769]	; 0x301
 b90:	0302042e 	movweq	r0, #9262	; 0x242e
 b94:	04200ae9 	strteq	r0, [r0], #-2793	; 0xfffff517
 b98:	75990301 	ldrvc	r0, [r9, #769]	; 0x301
 b9c:	0302042e 	movweq	r0, #9262	; 0x242e
 ba0:	04580ab2 	ldrbeq	r0, [r8], #-2738	; 0xfffff54e
 ba4:	75d00301 	ldrbvc	r0, [r0, #769]	; 0x301
 ba8:	58090320 	stmdapl	r9, {r5, r8, r9}
 bac:	01000202 	tsteq	r0, r2, lsl #4
 bb0:	0001bc01 	andeq	fp, r1, r1, lsl #24
 bb4:	e9000200 	stmdb	r0, {r9}
 bb8:	02000000 	andeq	r0, r0, #0
 bbc:	0d0efb01 	vstreq	d15, [lr, #-4]
 bc0:	01010100 	mrseq	r0, (UNDEF: 17)
 bc4:	00000001 	andeq	r0, r0, r1
 bc8:	01000001 	tsteq	r0, r1
 bcc:	435c3a43 	cmpmi	ip, #274432	; 0x43000
 bd0:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
 bd4:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
 bd8:	5c797265 	lfmpl	f7, 2, [r9], #-404	; 0xfffffe6c
 bdc:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 be0:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 be4:	2b2b4720 	blcs	ad286c <__RW_SIZE__+0xad22e8>
 be8:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xfffff3e0
 bec:	72612f65 	rsbvc	r2, r1, #404	; 0x194
 bf0:	6f6e2d6d 	svcvs	0x006e2d6d
 bf4:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 bf8:	2f696261 	svccs	0x00696261
 bfc:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 c00:	00656475 	rsbeq	r6, r5, r5, ror r4
 c04:	435c3a43 	cmpmi	ip, #274432	; 0x43000
 c08:	5365646f 	cmnpl	r5, #1862270976	; 0x6f000000
 c0c:	6372756f 	cmnvs	r2, #465567744	; 0x1bc00000
 c10:	5c797265 	lfmpl	f7, 2, [r9], #-404	; 0xfffffe6c
 c14:	72756f53 	rsbsvc	r6, r5, #332	; 0x14c
 c18:	79726563 	ldmdbvc	r2!, {r0, r1, r5, r6, r8, sl, sp, lr}^
 c1c:	2b2b4720 	blcs	ad28a4 <__RW_SIZE__+0xad2320>
 c20:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xfffff3e0
 c24:	696c2f65 	stmdbvs	ip!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
 c28:	63672f62 	cmnvs	r7, #392	; 0x188
 c2c:	72612f63 	rsbvc	r2, r1, #396	; 0x18c
 c30:	6f6e2d6d 	svcvs	0x006e2d6d
 c34:	652d656e 	strvs	r6, [sp, #-1390]!	; 0xfffffa92
 c38:	2f696261 	svccs	0x00696261
 c3c:	2e382e34 	mrccs	14, 1, r2, cr8, cr4, {1}
 c40:	6e692f31 	mcrvs	15, 3, r2, cr9, cr1, {1}
 c44:	64756c63 	ldrbtvs	r6, [r5], #-3171	; 0xfffff39d
 c48:	75000065 	strvc	r0, [r0, #-101]	; 0xffffff9b
 c4c:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
 c50:	00000063 	andeq	r0, r0, r3, rrx
 c54:	726f6300 	rsbvc	r6, pc, #0, 6
 c58:	6d635f65 	stclvs	15, cr5, [r3, #-404]!	; 0xfffffe6c
 c5c:	00682e33 	rsbeq	r2, r8, r3, lsr lr
 c60:	73000000 	movwvc	r0, #0
 c64:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 c68:	78303166 	ldmdavc	r0!, {r1, r2, r5, r6, r8, ip, sp}
 c6c:	0000682e 	andeq	r6, r0, lr, lsr #16
 c70:	74730000 	ldrbtvc	r0, [r3], #-0
 c74:	746e6964 	strbtvc	r6, [lr], #-2404	; 0xfffff69c
 c78:	0100682e 	tsteq	r0, lr, lsr #16
 c7c:	74730000 	ldrbtvc	r0, [r3], #-0
 c80:	67726164 	ldrbvs	r6, [r2, -r4, ror #2]!
 c84:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 c88:	74730000 	ldrbtvc	r0, [r3], #-0
 c8c:	2e6f6964 	cdpcs	9, 6, cr6, cr15, cr4, {3}
 c90:	00010068 	andeq	r0, r1, r8, rrx
 c94:	75623c00 	strbvc	r3, [r2, #-3072]!	; 0xfffff400
 c98:	2d746c69 	ldclcs	12, cr6, [r4, #-420]!	; 0xfffffe5c
 c9c:	003e6e69 	eorseq	r6, lr, r9, ror #28
 ca0:	00000000 	andeq	r0, r0, r0
 ca4:	68020500 	stmdavs	r2, {r8, sl}
 ca8:	1a080042 	bne	200db8 <__RW_SIZE__+0x200834>
 cac:	3d2c5a25 	vstmdbcc	ip!, {s10-s46}
 cb0:	673d2d21 	ldrvs	r2, [sp, -r1, lsr #26]!
 cb4:	3d13084c 	ldccc	8, cr0, [r3, #-304]	; 0xfffffed0
 cb8:	302f5908 	eorcc	r5, pc, r8, lsl #18
 cbc:	2d211e68 	stccs	14, cr1, [r1, #-416]!	; 0xfffffe60
 cc0:	6a212121 	bvs	84914c <__RW_SIZE__+0x848bc8>
 cc4:	04020013 	streq	r0, [r2], #-19	; 0xffffffed
 cc8:	29ad3401 	stmibcs	sp!, {r0, sl, ip, sp}
 ccc:	01040200 	mrseq	r0, R12_usr
 cd0:	75064a06 	strvc	r4, [r6, #-2566]	; 0xfffff5fa
 cd4:	76032152 			; <UNDEFINED> instruction: 0x76032152
 cd8:	341d4b2e 	ldrcc	r4, [sp], #-2862	; 0xfffff4d2
 cdc:	034e2575 	movteq	r2, #58741	; 0xe575
 ce0:	03752e72 	cmneq	r5, #1824	; 0x720
 ce4:	413c3c10 	teqmi	ip, r0, lsl ip
 ce8:	7403212d 	strvc	r2, [r3], #-301	; 0xfffffed3
 cec:	3c76032e 	ldclcc	3, cr0, [r6], #-184	; 0xffffff48
 cf0:	75341d59 	ldrvc	r1, [r4, #-3417]!	; 0xfffff2a7
 cf4:	4a0f0325 	bmi	3c1990 <__RW_SIZE__+0x3c140c>
 cf8:	75586703 	ldrbvc	r6, [r8, #-1795]	; 0xfffff8fd
 cfc:	132e1b03 	teqne	lr, #3072	; 0xc00
 d00:	03313584 	teqeq	r1, #132, 10	; 0x21000000
 d04:	02000174 	andeq	r0, r0, #116, 2
 d08:	4a060104 	bmi	181120 <__RW_SIZE__+0x180b9c>
 d0c:	0d033e06 	stceq	14, cr3, [r3, #-24]	; 0xffffffe8
 d10:	1523312e 	strne	r3, [r3, #-302]!	; 0xfffffed2
 d14:	20090348 	andcs	r0, r9, r8, asr #6
 d18:	8e030204 	cdphi	2, 0, cr0, cr3, cr4, {0}
 d1c:	0104200b 	tsteq	r4, fp
 d20:	2e74f203 	cdpcs	2, 7, cr15, cr4, cr3, {0}
 d24:	8e030204 	cdphi	2, 0, cr0, cr3, cr4, {0}
 d28:	01044a0b 	tsteq	r4, fp, lsl #20
 d2c:	3c74f203 	lfmcc	f7, 3, [r4], #-12
 d30:	8e030204 	cdphi	2, 0, cr0, cr3, cr4, {0}
 d34:	0104200b 	tsteq	r4, fp
 d38:	3c74eb03 	ldclcc	11, cr14, [r4], #-12
 d3c:	bd030204 	sfmlt	f0, 4, [r3, #-16]
 d40:	0104200b 	tsteq	r4, fp
 d44:	2e74c303 	cdpcs	3, 7, cr12, cr4, cr3, {0}
 d48:	bd030204 	sfmlt	f0, 4, [r3, #-16]
 d4c:	0104200b 	tsteq	r4, fp
 d50:	3c74c303 	ldclcc	3, cr12, [r4], #-12
 d54:	bd030204 	sfmlt	f0, 4, [r3, #-16]
 d58:	4b033c0b 	blmi	cfd8c <__RW_SIZE__+0xcf808>
 d5c:	0301042e 	movweq	r0, #5166	; 0x142e
 d60:	133c7585 	teqne	ip, #557842432	; 0x21400000
 d64:	01040200 	mrseq	r0, R12_usr
 d68:	3d064a06 	vstrcc	s8, [r6, #-24]	; 0xffffffe8
 d6c:	01000102 	tsteq	r0, r2, lsl #2
 d70:	00007c01 	andeq	r7, r0, r1, lsl #24
 d74:	1d000200 	sfmne	f0, 4, [r0, #-0]
 d78:	02000000 	andeq	r0, r0, #0
 d7c:	0d0efb01 	vstreq	d15, [lr, #-4]
 d80:	01010100 	mrseq	r0, (UNDEF: 17)
 d84:	00000001 	andeq	r0, r0, r1
 d88:	01000001 	tsteq	r0, r1
 d8c:	74726300 	ldrbtvc	r6, [r2], #-768	; 0xfffffd00
 d90:	00732e30 	rsbseq	r2, r3, r0, lsr lr
 d94:	00000000 	andeq	r0, r0, r0
 d98:	ec020500 	cfstr32	mvfx0, [r2], {-0}
 d9c:	03080030 	movweq	r0, #32816	; 0x8030
 da0:	210100fb 	strdcs	r0, [r1, -fp]
 da4:	23212221 	teqcs	r1, #268435458	; 0x10000002
 da8:	2f2f2121 	svccs	0x002f2121
 dac:	21302123 	teqcs	r0, r3, lsr #2
 db0:	0a032f21 	beq	cca3c <__RW_SIZE__+0xcc4b8>
 db4:	212f2120 	teqcs	pc, r0, lsr #2
 db8:	2f273030 	svccs	0x00273030
 dbc:	2f2f222f 	svccs	0x002f222f
 dc0:	2f212122 	svccs	0x00212122
 dc4:	212f2f30 	teqcs	pc, r0, lsr pc	; <UNPREDICTABLE>
 dc8:	2f212122 	svccs	0x00212122
 dcc:	2f2f2130 	svccs	0x002f2130
 dd0:	28021b03 	stmdacs	r2, {r0, r1, r8, r9, fp, ip}
 dd4:	212f2101 	teqcs	pc, r1, lsl #2
 dd8:	032f2f21 	teqeq	pc, #33, 30	; 0x84
 ddc:	2f207f98 	svccs	0x00207f98
 de0:	2e0d032f 	cdpcs	3, 0, cr0, cr13, cr15, {1}
 de4:	302e1003 	eorcc	r1, lr, r3
 de8:	302e1203 	eorcc	r1, lr, r3, lsl #4
 dec:	01000202 	tsteq	r0, r2, lsl #4
 df0:	Address 0x00000df0 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
       4:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
       8:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
       c:	44420074 	strbmi	r0, [r2], #-116	; 0xffffff8c
      10:	43005243 	movwmi	r5, #579	; 0x243
      14:	00524746 	subseq	r4, r2, r6, asr #14
      18:	53414c46 	movtpl	r4, #7238	; 0x1c46
      1c:	79545f48 	ldmdbvc	r4, {r3, r6, r8, r9, sl, fp, ip, lr}^
      20:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
      24:	48410066 	stmdami	r1, {r1, r2, r5, r6}^
      28:	524e4542 	subpl	r4, lr, #276824064	; 0x10800000
      2c:	50525700 	subspl	r5, r2, r0, lsl #14
      30:	6c630052 	stclvs	0, cr0, [r3], #-328	; 0xfffffeb8
      34:	2e6b636f 	cdpcs	3, 6, cr6, cr11, cr15, {3}
      38:	50410063 	subpl	r0, r1, r3, rrx
      3c:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
      40:	73005254 	movwvc	r5, #596	; 0x254
      44:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
      48:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
      4c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
      50:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
      54:	54490074 	strbpl	r0, [r9], #-116	; 0xffffff8c
      58:	78525f4d 	ldmdavc	r2, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
      5c:	66667542 	strbtvs	r7, [r6], -r2, asr #10
      60:	4f007265 	svcmi	0x00007265
      64:	454b5450 	strbmi	r5, [fp, #-1104]	; 0xfffffbb0
      68:	75005259 	strvc	r5, [r0, #-601]	; 0xfffffda7
      6c:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
      70:	2064656e 	rsbcs	r6, r4, lr, ror #10
      74:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
      78:	53455200 	movtpl	r5, #20992	; 0x5200
      7c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
      80:	50410044 	subpl	r0, r1, r4, asr #32
      84:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
      88:	50410052 	subpl	r0, r1, r2, asr r0
      8c:	4e453142 	dvfmism	f3, f5, f2
      90:	50410052 	subpl	r0, r1, r2, asr r0
      94:	53523242 	cmppl	r2, #536870916	; 0x20000004
      98:	6c005254 	sfmvs	f5, 4, [r0], {84}	; 0x54
      9c:	20676e6f 	rsbcs	r6, r7, pc, ror #28
      a0:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
      a4:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
      a8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
      ac:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
      b0:	4e470074 	mcrmi	0, 2, r0, cr7, cr4, {3}
      b4:	20432055 	subcs	r2, r3, r5, asr r0
      b8:	2e382e34 	mrccs	14, 1, r2, cr8, cr4, {1}
      bc:	6d2d2031 	stcvs	0, cr2, [sp, #-196]!	; 0xffffff3c
      c0:	3d757063 	ldclcc	0, cr7, [r5, #-396]!	; 0xfffffe74
      c4:	74726f63 	ldrbtvc	r6, [r2], #-3939	; 0xfffff09d
      c8:	6d2d7865 	stcvs	8, cr7, [sp, #-404]!	; 0xfffffe6c
      cc:	6d2d2033 	stcvs	0, cr2, [sp, #-204]!	; 0xffffff34
      d0:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
      d4:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
      d8:	616f6c66 	cmnvs	pc, r6, ror #24
      dc:	62612d74 	rsbvs	r2, r1, #116, 26	; 0x1d00
      e0:	6f733d69 	svcvs	0x00733d69
      e4:	2d207466 	cfstrscs	mvf7, [r0, #-408]!	; 0xfffffe68
      e8:	6370616d 	cmnvs	r0, #1073741851	; 0x4000001b
      ec:	6d2d2073 	stcvs	0, cr2, [sp, #-460]!	; 0xfffffe34
      f0:	742d6f6e 	strtvc	r6, [sp], #-3950	; 0xfffff092
      f4:	626d7568 	rsbvs	r7, sp, #104, 10	; 0x1a000000
      f8:	746e692d 	strbtvc	r6, [lr], #-2349	; 0xfffff6d3
      fc:	6f777265 	svcvs	0x00777265
     100:	2d206b72 	vstmdbcs	r0!, {d6-<overflow reg d62>}
     104:	4f2d2067 	svcmi	0x002d2067
     108:	662d2033 			; <UNDEFINED> instruction: 0x662d2033
     10c:	622d6f6e 	eorvs	r6, sp, #440	; 0x1b8
     110:	746c6975 	strbtvc	r6, [ip], #-2421	; 0xfffff68b
     114:	2d206e69 	stccs	14, cr6, [r0, #-420]!	; 0xfffffe5c
     118:	736e7566 	cmnvc	lr, #427819008	; 0x19800000
     11c:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
     120:	68632d64 	stmdavs	r3!, {r2, r5, r6, r8, sl, fp, sp}^
     124:	2d207261 	sfmcs	f7, 4, [r0, #-388]!	; 0xfffffe7c
     128:	2d6f6e66 	stclcs	14, cr6, [pc, #-408]!	; ffffff98 <MSP_BASE+0xdfffaf98>
     12c:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
     130:	612d7463 	teqvs	sp, r3, ror #8
     134:	7361696c 	cmnvc	r1, #108, 18	; 0x1b0000
     138:	20676e69 	rsbcs	r6, r7, r9, ror #28
     13c:	6f6e662d 	svcvs	0x006e662d
     140:	6d6f632d 	stclvs	3, cr6, [pc, #-180]!	; 94 <shift+0x94>
     144:	006e6f6d 	rsbeq	r6, lr, sp, ror #30
     148:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     14c:	65707974 	ldrbvs	r7, [r0, #-2420]!	; 0xfffff68c
     150:	6f6c4300 	svcvs	0x006c4300
     154:	495f6b63 	ldmdbmi	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
     158:	0074696e 	rsbseq	r6, r4, lr, ror #18
     15c:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
     160:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
     164:	43520074 	cmpmi	r2, #116	; 0x74
     168:	79545f43 	ldmdbvc	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     16c:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     170:	3a430066 	bcc	10c0310 <__RW_SIZE__+0x10bfd8c>
     174:	6573555c 	ldrbvs	r5, [r3, #-1372]!	; 0xfffffaa4
     178:	495c7372 	ldmdbmi	ip, {r1, r4, r5, r6, r8, r9, ip, sp, lr}^
     17c:	445c544f 	ldrbmi	r5, [ip], #-1103	; 0xfffffbb1
     180:	6c6e776f 	stclvs	7, cr7, [lr], #-444	; 0xfffffe44
     184:	7364616f 	cmnvc	r4, #-1073741797	; 0xc000001b
     188:	bfdfc65c 	svclt	0x00dfc65c
     18c:	5feebefe 	svcpl	0x00eebefe
     190:	c0bdc7bd 	ldrhtgt	ip, [sp], sp
     194:	e1b7dac0 			; <UNDEFINED> instruction: 0xe1b7dac0
     198:	42414c28 	submi	r4, r1, #40, 24	; 0x2800
     19c:	53565c29 	cmppl	r6, #10496	; 0x2900
     1a0:	65646f63 	strbvs	r6, [r4, #-3939]!	; 0xfffff09d
     1a4:	3332305c 	teqcc	r2, #92	; 0x5c
     1a8:	414d442e 	cmpmi	sp, lr, lsr #8
     1ac:	5f57535f 	svcpl	0x0057535f
     1b0:	47495254 	smlsldmi	r5, r9, r4, r2
     1b4:	5f524547 	svcpl	0x00524547
     1b8:	75005845 	strvc	r5, [r0, #-2117]	; 0xfffff7bb
     1bc:	33746e69 	cmncc	r4, #1680	; 0x690
     1c0:	00745f32 	rsbseq	r5, r4, r2, lsr pc
     1c4:	54535f5f 	ldrbpl	r5, [r3], #-3935	; 0xfffff0a1
     1c8:	48584552 	ldmdami	r8, {r1, r4, r6, r8, sl, lr}^
     1cc:	735f5f00 	cmpvc	pc, #0, 30
     1d0:	435f7465 	cmpmi	pc, #1694498816	; 0x65000000
     1d4:	52544e4f 	subspl	r4, r4, #1264	; 0x4f0
     1d8:	76004c4f 	strvc	r4, [r0], -pc, asr #24
     1dc:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     1e0:	4c5f5f00 	mrrcmi	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
     1e4:	58455244 	stmdapl	r5, {r2, r6, r9, ip, lr}^
     1e8:	72700057 	rsbsvc	r0, r0, #87	; 0x57
     1ec:	73614d69 	cmnvc	r1, #6720	; 0x1a40
     1f0:	6f74006b 	svcvs	0x0074006b
     1f4:	50664f70 	rsbpl	r4, r6, r0, ror pc
     1f8:	53636f72 	cmnpl	r3, #456	; 0x1c8
     1fc:	6b636174 	blvs	18d87d4 <__RW_SIZE__+0x18d8250>
     200:	75616600 	strbvc	r6, [r1, #-1536]!	; 0xfffffa00
     204:	614d746c 	cmpvs	sp, ip, ror #8
     208:	63006b73 	movwvs	r6, #2931	; 0xb73
     20c:	5f65726f 	svcpl	0x0065726f
     210:	2e336d63 	cdpcs	13, 3, cr6, cr3, cr3, {3}
     214:	5f5f0063 	svcpl	0x005f0063
     218:	5f746567 	svcpl	0x00746567
     21c:	0050534d 	subseq	r5, r0, sp, asr #6
     220:	65735f5f 	ldrbvs	r5, [r3, #-3935]!	; 0xfffff0a1
     224:	534d5f74 	movtpl	r5, #57204	; 0xdf74
     228:	5f5f0050 	svcpl	0x005f0050
     22c:	5f746567 	svcpl	0x00746567
     230:	00505350 	subseq	r5, r0, r0, asr r3
     234:	65735f5f 	ldrbvs	r5, [r3, #-3935]!	; 0xfffff0a1
     238:	53505f74 	cmppl	r0, #116, 30	; 0x1d0
     23c:	5f5f0050 	svcpl	0x005f0050
     240:	31564552 	cmpcc	r6, r2, asr r5
     244:	5f5f0036 	svcpl	0x005f0036
     248:	5f746567 	svcpl	0x00746567
     24c:	4d495250 	sfmmi	f5, 2, [r9, #-320]	; 0xfffffec0
     250:	004b5341 	subeq	r5, fp, r1, asr #6
     254:	65735f5f 	ldrbvs	r5, [r3, #-3935]!	; 0xfffff0a1
     258:	41465f74 	hvcmi	26100	; 0x65f4
     25c:	4d544c55 	ldclmi	12, cr4, [r4, #-340]	; 0xfffffeac
     260:	004b5341 	subeq	r5, fp, r1, asr #6
     264:	746e6f63 	strbtvc	r6, [lr], #-3939	; 0xfffff09d
     268:	006c6f72 	rsbeq	r6, ip, r2, ror pc
     26c:	65735f5f 	ldrbvs	r5, [r3, #-3935]!	; 0xfffff0a1
     270:	41425f74 	hvcmi	9716	; 0x25f4
     274:	52504553 	subspl	r4, r0, #348127232	; 0x14c00000
     278:	69750049 	ldmdbvs	r5!, {r0, r3, r6}^
     27c:	5f38746e 	svcpl	0x0038746e
     280:	65720074 	ldrbvs	r0, [r2, #-116]!	; 0xffffff8c
     284:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
     288:	525f5f00 	subspl	r5, pc, #0, 30
     28c:	48535645 	ldmdami	r3, {r0, r2, r6, r9, sl, ip, lr}^
     290:	706f7400 	rsbvc	r7, pc, r0, lsl #8
     294:	614d664f 	cmpvs	sp, pc, asr #12
     298:	74536e69 	ldrbvc	r6, [r3], #-3689	; 0xfffff197
     29c:	006b6361 	rsbeq	r6, fp, r1, ror #6
     2a0:	65735f5f 	ldrbvs	r5, [r3, #-3935]!	; 0xfffff0a1
     2a4:	52505f74 	subspl	r5, r0, #116, 30	; 0x1d0
     2a8:	53414d49 	movtpl	r4, #7497	; 0x1d49
     2ac:	5f5f004b 	svcpl	0x005f004b
     2b0:	00564552 	subseq	r4, r6, r2, asr r5
     2b4:	65675f5f 	strbvs	r5, [r7, #-3935]!	; 0xfffff0a1
     2b8:	4f435f74 	svcmi	0x00435f74
     2bc:	4f52544e 	svcmi	0x0052544e
     2c0:	5f5f004c 	svcpl	0x005f004c
     2c4:	54494252 	strbpl	r4, [r9], #-594	; 0xfffffdae
     2c8:	675f5f00 	ldrbvs	r5, [pc, -r0, lsl #30]
     2cc:	425f7465 	subsmi	r7, pc, #1694498816	; 0x65000000
     2d0:	50455341 	subpl	r5, r5, r1, asr #6
     2d4:	75004952 	strvc	r4, [r0, #-2386]	; 0xfffff6ae
     2d8:	31746e69 	cmncc	r4, r9, ror #28
     2dc:	00745f36 	rsbseq	r5, r4, r6, lsr pc
     2e0:	54535f5f 	ldrbpl	r5, [r3], #-3935	; 0xfffff0a1
     2e4:	57584552 			; <UNDEFINED> instruction: 0x57584552
     2e8:	4c5f5f00 	mrrcmi	15, 0, r5, pc, cr0	; <UNPREDICTABLE>
     2ec:	58455244 	stmdapl	r5, {r2, r6, r9, ip, lr}^
     2f0:	5f5f0042 	svcpl	0x005f0042
     2f4:	45525453 	ldrbmi	r5, [r2, #-1107]	; 0xfffffbad
     2f8:	5f004258 	svcpl	0x00004258
     2fc:	7465675f 	strbtvc	r6, [r5], #-1887	; 0xfffff8a1
     300:	5541465f 	strbpl	r4, [r1, #-1631]	; 0xfffff9a1
     304:	414d544c 	cmpmi	sp, ip, asr #8
     308:	5f004b53 	svcpl	0x00004b53
     30c:	52444c5f 	subpl	r4, r4, #24320	; 0x5f00
     310:	00485845 	subeq	r5, r8, r5, asr #16
     314:	5f425355 	svcpl	0x00425355
     318:	435f504c 	cmpmi	pc, #76	; 0x4c
     31c:	5f314e41 	svcpl	0x00314e41
     320:	5f305852 	svcpl	0x00305852
     324:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     328:	4d445f00 	stclmi	15, cr5, [r4, #-0]
     32c:	43435f41 	movtmi	r5, #16193	; 0x3f41
     330:	54535f52 	ldrbpl	r5, [r3], #-3922	; 0xfffff0ae
     334:	69737000 	ldmdbvs	r3!, {ip, sp, lr}^
     338:	4400657a 	strmi	r6, [r0], #-1402	; 0xfffffa86
     33c:	5f31414d 	svcpl	0x0031414d
     340:	72617453 	rsbvc	r7, r1, #1392508928	; 0x53000000
     344:	445f0074 	ldrbmi	r0, [pc], #-116	; 34c <__ZI_SIZE__+0x174>
     348:	435f414d 	cmpmi	pc, #1073741843	; 0x40000013
     34c:	555f5243 	ldrbpl	r5, [pc, #-579]	; 111 <shift+0x111>
     350:	7400494e 	strvc	r4, [r0], #-2382	; 0xfffff6b2
     354:	00706d65 	rsbseq	r6, r0, r5, ror #26
     358:	314e4143 	cmpcc	lr, r3, asr #2
     35c:	4543535f 	strbmi	r5, [r3, #-863]	; 0xfffffca1
     360:	5152495f 	cmppl	r2, pc, asr r9
     364:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     368:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     36c:	6e6e6168 	powvsez	f6, f6, #0.0
     370:	5f376c65 	svcpl	0x00376c65
     374:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     378:	43324900 	teqmi	r2, #0, 18
     37c:	52455f32 	subpl	r5, r5, #50, 30	; 0xc8
     380:	5152495f 	cmppl	r2, pc, asr r9
     384:	736d006e 	cmnvc	sp, #110	; 0x6e
     388:	00657a69 	rsbeq	r7, r5, r9, ror #20
     38c:	344d4954 	strbcc	r4, [sp], #-2388	; 0xfffff6ac
     390:	5152495f 	cmppl	r2, pc, asr r9
     394:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     398:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     39c:	6e6e6168 	powvsez	f6, f6, #0.0
     3a0:	5f326c65 	svcpl	0x00326c65
     3a4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     3a8:	5f697500 	svcpl	0x00697500
     3ac:	61746164 	cmnvs	r4, r4, ror #2
     3b0:	414c4600 	cmpmi	ip, r0, lsl #12
     3b4:	495f4853 	ldmdbmi	pc, {r0, r1, r4, r6, fp, lr}^	; <UNPREDICTABLE>
     3b8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     3bc:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     3c0:	52495f30 	subpl	r5, r9, #48, 30	; 0xc0
     3c4:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     3c8:	435f414d 	cmpmi	pc, #1073741843	; 0x40000013
     3cc:	6e6e6168 	powvsez	f6, f6, #0.0
     3d0:	545f6c65 	ldrbpl	r6, [pc], #-3173	; 3d8 <__ZI_SIZE__+0x200>
     3d4:	44657079 	strbtmi	r7, [r5], #-121	; 0xffffff87
     3d8:	45006665 	strmi	r6, [r0, #-1637]	; 0xfffff99b
     3dc:	31495458 	cmpcc	r9, r8, asr r4
     3e0:	30315f35 	eorscc	r5, r1, r5, lsr pc
     3e4:	5152495f 	cmppl	r2, pc, asr r9
     3e8:	6970006e 	ldmdbvs	r0!, {r1, r2, r3, r5, r6}^
     3ec:	5000636e 	andpl	r6, r0, lr, ror #6
     3f0:	53646e65 	cmnpl	r4, #1616	; 0x650
     3f4:	52495f56 	subpl	r5, r9, #344	; 0x158
     3f8:	43006e51 	movwmi	r6, #3665	; 0xe51
     3fc:	5254444e 	subspl	r4, r4, #1308622848	; 0x4e000000
     400:	43435200 	movtmi	r5, #12800	; 0x3200
     404:	5152495f 	cmppl	r2, pc, asr r9
     408:	654d006e 	strbvs	r0, [sp, #-110]	; 0xffffff92
     40c:	79726f6d 	ldmdbvc	r2!, {r0, r2, r3, r5, r6, r8, r9, sl, fp, sp, lr}^
     410:	616e614d 	cmnvs	lr, sp, asr #2
     414:	656d6567 	strbvs	r6, [sp, #-1383]!	; 0xfffffa99
     418:	495f746e 	ldmdbmi	pc, {r1, r2, r3, r5, r6, sl, ip, sp, lr}^	; <UNPREDICTABLE>
     41c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     420:	31414d44 	cmpcc	r1, r4, asr #26
     424:	5f68435f 	svcpl	0x0068435f
     428:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     42c:	45534900 	ldrbmi	r4, [r3, #-2304]	; 0xfffff700
     430:	61700052 	cmnvs	r0, r2, asr r0
     434:	00726464 	rsbseq	r6, r2, r4, ror #8
     438:	314d4954 	cmpcc	sp, r4, asr r9
     43c:	4b52425f 	blmi	1490dc0 <__RW_SIZE__+0x149083c>
     440:	5152495f 	cmppl	r2, pc, asr r9
     444:	5352006e 	cmppl	r2, #110	; 0x6e
     448:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     44c:	53003144 	movwpl	r3, #324	; 0x144
     450:	5f314950 	svcpl	0x00314950
     454:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     458:	414d4400 	cmpmi	sp, r0, lsl #8
     45c:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     460:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     464:	495f346c 	ldmdbmi	pc, {r2, r3, r5, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     468:	006e5152 	rsbeq	r5, lr, r2, asr r1
     46c:	4349564e 	movtmi	r5, #38478	; 0x964e
     470:	616e455f 	cmnvs	lr, pc, asr r5
     474:	49656c62 	stmdbmi	r5!, {r1, r5, r6, sl, fp, sp, lr}^
     478:	6d005152 	stfvss	f5, [r0, #-328]	; 0xfffffeb8
     47c:	72646461 	rsbvc	r6, r4, #1627389952	; 0x61000000
     480:	4e414300 	cdpmi	3, 4, cr4, cr1, cr0, {0}
     484:	58525f31 	ldmdapl	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     488:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     48c:	43006e51 	movwmi	r6, #3665	; 0xe51
     490:	00524150 	subseq	r4, r2, r0, asr r1
     494:	5f425355 	svcpl	0x00425355
     498:	435f5048 	cmpmi	pc, #72	; 0x48
     49c:	5f314e41 	svcpl	0x00314e41
     4a0:	495f5854 	ldmdbmi	pc, {r2, r4, r6, fp, ip, lr}^	; <UNPREDICTABLE>
     4a4:	006e5152 	rsbeq	r5, lr, r2, asr r1
     4a8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4ac:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     4b0:	53550065 	cmppl	r5, #101	; 0x65
     4b4:	32545241 	subscc	r5, r4, #268435460	; 0x10000004
     4b8:	5152495f 	cmppl	r2, pc, asr r9
     4bc:	5845006e 	stmdapl	r5, {r1, r2, r3, r5, r6}^
     4c0:	5f324954 	svcpl	0x00324954
     4c4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4c8:	49564e00 	ldmdbmi	r6, {r9, sl, fp, lr}^
     4cc:	69445f43 	stmdbvs	r4, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     4d0:	6c626173 	stfvse	f6, [r2], #-460	; 0xfffffe34
     4d4:	51524965 	cmppl	r2, r5, ror #18
     4d8:	43324900 	teqmi	r2, #0, 18
     4dc:	56455f32 			; <UNDEFINED> instruction: 0x56455f32
     4e0:	5152495f 	cmppl	r2, pc, asr r9
     4e4:	4d44006e 	stclmi	0, cr0, [r4, #-440]	; 0xfffffe48
     4e8:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     4ec:	6e6e6168 	powvsez	f6, f6, #0.0
     4f0:	5f366c65 	svcpl	0x00366c65
     4f4:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     4f8:	6e696d00 	cdpvs	13, 6, cr6, cr9, cr0, {0}
     4fc:	564e0063 	strbpl	r0, [lr], -r3, rrx
     500:	435f4349 	cmpmi	pc, #603979777	; 0x24000001
     504:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
     508:	646e6550 	strbtvs	r6, [lr], #-1360	; 0xfffffab0
     50c:	49676e69 	stmdbmi	r7!, {r0, r3, r5, r6, r9, sl, fp, sp, lr}^
     510:	54005152 	strpl	r5, [r0], #-338	; 0xfffffeae
     514:	5f334d49 	svcpl	0x00334d49
     518:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     51c:	414d4400 	cmpmi	sp, r0, lsl #8
     520:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     524:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     528:	495f316c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     52c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     530:	635f7274 	cmpvs	pc, #116, 4	; 0x40000007
     534:	7300746e 	movwvc	r7, #1134	; 0x46e
     538:	75746174 	ldrbvc	r6, [r4, #-372]!	; 0xfffffe8c
     53c:	53550073 	cmppl	r5, #115	; 0x73
     540:	6b615742 	blvs	1856250 <__RW_SIZE__+0x1855ccc>
     544:	5f705565 	svcpl	0x00705565
     548:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     54c:	44575700 	ldrbmi	r5, [r7], #-1792	; 0xfffff900
     550:	52495f47 	subpl	r5, r9, #284	; 0x11c
     554:	42006e51 	andmi	r6, r0, #1296	; 0x510
     558:	61467375 	hvcvs	26421	; 0x6735
     55c:	5f746c75 	svcpl	0x00746c75
     560:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     564:	414d4400 	cmpmi	sp, r0, lsl #8
     568:	4154535f 	cmpmi	r4, pc, asr r3
     56c:	00535554 	subseq	r5, r3, r4, asr r5
     570:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     574:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     578:	50006e51 	andpl	r6, r0, r1, asr lr
     57c:	495f4456 	ldmdbmi	pc, {r1, r2, r4, r6, sl, lr}^	; <UNPREDICTABLE>
     580:	006e5152 	rsbeq	r5, lr, r2, asr r1
     584:	2e616d64 	cdpcs	13, 6, cr6, cr1, cr4, {3}
     588:	43490063 	movtmi	r0, #36963	; 0x9063
     58c:	44005250 	strmi	r5, [r0], #-592	; 0xfffffdb0
     590:	5f31414d 	svcpl	0x0031414d
     594:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     598:	336c656e 	cmncc	ip, #461373440	; 0x1b800000
     59c:	5152495f 	cmppl	r2, pc, asr r9
     5a0:	3249006e 	subcc	r0, r9, #110	; 0x6e
     5a4:	455f3143 	ldrbmi	r3, [pc, #-323]	; 469 <MSP_SIZE+0x69>
     5a8:	52495f56 	subpl	r5, r9, #344	; 0x158
     5ac:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     5b0:	5f31414d 	svcpl	0x0031414d
     5b4:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
     5b8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     5bc:	50555f31 	subspl	r5, r5, r1, lsr pc
     5c0:	5152495f 	cmppl	r2, pc, asr r9
     5c4:	5453006e 	ldrbpl	r0, [r3], #-110	; 0xffffff92
     5c8:	73005249 	movwvc	r5, #585	; 0x249
     5cc:	61645f74 	smcvs	17908	; 0x45f4
     5d0:	52006174 	andpl	r6, r0, #116, 2
     5d4:	495f4354 	ldmdbmi	pc, {r2, r4, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     5d8:	006e5152 	rsbeq	r5, lr, r2, asr r1
     5dc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     5e0:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     5e4:	45520030 	ldrbmi	r0, [r2, #-48]	; 0xffffffd0
     5e8:	56524553 			; <UNDEFINED> instruction: 0x56524553
     5ec:	00324445 	eorseq	r4, r2, r5, asr #8
     5f0:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     5f4:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     5f8:	45520033 	ldrbmi	r0, [r2, #-51]	; 0xffffffcd
     5fc:	56524553 			; <UNDEFINED> instruction: 0x56524553
     600:	00344445 	eorseq	r4, r4, r5, asr #8
     604:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     608:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     60c:	53550035 	cmppl	r5, #53	; 0x35
     610:	31545241 	cmpcc	r4, r1, asr #4
     614:	5152495f 	cmppl	r2, pc, asr r9
     618:	4d43006e 	stclmi	0, cr0, [r3, #-440]	; 0xfffffe48
     61c:	4e005241 	cdpmi	2, 0, cr5, cr0, cr1, {2}
     620:	614d6e6f 	cmpvs	sp, pc, ror #28
     624:	62616b73 	rsbvs	r6, r1, #117760	; 0x1cc00
     628:	6e49656c 	cdpvs	5, 4, cr6, cr9, cr12, {3}
     62c:	52495f74 	subpl	r5, r9, #116, 30	; 0x1d0
     630:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     634:	5f314d49 	svcpl	0x00314d49
     638:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     63c:	006e5152 	rsbeq	r5, lr, r2, asr r1
     640:	31414d44 	cmpcc	r1, r4, asr #26
     644:	5253495f 	subspl	r4, r3, #1556480	; 0x17c000
     648:	616e455f 	cmnvs	lr, pc, asr r5
     64c:	00656c62 	rsbeq	r6, r5, r2, ror #24
     650:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     654:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     658:	4e006e51 	mcrmi	14, 0, r6, cr0, cr1, {2}
     65c:	5f434956 	svcpl	0x00434956
     660:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     664:	414d4400 	cmpmi	sp, r0, lsl #8
     668:	65535f31 	ldrbvs	r5, [r3, #-3889]	; 0xfffff0cf
     66c:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xfffff08c
     670:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     674:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     678:	52545f31 	subspl	r5, r4, #49, 30	; 0xc4
     67c:	4f435f47 	svcmi	0x00435f47
     680:	52495f4d 	subpl	r5, r9, #308	; 0x134
     684:	49006e51 	stmdbmi	r0, {r0, r4, r6, r9, sl, fp, sp, lr}
     688:	5f314332 	svcpl	0x00314332
     68c:	495f5245 	ldmdbmi	pc, {r0, r2, r6, r9, ip, lr}^	; <UNPREDICTABLE>
     690:	006e5152 	rsbeq	r5, lr, r2, asr r1
     694:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     698:	5f6b6369 	svcpl	0x006b6369
     69c:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6a0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     6a4:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     6a8:	44006e51 	strmi	r6, [r0], #-3665	; 0xfffff1af
     6ac:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
     6b0:	696e6f4d 	stmdbvs	lr!, {r0, r2, r3, r6, r8, r9, sl, fp, sp, lr}^
     6b4:	5f726f74 	svcpl	0x00726f74
     6b8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6bc:	61735500 	cmnvs	r3, r0, lsl #10
     6c0:	61466567 	cmpvs	r6, r7, ror #10
     6c4:	5f746c75 	svcpl	0x00746c75
     6c8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6cc:	414d4400 	cmpmi	sp, r0, lsl #8
     6d0:	48435f31 	stmdami	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     6d4:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     6d8:	355f3949 	ldrbcc	r3, [pc, #-2377]	; fffffd97 <MSP_BASE+0xdfffad97>
     6dc:	5152495f 	cmppl	r2, pc, asr r9
     6e0:	5653006e 	ldrbpl	r0, [r3], -lr, rrx
     6e4:	6c6c6143 	stfvse	f6, [ip], #-268	; 0xfffffef4
     6e8:	5152495f 	cmppl	r2, pc, asr r9
     6ec:	4349006e 	movtmi	r0, #36974	; 0x906e
     6f0:	53005245 	movwpl	r5, #581	; 0x245
     6f4:	5f324950 	svcpl	0x00324950
     6f8:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     6fc:	42414900 	submi	r4, r1, #0, 18
     700:	4d440052 	stclmi	0, cr0, [r4, #-328]	; 0xfffffeb8
     704:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     708:	6e6e6168 	powvsez	f6, f6, #0.0
     70c:	5f356c65 	svcpl	0x00356c65
     710:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     714:	72696300 	rsbvc	r6, r9, #0, 6
     718:	58450063 	stmdapl	r5, {r0, r1, r5, r6}^
     71c:	5f334954 	svcpl	0x00334954
     720:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     724:	414d4400 	cmpmi	sp, r0, lsl #8
     728:	65475f31 	strbvs	r5, [r7, #-3889]	; 0xfffff0cf
     72c:	74535f74 	ldrbvc	r5, [r3], #-3956	; 0xfffff08c
     730:	73757461 	cmnvc	r5, #1627389952	; 0x61000000
     734:	43464900 	movtmi	r4, #26880	; 0x6900
     738:	4d440052 	stclmi	0, cr0, [r4, #-328]	; 0xfffffeb8
     73c:	79545f41 	ldmdbvc	r4, {r0, r6, r8, r9, sl, fp, ip, lr}^
     740:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     744:	53490066 	movtpl	r0, #36966	; 0x9066
     748:	41005250 	tstmi	r0, r0, asr r2
     74c:	5f314344 	svcpl	0x00314344
     750:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     754:	55006e51 	strpl	r6, [r0, #-3665]	; 0xfffff1af
     758:	54524153 	ldrbpl	r4, [r2], #-339	; 0xfffffead
     75c:	52495f33 	subpl	r5, r9, #51, 30	; 0xcc
     760:	54006e51 	strpl	r6, [r0], #-3665	; 0xfffff1af
     764:	45504d41 	ldrbmi	r4, [r0, #-3393]	; 0xfffff2bf
     768:	52495f52 	subpl	r5, r9, #328	; 0x148
     76c:	52006e51 	andpl	r6, r0, #1296	; 0x510
     770:	6c414354 	mcrrvs	3, 5, r4, r1, cr4
     774:	5f6d7261 	svcpl	0x006d7261
     778:	6e515249 	cdpvs	2, 5, cr5, cr1, cr9, {2}
     77c:	79654b00 	stmdbvc	r5!, {r8, r9, fp, lr}^
     780:	6c6f505f 	stclvs	0, cr5, [pc], #-380	; 60c <__RW_SIZE__+0x88>
     784:	6e495f6c 	cdpvs	15, 4, cr5, cr9, cr12, {3}
     788:	42007469 	andmi	r7, r0, #1761607680	; 0x69000000
     78c:	00525253 	subseq	r5, r2, r3, asr r2
     790:	2e79656b 	cdpcs	5, 7, cr6, cr9, cr11, {3}
     794:	414d0063 	cmpmi	sp, r3, rrx
     798:	4b005250 	blmi	150e0 <__RW_SIZE__+0x14b5c>
     79c:	575f7965 	ldrbpl	r7, [pc, -r5, ror #18]
     7a0:	5f746961 	svcpl	0x00746961
     7a4:	5f79654b 	svcpl	0x0079654b
     7a8:	656c6552 	strbvs	r6, [ip, #-1362]!	; 0xfffffaae
     7ac:	64657361 	strbtvs	r7, [r5], #-865	; 0xfffffc9f
     7b0:	79654b00 	stmdbvc	r5!, {r8, r9, fp, lr}^
     7b4:	5253495f 	subspl	r4, r3, #1556480	; 0x17c000
     7b8:	616e455f 	cmnvs	lr, pc, asr r5
     7bc:	00656c62 	rsbeq	r6, r5, r2, ror #24
     7c0:	5f79654b 	svcpl	0x0079654b
     7c4:	74696157 	strbtvc	r6, [r9], #-343	; 0xfffffea9
     7c8:	79654b5f 	stmdbvc	r5!, {r0, r1, r2, r3, r4, r6, r8, r9, fp, lr}^
     7cc:	6572505f 	ldrbvs	r5, [r2, #-95]!	; 0xffffffa1
     7d0:	64657373 	strbtvs	r7, [r5], #-883	; 0xfffffc8d
     7d4:	79654b00 	stmdbvc	r5!, {r8, r9, fp, lr}^
     7d8:	6568435f 	strbvs	r4, [r8, #-863]!	; 0xfffffca1
     7dc:	495f6b63 	ldmdbmi	pc, {r0, r1, r5, r6, r8, r9, fp, sp, lr}^	; <UNPREDICTABLE>
     7e0:	7475706e 	ldrbtvc	r7, [r5], #-110	; 0xffffff92
     7e4:	49464100 	stmdbmi	r6, {r8, lr}^
     7e8:	79545f4f 	ldmdbvc	r4, {r0, r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     7ec:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     7f0:	654b0066 	strbvs	r0, [fp, #-102]	; 0xffffff9a
     7f4:	65475f79 	strbvs	r5, [r7, #-3961]	; 0xfffff087
     7f8:	72505f74 	subsvc	r5, r0, #116, 30	; 0x1d0
     7fc:	65737365 	ldrbvs	r7, [r3, #-869]!	; 0xfffffc9b
     800:	58450064 	stmdapl	r5, {r2, r5, r6}^
     804:	52434954 	subpl	r4, r3, #84, 18	; 0x150000
     808:	54584500 	ldrbpl	r4, [r8], #-1280	; 0xfffffb00
     80c:	79545f49 	ldmdbvc	r4, {r0, r3, r6, r8, r9, sl, fp, ip, lr}^
     810:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     814:	54520066 	ldrbpl	r0, [r2], #-102	; 0xffffff9a
     818:	47005253 	smlsdmi	r0, r3, r2, r5
     81c:	5f4f4950 	svcpl	0x004f4950
     820:	65707954 	ldrbvs	r7, [r0, #-2388]!	; 0xfffff6ac
     824:	00666544 	rsbeq	r6, r6, r4, asr #10
     828:	5250414d 	subspl	r4, r0, #1073741843	; 0x40000013
     82c:	57530032 	smmlarpl	r3, r2, r0, r0
     830:	00524549 	subseq	r4, r2, r9, asr #10
     834:	52535446 	subspl	r5, r3, #1174405120	; 0x46000000
     838:	43564500 	cmpmi	r6, #0, 10
     83c:	434c0052 	movtmi	r0, #49234	; 0xc052
     840:	4c00524b 	sfmmi	f5, 4, [r0], {75}	; 0x4b
     844:	415f4445 	cmpmi	pc, r5, asr #8
     848:	4f5f6c6c 	svcmi	0x005f6c6c
     84c:	4c006666 	stcmi	6, cr6, [r0], {102}	; 0x66
     850:	445f4445 	ldrbmi	r4, [pc], #-1093	; 858 <__RW_SIZE__+0x2d4>
     854:	6c707369 	ldclvs	3, cr7, [r0], #-420	; 0xfffffe5c
     858:	6c007961 	stcvs	9, cr7, [r0], {97}	; 0x61
     85c:	632e6465 	teqvs	lr, #1694498816	; 0x65000000
     860:	44454c00 	strbmi	r4, [r5], #-3072	; 0xfffff400
     864:	6c6c415f 	stfvse	f4, [ip], #-380	; 0xfffffe84
     868:	006e4f5f 	rsbeq	r4, lr, pc, asr pc
     86c:	5f44454c 	svcpl	0x0044454c
     870:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     874:	63727300 	cmnvs	r2, #0, 6
     878:	61645f31 	cmnvs	r4, r1, lsr pc
     87c:	4d4d0074 	stclmi	0, cr0, [sp, #-464]	; 0xfffffe30
     880:	53005246 	movwpl	r5, #582	; 0x246
     884:	52534348 	subspl	r4, r3, #72, 6	; 0x20000001
     888:	6d656d00 	stclvs	13, cr6, [r5, #-0]
     88c:	00746573 	rsbseq	r6, r4, r3, ror r5
     890:	31747364 	cmncc	r4, r4, ror #6
     894:	7461645f 	strbtvc	r6, [r1], #-1119	; 0xfffffba1
     898:	53464300 	movtpl	r4, #25344	; 0x6300
     89c:	49540052 	ldmdbmi	r4, {r1, r4, r6}^
     8a0:	525f344d 	subspl	r3, pc, #1291845632	; 0x4d000000
     8a4:	61657065 	cmnvs	r5, r5, rrx
     8a8:	6e495f74 	mcrvs	15, 2, r5, cr9, cr4, {3}
     8ac:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
     8b0:	5f747075 	svcpl	0x00747075
     8b4:	62616e45 	rsbvs	r6, r1, #1104	; 0x450
     8b8:	5600656c 	strpl	r6, [r0], -ip, ror #10
     8bc:	00524f54 	subseq	r4, r2, r4, asr pc
     8c0:	52534648 	subspl	r4, r3, #72, 12	; 0x4800000
     8c4:	42435300 	submi	r5, r3, #0, 6
     8c8:	7079545f 	rsbsvc	r5, r9, pc, asr r4
     8cc:	61550065 	cmpvs	r5, r5, rrx
     8d0:	5f317472 	svcpl	0x00317472
     8d4:	74696e49 	strbtvc	r6, [r9], #-3657	; 0xfffff1b7
     8d8:	53464400 	movtpl	r4, #25600	; 0x6400
     8dc:	43490052 	movtmi	r0, #36946	; 0x9052
     8e0:	41005253 	tstmi	r0, r3, asr r2
     8e4:	52435249 	subpl	r5, r3, #-1879048188	; 0x90000004
     8e8:	41534900 	cmpmi	r3, r0, lsl #18
     8ec:	46420052 			; <UNDEFINED> instruction: 0x46420052
     8f0:	4d005241 	sfmmi	f5, 4, [r0, #-260]	; 0xfffffefc
     8f4:	006e6961 	rsbeq	r6, lr, r1, ror #18
     8f8:	49555043 	ldmdbmi	r5, {r0, r1, r6, ip, lr}^
     8fc:	616d0044 	cmnvs	sp, r4, asr #32
     900:	632e6e69 	teqvs	lr, #1680	; 0x690
     904:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     908:	78455f34 	stmdavc	r5, {r2, r4, r5, r8, r9, sl, fp, ip, lr}^
     90c:	65726970 	ldrbvs	r6, [r2, #-2416]!	; 0xfffff690
     910:	656d0064 	strbvs	r0, [sp, #-100]!	; 0xffffff9c
     914:	7970636d 	ldmdbvc	r0!, {r0, r2, r3, r5, r6, r8, r9, sp, lr}^
     918:	464d4d00 	strbmi	r4, [sp], -r0, lsl #26
     91c:	53005241 	movwpl	r5, #577	; 0x241
     920:	495f7379 	ldmdbmi	pc, {r0, r3, r4, r5, r6, r8, r9, ip, sp, lr}^	; <UNPREDICTABLE>
     924:	0074696e 	rsbseq	r6, r4, lr, ror #18
     928:	74726155 	ldrbtvc	r6, [r2], #-341	; 0xfffffeab
     92c:	72505f31 	subsvc	r5, r0, #49, 30	; 0xc4
     930:	66746e69 	ldrbtvs	r6, [r4], -r9, ror #28
     934:	53464100 	movtpl	r4, #24832	; 0x6100
     938:	65680052 	strbvs	r0, [r8, #-82]!	; 0xffffffae
     93c:	70007061 	andvc	r7, r0, r1, rrx
     940:	48766572 	ldmdami	r6!, {r1, r4, r5, r6, r8, sl, sp, lr}^
     944:	00706165 	rsbseq	r6, r0, r5, ror #2
     948:	7478656e 	ldrbtvc	r6, [r8], #-1390	; 0xfffffa92
     94c:	70616548 	rsbvc	r6, r1, r8, asr #10
     950:	6e757200 	cdpvs	2, 7, cr7, cr5, cr0, {0}
     954:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     958:	5f00632e 	svcpl	0x0000632e
     95c:	6b726273 	blvs	1c99330 <__RW_SIZE__+0x1c98dac>
     960:	5a5f5f00 	bpl	17d8568 <__RW_SIZE__+0x17d7fe4>
     964:	494c5f49 	stmdbmi	ip, {r0, r3, r6, r8, r9, sl, fp, ip, lr}^
     968:	5f54494d 	svcpl	0x0054494d
     96c:	4d4e005f 	stclmi	0, cr0, [lr, #-380]	; 0xfffffe84
     970:	61485f49 	cmpvs	r8, r9, asr #30
     974:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     978:	49440072 	stmdbmi	r4, {r1, r4, r5, r6}^
     97c:	44005245 	strmi	r5, [r0], #-581	; 0xfffffdbb
     980:	67756265 	ldrbvs	r6, [r5, -r5, ror #4]!
     984:	5f6e6f4d 	svcpl	0x006e6f4d
     988:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     98c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     990:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     994:	52495f34 	subpl	r5, r9, #52, 30	; 0xd0
     998:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     99c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     9a0:	414d4400 	cmpmi	sp, r0, lsl #8
     9a4:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     9a8:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     9ac:	495f376c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, r9, sl, ip, sp}^	; <UNPREDICTABLE>
     9b0:	61485152 	cmpvs	r8, r2, asr r1
     9b4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     9b8:	57570072 			; <UNDEFINED> instruction: 0x57570072
     9bc:	495f4744 	ldmdbmi	pc, {r2, r6, r8, r9, sl, lr}^	; <UNPREDICTABLE>
     9c0:	61485152 	cmpvs	r8, r2, asr r1
     9c4:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     9c8:	49540072 	ldmdbmi	r4, {r1, r4, r5, r6}^
     9cc:	79545f4d 	ldmdbvc	r4, {r0, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     9d0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     9d4:	53550066 	cmppl	r5, #102	; 0x66
     9d8:	31545241 	cmpcc	r4, r1, asr #4
     9dc:	5152495f 	cmppl	r2, pc, asr r9
     9e0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     9e4:	0072656c 	rsbseq	r6, r2, ip, ror #10
     9e8:	74726155 	ldrbtvc	r6, [r2], #-341	; 0xfffffeab
     9ec:	78525f31 	ldmdavc	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     9f0:	006e495f 	rsbeq	r4, lr, pc, asr r9
     9f4:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     9f8:	65525f74 	ldrbvs	r5, [r2, #-3956]	; 0xfffff08c
     9fc:	74726f70 	ldrbtvc	r6, [r2], #-3952	; 0xfffff090
     a00:	52434300 	subpl	r4, r3, #0, 6
     a04:	41430032 	cmpmi	r3, r2, lsr r0
     a08:	43535f4e 	cmpmi	r3, #312	; 0x138
     a0c:	52495f45 	subpl	r5, r9, #276	; 0x114
     a10:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     a14:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     a18:	43324900 	teqmi	r2, #0, 18
     a1c:	52455f32 	subpl	r5, r5, #50, 30	; 0xc8
     a20:	5152495f 	cmppl	r2, pc, asr r9
     a24:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     a28:	0072656c 	rsbseq	r6, r2, ip, ror #10
     a2c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     a30:	495f3254 	ldmdbmi	pc, {r2, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     a34:	61485152 	cmpvs	r8, r2, asr r1
     a38:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     a3c:	43430072 	movtmi	r0, #12402	; 0x3072
     a40:	0031524d 	eorseq	r5, r1, sp, asr #4
     a44:	524d4343 	subpl	r4, sp, #201326593	; 0xc000001
     a48:	50530032 	subspl	r0, r3, r2, lsr r0
     a4c:	495f3149 	ldmdbmi	pc, {r0, r3, r6, r8, ip, sp}^	; <UNPREDICTABLE>
     a50:	61485152 	cmpvs	r8, r2, asr r1
     a54:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     a58:	54470072 	strbpl	r0, [r7], #-114	; 0xffffff8e
     a5c:	50005250 	andpl	r5, r0, r0, asr r2
     a60:	495f4456 	ldmdbmi	pc, {r1, r2, r4, r6, sl, lr}^	; <UNPREDICTABLE>
     a64:	61485152 	cmpvs	r8, r2, asr r1
     a68:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     a6c:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
     a70:	5f334954 	svcpl	0x00334954
     a74:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     a78:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     a7c:	54007265 	strpl	r7, [r0], #-613	; 0xfffffd9b
     a80:	5f314d49 	svcpl	0x00314d49
     a84:	495f4343 	ldmdbmi	pc, {r0, r1, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     a88:	61485152 	cmpvs	r8, r2, asr r1
     a8c:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     a90:	45520072 	ldrbmi	r0, [r2, #-114]	; 0xffffff8e
     a94:	56524553 			; <UNDEFINED> instruction: 0x56524553
     a98:	30314445 	eorscc	r4, r1, r5, asr #8
     a9c:	53455200 	movtpl	r5, #20992	; 0x5200
     aa0:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     aa4:	00313144 	eorseq	r3, r1, r4, asr #2
     aa8:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     aac:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     ab0:	52003231 	andpl	r3, r0, #268435459	; 0x10000003
     ab4:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     ab8:	31444556 	cmpcc	r4, r6, asr r5
     abc:	45520033 	ldrbmi	r0, [r2, #-51]	; 0xffffffcd
     ac0:	56524553 			; <UNDEFINED> instruction: 0x56524553
     ac4:	34314445 	ldrtcc	r4, [r1], #-1093	; 0xfffffbbb
     ac8:	53455200 	movtpl	r5, #20992	; 0x5200
     acc:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     ad0:	00353144 	eorseq	r3, r5, r4, asr #2
     ad4:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     ad8:	5f6b6369 	svcpl	0x006b6369
     adc:	67616c46 	strbvs	r6, [r1, -r6, asr #24]!
     ae0:	53455200 	movtpl	r5, #20992	; 0x5200
     ae4:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     ae8:	00373144 	eorseq	r3, r7, r4, asr #2
     aec:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     af0:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     af4:	52003831 	andpl	r3, r0, #3211264	; 0x310000
     af8:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     afc:	31444556 	cmpcc	r4, r6, asr r5
     b00:	73550039 	cmpvc	r5, #57	; 0x39
     b04:	46656761 	strbtmi	r6, [r5], -r1, ror #14
     b08:	746c7561 	strbtvc	r7, [ip], #-1377	; 0xfffffa9f
     b0c:	6e61485f 	mcrvs	8, 3, r4, cr1, cr15, {2}
     b10:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     b14:	45434300 	strbmi	r4, [r3, #-768]	; 0xfffffd00
     b18:	53550052 	cmppl	r5, #82	; 0x52
     b1c:	50485f42 	subpl	r5, r8, r2, asr #30
     b20:	4e41435f 	mcrmi	3, 2, r4, cr1, cr15, {2}
     b24:	5f58545f 	svcpl	0x0058545f
     b28:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     b2c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     b30:	44007265 	strmi	r7, [r0], #-613	; 0xfffffd9b
     b34:	5f31414d 	svcpl	0x0031414d
     b38:	00525349 	subseq	r5, r2, r9, asr #6
     b3c:	314d4954 	cmpcc	sp, r4, asr r9
     b40:	5f50555f 	svcpl	0x0050555f
     b44:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     b48:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     b4c:	44007265 	strmi	r7, [r0], #-613	; 0xfffffd9b
     b50:	5f31414d 	svcpl	0x0031414d
     b54:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     b58:	346c656e 	strbtcc	r6, [ip], #-1390	; 0xfffffa92
     b5c:	5152495f 	cmppl	r2, pc, asr r9
     b60:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     b64:	0072656c 	rsbseq	r6, r2, ip, ror #10
     b68:	334d4954 	movtcc	r4, #55636	; 0xd954
     b6c:	5152495f 	cmppl	r2, pc, asr r9
     b70:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     b74:	0072656c 	rsbseq	r6, r2, ip, ror #10
     b78:	63617453 	cmnvs	r1, #1392508928	; 0x53000000
     b7c:	65725f6b 	ldrbvs	r5, [r2, #-3947]!	; 0xfffff095
     b80:	49540067 	ldmdbmi	r4, {r0, r1, r2, r5, r6}^
     b84:	545f314d 	ldrbpl	r3, [pc], #-333	; b8c <__RW_SIZE__+0x608>
     b88:	435f4752 	cmpmi	pc, #21495808	; 0x1480000
     b8c:	495f4d4f 	ldmdbmi	pc, {r0, r1, r2, r3, r6, r8, sl, fp, lr}^	; <UNPREDICTABLE>
     b90:	61485152 	cmpvs	r8, r2, asr r1
     b94:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     b98:	44420072 	strbmi	r0, [r2], #-114	; 0xffffff8e
     b9c:	55005254 	strpl	r5, [r0, #-596]	; 0xfffffdac
     ba0:	61574253 	cmpvs	r7, r3, asr r2
     ba4:	7055656b 	subsvc	r6, r5, fp, ror #10
     ba8:	5152495f 	cmppl	r2, pc, asr r9
     bac:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     bb0:	0072656c 	rsbseq	r6, r2, ip, ror #10
     bb4:	4d6d654d 	cfstr64mi	mvdx6, [sp, #-308]!	; 0xfffffecc
     bb8:	67616e61 	strbvs	r6, [r1, -r1, ror #28]!
     bbc:	61485f65 	cmpvs	r8, r5, ror #30
     bc0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     bc4:	61480072 	hvcvs	32770	; 0x8002
     bc8:	61466472 	hvcvs	26178	; 0x6642
     bcc:	5f746c75 	svcpl	0x00746c75
     bd0:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     bd4:	0072656c 	rsbseq	r6, r2, ip, ror #10
     bd8:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     bdc:	79545f54 	ldmdbvc	r4, {r2, r4, r6, r8, r9, sl, fp, ip, lr}^
     be0:	65446570 	strbvs	r6, [r4, #-1392]	; 0xfffffa90
     be4:	4c460066 	mcrrmi	0, 6, r0, r6, cr6
     be8:	5f485341 	svcpl	0x00485341
     bec:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     bf0:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     bf4:	45007265 	strmi	r7, [r0, #-613]	; 0xfffffd9b
     bf8:	30495458 	subcc	r5, r9, r8, asr r4
     bfc:	5152495f 	cmppl	r2, pc, asr r9
     c00:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     c04:	0072656c 	rsbseq	r6, r2, ip, ror #10
     c08:	31434441 	cmpcc	r3, r1, asr #8
     c0c:	495f325f 	ldmdbmi	pc, {r0, r1, r2, r3, r4, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     c10:	61485152 	cmpvs	r8, r2, asr r1
     c14:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     c18:	41430072 	hvcmi	12290	; 0x3002
     c1c:	58525f4e 	ldmdapl	r2, {r1, r2, r3, r6, r8, r9, sl, fp, ip, lr}^
     c20:	52495f31 	subpl	r5, r9, #49, 30	; 0xc4
     c24:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     c28:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     c2c:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     c30:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     c34:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     c38:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     c3c:	414d4400 	cmpmi	sp, r0, lsl #8
     c40:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     c44:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     c48:	495f326c 	ldmdbmi	pc, {r2, r3, r5, r6, r9, ip, sp}^	; <UNPREDICTABLE>
     c4c:	61485152 	cmpvs	r8, r2, asr r1
     c50:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     c54:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
     c58:	5f314954 	svcpl	0x00314954
     c5c:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     c60:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     c64:	50007265 	andpl	r7, r0, r5, ror #4
     c68:	53646e65 	cmnpl	r4, #1616	; 0x650
     c6c:	61485f56 	cmpvs	r8, r6, asr pc
     c70:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     c74:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
     c78:	6632336d 	ldrtvs	r3, [r2], -sp, ror #6
     c7c:	5f783031 	svcpl	0x00783031
     c80:	632e7469 	teqvs	lr, #1761607680	; 0x69000000
     c84:	43545200 	cmpmi	r4, #0, 4
     c88:	72616c41 	rsbvc	r6, r1, #16640	; 0x4100
     c8c:	52495f6d 	subpl	r5, r9, #436	; 0x1b4
     c90:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     c94:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     c98:	53455200 	movtpl	r5, #20992	; 0x5200
     c9c:	45565245 	ldrbmi	r5, [r6, #-581]	; 0xfffffdbb
     ca0:	52003144 	andpl	r3, r0, #68, 2
     ca4:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     ca8:	36444556 			; <UNDEFINED> instruction: 0x36444556
     cac:	414d4400 	cmpmi	sp, r0, lsl #8
     cb0:	68435f31 	stmdavs	r3, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     cb4:	656e6e61 	strbvs	r6, [lr, #-3681]!	; 0xfffff19f
     cb8:	495f356c 	ldmdbmi	pc, {r2, r3, r5, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     cbc:	61485152 	cmpvs	r8, r2, asr r1
     cc0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     cc4:	45520072 	ldrbmi	r0, [r2, #-114]	; 0xffffff8e
     cc8:	56524553 			; <UNDEFINED> instruction: 0x56524553
     ccc:	00394445 	eorseq	r4, r9, r5, asr #8
     cd0:	74726155 	ldrbtvc	r6, [r2], #-341	; 0xfffffeab
     cd4:	78525f31 	ldmdavc	r2, {r0, r4, r5, r8, r9, sl, fp, ip, lr}^
     cd8:	7461445f 	strbtvc	r4, [r1], #-1119	; 0xfffffba1
     cdc:	43520061 	cmpmi	r2, #97	; 0x61
     ce0:	52495f43 	subpl	r5, r9, #268	; 0x10c
     ce4:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     ce8:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     cec:	616c6600 	cmnvs	ip, r0, lsl #12
     cf0:	4d440067 	stclmi	0, cr0, [r4, #-412]	; 0xfffffe64
     cf4:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     cf8:	6e6e6168 	powvsez	f6, f6, #0.0
     cfc:	5f366c65 	svcpl	0x00366c65
     d00:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     d04:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     d08:	52007265 	andpl	r7, r0, #1342177286	; 0x50000006
     d0c:	495f4354 	ldmdbmi	pc, {r2, r4, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     d10:	61485152 	cmpvs	r8, r2, asr r1
     d14:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d18:	4d440072 	stclmi	0, cr0, [r4, #-456]	; 0xfffffe38
     d1c:	435f3141 	cmpmi	pc, #1073741840	; 0x40000010
     d20:	4f445f48 	svcmi	0x00445f48
     d24:	5300454e 	movwpl	r4, #1358	; 0x54e
     d28:	485f4356 	ldmdami	pc, {r1, r2, r4, r6, r8, r9, lr}^	; <UNPREDICTABLE>
     d2c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     d30:	53007265 	movwpl	r7, #613	; 0x265
     d34:	6b636174 	blvs	18d930c <__RW_SIZE__+0x18d8d88>
     d38:	6d75445f 	cfldrdvs	mvd4, [r5, #-380]!	; 0xfffffe84
     d3c:	49540070 	ldmdbmi	r4, {r4, r5, r6}^
     d40:	495f344d 	ldmdbmi	pc, {r0, r2, r3, r6, sl, ip, sp}^	; <UNPREDICTABLE>
     d44:	61485152 	cmpvs	r8, r2, asr r1
     d48:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d4c:	45520072 	ldrbmi	r0, [r2, #-114]	; 0xffffff8e
     d50:	56524553 			; <UNDEFINED> instruction: 0x56524553
     d54:	00374445 	eorseq	r4, r7, r5, asr #8
     d58:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     d5c:	5f6b6369 	svcpl	0x006b6369
     d60:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     d64:	0072656c 	rsbseq	r6, r2, ip, ror #10
     d68:	314d4954 	cmpcc	sp, r4, asr r9
     d6c:	4b52425f 	blmi	14916f0 <__RW_SIZE__+0x149116c>
     d70:	5152495f 	cmppl	r2, pc, asr r9
     d74:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     d78:	0072656c 	rsbseq	r6, r2, ip, ror #10
     d7c:	61766e49 	cmnvs	r6, r9, asr #28
     d80:	5f64696c 	svcpl	0x0064696c
     d84:	00525349 	subseq	r5, r2, r9, asr #6
     d88:	52434d53 	subpl	r4, r3, #5312	; 0x14c0
     d8c:	73754200 	cmnvc	r5, #0, 4
     d90:	6c756146 	ldfvse	f6, [r5], #-280	; 0xfffffee8
     d94:	61485f74 	hvcvs	34292	; 0x85f4
     d98:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     d9c:	32490072 	subcc	r0, r9, #114	; 0x72
     da0:	455f3243 	ldrbmi	r3, [pc, #-579]	; b65 <__RW_SIZE__+0x5e1>
     da4:	52495f56 	subpl	r5, r9, #344	; 0x158
     da8:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     dac:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     db0:	414d4400 	cmpmi	sp, r0, lsl #8
     db4:	32490052 	subcc	r0, r9, #82	; 0x52
     db8:	455f3143 	ldrbmi	r3, [pc, #-323]	; c7d <__RW_SIZE__+0x6f9>
     dbc:	52495f52 	subpl	r5, r9, #328	; 0x148
     dc0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     dc4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     dc8:	42535500 	subsmi	r5, r3, #0, 10
     dcc:	5f504c5f 	svcpl	0x00504c5f
     dd0:	5f4e4143 	svcpl	0x004e4143
     dd4:	5f305852 	svcpl	0x00305852
     dd8:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     ddc:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     de0:	52007265 	andpl	r7, r0, #1342177286	; 0x50000006
     de4:	52455345 	subpl	r5, r5, #335544321	; 0x14000001
     de8:	38444556 	stmdacc	r4, {r1, r2, r4, r6, r8, sl, lr}^
     dec:	52434300 	subpl	r4, r3, #0, 6
     df0:	43430031 	movtmi	r0, #12337	; 0x3031
     df4:	43003352 	movwmi	r3, #850	; 0x352
     df8:	00345243 	eorseq	r5, r4, r3, asr #4
     dfc:	45534552 	ldrbmi	r4, [r3, #-1362]	; 0xfffffaae
     e00:	44455652 	strbmi	r5, [r5], #-1618	; 0xfffff9ae
     e04:	44003631 	strmi	r3, [r0], #-1585	; 0xfffff9cf
     e08:	5f31414d 	svcpl	0x0031414d
     e0c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     e10:	336c656e 	cmncc	ip, #461373440	; 0x1b800000
     e14:	5152495f 	cmppl	r2, pc, asr r9
     e18:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     e1c:	0072656c 	rsbseq	r6, r2, ip, ror #10
     e20:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     e24:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     e28:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     e2c:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     e30:	4d415400 	cfstrdmi	mvd5, [r1, #-0]
     e34:	5f524550 	svcpl	0x00524550
     e38:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     e3c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     e40:	44007265 	strmi	r7, [r0], #-613	; 0xfffffd9b
     e44:	5f31414d 	svcpl	0x0031414d
     e48:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     e4c:	316c656e 	cmncc	ip, lr, ror #10
     e50:	5152495f 	cmppl	r2, pc, asr r9
     e54:	646e6148 	strbtvs	r6, [lr], #-328	; 0xfffffeb8
     e58:	0072656c 	rsbseq	r6, r2, ip, ror #10
     e5c:	52415355 	subpl	r5, r1, #1409286145	; 0x54000001
     e60:	495f3354 	ldmdbmi	pc, {r2, r4, r6, r8, r9, ip, sp}^	; <UNPREDICTABLE>
     e64:	61485152 	cmpvs	r8, r2, asr r1
     e68:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     e6c:	58450072 	stmdapl	r5, {r1, r4, r5, r6}^
     e70:	35314954 	ldrcc	r4, [r1, #-2388]!	; 0xfffff6ac
     e74:	5f30315f 	svcpl	0x0030315f
     e78:	48515249 	ldmdami	r1, {r0, r3, r6, r9, ip, lr}^
     e7c:	6c646e61 	stclvs	14, cr6, [r4], #-388	; 0xfffffe7c
     e80:	45007265 	strmi	r7, [r0, #-613]	; 0xfffffd9b
     e84:	39495458 	stmdbcc	r9, {r3, r4, r6, sl, ip, lr}^
     e88:	495f355f 	ldmdbmi	pc, {r0, r1, r2, r3, r4, r6, r8, sl, ip, sp}^	; <UNPREDICTABLE>
     e8c:	61485152 	cmpvs	r8, r2, asr r1
     e90:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
     e94:	654b0072 	strbvs	r0, [fp, #-114]	; 0xffffff8e
     e98:	61565f79 	cmpvs	r6, r9, ror pc
     e9c:	0065756c 	rsbeq	r7, r5, ip, ror #10
     ea0:	63617473 	cmnvs	r1, #1929379840	; 0x73000000
     ea4:	3249006b 	subcc	r0, r9, #107	; 0x6b
     ea8:	455f3143 	ldrbmi	r3, [pc, #-323]	; d6d <__RW_SIZE__+0x7e9>
     eac:	52495f56 	subpl	r5, r9, #344	; 0x158
     eb0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     eb4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     eb8:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     ebc:	52495f32 	subpl	r5, r9, #50, 30	; 0xc8
     ec0:	6e614851 	mcrvs	8, 3, r4, cr1, cr1, {2}
     ec4:	72656c64 	rsbvc	r6, r5, #100, 24	; 0x6400
     ec8:	73795300 	cmnvc	r9, #0, 6
     ecc:	6b636954 	blvs	18db424 <__RW_SIZE__+0x18daea0>
     ed0:	6f74535f 	svcvs	0x0074535f
     ed4:	79730070 	ldmdbvc	r3!, {r4, r5, r6}^
     ed8:	63697473 	cmnvs	r9, #1929379840	; 0x73000000
     edc:	00632e6b 	rsbeq	r2, r3, fp, ror #28
     ee0:	494c4143 	stmdbmi	ip, {r0, r1, r6, r8, lr}^
     ee4:	79530042 	ldmdbvc	r3, {r1, r6}^
     ee8:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     eec:	68435f6b 	stmdavs	r3, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     ef0:	5f6b6365 	svcpl	0x006b6365
     ef4:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
     ef8:	0074756f 	rsbseq	r7, r4, pc, ror #10
     efc:	4c525443 	cfldrdmi	mvd5, [r2], {67}	; 0x43
     f00:	414f4c00 	cmpmi	pc, r0, lsl #24
     f04:	79530044 	ldmdbvc	r3, {r2, r6}^
     f08:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     f0c:	75525f6b 	ldrbvc	r5, [r2, #-3947]	; 0xfffff095
     f10:	7953006e 	ldmdbvc	r3, {r1, r2, r3, r5, r6}^
     f14:	63695473 	cmnvs	r9, #1929379840	; 0x73000000
     f18:	79545f6b 	ldmdbvc	r4, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     f1c:	6d006570 	cfstr32vs	mvfx6, [r0, #-448]	; 0xfffffe40
     f20:	00636573 	rsbeq	r6, r3, r3, ror r5
     f24:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     f28:	5f6b6369 	svcpl	0x006b6369
     f2c:	545f534f 	ldrbpl	r5, [pc], #-847	; f34 <__RW_SIZE__+0x9b0>
     f30:	006b6369 	rsbeq	r6, fp, r9, ror #6
     f34:	54737953 	ldrbtpl	r7, [r3], #-2387	; 0xfffff6ad
     f38:	5f6b6369 	svcpl	0x006b6369
     f3c:	5f746547 	svcpl	0x00746547
     f40:	656d6954 	strbvs	r6, [sp, #-2388]!	; 0xfffff6ac
     f44:	73795300 	cmnvc	r9, #0, 6
     f48:	6b636954 	blvs	18db4a0 <__RW_SIZE__+0x18daf1c>
     f4c:	7465475f 	strbtvc	r4, [r5], #-1887	; 0xfffff8a1
     f50:	616f4c5f 	cmnvs	pc, pc, asr ip	; <UNPREDICTABLE>
     f54:	69545f64 	ldmdbvs	r4, {r2, r5, r6, r8, r9, sl, fp, ip, lr}^
     f58:	5400656d 	strpl	r6, [r0], #-1389	; 0xfffffa93
     f5c:	5f344d49 	svcpl	0x00344d49
     f60:	65706552 	ldrbvs	r6, [r0, #-1362]!	; 0xfffffaae
     f64:	54007461 	strpl	r7, [r0], #-1121	; 0xfffffb9f
     f68:	5f344d49 	svcpl	0x00344d49
     f6c:	6e616843 	cdpvs	8, 6, cr6, cr1, cr3, {2}
     f70:	565f6567 	ldrbpl	r6, [pc], -r7, ror #10
     f74:	65756c61 	ldrbvs	r6, [r5, #-3169]!	; 0xfffff39f
     f78:	6d697400 	cfstrdvs	mvd7, [r9, #-0]
     f7c:	49540065 	ldmdbmi	r4, {r0, r2, r5, r6}^
     f80:	535f344d 	cmppl	pc, #1291845632	; 0x4d000000
     f84:	00706f74 	rsbseq	r6, r0, r4, ror pc
     f88:	656d6974 	strbvs	r6, [sp, #-2420]!	; 0xfffff68c
     f8c:	00632e72 	rsbeq	r2, r3, r2, ror lr
     f90:	334d4954 	movtcc	r4, #55636	; 0xd954
     f94:	74754f5f 	ldrbtvc	r4, [r5], #-3935	; 0xfffff0a1
     f98:	696e495f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, lr}^
     f9c:	72660074 	rsbvc	r0, r6, #116	; 0x74
     fa0:	54007165 	strpl	r7, [r0], #-357	; 0xfffffe9b
     fa4:	5f344d49 	svcpl	0x00344d49
     fa8:	63656843 	cmnvs	r5, #4390912	; 0x430000
     fac:	69545f6b 	ldmdbvs	r4, {r0, r1, r3, r5, r6, r8, r9, sl, fp, ip, lr}^
     fb0:	756f656d 	strbvc	r6, [pc, #-1389]!	; a4b <__RW_SIZE__+0x4c7>
     fb4:	49540074 	ldmdbmi	r4, {r2, r4, r5, r6}^
     fb8:	445f324d 	ldrbmi	r3, [pc], #-589	; fc0 <__RW_SIZE__+0xa3c>
     fbc:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
     fc0:	4d495400 	cfstrdmi	mvd5, [r9, #-0]
     fc4:	754f5f33 	strbvc	r5, [pc, #-3891]	; 99 <shift+0x99>
     fc8:	72465f74 	subvc	r5, r6, #116, 30	; 0x1d0
     fcc:	475f7165 	ldrbmi	r7, [pc, -r5, ror #2]
     fd0:	72656e65 	rsbvc	r6, r5, #1616	; 0x650
     fd4:	6f697461 	svcvs	0x00697461
     fd8:	4954006e 	ldmdbmi	r4, {r1, r2, r3, r5, r6}^
     fdc:	535f324d 	cmppl	pc, #-805306364	; 0xd0000004
     fe0:	77706f74 			; <UNDEFINED> instruction: 0x77706f74
     fe4:	68637461 	stmdavs	r3!, {r0, r5, r6, sl, ip, sp, lr}^
     fe8:	6174535f 	cmnvs	r4, pc, asr r3
     fec:	54007472 	strpl	r7, [r0], #-1138	; 0xfffffb8e
     ff0:	5f324d49 	svcpl	0x00324d49
     ff4:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
     ff8:	63746177 	cmnvs	r4, #-1073741795	; 0xc000001d
     ffc:	74535f68 	ldrbvc	r5, [r3], #-3944	; 0xfffff098
    1000:	5400706f 	strpl	r7, [r0], #-111	; 0xffffff91
    1004:	5f334d49 	svcpl	0x00334d49
    1008:	5f74754f 	svcpl	0x0074754f
    100c:	706f7453 	rsbvc	r7, pc, r3, asr r4	; <UNPREDICTABLE>
    1010:	72615500 	rsbvc	r5, r1, #0, 10
    1014:	475f3174 			; <UNDEFINED> instruction: 0x475f3174
    1018:	505f7465 	subspl	r7, pc, r5, ror #8
    101c:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
    1020:	55006465 	strpl	r6, [r0, #-1125]	; 0xfffffb9b
    1024:	31747261 	cmncc	r4, r1, ror #4
    1028:	5f58525f 	svcpl	0x0058525f
    102c:	65746e49 	ldrbvs	r6, [r4, #-3657]!	; 0xfffff1b7
    1030:	70757272 	rsbsvc	r7, r5, r2, ror r2
    1034:	6e455f74 	mcrvs	15, 2, r5, cr5, cr4, {3}
    1038:	656c6261 	strbvs	r6, [ip, #-609]!	; 0xfffffd9f
    103c:	765f5f00 	ldrbvc	r5, [pc], -r0, lsl #30
    1040:	696c5f61 	stmdbvs	ip!, {r0, r5, r6, r8, r9, sl, fp, ip, lr}^
    1044:	75007473 	strvc	r7, [r0, #-1139]	; 0xfffffb8d
    1048:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
    104c:	6f640063 	svcvs	0x00640063
    1050:	656c6275 	strbvs	r6, [ip, #-629]!	; 0xfffffd8b
    1054:	72615500 	rsbvc	r5, r1, #0, 10
    1058:	575f3174 			; <UNDEFINED> instruction: 0x575f3174
    105c:	5f746961 	svcpl	0x00746961
    1060:	5f726f66 	svcpl	0x00726f66
    1064:	435f5854 	cmpmi	pc, #84, 16	; 0x540000
    1068:	6c706d6f 	ldclvs	13, cr6, [r0], #-444	; 0xfffffe44
    106c:	00657465 	rsbeq	r7, r5, r5, ror #8
    1070:	74726155 	ldrbtvc	r6, [r2], #-341	; 0xfffffeab
    1074:	65535f31 	ldrbvs	r5, [r3, #-3889]	; 0xfffff0cf
    1078:	425f646e 	subsmi	r6, pc, #1845493760	; 0x6e000000
    107c:	00657479 	rsbeq	r7, r5, r9, ror r4
    1080:	74726155 	ldrbtvc	r6, [r2], #-341	; 0xfffffeab
    1084:	65475f31 	strbvs	r5, [r7, #-3889]	; 0xfffff0cf
    1088:	68435f74 	stmdavs	r3, {r2, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
    108c:	62007261 	andvs	r7, r0, #268435462	; 0x10000006
    1090:	00647561 	rsbeq	r7, r4, r1, ror #10
    1094:	74726155 	ldrbtvc	r6, [r2], #-341	; 0xfffffeab
    1098:	65535f31 	ldrbvs	r5, [r3, #-3889]	; 0xfffff0cf
    109c:	535f646e 	cmppl	pc, #1845493760	; 0x6e000000
    10a0:	6e697274 	mcrvs	2, 3, r7, cr9, cr4, {3}
    10a4:	72660067 	rsbvc	r0, r6, #103	; 0x67
    10a8:	6d006361 	stcvs	3, cr6, [r0, #-388]	; 0xfffffe7c
    10ac:	00746e61 	rsbseq	r6, r4, r1, ror #28
    10b0:	69727473 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, sl, ip, sp, lr}^
    10b4:	5f00676e 	svcpl	0x0000676e
    10b8:	756e675f 	strbvc	r6, [lr, #-1887]!	; 0xfffff8a1
    10bc:	61765f63 	cmnvs	r6, r3, ror #30
    10c0:	73696c5f 	cmnvc	r9, #24320	; 0x5f00
    10c4:	5f5f0074 	svcpl	0x005f0074
    10c8:	76007061 	strvc	r7, [r0], -r1, rrx
    10cc:	69727073 	ldmdbvs	r2!, {r0, r1, r4, r5, r6, ip, sp, lr}^
    10d0:	0066746e 	rsbeq	r7, r6, lr, ror #8

Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <__RW_SIZE__+0x10d07a0>
   4:	6f532820 	svcvs	0x00532820
   8:	65637275 	strbvs	r7, [r3, #-629]!	; 0xfffffd8b
   c:	43207972 	teqmi	r0, #1867776	; 0x1c8000
  10:	4265646f 	rsbmi	r6, r5, #1862270976	; 0x6f000000
  14:	68636e65 	stmdavs	r3!, {r0, r2, r5, r6, r9, sl, fp, sp, lr}^
  18:	74694c20 	strbtvc	r4, [r9], #-3104	; 0xfffff3e0
  1c:	30322065 	eorscc	r2, r2, r5, rrx
  20:	312e3331 	teqcc	lr, r1, lsr r3
  24:	34322d31 	ldrtcc	r2, [r2], #-3377	; 0xfffff2cf
  28:	2e342029 	cdpcs	0, 3, cr2, cr4, cr9, {1}
  2c:	00312e38 	eorseq	r2, r1, r8, lsr lr

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00003041 	andeq	r3, r0, r1, asr #32
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000026 	andeq	r0, r0, r6, lsr #32
  10:	726f4305 	rsbvc	r4, pc, #335544320	; 0x14000000
  14:	2d786574 	cfldr64cs	mvdx6, [r8, #-464]!	; 0xfffffe30
  18:	0600334d 	streq	r3, [r0], -sp, asr #6
  1c:	094d070a 	stmdbeq	sp, {r1, r3, r8, r9, sl}^
  20:	14041202 	strne	r1, [r4], #-514	; 0xfffffdfe
  24:	17011501 	strne	r1, [r1, -r1, lsl #10]
  28:	1a011803 	bne	4603c <__RW_SIZE__+0x45ab8>
  2c:	22021e01 	andcs	r1, r2, #1, 28
  30:	Address 0x00000030 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
       0:	0000000c 	andeq	r0, r0, ip
       4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
       8:	7c020001 	stcvc	0, cr0, [r2], {1}
       c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      10:	0000000c 	andeq	r0, r0, ip
      14:	00000000 	andeq	r0, r0, r0
      18:	080031ec 	stmdaeq	r0, {r2, r3, r5, r6, r7, r8, ip, sp}
      1c:	00000058 	andeq	r0, r0, r8, asr r0
      20:	0000000c 	andeq	r0, r0, ip
      24:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
      28:	7c020001 	stcvc	0, cr0, [r2], {1}
      2c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
      30:	0000000c 	andeq	r0, r0, ip
      34:	00000020 	andeq	r0, r0, r0, lsr #32
      38:	08003244 	stmdaeq	r0, {r2, r6, r9, ip, sp}
      3c:	00000008 	andeq	r0, r0, r8
      40:	0000000c 	andeq	r0, r0, ip
      44:	00000020 	andeq	r0, r0, r0, lsr #32
      48:	0800324c 	stmdaeq	r0, {r2, r3, r6, r9, ip, sp}
      4c:	00000006 	andeq	r0, r0, r6
      50:	0000000c 	andeq	r0, r0, ip
      54:	00000020 	andeq	r0, r0, r0, lsr #32
      58:	08003254 	stmdaeq	r0, {r2, r4, r6, r9, ip, sp}
      5c:	00000008 	andeq	r0, r0, r8
      60:	0000000c 	andeq	r0, r0, ip
      64:	00000020 	andeq	r0, r0, r0, lsr #32
      68:	0800325c 	stmdaeq	r0, {r2, r3, r4, r6, r9, ip, sp}
      6c:	00000006 	andeq	r0, r0, r6
      70:	0000000c 	andeq	r0, r0, ip
      74:	00000020 	andeq	r0, r0, r0, lsr #32
      78:	08003264 	stmdaeq	r0, {r2, r5, r6, r9, ip, sp}
      7c:	00000006 	andeq	r0, r0, r6
      80:	0000000c 	andeq	r0, r0, ip
      84:	00000020 	andeq	r0, r0, r0, lsr #32
      88:	0800326c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip, sp}
      8c:	00000006 	andeq	r0, r0, r6
      90:	0000000c 	andeq	r0, r0, ip
      94:	00000020 	andeq	r0, r0, r0, lsr #32
      98:	08003274 	stmdaeq	r0, {r2, r4, r5, r6, r9, ip, sp}
      9c:	00000006 	andeq	r0, r0, r6
      a0:	0000000c 	andeq	r0, r0, ip
      a4:	00000020 	andeq	r0, r0, r0, lsr #32
      a8:	0800327c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r9, ip, sp}
      ac:	00000006 	andeq	r0, r0, r6
      b0:	0000000c 	andeq	r0, r0, ip
      b4:	00000020 	andeq	r0, r0, r0, lsr #32
      b8:	08003284 	stmdaeq	r0, {r2, r7, r9, ip, sp}
      bc:	00000006 	andeq	r0, r0, r6
      c0:	0000000c 	andeq	r0, r0, ip
      c4:	00000020 	andeq	r0, r0, r0, lsr #32
      c8:	0800328c 	stmdaeq	r0, {r2, r3, r7, r9, ip, sp}
      cc:	00000006 	andeq	r0, r0, r6
      d0:	0000000c 	andeq	r0, r0, ip
      d4:	00000020 	andeq	r0, r0, r0, lsr #32
      d8:	08003294 	stmdaeq	r0, {r2, r4, r7, r9, ip, sp}
      dc:	00000006 	andeq	r0, r0, r6
      e0:	0000000c 	andeq	r0, r0, ip
      e4:	00000020 	andeq	r0, r0, r0, lsr #32
      e8:	0800329c 	stmdaeq	r0, {r2, r3, r4, r7, r9, ip, sp}
      ec:	00000006 	andeq	r0, r0, r6
      f0:	0000000c 	andeq	r0, r0, ip
      f4:	00000020 	andeq	r0, r0, r0, lsr #32
      f8:	080032a4 	stmdaeq	r0, {r2, r5, r7, r9, ip, sp}
      fc:	00000004 	andeq	r0, r0, r4
     100:	0000000c 	andeq	r0, r0, ip
     104:	00000020 	andeq	r0, r0, r0, lsr #32
     108:	080032a8 	stmdaeq	r0, {r3, r5, r7, r9, ip, sp}
     10c:	00000004 	andeq	r0, r0, r4
     110:	0000000c 	andeq	r0, r0, ip
     114:	00000020 	andeq	r0, r0, r0, lsr #32
     118:	080032ac 	stmdaeq	r0, {r2, r3, r5, r7, r9, ip, sp}
     11c:	00000004 	andeq	r0, r0, r4
     120:	0000000c 	andeq	r0, r0, ip
     124:	00000020 	andeq	r0, r0, r0, lsr #32
     128:	080032b0 	stmdaeq	r0, {r4, r5, r7, r9, ip, sp}
     12c:	00000006 	andeq	r0, r0, r6
     130:	0000000c 	andeq	r0, r0, ip
     134:	00000020 	andeq	r0, r0, r0, lsr #32
     138:	080032b8 	stmdaeq	r0, {r3, r4, r5, r7, r9, ip, sp}
     13c:	00000008 	andeq	r0, r0, r8
     140:	0000000c 	andeq	r0, r0, ip
     144:	00000020 	andeq	r0, r0, r0, lsr #32
     148:	080032c0 	stmdaeq	r0, {r6, r7, r9, ip, sp}
     14c:	00000008 	andeq	r0, r0, r8
     150:	0000000c 	andeq	r0, r0, ip
     154:	00000020 	andeq	r0, r0, r0, lsr #32
     158:	080032c8 	stmdaeq	r0, {r3, r6, r7, r9, ip, sp}
     15c:	00000006 	andeq	r0, r0, r6
     160:	0000000c 	andeq	r0, r0, ip
     164:	00000020 	andeq	r0, r0, r0, lsr #32
     168:	080032d0 	stmdaeq	r0, {r4, r6, r7, r9, ip, sp}
     16c:	00000008 	andeq	r0, r0, r8
     170:	0000000c 	andeq	r0, r0, ip
     174:	00000020 	andeq	r0, r0, r0, lsr #32
     178:	080032d8 	stmdaeq	r0, {r3, r4, r6, r7, r9, ip, sp}
     17c:	00000008 	andeq	r0, r0, r8
     180:	0000000c 	andeq	r0, r0, ip
     184:	00000020 	andeq	r0, r0, r0, lsr #32
     188:	080032e0 	stmdaeq	r0, {r5, r6, r7, r9, ip, sp}
     18c:	00000006 	andeq	r0, r0, r6
     190:	0000000c 	andeq	r0, r0, ip
     194:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     198:	7c020001 	stcvc	0, cr0, [r2], {1}
     19c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     1a0:	00000018 	andeq	r0, r0, r8, lsl r0
     1a4:	00000190 	muleq	r0, r0, r1
     1a8:	080032e8 	stmdaeq	r0, {r3, r5, r6, r7, r9, ip, sp}
     1ac:	00000068 	andeq	r0, r0, r8, rrx
     1b0:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     1b4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     1b8:	00018702 	andeq	r8, r1, r2, lsl #14
     1bc:	00000014 	andeq	r0, r0, r4, lsl r0
     1c0:	00000190 	muleq	r0, r0, r1
     1c4:	08003350 	stmdaeq	r0, {r4, r6, r8, r9, ip, sp}
     1c8:	00000032 	andeq	r0, r0, r2, lsr r0
     1cc:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     1d0:	00000001 	andeq	r0, r0, r1
     1d4:	00000014 	andeq	r0, r0, r4, lsl r0
     1d8:	00000190 	muleq	r0, r0, r1
     1dc:	08003384 	stmdaeq	r0, {r2, r7, r8, r9, ip, sp}
     1e0:	0000002c 	andeq	r0, r0, ip, lsr #32
     1e4:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     1e8:	00000001 	andeq	r0, r0, r1
     1ec:	0000001c 	andeq	r0, r0, ip, lsl r0
     1f0:	00000190 	muleq	r0, r0, r1
     1f4:	080033b0 	stmdaeq	r0, {r4, r5, r7, r8, r9, ip, sp}
     1f8:	000000c8 	andeq	r0, r0, r8, asr #1
     1fc:	84140e42 	ldrhi	r0, [r4], #-3650	; 0xfffff1be
     200:	86048505 	strhi	r8, [r4], -r5, lsl #10
     204:	88028703 	stmdahi	r2, {r0, r1, r8, r9, sl, pc}
     208:	00000001 	andeq	r0, r0, r1
     20c:	0000000c 	andeq	r0, r0, ip
     210:	00000190 	muleq	r0, r0, r1
     214:	08003478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip, sp}
     218:	00000010 	andeq	r0, r0, r0, lsl r0
     21c:	0000000c 	andeq	r0, r0, ip
     220:	00000190 	muleq	r0, r0, r1
     224:	08003488 	stmdaeq	r0, {r3, r7, sl, ip, sp}
     228:	0000001a 	andeq	r0, r0, sl, lsl r0
     22c:	0000000c 	andeq	r0, r0, ip
     230:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     234:	7c020001 	stcvc	0, cr0, [r2], {1}
     238:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     23c:	0000000c 	andeq	r0, r0, ip
     240:	0000022c 	andeq	r0, r0, ip, lsr #4
     244:	080034a4 	stmdaeq	r0, {r2, r5, r7, sl, ip, sp}
     248:	00000026 	andeq	r0, r0, r6, lsr #32
     24c:	0000000c 	andeq	r0, r0, ip
     250:	0000022c 	andeq	r0, r0, ip, lsr #4
     254:	080034cc 	stmdaeq	r0, {r2, r3, r6, r7, sl, ip, sp}
     258:	0000002a 	andeq	r0, r0, sl, lsr #32
     25c:	0000000c 	andeq	r0, r0, ip
     260:	0000022c 	andeq	r0, r0, ip, lsr #4
     264:	080034f8 	stmdaeq	r0, {r3, r4, r5, r6, r7, sl, ip, sp}
     268:	0000002e 	andeq	r0, r0, lr, lsr #32
     26c:	0000000c 	andeq	r0, r0, ip
     270:	0000022c 	andeq	r0, r0, ip, lsr #4
     274:	08003528 	stmdaeq	r0, {r3, r5, r8, sl, ip, sp}
     278:	0000002e 	andeq	r0, r0, lr, lsr #32
     27c:	00000014 	andeq	r0, r0, r4, lsl r0
     280:	0000022c 	andeq	r0, r0, ip, lsr #4
     284:	08003558 	stmdaeq	r0, {r3, r4, r6, r8, sl, ip, sp}
     288:	000000a4 	andeq	r0, r0, r4, lsr #1
     28c:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     290:	00000001 	andeq	r0, r0, r1
     294:	0000000c 	andeq	r0, r0, ip
     298:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     29c:	7c020001 	stcvc	0, cr0, [r2], {1}
     2a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2a4:	0000000c 	andeq	r0, r0, ip
     2a8:	00000294 	muleq	r0, r4, r2
     2ac:	080035fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, sl, ip, sp}
     2b0:	0000002e 	andeq	r0, r0, lr, lsr #32
     2b4:	0000000c 	andeq	r0, r0, ip
     2b8:	00000294 	muleq	r0, r4, r2
     2bc:	0800362c 	stmdaeq	r0, {r2, r3, r5, r9, sl, ip, sp}
     2c0:	0000001c 	andeq	r0, r0, ip, lsl r0
     2c4:	0000000c 	andeq	r0, r0, ip
     2c8:	00000294 	muleq	r0, r4, r2
     2cc:	08003648 	stmdaeq	r0, {r3, r6, r9, sl, ip, sp}
     2d0:	00000012 	andeq	r0, r0, r2, lsl r0
     2d4:	0000000c 	andeq	r0, r0, ip
     2d8:	00000294 	muleq	r0, r4, r2
     2dc:	0800365c 	stmdaeq	r0, {r2, r3, r4, r6, r9, sl, ip, sp}
     2e0:	00000012 	andeq	r0, r0, r2, lsl r0
     2e4:	0000000c 	andeq	r0, r0, ip
     2e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     2ec:	7c020001 	stcvc	0, cr0, [r2], {1}
     2f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     2f4:	0000001c 	andeq	r0, r0, ip, lsl r0
     2f8:	000002e4 	andeq	r0, r0, r4, ror #5
     2fc:	08003670 	stmdaeq	r0, {r4, r5, r6, r9, sl, ip, sp}
     300:	000000c0 	andeq	r0, r0, r0, asr #1
     304:	83180e41 	tsthi	r8, #1040	; 0x410
     308:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     30c:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     310:	00018e02 	andeq	r8, r1, r2, lsl #28
     314:	0000000c 	andeq	r0, r0, ip
     318:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     31c:	7c020001 	stcvc	0, cr0, [r2], {1}
     320:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     324:	00000014 	andeq	r0, r0, r4, lsl r0
     328:	00000314 	andeq	r0, r0, r4, lsl r3
     32c:	08003730 	stmdaeq	r0, {r4, r5, r8, r9, sl, ip, sp}
     330:	00000044 	andeq	r0, r0, r4, asr #32
     334:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     338:	00000001 	andeq	r0, r0, r1
     33c:	0000000c 	andeq	r0, r0, ip
     340:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     344:	7c020001 	stcvc	0, cr0, [r2], {1}
     348:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     34c:	0000001c 	andeq	r0, r0, ip, lsl r0
     350:	0000033c 	andeq	r0, r0, ip, lsr r3
     354:	08003774 	stmdaeq	r0, {r2, r4, r5, r6, r8, r9, sl, ip, sp}
     358:	00000038 	andeq	r0, r0, r8, lsr r0
     35c:	84140e41 	ldrhi	r0, [r4], #-3649	; 0xfffff1bf
     360:	86048505 	strhi	r8, [r4], -r5, lsl #10
     364:	8e028703 	cdphi	7, 0, cr8, cr2, cr3, {0}
     368:	200e4301 	andcs	r4, lr, r1, lsl #6
     36c:	00000014 	andeq	r0, r0, r4, lsl r0
     370:	0000033c 	andeq	r0, r0, ip, lsr r3
     374:	080037ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, sl, ip, sp}
     378:	00000032 	andeq	r0, r0, r2, lsr r0
     37c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     380:	00018e02 	andeq	r8, r1, r2, lsl #28
     384:	00000014 	andeq	r0, r0, r4, lsl r0
     388:	0000033c 	andeq	r0, r0, ip, lsr r3
     38c:	080037e0 	stmdaeq	r0, {r5, r6, r7, r8, r9, sl, ip, sp}
     390:	00000010 	andeq	r0, r0, r0, lsl r0
     394:	83080e43 	movwhi	r0, #36419	; 0x8e43
     398:	00018e02 	andeq	r8, r1, r2, lsl #28
     39c:	00000014 	andeq	r0, r0, r4, lsl r0
     3a0:	0000033c 	andeq	r0, r0, ip, lsr r3
     3a4:	080037f0 	stmdaeq	r0, {r4, r5, r6, r7, r8, r9, sl, ip, sp}
     3a8:	0000012a 	andeq	r0, r0, sl, lsr #2
     3ac:	83080e44 	movwhi	r0, #36420	; 0x8e44
     3b0:	00018e02 	andeq	r8, r1, r2, lsl #28
     3b4:	00000014 	andeq	r0, r0, r4, lsl r0
     3b8:	0000033c 	andeq	r0, r0, ip, lsr r3
     3bc:	0800391c 	stmdaeq	r0, {r2, r3, r4, r8, fp, ip, sp}
     3c0:	00000010 	andeq	r0, r0, r0, lsl r0
     3c4:	83080e43 	movwhi	r0, #36419	; 0x8e43
     3c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     3cc:	00000014 	andeq	r0, r0, r4, lsl r0
     3d0:	0000033c 	andeq	r0, r0, ip, lsr r3
     3d4:	0800392c 	stmdaeq	r0, {r2, r3, r5, r8, fp, ip, sp}
     3d8:	00000010 	andeq	r0, r0, r0, lsl r0
     3dc:	83080e43 	movwhi	r0, #36419	; 0x8e43
     3e0:	00018e02 	andeq	r8, r1, r2, lsl #28
     3e4:	00000014 	andeq	r0, r0, r4, lsl r0
     3e8:	0000033c 	andeq	r0, r0, ip, lsr r3
     3ec:	0800393c 	stmdaeq	r0, {r2, r3, r4, r5, r8, fp, ip, sp}
     3f0:	00000010 	andeq	r0, r0, r0, lsl r0
     3f4:	83080e43 	movwhi	r0, #36419	; 0x8e43
     3f8:	00018e02 	andeq	r8, r1, r2, lsl #28
     3fc:	00000014 	andeq	r0, r0, r4, lsl r0
     400:	0000033c 	andeq	r0, r0, ip, lsr r3
     404:	0800394c 	stmdaeq	r0, {r2, r3, r6, r8, fp, ip, sp}
     408:	00000010 	andeq	r0, r0, r0, lsl r0
     40c:	83080e43 	movwhi	r0, #36419	; 0x8e43
     410:	00018e02 	andeq	r8, r1, r2, lsl #28
     414:	00000014 	andeq	r0, r0, r4, lsl r0
     418:	0000033c 	andeq	r0, r0, ip, lsr r3
     41c:	0800395c 	stmdaeq	r0, {r2, r3, r4, r6, r8, fp, ip, sp}
     420:	00000010 	andeq	r0, r0, r0, lsl r0
     424:	83080e43 	movwhi	r0, #36419	; 0x8e43
     428:	00018e02 	andeq	r8, r1, r2, lsl #28
     42c:	00000014 	andeq	r0, r0, r4, lsl r0
     430:	0000033c 	andeq	r0, r0, ip, lsr r3
     434:	0800396c 	stmdaeq	r0, {r2, r3, r5, r6, r8, fp, ip, sp}
     438:	00000010 	andeq	r0, r0, r0, lsl r0
     43c:	83080e43 	movwhi	r0, #36419	; 0x8e43
     440:	00018e02 	andeq	r8, r1, r2, lsl #28
     444:	0000000c 	andeq	r0, r0, ip
     448:	0000033c 	andeq	r0, r0, ip, lsr r3
     44c:	0800397c 	stmdaeq	r0, {r2, r3, r4, r5, r6, r8, fp, ip, sp}
     450:	0000000e 	andeq	r0, r0, lr
     454:	00000014 	andeq	r0, r0, r4, lsl r0
     458:	0000033c 	andeq	r0, r0, ip, lsr r3
     45c:	0800398c 	stmdaeq	r0, {r2, r3, r7, r8, fp, ip, sp}
     460:	00000006 	andeq	r0, r0, r6
     464:	83080e41 	movwhi	r0, #36417	; 0x8e41
     468:	00018e02 	andeq	r8, r1, r2, lsl #28
     46c:	00000014 	andeq	r0, r0, r4, lsl r0
     470:	0000033c 	andeq	r0, r0, ip, lsr r3
     474:	08003994 	stmdaeq	r0, {r2, r4, r7, r8, fp, ip, sp}
     478:	00000006 	andeq	r0, r0, r6
     47c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     480:	00018e02 	andeq	r8, r1, r2, lsl #28
     484:	00000014 	andeq	r0, r0, r4, lsl r0
     488:	0000033c 	andeq	r0, r0, ip, lsr r3
     48c:	0800399c 	stmdaeq	r0, {r2, r3, r4, r7, r8, fp, ip, sp}
     490:	00000006 	andeq	r0, r0, r6
     494:	83080e41 	movwhi	r0, #36417	; 0x8e41
     498:	00018e02 	andeq	r8, r1, r2, lsl #28
     49c:	00000014 	andeq	r0, r0, r4, lsl r0
     4a0:	0000033c 	andeq	r0, r0, ip, lsr r3
     4a4:	080039a4 	stmdaeq	r0, {r2, r5, r7, r8, fp, ip, sp}
     4a8:	00000006 	andeq	r0, r0, r6
     4ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4b0:	00018e02 	andeq	r8, r1, r2, lsl #28
     4b4:	00000014 	andeq	r0, r0, r4, lsl r0
     4b8:	0000033c 	andeq	r0, r0, ip, lsr r3
     4bc:	080039ac 	stmdaeq	r0, {r2, r3, r5, r7, r8, fp, ip, sp}
     4c0:	00000006 	andeq	r0, r0, r6
     4c4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     4cc:	00000014 	andeq	r0, r0, r4, lsl r0
     4d0:	0000033c 	andeq	r0, r0, ip, lsr r3
     4d4:	080039b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, fp, ip, sp}
     4d8:	00000006 	andeq	r0, r0, r6
     4dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4e0:	00018e02 	andeq	r8, r1, r2, lsl #28
     4e4:	00000014 	andeq	r0, r0, r4, lsl r0
     4e8:	0000033c 	andeq	r0, r0, ip, lsr r3
     4ec:	080039bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, fp, ip, sp}
     4f0:	00000006 	andeq	r0, r0, r6
     4f4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     4f8:	00018e02 	andeq	r8, r1, r2, lsl #28
     4fc:	00000014 	andeq	r0, r0, r4, lsl r0
     500:	0000033c 	andeq	r0, r0, ip, lsr r3
     504:	080039c4 	stmdaeq	r0, {r2, r6, r7, r8, fp, ip, sp}
     508:	00000006 	andeq	r0, r0, r6
     50c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     510:	00018e02 	andeq	r8, r1, r2, lsl #28
     514:	00000014 	andeq	r0, r0, r4, lsl r0
     518:	0000033c 	andeq	r0, r0, ip, lsr r3
     51c:	080039cc 	stmdaeq	r0, {r2, r3, r6, r7, r8, fp, ip, sp}
     520:	00000006 	andeq	r0, r0, r6
     524:	83080e41 	movwhi	r0, #36417	; 0x8e41
     528:	00018e02 	andeq	r8, r1, r2, lsl #28
     52c:	00000014 	andeq	r0, r0, r4, lsl r0
     530:	0000033c 	andeq	r0, r0, ip, lsr r3
     534:	080039d4 	stmdaeq	r0, {r2, r4, r6, r7, r8, fp, ip, sp}
     538:	00000006 	andeq	r0, r0, r6
     53c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     540:	00018e02 	andeq	r8, r1, r2, lsl #28
     544:	00000014 	andeq	r0, r0, r4, lsl r0
     548:	0000033c 	andeq	r0, r0, ip, lsr r3
     54c:	080039dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, fp, ip, sp}
     550:	00000006 	andeq	r0, r0, r6
     554:	83080e41 	movwhi	r0, #36417	; 0x8e41
     558:	00018e02 	andeq	r8, r1, r2, lsl #28
     55c:	00000018 	andeq	r0, r0, r8, lsl r0
     560:	0000033c 	andeq	r0, r0, ip, lsr r3
     564:	080039e4 	stmdaeq	r0, {r2, r5, r6, r7, r8, fp, ip, sp}
     568:	00000058 	andeq	r0, r0, r8, asr r0
     56c:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     570:	86038504 	strhi	r8, [r3], -r4, lsl #10
     574:	00018e02 	andeq	r8, r1, r2, lsl #28
     578:	00000018 	andeq	r0, r0, r8, lsl r0
     57c:	0000033c 	andeq	r0, r0, ip, lsr r3
     580:	08003a3c 	stmdaeq	r0, {r2, r3, r4, r5, r9, fp, ip, sp}
     584:	0000005a 	andeq	r0, r0, sl, asr r0
     588:	83100e41 	tsthi	r0, #1040	; 0x410
     58c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     590:	00018e02 	andeq	r8, r1, r2, lsl #28
     594:	00000018 	andeq	r0, r0, r8, lsl r0
     598:	0000033c 	andeq	r0, r0, ip, lsr r3
     59c:	08003a98 	stmdaeq	r0, {r3, r4, r7, r9, fp, ip, sp}
     5a0:	0000005c 	andeq	r0, r0, ip, asr r0
     5a4:	83100e41 	tsthi	r0, #1040	; 0x410
     5a8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     5ac:	00018e02 	andeq	r8, r1, r2, lsl #28
     5b0:	00000018 	andeq	r0, r0, r8, lsl r0
     5b4:	0000033c 	andeq	r0, r0, ip, lsr r3
     5b8:	08003af4 	stmdaeq	r0, {r2, r4, r5, r6, r7, r9, fp, ip, sp}
     5bc:	0000005e 	andeq	r0, r0, lr, asr r0
     5c0:	83100e41 	tsthi	r0, #1040	; 0x410
     5c4:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     5c8:	00018e02 	andeq	r8, r1, r2, lsl #28
     5cc:	00000018 	andeq	r0, r0, r8, lsl r0
     5d0:	0000033c 	andeq	r0, r0, ip, lsr r3
     5d4:	08003b54 	stmdaeq	r0, {r2, r4, r6, r8, r9, fp, ip, sp}
     5d8:	0000005e 	andeq	r0, r0, lr, asr r0
     5dc:	83100e41 	tsthi	r0, #1040	; 0x410
     5e0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     5e4:	00018e02 	andeq	r8, r1, r2, lsl #28
     5e8:	00000018 	andeq	r0, r0, r8, lsl r0
     5ec:	0000033c 	andeq	r0, r0, ip, lsr r3
     5f0:	08003bb4 	stmdaeq	r0, {r2, r4, r5, r7, r8, r9, fp, ip, sp}
     5f4:	0000005e 	andeq	r0, r0, lr, asr r0
     5f8:	83100e41 	tsthi	r0, #1040	; 0x410
     5fc:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     600:	00018e02 	andeq	r8, r1, r2, lsl #28
     604:	00000018 	andeq	r0, r0, r8, lsl r0
     608:	0000033c 	andeq	r0, r0, ip, lsr r3
     60c:	08003c14 	stmdaeq	r0, {r2, r4, sl, fp, ip, sp}
     610:	0000005e 	andeq	r0, r0, lr, asr r0
     614:	83100e41 	tsthi	r0, #1040	; 0x410
     618:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     61c:	00018e02 	andeq	r8, r1, r2, lsl #28
     620:	00000018 	andeq	r0, r0, r8, lsl r0
     624:	0000033c 	andeq	r0, r0, ip, lsr r3
     628:	08003c74 	stmdaeq	r0, {r2, r4, r5, r6, sl, fp, ip, sp}
     62c:	0000005e 	andeq	r0, r0, lr, asr r0
     630:	83100e41 	tsthi	r0, #1040	; 0x410
     634:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     638:	00018e02 	andeq	r8, r1, r2, lsl #28
     63c:	00000014 	andeq	r0, r0, r4, lsl r0
     640:	0000033c 	andeq	r0, r0, ip, lsr r3
     644:	08003cd4 	stmdaeq	r0, {r2, r4, r6, r7, sl, fp, ip, sp}
     648:	00000006 	andeq	r0, r0, r6
     64c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     650:	00018e02 	andeq	r8, r1, r2, lsl #28
     654:	00000014 	andeq	r0, r0, r4, lsl r0
     658:	0000033c 	andeq	r0, r0, ip, lsr r3
     65c:	08003cdc 	stmdaeq	r0, {r2, r3, r4, r6, r7, sl, fp, ip, sp}
     660:	00000006 	andeq	r0, r0, r6
     664:	83080e41 	movwhi	r0, #36417	; 0x8e41
     668:	00018e02 	andeq	r8, r1, r2, lsl #28
     66c:	00000014 	andeq	r0, r0, r4, lsl r0
     670:	0000033c 	andeq	r0, r0, ip, lsr r3
     674:	08003ce4 	stmdaeq	r0, {r2, r5, r6, r7, sl, fp, ip, sp}
     678:	00000006 	andeq	r0, r0, r6
     67c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     680:	00018e02 	andeq	r8, r1, r2, lsl #28
     684:	00000014 	andeq	r0, r0, r4, lsl r0
     688:	0000033c 	andeq	r0, r0, ip, lsr r3
     68c:	08003cec 	stmdaeq	r0, {r2, r3, r5, r6, r7, sl, fp, ip, sp}
     690:	00000006 	andeq	r0, r0, r6
     694:	83080e41 	movwhi	r0, #36417	; 0x8e41
     698:	00018e02 	andeq	r8, r1, r2, lsl #28
     69c:	00000014 	andeq	r0, r0, r4, lsl r0
     6a0:	0000033c 	andeq	r0, r0, ip, lsr r3
     6a4:	08003cf4 	stmdaeq	r0, {r2, r4, r5, r6, r7, sl, fp, ip, sp}
     6a8:	00000006 	andeq	r0, r0, r6
     6ac:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6b0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6b4:	00000014 	andeq	r0, r0, r4, lsl r0
     6b8:	0000033c 	andeq	r0, r0, ip, lsr r3
     6bc:	08003cfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, sl, fp, ip, sp}
     6c0:	00000032 	andeq	r0, r0, r2, lsr r0
     6c4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     6c8:	00018502 	andeq	r8, r1, r2, lsl #10
     6cc:	00000014 	andeq	r0, r0, r4, lsl r0
     6d0:	0000033c 	andeq	r0, r0, ip, lsr r3
     6d4:	08003d30 	stmdaeq	r0, {r4, r5, r8, sl, fp, ip, sp}
     6d8:	00000006 	andeq	r0, r0, r6
     6dc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6e0:	00018e02 	andeq	r8, r1, r2, lsl #28
     6e4:	00000014 	andeq	r0, r0, r4, lsl r0
     6e8:	0000033c 	andeq	r0, r0, ip, lsr r3
     6ec:	08003d38 	stmdaeq	r0, {r3, r4, r5, r8, sl, fp, ip, sp}
     6f0:	00000006 	andeq	r0, r0, r6
     6f4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     6f8:	00018e02 	andeq	r8, r1, r2, lsl #28
     6fc:	00000014 	andeq	r0, r0, r4, lsl r0
     700:	0000033c 	andeq	r0, r0, ip, lsr r3
     704:	08003d40 	stmdaeq	r0, {r6, r8, sl, fp, ip, sp}
     708:	00000006 	andeq	r0, r0, r6
     70c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     710:	00018e02 	andeq	r8, r1, r2, lsl #28
     714:	00000014 	andeq	r0, r0, r4, lsl r0
     718:	0000033c 	andeq	r0, r0, ip, lsr r3
     71c:	08003d48 	stmdaeq	r0, {r3, r6, r8, sl, fp, ip, sp}
     720:	00000006 	andeq	r0, r0, r6
     724:	83080e41 	movwhi	r0, #36417	; 0x8e41
     728:	00018e02 	andeq	r8, r1, r2, lsl #28
     72c:	00000014 	andeq	r0, r0, r4, lsl r0
     730:	0000033c 	andeq	r0, r0, ip, lsr r3
     734:	08003d50 	stmdaeq	r0, {r4, r6, r8, sl, fp, ip, sp}
     738:	00000006 	andeq	r0, r0, r6
     73c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     740:	00018e02 	andeq	r8, r1, r2, lsl #28
     744:	00000014 	andeq	r0, r0, r4, lsl r0
     748:	0000033c 	andeq	r0, r0, ip, lsr r3
     74c:	08003d58 	stmdaeq	r0, {r3, r4, r6, r8, sl, fp, ip, sp}
     750:	00000006 	andeq	r0, r0, r6
     754:	83080e41 	movwhi	r0, #36417	; 0x8e41
     758:	00018e02 	andeq	r8, r1, r2, lsl #28
     75c:	00000014 	andeq	r0, r0, r4, lsl r0
     760:	0000033c 	andeq	r0, r0, ip, lsr r3
     764:	08003d60 	stmdaeq	r0, {r5, r6, r8, sl, fp, ip, sp}
     768:	00000036 	andeq	r0, r0, r6, lsr r0
     76c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     770:	00018502 	andeq	r8, r1, r2, lsl #10
     774:	00000014 	andeq	r0, r0, r4, lsl r0
     778:	0000033c 	andeq	r0, r0, ip, lsr r3
     77c:	08003d98 	stmdaeq	r0, {r3, r4, r7, r8, sl, fp, ip, sp}
     780:	00000006 	andeq	r0, r0, r6
     784:	83080e41 	movwhi	r0, #36417	; 0x8e41
     788:	00018e02 	andeq	r8, r1, r2, lsl #28
     78c:	00000014 	andeq	r0, r0, r4, lsl r0
     790:	0000033c 	andeq	r0, r0, ip, lsr r3
     794:	08003da0 	stmdaeq	r0, {r5, r7, r8, sl, fp, ip, sp}
     798:	00000006 	andeq	r0, r0, r6
     79c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7a0:	00018e02 	andeq	r8, r1, r2, lsl #28
     7a4:	00000014 	andeq	r0, r0, r4, lsl r0
     7a8:	0000033c 	andeq	r0, r0, ip, lsr r3
     7ac:	08003da8 	stmdaeq	r0, {r3, r5, r7, r8, sl, fp, ip, sp}
     7b0:	00000006 	andeq	r0, r0, r6
     7b4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7b8:	00018e02 	andeq	r8, r1, r2, lsl #28
     7bc:	00000014 	andeq	r0, r0, r4, lsl r0
     7c0:	0000033c 	andeq	r0, r0, ip, lsr r3
     7c4:	08003db0 	stmdaeq	r0, {r4, r5, r7, r8, sl, fp, ip, sp}
     7c8:	00000006 	andeq	r0, r0, r6
     7cc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7d0:	00018e02 	andeq	r8, r1, r2, lsl #28
     7d4:	00000014 	andeq	r0, r0, r4, lsl r0
     7d8:	0000033c 	andeq	r0, r0, ip, lsr r3
     7dc:	08003db8 	stmdaeq	r0, {r3, r4, r5, r7, r8, sl, fp, ip, sp}
     7e0:	00000006 	andeq	r0, r0, r6
     7e4:	83080e41 	movwhi	r0, #36417	; 0x8e41
     7e8:	00018e02 	andeq	r8, r1, r2, lsl #28
     7ec:	00000014 	andeq	r0, r0, r4, lsl r0
     7f0:	0000033c 	andeq	r0, r0, ip, lsr r3
     7f4:	08003dc0 	stmdaeq	r0, {r6, r7, r8, sl, fp, ip, sp}
     7f8:	00000006 	andeq	r0, r0, r6
     7fc:	83080e41 	movwhi	r0, #36417	; 0x8e41
     800:	00018e02 	andeq	r8, r1, r2, lsl #28
     804:	00000014 	andeq	r0, r0, r4, lsl r0
     808:	0000033c 	andeq	r0, r0, ip, lsr r3
     80c:	08003dc8 	stmdaeq	r0, {r3, r6, r7, r8, sl, fp, ip, sp}
     810:	00000030 	andeq	r0, r0, r0, lsr r0
     814:	84040e41 	strhi	r0, [r4], #-3649	; 0xfffff1bf
     818:	00000001 	andeq	r0, r0, r1
     81c:	00000014 	andeq	r0, r0, r4, lsl r0
     820:	0000033c 	andeq	r0, r0, ip, lsr r3
     824:	08003df8 	stmdaeq	r0, {r3, r4, r5, r6, r7, r8, sl, fp, ip, sp}
     828:	00000006 	andeq	r0, r0, r6
     82c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     830:	00018e02 	andeq	r8, r1, r2, lsl #28
     834:	00000014 	andeq	r0, r0, r4, lsl r0
     838:	0000033c 	andeq	r0, r0, ip, lsr r3
     83c:	08003e00 	stmdaeq	r0, {r9, sl, fp, ip, sp}
     840:	00000006 	andeq	r0, r0, r6
     844:	83080e41 	movwhi	r0, #36417	; 0x8e41
     848:	00018e02 	andeq	r8, r1, r2, lsl #28
     84c:	00000014 	andeq	r0, r0, r4, lsl r0
     850:	0000033c 	andeq	r0, r0, ip, lsr r3
     854:	08003e08 	stmdaeq	r0, {r3, r9, sl, fp, ip, sp}
     858:	00000006 	andeq	r0, r0, r6
     85c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     860:	00018e02 	andeq	r8, r1, r2, lsl #28
     864:	00000014 	andeq	r0, r0, r4, lsl r0
     868:	0000033c 	andeq	r0, r0, ip, lsr r3
     86c:	08003e10 	stmdaeq	r0, {r4, r9, sl, fp, ip, sp}
     870:	00000006 	andeq	r0, r0, r6
     874:	83080e41 	movwhi	r0, #36417	; 0x8e41
     878:	00018e02 	andeq	r8, r1, r2, lsl #28
     87c:	00000014 	andeq	r0, r0, r4, lsl r0
     880:	0000033c 	andeq	r0, r0, ip, lsr r3
     884:	08003e18 	stmdaeq	r0, {r3, r4, r9, sl, fp, ip, sp}
     888:	00000006 	andeq	r0, r0, r6
     88c:	83080e41 	movwhi	r0, #36417	; 0x8e41
     890:	00018e02 	andeq	r8, r1, r2, lsl #28
     894:	0000000c 	andeq	r0, r0, ip
     898:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     89c:	7c020001 	stcvc	0, cr0, [r2], {1}
     8a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     8a4:	00000018 	andeq	r0, r0, r8, lsl r0
     8a8:	00000894 	muleq	r0, r4, r8
     8ac:	08003e20 	stmdaeq	r0, {r5, r9, sl, fp, ip, sp}
     8b0:	00000048 	andeq	r0, r0, r8, asr #32
     8b4:	83100e41 	tsthi	r0, #1040	; 0x410
     8b8:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     8bc:	00018e02 	andeq	r8, r1, r2, lsl #28
     8c0:	0000000c 	andeq	r0, r0, ip
     8c4:	00000894 	muleq	r0, r4, r8
     8c8:	08003e68 	stmdaeq	r0, {r3, r5, r6, r9, sl, fp, ip, sp}
     8cc:	00000010 	andeq	r0, r0, r0, lsl r0
     8d0:	0000000c 	andeq	r0, r0, ip
     8d4:	00000894 	muleq	r0, r4, r8
     8d8:	08003e78 	stmdaeq	r0, {r3, r4, r5, r6, r9, sl, fp, ip, sp}
     8dc:	0000000c 	andeq	r0, r0, ip
     8e0:	0000000c 	andeq	r0, r0, ip
     8e4:	00000894 	muleq	r0, r4, r8
     8e8:	08003e84 	stmdaeq	r0, {r2, r7, r9, sl, fp, ip, sp}
     8ec:	0000000c 	andeq	r0, r0, ip
     8f0:	0000000c 	andeq	r0, r0, ip
     8f4:	00000894 	muleq	r0, r4, r8
     8f8:	08003e90 	stmdaeq	r0, {r4, r7, r9, sl, fp, ip, sp}
     8fc:	0000000e 	andeq	r0, r0, lr
     900:	00000014 	andeq	r0, r0, r4, lsl r0
     904:	00000894 	muleq	r0, r4, r8
     908:	08003ea0 	stmdaeq	r0, {r5, r7, r9, sl, fp, ip, sp}
     90c:	00000048 	andeq	r0, r0, r8, asr #32
     910:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     914:	00018e02 	andeq	r8, r1, r2, lsl #28
     918:	0000000c 	andeq	r0, r0, ip
     91c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     920:	7c020001 	stcvc	0, cr0, [r2], {1}
     924:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     928:	00000014 	andeq	r0, r0, r4, lsl r0
     92c:	00000918 	andeq	r0, r0, r8, lsl r9
     930:	08003ee8 	stmdaeq	r0, {r3, r5, r6, r7, r9, sl, fp, ip, sp}
     934:	0000003e 	andeq	r0, r0, lr, lsr r0
     938:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     93c:	00018502 	andeq	r8, r1, r2, lsl #10
     940:	0000000c 	andeq	r0, r0, ip
     944:	00000918 	andeq	r0, r0, r8, lsl r9
     948:	08003f28 	stmdaeq	r0, {r3, r5, r8, r9, sl, fp, ip, sp}
     94c:	00000026 	andeq	r0, r0, r6, lsr #32
     950:	00000018 	andeq	r0, r0, r8, lsl r0
     954:	00000918 	andeq	r0, r0, r8, lsl r9
     958:	08003f50 	stmdaeq	r0, {r4, r6, r8, r9, sl, fp, ip, sp}
     95c:	000000e4 	andeq	r0, r0, r4, ror #1
     960:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     964:	86028503 	strhi	r8, [r2], -r3, lsl #10
     968:	00000001 	andeq	r0, r0, r1
     96c:	00000014 	andeq	r0, r0, r4, lsl r0
     970:	00000918 	andeq	r0, r0, r8, lsl r9
     974:	08004034 	stmdaeq	r0, {r2, r4, r5, lr}
     978:	00000062 	andeq	r0, r0, r2, rrx
     97c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     980:	00018502 	andeq	r8, r1, r2, lsl #10
     984:	0000000c 	andeq	r0, r0, ip
     988:	00000918 	andeq	r0, r0, r8, lsl r9
     98c:	08004098 	stmdaeq	r0, {r3, r4, r7, lr}
     990:	00000020 	andeq	r0, r0, r0, lsr #32
     994:	0000000c 	andeq	r0, r0, ip
     998:	00000918 	andeq	r0, r0, r8, lsl r9
     99c:	080040b8 	stmdaeq	r0, {r3, r4, r5, r7, lr}
     9a0:	00000022 	andeq	r0, r0, r2, lsr #32
     9a4:	0000000c 	andeq	r0, r0, ip
     9a8:	00000918 	andeq	r0, r0, r8, lsl r9
     9ac:	080040dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, lr}
     9b0:	00000018 	andeq	r0, r0, r8, lsl r0
     9b4:	0000000c 	andeq	r0, r0, ip
     9b8:	00000918 	andeq	r0, r0, r8, lsl r9
     9bc:	080040f4 	stmdaeq	r0, {r2, r4, r5, r6, r7, lr}
     9c0:	0000004c 	andeq	r0, r0, ip, asr #32
     9c4:	00000014 	andeq	r0, r0, r4, lsl r0
     9c8:	00000918 	andeq	r0, r0, r8, lsl r9
     9cc:	08004140 	stmdaeq	r0, {r6, r8, lr}
     9d0:	00000058 	andeq	r0, r0, r8, asr r0
     9d4:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     9d8:	00018e02 	andeq	r8, r1, r2, lsl #28
     9dc:	0000000c 	andeq	r0, r0, ip
     9e0:	00000918 	andeq	r0, r0, r8, lsl r9
     9e4:	08004198 	stmdaeq	r0, {r3, r4, r7, r8, lr}
     9e8:	00000022 	andeq	r0, r0, r2, lsr #32
     9ec:	00000014 	andeq	r0, r0, r4, lsl r0
     9f0:	00000918 	andeq	r0, r0, r8, lsl r9
     9f4:	080041bc 	stmdaeq	r0, {r2, r3, r4, r5, r7, r8, lr}
     9f8:	000000a8 	andeq	r0, r0, r8, lsr #1
     9fc:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a00:	00018502 	andeq	r8, r1, r2, lsl #10
     a04:	0000000c 	andeq	r0, r0, ip
     a08:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     a0c:	7c020001 	stcvc	0, cr0, [r2], {1}
     a10:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     a14:	00000018 	andeq	r0, r0, r8, lsl r0
     a18:	00000a04 	andeq	r0, r0, r4, lsl #20
     a1c:	08004268 	stmdaeq	r0, {r3, r5, r6, r9, lr}
     a20:	000000b8 	strheq	r0, [r0], -r8
     a24:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     a28:	86038504 	strhi	r8, [r3], -r4, lsl #10
     a2c:	00018e02 	andeq	r8, r1, r2, lsl #28
     a30:	0000000c 	andeq	r0, r0, ip
     a34:	00000a04 	andeq	r0, r0, r4, lsl #20
     a38:	08004320 	stmdaeq	r0, {r5, r8, r9, lr}
     a3c:	0000003a 	andeq	r0, r0, sl, lsr r0
     a40:	00000014 	andeq	r0, r0, r4, lsl r0
     a44:	00000a04 	andeq	r0, r0, r4, lsl #20
     a48:	0800435c 	stmdaeq	r0, {r2, r3, r4, r6, r8, r9, lr}
     a4c:	00000042 	andeq	r0, r0, r2, asr #32
     a50:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     a54:	00018502 	andeq	r8, r1, r2, lsl #10
     a58:	00000024 	andeq	r0, r0, r4, lsr #32
     a5c:	00000a04 	andeq	r0, r0, r4, lsl #20
     a60:	080043a0 	stmdaeq	r0, {r5, r7, r8, r9, lr}
     a64:	00000060 	andeq	r0, r0, r0, rrx
     a68:	80100e41 	andshi	r0, r0, r1, asr #28
     a6c:	82038104 	andhi	r8, r3, #4, 2
     a70:	41018302 	tstmi	r1, r2, lsl #6
     a74:	07841c0e 	streq	r1, [r4, lr, lsl #24]
     a78:	058e0685 	streq	r0, [lr, #1669]	; 0x685
     a7c:	02a80e41 	adceq	r0, r8, #1040	; 0x410
     a80:	0000000c 	andeq	r0, r0, ip
     a84:	00000a04 	andeq	r0, r0, r4, lsl #20
     a88:	08004400 	stmdaeq	r0, {sl, lr}
     a8c:	00000016 	andeq	r0, r0, r6, lsl r0
     a90:	0000000c 	andeq	r0, r0, ip
     a94:	00000a04 	andeq	r0, r0, r4, lsl #20
     a98:	08004418 	stmdaeq	r0, {r3, r4, sl, lr}
     a9c:	00000018 	andeq	r0, r0, r8, lsl r0
     aa0:	0000000c 	andeq	r0, r0, ip
     aa4:	00000a04 	andeq	r0, r0, r4, lsl #20
     aa8:	08004430 	stmdaeq	r0, {r4, r5, sl, lr}
     aac:	00000042 	andeq	r0, r0, r2, asr #32
     ab0:	0000000c 	andeq	r0, r0, ip
     ab4:	00000a04 	andeq	r0, r0, r4, lsl #20
     ab8:	08004474 	stmdaeq	r0, {r2, r4, r5, r6, sl, lr}
     abc:	00000010 	andeq	r0, r0, r0, lsl r0
     ac0:	0000000c 	andeq	r0, r0, ip
     ac4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ac8:	7c020001 	stcvc	0, cr0, [r2], {1}
     acc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ad0:	00000018 	andeq	r0, r0, r8, lsl r0
     ad4:	00000ac0 	andeq	r0, r0, r0, asr #21
     ad8:	08004488 	stmdaeq	r0, {r3, r7, sl, lr}
     adc:	000000a6 	andeq	r0, r0, r6, lsr #1
     ae0:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
     ae4:	86038504 	strhi	r8, [r3], -r4, lsl #10
     ae8:	00018702 	andeq	r8, r1, r2, lsl #14
     aec:	0000000c 	andeq	r0, r0, ip
     af0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     af4:	7c020001 	stcvc	0, cr0, [r2], {1}
     af8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     afc:	00000018 	andeq	r0, r0, r8, lsl r0
     b00:	00000aec 	andeq	r0, r0, ip, ror #21
     b04:	08004530 	stmdaeq	r0, {r4, r5, r8, sl, lr}
     b08:	0000009e 	muleq	r0, lr, r0
     b0c:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
     b10:	86038504 	strhi	r8, [r3], -r4, lsl #10
     b14:	00018702 	andeq	r8, r1, r2, lsl #14
     b18:	0000000c 	andeq	r0, r0, ip
     b1c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b20:	7c020001 	stcvc	0, cr0, [r2], {1}
     b24:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b28:	00000018 	andeq	r0, r0, r8, lsl r0
     b2c:	00000b18 	andeq	r0, r0, r8, lsl fp
     b30:	080045d0 	stmdaeq	r0, {r4, r6, r7, r8, sl, lr}
     b34:	00000032 	andeq	r0, r0, r2, lsr r0
     b38:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     b3c:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     b40:	780e4101 	stmdavc	lr, {r0, r8, lr}
     b44:	00000014 	andeq	r0, r0, r4, lsl r0
     b48:	00000b18 	andeq	r0, r0, r8, lsl fp
     b4c:	08004604 	stmdaeq	r0, {r2, r9, sl, lr}
     b50:	0000001a 	andeq	r0, r0, sl, lsl r0
     b54:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     b58:	00018502 	andeq	r8, r1, r2, lsl #10
     b5c:	0000000c 	andeq	r0, r0, ip
     b60:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     b64:	7c020001 	stcvc	0, cr0, [r2], {1}
     b68:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     b6c:	00000028 	andeq	r0, r0, r8, lsr #32
     b70:	00000b5c 	andeq	r0, r0, ip, asr fp
     b74:	08004620 	stmdaeq	r0, {r5, r9, sl, lr}
     b78:	000014b4 			; <UNDEFINED> instruction: 0x000014b4
     b7c:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     b80:	86088509 	strhi	r8, [r8], -r9, lsl #10
     b84:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     b88:	8a048905 	bhi	122fa4 <__RW_SIZE__+0x122a20>
     b8c:	8e028b03 	vmlahi.f64	d8, d2, d3
     b90:	c80e4101 	stmdagt	lr, {r0, r8, lr}
     b94:	00000002 	andeq	r0, r0, r2
     b98:	0000000c 	andeq	r0, r0, ip
     b9c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ba0:	7c020001 	stcvc	0, cr0, [r2], {1}
     ba4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ba8:	00000024 	andeq	r0, r0, r4, lsr #32
     bac:	00000b98 	muleq	r0, r8, fp
     bb0:	08005ad8 	stmdaeq	r0, {r3, r4, r6, r7, r9, fp, ip, lr}
     bb4:	0000014a 	andeq	r0, r0, sl, asr #2
     bb8:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     bbc:	86088509 	strhi	r8, [r8], -r9, lsl #10
     bc0:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     bc4:	8a048905 	bhi	122fe0 <__RW_SIZE__+0x122a5c>
     bc8:	8e028b03 	vmlahi.f64	d8, d2, d3
     bcc:	380e4501 	stmdacc	lr, {r0, r8, sl, lr}
     bd0:	00000028 	andeq	r0, r0, r8, lsr #32
     bd4:	00000b98 	muleq	r0, r8, fp
     bd8:	08005c24 	stmdaeq	r0, {r2, r5, sl, fp, ip, lr}
     bdc:	00000f8a 	andeq	r0, r0, sl, lsl #31
     be0:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     be4:	86088509 	strhi	r8, [r8], -r9, lsl #10
     be8:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     bec:	8a048905 	bhi	123008 <__RW_SIZE__+0x122a84>
     bf0:	8e028b03 	vmlahi.f64	d8, d2, d3
     bf4:	900e4101 	andls	r4, lr, r1, lsl #2
     bf8:	00000001 	andeq	r0, r0, r1
     bfc:	0000000c 	andeq	r0, r0, ip
     c00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c04:	7c020001 	stcvc	0, cr0, [r2], {1}
     c08:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     c0c:	00000014 	andeq	r0, r0, r4, lsl r0
     c10:	00000bfc 	strdeq	r0, [r0], -ip
     c14:	08006bb0 	stmdaeq	r0, {r4, r5, r7, r8, r9, fp, sp, lr}
     c18:	00000052 	andeq	r0, r0, r2, asr r0
     c1c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     c20:	00018e02 	andeq	r8, r1, r2, lsl #28
     c24:	0000000c 	andeq	r0, r0, ip
     c28:	00000bfc 	strdeq	r0, [r0], -ip
     c2c:	08006c04 	stmdaeq	r0, {r2, sl, fp, sp, lr}
     c30:	0000000a 	andeq	r0, r0, sl
     c34:	0000000c 	andeq	r0, r0, ip
     c38:	00000bfc 	strdeq	r0, [r0], -ip
     c3c:	08006c10 	stmdaeq	r0, {r4, sl, fp, sp, lr}
     c40:	0000000c 	andeq	r0, r0, ip
     c44:	0000000c 	andeq	r0, r0, ip
     c48:	00000bfc 	strdeq	r0, [r0], -ip
     c4c:	08006c1c 	stmdaeq	r0, {r2, r3, r4, sl, fp, sp, lr}
     c50:	00000008 	andeq	r0, r0, r8
     c54:	0000000c 	andeq	r0, r0, ip
     c58:	00000bfc 	strdeq	r0, [r0], -ip
     c5c:	08006c24 	stmdaeq	r0, {r2, r5, sl, fp, sp, lr}
     c60:	00000004 	andeq	r0, r0, r4
     c64:	0000000c 	andeq	r0, r0, ip
     c68:	00000bfc 	strdeq	r0, [r0], -ip
     c6c:	08006c28 	stmdaeq	r0, {r3, r5, sl, fp, sp, lr}
     c70:	00000008 	andeq	r0, r0, r8
     c74:	0000000c 	andeq	r0, r0, ip
     c78:	00000bfc 	strdeq	r0, [r0], -ip
     c7c:	08006c30 	stmdaeq	r0, {r4, r5, sl, fp, sp, lr}
     c80:	00000012 	andeq	r0, r0, r2, lsl r0
     c84:	0000000c 	andeq	r0, r0, ip
     c88:	00000bfc 	strdeq	r0, [r0], -ip
     c8c:	08006c44 	stmdaeq	r0, {r2, r6, sl, fp, sp, lr}
     c90:	00000008 	andeq	r0, r0, r8
     c94:	0000000c 	andeq	r0, r0, ip
     c98:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     c9c:	7c020001 	stcvc	0, cr0, [r2], {1}
     ca0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ca4:	0000000c 	andeq	r0, r0, ip
     ca8:	00000c94 	muleq	r0, r4, ip
     cac:	08006c4c 	stmdaeq	r0, {r2, r3, r6, sl, fp, sp, lr}
     cb0:	00000010 	andeq	r0, r0, r0, lsl r0
     cb4:	0000000c 	andeq	r0, r0, ip
     cb8:	00000c94 	muleq	r0, r4, ip
     cbc:	08006c5c 	stmdaeq	r0, {r2, r3, r4, r6, sl, fp, sp, lr}
     cc0:	00000010 	andeq	r0, r0, r0, lsl r0
     cc4:	0000000c 	andeq	r0, r0, ip
     cc8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ccc:	7c020001 	stcvc	0, cr0, [r2], {1}
     cd0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     cd4:	00000024 	andeq	r0, r0, r4, lsr #32
     cd8:	00000cc4 	andeq	r0, r0, r4, asr #25
     cdc:	08006c6c 	stmdaeq	r0, {r2, r3, r5, r6, sl, fp, sp, lr}
     ce0:	0000056e 	andeq	r0, r0, lr, ror #10
     ce4:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     ce8:	86088509 	strhi	r8, [r8], -r9, lsl #10
     cec:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     cf0:	8a048905 	bhi	12310c <__RW_SIZE__+0x122b88>
     cf4:	8e028b03 	vmlahi.f64	d8, d2, d3
     cf8:	300e4401 	andcc	r4, lr, r1, lsl #8
     cfc:	0000000c 	andeq	r0, r0, ip
     d00:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d04:	7c020001 	stcvc	0, cr0, [r2], {1}
     d08:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d0c:	00000018 	andeq	r0, r0, r8, lsl r0
     d10:	00000cfc 	strdeq	r0, [r0], -ip
     d14:	080071dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r8, ip, sp, lr}
     d18:	00000090 	muleq	r0, r0, r0
     d1c:	840c0e43 	strhi	r0, [ip], #-3651	; 0xfffff1bd
     d20:	86028503 	strhi	r8, [r2], -r3, lsl #10
     d24:	00000001 	andeq	r0, r0, r1
     d28:	0000000c 	andeq	r0, r0, ip
     d2c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d30:	7c020001 	stcvc	0, cr0, [r2], {1}
     d34:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d38:	0000000c 	andeq	r0, r0, ip
     d3c:	00000d28 	andeq	r0, r0, r8, lsr #26
     d40:	0800726c 	stmdaeq	r0, {r2, r3, r5, r6, r9, ip, sp, lr}
     d44:	00000002 	andeq	r0, r0, r2
     d48:	0000000c 	andeq	r0, r0, ip
     d4c:	00000d28 	andeq	r0, r0, r8, lsr #26
     d50:	08007270 	stmdaeq	r0, {r4, r5, r6, r9, ip, sp, lr}
     d54:	00000002 	andeq	r0, r0, r2
     d58:	0000000c 	andeq	r0, r0, ip
     d5c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     d60:	7c020001 	stcvc	0, cr0, [r2], {1}
     d64:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     d68:	00000018 	andeq	r0, r0, r8, lsl r0
     d6c:	00000d58 	andeq	r0, r0, r8, asr sp
     d70:	08007274 	stmdaeq	r0, {r2, r4, r5, r6, r9, ip, sp, lr}
     d74:	0000006c 	andeq	r0, r0, ip, rrx
     d78:	84100e41 	ldrhi	r0, [r0], #-3649	; 0xfffff1bf
     d7c:	86038504 	strhi	r8, [r3], -r4, lsl #10
     d80:	00018e02 	andeq	r8, r1, r2, lsl #28
     d84:	00000018 	andeq	r0, r0, r8, lsl r0
     d88:	00000d58 	andeq	r0, r0, r8, asr sp
     d8c:	080072e0 	stmdaeq	r0, {r5, r6, r7, r9, ip, sp, lr}
     d90:	00000036 	andeq	r0, r0, r6, lsr r0
     d94:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     d98:	8e028503 	cfsh32hi	mvfx8, mvfx2, #3
     d9c:	180e4301 	stmdane	lr, {r0, r8, r9, lr}
     da0:	00000024 	andeq	r0, r0, r4, lsr #32
     da4:	00000d58 	andeq	r0, r0, r8, asr sp
     da8:	08007318 	stmdaeq	r0, {r3, r4, r8, r9, ip, sp, lr}
     dac:	0000008c 	andeq	r0, r0, ip, lsl #1
     db0:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
     db4:	86078508 	strhi	r8, [r7], -r8, lsl #10
     db8:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
     dbc:	8a038904 	bhi	e31d4 <__RW_SIZE__+0xe2c50>
     dc0:	44018e02 	strmi	r8, [r1], #-3586	; 0xfffff1fe
     dc4:	0000280e 	andeq	r2, r0, lr, lsl #16
     dc8:	00000020 	andeq	r0, r0, r0, lsr #32
     dcc:	00000d58 	andeq	r0, r0, r8, asr sp
     dd0:	080073a4 	stmdaeq	r0, {r2, r5, r7, r8, r9, ip, sp, lr}
     dd4:	00000098 	muleq	r0, r8, r0
     dd8:	83200e42 	teqhi	r0, #1056	; 0x420
     ddc:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
     de0:	87058606 	strhi	r8, [r5, -r6, lsl #12]
     de4:	89038804 	stmdbhi	r3, {r2, fp, pc}
     de8:	00018e02 	andeq	r8, r1, r2, lsl #28
     dec:	0000000c 	andeq	r0, r0, ip
     df0:	00000d58 	andeq	r0, r0, r8, asr sp
     df4:	0800743c 	stmdaeq	r0, {r2, r3, r4, r5, sl, ip, sp, lr}
     df8:	0000003c 	andeq	r0, r0, ip, lsr r0
     dfc:	0000000c 	andeq	r0, r0, ip
     e00:	00000d58 	andeq	r0, r0, r8, asr sp
     e04:	08007478 	stmdaeq	r0, {r3, r4, r5, r6, sl, ip, sp, lr}
     e08:	00000056 	andeq	r0, r0, r6, asr r0
     e0c:	00000014 	andeq	r0, r0, r4, lsl r0
     e10:	00000d58 	andeq	r0, r0, r8, asr sp
     e14:	080074d0 	stmdaeq	r0, {r4, r6, r7, sl, ip, sp, lr}
     e18:	00000012 	andeq	r0, r0, r2, lsl r0
     e1c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
     e20:	00018e02 	andeq	r8, r1, r2, lsl #28
     e24:	00000024 	andeq	r0, r0, r4, lsr #32
     e28:	00000d58 	andeq	r0, r0, r8, asr sp
     e2c:	080074e4 	stmdaeq	r0, {r2, r5, r6, r7, sl, ip, sp, lr}
     e30:	00000140 	andeq	r0, r0, r0, asr #2
     e34:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
     e38:	86088509 	strhi	r8, [r8], -r9, lsl #10
     e3c:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
     e40:	8a048905 	bhi	12325c <__RW_SIZE__+0x122cd8>
     e44:	8e028b03 	vmlahi.f64	d8, d2, d3
     e48:	380e4301 	stmdacc	lr, {r0, r8, r9, lr}
     e4c:	00000020 	andeq	r0, r0, r0, lsr #32
     e50:	00000d58 	andeq	r0, r0, r8, asr sp
     e54:	08007624 	stmdaeq	r0, {r2, r5, r9, sl, ip, sp, lr}
     e58:	000000b8 	strheq	r0, [r0], -r8
     e5c:	841c0e44 	ldrhi	r0, [ip], #-3652	; 0xfffff1bc
     e60:	86068507 	strhi	r8, [r6], -r7, lsl #10
     e64:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     e68:	8e028903 	cdphi	9, 0, cr8, cr2, cr3, {0}
     e6c:	280e4201 	stmdacs	lr, {r0, r9, lr}
     e70:	00000024 	andeq	r0, r0, r4, lsr #32
     e74:	00000d58 	andeq	r0, r0, r8, asr sp
     e78:	080076dc 	stmdaeq	r0, {r2, r3, r4, r6, r7, r9, sl, ip, sp, lr}
     e7c:	000000b6 	strheq	r0, [r0], -r6
     e80:	83280e42 	teqhi	r8, #1056	; 0x420
     e84:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
     e88:	87078608 	strhi	r8, [r7, -r8, lsl #12]
     e8c:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
     e90:	8b038a04 	blhi	e36a8 <__RW_SIZE__+0xe3124>
     e94:	00018e02 	andeq	r8, r1, r2, lsl #28
     e98:	00000014 	andeq	r0, r0, r4, lsl r0
     e9c:	00000d58 	andeq	r0, r0, r8, asr sp
     ea0:	08007794 	stmdaeq	r0, {r2, r4, r7, r8, r9, sl, ip, sp, lr}
     ea4:	00000042 	andeq	r0, r0, r2, asr #32
     ea8:	84040e43 	strhi	r0, [r4], #-3651	; 0xfffff1bd
     eac:	00000001 	andeq	r0, r0, r1
     eb0:	00000024 	andeq	r0, r0, r4, lsr #32
     eb4:	00000d58 	andeq	r0, r0, r8, asr sp
     eb8:	080077d8 	stmdaeq	r0, {r3, r4, r6, r7, r8, r9, sl, ip, sp, lr}
     ebc:	000000ea 	andeq	r0, r0, sl, ror #1
     ec0:	83280e42 	teqhi	r8, #1056	; 0x420
     ec4:	8509840a 	strhi	r8, [r9, #-1034]	; 0xfffffbf6
     ec8:	87078608 	strhi	r8, [r7, -r8, lsl #12]
     ecc:	89058806 	stmdbhi	r5, {r1, r2, fp, pc}
     ed0:	8b038a04 	blhi	e36e8 <__RW_SIZE__+0xe3164>
     ed4:	00018e02 	andeq	r8, r1, r2, lsl #28
     ed8:	0000000c 	andeq	r0, r0, ip
     edc:	00000d58 	andeq	r0, r0, r8, asr sp
     ee0:	080078c4 	stmdaeq	r0, {r2, r6, r7, fp, ip, sp, lr}
     ee4:	00000042 	andeq	r0, r0, r2, asr #32
     ee8:	0000001c 	andeq	r0, r0, ip, lsl r0
     eec:	00000d58 	andeq	r0, r0, r8, asr sp
     ef0:	08007908 	stmdaeq	r0, {r3, r8, fp, ip, sp, lr}
     ef4:	000000ac 	andeq	r0, r0, ip, lsr #1
     ef8:	83180e41 	tsthi	r8, #1040	; 0x410
     efc:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
     f00:	87038604 	strhi	r8, [r3, -r4, lsl #12]
     f04:	00018e02 	andeq	r8, r1, r2, lsl #28
     f08:	00000020 	andeq	r0, r0, r0, lsr #32
     f0c:	00000d58 	andeq	r0, r0, r8, asr sp
     f10:	080079b4 	stmdaeq	r0, {r2, r4, r5, r7, r8, fp, ip, sp, lr}
     f14:	000000ba 	strheq	r0, [r0], -sl
     f18:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
     f1c:	86058506 	strhi	r8, [r5], -r6, lsl #10
     f20:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
     f24:	41018e02 	tstmi	r1, r2, lsl #28
     f28:	0000200e 	andeq	r2, r0, lr
     f2c:	00000020 	andeq	r0, r0, r0, lsr #32
     f30:	00000d58 	andeq	r0, r0, r8, asr sp
     f34:	08007a70 	stmdaeq	r0, {r4, r5, r6, r9, fp, ip, sp, lr}
     f38:	0000005e 	andeq	r0, r0, lr, asr r0
     f3c:	841c0e42 	ldrhi	r0, [ip], #-3650	; 0xfffff1be
     f40:	86068507 	strhi	r8, [r6], -r7, lsl #10
     f44:	88048705 	stmdahi	r4, {r0, r2, r8, r9, sl, pc}
     f48:	8e028903 	cdphi	9, 0, cr8, cr2, cr3, {0}
     f4c:	280e4101 	stmdacs	lr, {r0, r8, lr}
     f50:	00000014 	andeq	r0, r0, r4, lsl r0
     f54:	00000d58 	andeq	r0, r0, r8, asr sp
     f58:	08007ad0 	stmdaeq	r0, {r4, r6, r7, r9, fp, ip, sp, lr}
     f5c:	00000034 	andeq	r0, r0, r4, lsr r0
     f60:	84080e42 	strhi	r0, [r8], #-3650	; 0xfffff1be
     f64:	00018e02 	andeq	r8, r1, r2, lsl #28
     f68:	00000018 	andeq	r0, r0, r8, lsl r0
     f6c:	00000d58 	andeq	r0, r0, r8, asr sp
     f70:	08007b04 	stmdaeq	r0, {r2, r8, r9, fp, ip, sp, lr}
     f74:	00000046 	andeq	r0, r0, r6, asr #32
     f78:	840c0e41 	strhi	r0, [ip], #-3649	; 0xfffff1bf
     f7c:	86028503 	strhi	r8, [r2], -r3, lsl #10
     f80:	00000001 	andeq	r0, r0, r1
     f84:	00000014 	andeq	r0, r0, r4, lsl r0
     f88:	00000d58 	andeq	r0, r0, r8, asr sp
     f8c:	08007b4c 	stmdaeq	r0, {r2, r3, r6, r8, r9, fp, ip, sp, lr}
     f90:	0000005e 	andeq	r0, r0, lr, asr r0
     f94:	84040e43 	strhi	r0, [r4], #-3651	; 0xfffff1bd
     f98:	00000001 	andeq	r0, r0, r1
     f9c:	0000000c 	andeq	r0, r0, ip
     fa0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     fa4:	7c020001 	stcvc	0, cr0, [r2], {1}
     fa8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     fac:	0000000c 	andeq	r0, r0, ip
     fb0:	00000f9c 	muleq	r0, ip, pc	; <UNPREDICTABLE>
     fb4:	08007bac 	stmdaeq	r0, {r2, r3, r5, r7, r8, r9, fp, ip, sp, lr}
     fb8:	00000050 	andeq	r0, r0, r0, asr r0
     fbc:	0000000c 	andeq	r0, r0, ip
     fc0:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     fc4:	7c020001 	stcvc	0, cr0, [r2], {1}
     fc8:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     fcc:	00000018 	andeq	r0, r0, r8, lsl r0
     fd0:	00000fbc 			; <UNDEFINED> instruction: 0x00000fbc
     fd4:	08007bfc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, r9, fp, ip, sp, lr}
     fd8:	00000026 	andeq	r0, r0, r6, lsr #32
     fdc:	83100e41 	tsthi	r0, #1040	; 0x410
     fe0:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
     fe4:	00018e02 	andeq	r8, r1, r2, lsl #28
     fe8:	0000000c 	andeq	r0, r0, ip
     fec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
     ff0:	7c020001 	stcvc	0, cr0, [r2], {1}
     ff4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
     ff8:	0000000c 	andeq	r0, r0, ip
     ffc:	00000fe8 	andeq	r0, r0, r8, ror #31
    1000:	08007e60 	stmdaeq	r0, {r5, r6, r9, sl, fp, ip, sp, lr}
    1004:	0000005e 	andeq	r0, r0, lr, asr r0
    1008:	0000000c 	andeq	r0, r0, ip
    100c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1010:	7c020001 	stcvc	0, cr0, [r2], {1}
    1014:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1018:	00000024 	andeq	r0, r0, r4, lsr #32
    101c:	00001008 	andeq	r1, r0, r8
    1020:	08007ec0 	stmdaeq	r0, {r6, r7, r9, sl, fp, ip, sp, lr}
    1024:	00000104 	andeq	r0, r0, r4, lsl #2
    1028:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    102c:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1030:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1034:	8a048905 	bhi	123450 <__RW_SIZE__+0x122ecc>
    1038:	8e028b03 	vmlahi.f64	d8, d2, d3
    103c:	300e4301 	andcc	r4, lr, r1, lsl #6
    1040:	00000028 	andeq	r0, r0, r8, lsr #32
    1044:	00001008 	andeq	r1, r0, r8
    1048:	08007fc4 	stmdaeq	r0, {r2, r6, r7, r8, r9, sl, fp, ip, sp, lr}
    104c:	00000adc 	ldrdeq	r0, [r0], -ip
    1050:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1054:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1058:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    105c:	8a048905 	bhi	123478 <__RW_SIZE__+0x122ef4>
    1060:	8e028b03 	vmlahi.f64	d8, d2, d3
    1064:	f00e4101 			; <UNDEFINED> instruction: 0xf00e4101
    1068:	00000001 	andeq	r0, r0, r1
    106c:	0000000c 	andeq	r0, r0, ip
    1070:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1074:	7c020001 	stcvc	0, cr0, [r2], {1}
    1078:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    107c:	00000014 	andeq	r0, r0, r4, lsl r0
    1080:	0000106c 	andeq	r1, r0, ip, rrx
    1084:	08008aa0 	stmdaeq	r0, {r5, r7, r9, fp, pc}
    1088:	00000062 	andeq	r0, r0, r2, rrx
    108c:	84080e41 	strhi	r0, [r8], #-3649	; 0xfffff1bf
    1090:	00018e02 	andeq	r8, r1, r2, lsl #28
    1094:	0000000c 	andeq	r0, r0, ip
    1098:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    109c:	7c020001 	stcvc	0, cr0, [r2], {1}
    10a0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10a4:	0000001c 	andeq	r0, r0, ip, lsl r0
    10a8:	00001094 	muleq	r0, r4, r0
    10ac:	08008b04 	stmdaeq	r0, {r2, r8, r9, fp, pc}
    10b0:	000000a2 	andeq	r0, r0, r2, lsr #1
    10b4:	83180e41 	tsthi	r8, #1040	; 0x410
    10b8:	85058406 	strhi	r8, [r5, #-1030]	; 0xfffffbfa
    10bc:	87038604 	strhi	r8, [r3, -r4, lsl #12]
    10c0:	00018e02 	andeq	r8, r1, r2, lsl #28
    10c4:	0000001c 	andeq	r0, r0, ip, lsl r0
    10c8:	00001094 	muleq	r0, r4, r0
    10cc:	08008ba8 	stmdaeq	r0, {r3, r5, r7, r8, r9, fp, pc}
    10d0:	00000198 	muleq	r0, r8, r1
    10d4:	84180e42 	ldrhi	r0, [r8], #-3650	; 0xfffff1be
    10d8:	86058506 	strhi	r8, [r5], -r6, lsl #10
    10dc:	88038704 	stmdahi	r3, {r2, r8, r9, sl, pc}
    10e0:	00018e02 	andeq	r8, r1, r2, lsl #28
    10e4:	0000000c 	andeq	r0, r0, ip
    10e8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    10ec:	7c020001 	stcvc	0, cr0, [r2], {1}
    10f0:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    10f4:	00000018 	andeq	r0, r0, r8, lsl r0
    10f8:	000010e4 	andeq	r1, r0, r4, ror #1
    10fc:	08008d40 	stmdaeq	r0, {r6, r8, sl, fp, pc}
    1100:	000000ce 	andeq	r0, r0, lr, asr #1
    1104:	84100e42 	ldrhi	r0, [r0], #-3650	; 0xfffff1be
    1108:	86038504 	strhi	r8, [r3], -r4, lsl #10
    110c:	00018702 	andeq	r8, r1, r2, lsl #14
    1110:	0000000c 	andeq	r0, r0, ip
    1114:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1118:	7c020001 	stcvc	0, cr0, [r2], {1}
    111c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1120:	00000024 	andeq	r0, r0, r4, lsr #32
    1124:	00001110 	andeq	r1, r0, r0, lsl r1
    1128:	08008e10 	stmdaeq	r0, {r4, r9, sl, fp, pc}
    112c:	000003ea 	andeq	r0, r0, sl, ror #7
    1130:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1134:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1138:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    113c:	8a048905 	bhi	123558 <__RW_SIZE__+0x122fd4>
    1140:	8e028b03 	vmlahi.f64	d8, d2, d3
    1144:	300e4201 	andcc	r4, lr, r1, lsl #4
    1148:	0000000c 	andeq	r0, r0, ip
    114c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1150:	7c020001 	stcvc	0, cr0, [r2], {1}
    1154:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1158:	00000018 	andeq	r0, r0, r8, lsl r0
    115c:	00001148 	andeq	r1, r0, r8, asr #2
    1160:	080091fc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r8, ip, pc}
    1164:	0000001a 	andeq	r0, r0, sl, lsl r0
    1168:	83100e41 	tsthi	r0, #1040	; 0x410
    116c:	85038404 	strhi	r8, [r3, #-1028]	; 0xfffffbfc
    1170:	00018e02 	andeq	r8, r1, r2, lsl #28
    1174:	00000018 	andeq	r0, r0, r8, lsl r0
    1178:	00001148 	andeq	r1, r0, r8, asr #2
    117c:	08009218 	stmdaeq	r0, {r3, r4, r9, ip, pc}
    1180:	000000d6 	ldrdeq	r0, [r0], -r6
    1184:	84100e45 	ldrhi	r0, [r0], #-3653	; 0xfffff1bb
    1188:	86038504 	strhi	r8, [r3], -r4, lsl #10
    118c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1190:	0000000c 	andeq	r0, r0, ip
    1194:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1198:	7c010001 	stcvc	0, cr0, [r1], {1}
    119c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11a0:	0000000c 	andeq	r0, r0, ip
    11a4:	00001190 	muleq	r0, r0, r1
    11a8:	080092f1 	stmdaeq	r0, {r0, r4, r5, r6, r7, r9, ip, pc}
    11ac:	0000025c 	andeq	r0, r0, ip, asr r2
    11b0:	0000000c 	andeq	r0, r0, ip
    11b4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11b8:	7c010001 	stcvc	0, cr0, [r1], {1}
    11bc:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11c0:	00000014 	andeq	r0, r0, r4, lsl r0
    11c4:	000011b0 			; <UNDEFINED> instruction: 0x000011b0
    11c8:	08009ea1 	stmdaeq	r0, {r0, r5, r7, r9, sl, fp, ip, pc}
    11cc:	0000002c 	andeq	r0, r0, ip, lsr #32
    11d0:	0e038e5e 	mcreq	14, 0, r8, cr3, cr14, {2}
    11d4:	00000010 	andeq	r0, r0, r0, lsl r0
    11d8:	0000000c 	andeq	r0, r0, ip
    11dc:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    11e0:	7c020001 	stcvc	0, cr0, [r2], {1}
    11e4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    11e8:	00000020 	andeq	r0, r0, r0, lsr #32
    11ec:	000011d8 	ldrdeq	r1, [r0], -r8
    11f0:	08009ecc 	stmdaeq	r0, {r2, r3, r6, r7, r9, sl, fp, ip, pc}
    11f4:	00000030 	andeq	r0, r0, r0, lsr r0
    11f8:	84200e42 	strthi	r0, [r0], #-3650	; 0xfffff1be
    11fc:	86078508 	strhi	r8, [r7], -r8, lsl #10
    1200:	88058706 	stmdahi	r5, {r1, r2, r8, r9, sl, pc}
    1204:	8a038904 	bhi	e361c <__RW_SIZE__+0xe3098>
    1208:	00018e02 	andeq	r8, r1, r2, lsl #28
    120c:	00000020 	andeq	r0, r0, r0, lsr #32
    1210:	000011d8 	ldrdeq	r1, [r0], -r8
    1214:	08009efc 	stmdaeq	r0, {r2, r3, r4, r5, r6, r7, r9, sl, fp, ip, pc}
    1218:	00000030 	andeq	r0, r0, r0, lsr r0
    121c:	83200e42 	teqhi	r0, #1056	; 0x420
    1220:	85078408 	strhi	r8, [r7, #-1032]	; 0xfffffbf8
    1224:	87058606 	strhi	r8, [r5, -r6, lsl #12]
    1228:	89038804 	stmdbhi	r3, {r2, fp, pc}
    122c:	00018e02 	andeq	r8, r1, r2, lsl #28
    1230:	0000000c 	andeq	r0, r0, ip
    1234:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1238:	7c020001 	stcvc	0, cr0, [r2], {1}
    123c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1240:	00000024 	andeq	r0, r0, r4, lsr #32
    1244:	00001230 	andeq	r1, r0, r0, lsr r2
    1248:	08009f2c 	stmdaeq	r0, {r2, r3, r5, r8, r9, sl, fp, ip, pc}
    124c:	00000352 	andeq	r0, r0, r2, asr r3
    1250:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    1254:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1258:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    125c:	8a048905 	bhi	123678 <__RW_SIZE__+0x1230f4>
    1260:	8e028b03 	vmlahi.f64	d8, d2, d3
    1264:	380e4c01 	stmdacc	lr, {r0, sl, fp, lr}
    1268:	0000000c 	andeq	r0, r0, ip
    126c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
    1270:	7c020001 	stcvc	0, cr0, [r2], {1}
    1274:	000d0c0e 	andeq	r0, sp, lr, lsl #24
    1278:	00000024 	andeq	r0, r0, r4, lsr #32
    127c:	00001268 	andeq	r1, r0, r8, ror #4
    1280:	0800a280 	stmdaeq	r0, {r7, r9, sp, pc}
    1284:	00000300 	andeq	r0, r0, r0, lsl #6
    1288:	84240e42 	strthi	r0, [r4], #-3650	; 0xfffff1be
    128c:	86088509 	strhi	r8, [r8], -r9, lsl #10
    1290:	88068707 	stmdahi	r6, {r0, r1, r2, r8, r9, sl, pc}
    1294:	8a048905 	bhi	1236b0 <__RW_SIZE__+0x12312c>
    1298:	8e028b03 	vmlahi.f64	d8, d2, d3
    129c:	300e4201 	andcc	r4, lr, r1, lsl #4

Disassembly of section .debug_loc:

00000000 <.debug_loc>:
   0:	08003244 	stmdaeq	r0, {r2, r6, r9, ip, sp}
   4:	0800324c 	stmdaeq	r0, {r2, r3, r6, r9, ip, sp}
   8:	9f300002 	svcls	0x00300002
   c:	0800324c 	stmdaeq	r0, {r2, r3, r6, r9, ip, sp}
  10:	0800324c 	stmdaeq	r0, {r2, r3, r6, r9, ip, sp}
  14:	00500001 	subseq	r0, r0, r1
  18:	00000000 	andeq	r0, r0, r0
  1c:	54000000 	strpl	r0, [r0], #-0
  20:	5c080032 	stcpl	0, cr0, [r8], {50}	; 0x32
  24:	02080032 	andeq	r0, r8, #50	; 0x32
  28:	5c9f3000 	ldcpl	0, cr3, [pc], {0}
  2c:	5c080032 	stcpl	0, cr0, [r8], {50}	; 0x32
  30:	01080032 	tsteq	r8, r2, lsr r0
  34:	00005000 	andeq	r5, r0, r0
  38:	00000000 	andeq	r0, r0, r0
  3c:	32640000 	rsbcc	r0, r4, #0
  40:	32680800 	rsbcc	r0, r8, #0, 16
  44:	00020800 	andeq	r0, r2, r0, lsl #16
  48:	32689f30 	rsbcc	r9, r8, #48, 30	; 0xc0
  4c:	326a0800 	rsbcc	r0, sl, #0, 16
  50:	00010800 	andeq	r0, r1, r0, lsl #16
  54:	00000050 	andeq	r0, r0, r0, asr r0
  58:	00000000 	andeq	r0, r0, r0
  5c:	00327400 	eorseq	r7, r2, r0, lsl #8
  60:	00327808 	eorseq	r7, r2, r8, lsl #16
  64:	30000208 	andcc	r0, r0, r8, lsl #4
  68:	0032789f 	mlaseq	r2, pc, r8, r7	; <UNPREDICTABLE>
  6c:	00327a08 	eorseq	r7, r2, r8, lsl #20
  70:	50000108 	andpl	r0, r0, r8, lsl #2
	...
  7c:	08003284 	stmdaeq	r0, {r2, r7, r9, ip, sp}
  80:	08003288 	stmdaeq	r0, {r3, r7, r9, ip, sp}
  84:	9f300002 	svcls	0x00300002
  88:	08003288 	stmdaeq	r0, {r3, r7, r9, ip, sp}
  8c:	0800328a 	stmdaeq	r0, {r1, r3, r7, r9, ip, sp}
  90:	00500001 	subseq	r0, r0, r1
  94:	00000000 	andeq	r0, r0, r0
  98:	94000000 	strls	r0, [r0], #-0
  9c:	98080032 	stmdals	r8, {r1, r4, r5}
  a0:	02080032 	andeq	r0, r8, #50	; 0x32
  a4:	989f3000 	ldmls	pc, {ip, sp}	; <UNPREDICTABLE>
  a8:	9a080032 	bls	200178 <__RW_SIZE__+0x1ffbf4>
  ac:	01080032 	tsteq	r8, r2, lsr r0
  b0:	00005000 	andeq	r5, r0, r0
  b4:	00000000 	andeq	r0, r0, r0
  b8:	32a40000 	adccc	r0, r4, #0
  bc:	32a60800 	adccc	r0, r6, #0, 16
  c0:	00010800 	andeq	r0, r1, r0, lsl #16
  c4:	0032a650 	eorseq	sl, r2, r0, asr r6
  c8:	0032a808 	eorseq	sl, r2, r8, lsl #16
  cc:	f3000408 	vshl.u8	d0, d8, d0
  d0:	009f5001 	addseq	r5, pc, r1
  d4:	00000000 	andeq	r0, r0, r0
  d8:	a4000000 	strge	r0, [r0], #-0
  dc:	a6080032 			; <UNDEFINED> instruction: 0xa6080032
  e0:	02080032 	andeq	r0, r8, #50	; 0x32
  e4:	a69f3000 	ldrge	r3, [pc], r0
  e8:	a8080032 	stmdage	r8, {r1, r4, r5}
  ec:	01080032 	tsteq	r8, r2, lsr r0
  f0:	00005000 	andeq	r5, r0, r0
  f4:	00000000 	andeq	r0, r0, r0
  f8:	32a80000 	adccc	r0, r8, #0
  fc:	32aa0800 	adccc	r0, sl, #0, 16
 100:	00010800 	andeq	r0, r1, r0, lsl #16
 104:	0032aa50 	eorseq	sl, r2, r0, asr sl
 108:	0032ac08 	eorseq	sl, r2, r8, lsl #24
 10c:	f3000408 	vshl.u8	d0, d8, d0
 110:	009f5001 	addseq	r5, pc, r1
 114:	00000000 	andeq	r0, r0, r0
 118:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
 11c:	aa080032 	bge	2001ec <__RW_SIZE__+0x1ffc68>
 120:	02080032 	andeq	r0, r8, #50	; 0x32
 124:	aa9f3000 	bge	fe7cc12c <MSP_BASE+0xde7c712c>
 128:	ac080032 	stcge	0, cr0, [r8], {50}	; 0x32
 12c:	01080032 	tsteq	r8, r2, lsr r0
 130:	00005000 	andeq	r5, r0, r0
 134:	00000000 	andeq	r0, r0, r0
 138:	32ac0000 	adccc	r0, ip, #0
 13c:	32ae0800 	adccc	r0, lr, #0, 16
 140:	00010800 	andeq	r0, r1, r0, lsl #16
 144:	0032ae50 	eorseq	sl, r2, r0, asr lr
 148:	0032b008 	eorseq	fp, r2, r8
 14c:	f3000408 	vshl.u8	d0, d8, d0
 150:	009f5001 	addseq	r5, pc, r1
 154:	00000000 	andeq	r0, r0, r0
 158:	ac000000 	stcge	0, cr0, [r0], {-0}
 15c:	ae080032 	mcrge	0, 0, r0, cr8, cr2, {1}
 160:	02080032 	andeq	r0, r8, #50	; 0x32
 164:	ae9f3000 	cdpge	0, 9, cr3, cr15, cr0, {0}
 168:	b0080032 	andlt	r0, r8, r2, lsr r0
 16c:	01080032 	tsteq	r8, r2, lsr r0
 170:	00005000 	andeq	r5, r0, r0
 174:	00000000 	andeq	r0, r0, r0
 178:	32b00000 	adcscc	r0, r0, #0
 17c:	32b40800 	adcscc	r0, r4, #0, 16
 180:	00010800 	andeq	r0, r1, r0, lsl #16
 184:	0032b450 	eorseq	fp, r2, r0, asr r4
 188:	0032b608 	eorseq	fp, r2, r8, lsl #12
 18c:	f3000408 	vshl.u8	d0, d8, d0
 190:	009f5001 	addseq	r5, pc, r1
 194:	00000000 	andeq	r0, r0, r0
 198:	b0000000 	andlt	r0, r0, r0
 19c:	b4080032 	strlt	r0, [r8], #-50	; 0xffffffce
 1a0:	02080032 	andeq	r0, r8, #50	; 0x32
 1a4:	b49f3000 	ldrlt	r3, [pc], #0	; 1ac <shift+0x1ac>
 1a8:	b6080032 			; <UNDEFINED> instruction: 0xb6080032
 1ac:	01080032 	tsteq	r8, r2, lsr r0
 1b0:	00005000 	andeq	r5, r0, r0
 1b4:	00000000 	andeq	r0, r0, r0
 1b8:	32b80000 	adcscc	r0, r8, #0
 1bc:	32bc0800 	adcscc	r0, ip, #0, 16
 1c0:	00010800 	andeq	r0, r1, r0, lsl #16
 1c4:	0032bc50 	eorseq	fp, r2, r0, asr ip
 1c8:	0032c008 	eorseq	ip, r2, r8
 1cc:	f3000408 	vshl.u8	d0, d8, d0
 1d0:	009f5001 	addseq	r5, pc, r1
 1d4:	00000000 	andeq	r0, r0, r0
 1d8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
 1dc:	bc080032 	stclt	0, cr0, [r8], {50}	; 0x32
 1e0:	02080032 	andeq	r0, r8, #50	; 0x32
 1e4:	bc9f3000 	ldclt	0, cr3, [pc], {0}
 1e8:	c0080032 	andgt	r0, r8, r2, lsr r0
 1ec:	01080032 	tsteq	r8, r2, lsr r0
 1f0:	00005000 	andeq	r5, r0, r0
 1f4:	00000000 	andeq	r0, r0, r0
 1f8:	32c00000 	sbccc	r0, r0, #0
 1fc:	32c40800 	sbccc	r0, r4, #0, 16
 200:	00010800 	andeq	r0, r1, r0, lsl #16
 204:	0032c450 	eorseq	ip, r2, r0, asr r4
 208:	0032c808 	eorseq	ip, r2, r8, lsl #16
 20c:	f3000408 	vshl.u8	d0, d8, d0
 210:	009f5001 	addseq	r5, pc, r1
 214:	00000000 	andeq	r0, r0, r0
 218:	c0000000 	andgt	r0, r0, r0
 21c:	c4080032 	strgt	r0, [r8], #-50	; 0xffffffce
 220:	02080032 	andeq	r0, r8, #50	; 0x32
 224:	c49f3000 	ldrgt	r3, [pc], #0	; 22c <__ZI_SIZE__+0x54>
 228:	c8080032 	stmdagt	r8, {r1, r4, r5}
 22c:	01080032 	tsteq	r8, r2, lsr r0
 230:	00005000 	andeq	r5, r0, r0
 234:	00000000 	andeq	r0, r0, r0
 238:	32c80000 	sbccc	r0, r8, #0
 23c:	32cc0800 	sbccc	r0, ip, #0, 16
 240:	00010800 	andeq	r0, r1, r0, lsl #16
 244:	0032cc50 	eorseq	ip, r2, r0, asr ip
 248:	0032ce08 	eorseq	ip, r2, r8, lsl #28
 24c:	f3000408 	vshl.u8	d0, d8, d0
 250:	009f5001 	addseq	r5, pc, r1
 254:	00000000 	andeq	r0, r0, r0
 258:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
 25c:	cc080032 	stcgt	0, cr0, [r8], {50}	; 0x32
 260:	02080032 	andeq	r0, r8, #50	; 0x32
 264:	cc9f3000 	ldcgt	0, cr3, [pc], {0}
 268:	ce080032 	mcrgt	0, 0, r0, cr8, cr2, {1}
 26c:	01080032 	tsteq	r8, r2, lsr r0
 270:	00005000 	andeq	r5, r0, r0
 274:	00000000 	andeq	r0, r0, r0
 278:	32d00000 	sbcscc	r0, r0, #0
 27c:	32d60800 	sbcscc	r0, r6, #0, 16
 280:	00010800 	andeq	r0, r1, r0, lsl #16
 284:	0032d650 	eorseq	sp, r2, r0, asr r6
 288:	0032d808 	eorseq	sp, r2, r8, lsl #16
 28c:	f3000408 	vshl.u8	d0, d8, d0
 290:	009f5001 	addseq	r5, pc, r1
 294:	00000000 	andeq	r0, r0, r0
 298:	d0000000 	andle	r0, r0, r0
 29c:	d6080032 			; <UNDEFINED> instruction: 0xd6080032
 2a0:	02080032 	andeq	r0, r8, #50	; 0x32
 2a4:	d69f3000 	ldrle	r3, [pc], r0
 2a8:	d8080032 	stmdale	r8, {r1, r4, r5}
 2ac:	01080032 	tsteq	r8, r2, lsr r0
 2b0:	00005000 	andeq	r5, r0, r0
 2b4:	00000000 	andeq	r0, r0, r0
 2b8:	32d80000 	sbcscc	r0, r8, #0
 2bc:	32de0800 	sbcscc	r0, lr, #0, 16
 2c0:	00010800 	andeq	r0, r1, r0, lsl #16
 2c4:	0032de50 	eorseq	sp, r2, r0, asr lr
 2c8:	0032e008 	eorseq	lr, r2, r8
 2cc:	f3000408 	vshl.u8	d0, d8, d0
 2d0:	009f5001 	addseq	r5, pc, r1
 2d4:	00000000 	andeq	r0, r0, r0
 2d8:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
 2dc:	de080032 	mcrle	0, 0, r0, cr8, cr2, {1}
 2e0:	02080032 	andeq	r0, r8, #50	; 0x32
 2e4:	de9f3000 	cdple	0, 9, cr3, cr15, cr0, {0}
 2e8:	e0080032 	and	r0, r8, r2, lsr r0
 2ec:	01080032 	tsteq	r8, r2, lsr r0
 2f0:	00005000 	andeq	r5, r0, r0
 2f4:	00000000 	andeq	r0, r0, r0
 2f8:	32e00000 	rsccc	r0, r0, #0
 2fc:	32e40800 	rsccc	r0, r4, #0, 16
 300:	00010800 	andeq	r0, r1, r0, lsl #16
 304:	0032e450 	eorseq	lr, r2, r0, asr r4
 308:	0032e608 	eorseq	lr, r2, r8, lsl #12
 30c:	f3000408 	vshl.u8	d0, d8, d0
 310:	009f5001 	addseq	r5, pc, r1
 314:	00000000 	andeq	r0, r0, r0
 318:	e0000000 	and	r0, r0, r0
 31c:	e4080032 	str	r0, [r8], #-50	; 0xffffffce
 320:	02080032 	andeq	r0, r8, #50	; 0x32
 324:	e49f3000 	ldr	r3, [pc], #0	; 32c <__ZI_SIZE__+0x154>
 328:	e6080032 			; <UNDEFINED> instruction: 0xe6080032
 32c:	01080032 	tsteq	r8, r2, lsr r0
 330:	00005000 	andeq	r5, r0, r0
	...
 33c:	00160000 	andseq	r0, r6, r0
 340:	00010000 	andeq	r0, r1, r0
 344:	00001650 	andeq	r1, r0, r0, asr r6
 348:	00003a00 	andeq	r3, r0, r0, lsl #20
 34c:	70000300 	andvc	r0, r0, r0, lsl #6
 350:	003a9f01 	eorseq	r9, sl, r1, lsl #30
 354:	00680000 	rsbeq	r0, r8, r0
 358:	00040000 	andeq	r0, r4, r0
 35c:	9f5001f3 	svcls	0x005001f3
	...
 36c:	00000042 	andeq	r0, r0, r2, asr #32
 370:	42520001 	subsmi	r0, r2, #1
 374:	54000000 	strpl	r0, [r0], #-0
 378:	02000000 	andeq	r0, r0, #0
 37c:	54087400 	strpl	r7, [r8], #-1024	; 0xfffffc00
 380:	5a000000 	bpl	388 <__ZI_SIZE__+0x1b0>
 384:	04000000 	streq	r0, [r0], #-0
 388:	5201f300 	andpl	pc, r1, #0, 6
 38c:	00005a9f 	muleq	r0, pc, sl	; <UNPREDICTABLE>
 390:	00006800 	andeq	r6, r0, r0, lsl #16
 394:	52000100 	andpl	r0, r0, #0, 2
	...
 3a4:	0000004c 	andeq	r0, r0, ip, asr #32
 3a8:	5a530001 	bpl	14c03b4 <__RW_SIZE__+0x14bfe30>
 3ac:	68000000 	stmdavs	r0, {}	; <UNPREDICTABLE>
 3b0:	01000000 	mrseq	r0, (UNDEF: 0)
 3b4:	00005300 	andeq	r5, r0, r0, lsl #6
	...
 3c0:	001c0000 	andseq	r0, ip, r0
 3c4:	00020000 	andeq	r0, r2, r0
 3c8:	00000091 	muleq	r0, r1, r0
 3cc:	00000000 	andeq	r0, r0, r0
 3d0:	00220000 	eoreq	r0, r2, r0
 3d4:	003a0000 	eorseq	r0, sl, r0
 3d8:	00030000 	andeq	r0, r3, r0
 3dc:	3a9f0170 	bcc	fe7c09a4 <MSP_BASE+0xde7bb9a4>
 3e0:	3c000000 	stccc	0, cr0, [r0], {-0}
 3e4:	04000000 	streq	r0, [r0], #-0
 3e8:	5001f300 	andpl	pc, r1, r0, lsl #6
 3ec:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 3f0:	00000000 	andeq	r0, r0, r0
 3f4:	00006800 	andeq	r6, r0, r0, lsl #16
 3f8:	00007000 	andeq	r7, r0, r0
 3fc:	50000100 	andpl	r0, r0, r0, lsl #2
 400:	00000070 	andeq	r0, r0, r0, ror r0
 404:	0000009a 	muleq	r0, sl, r0
 408:	01700003 	cmneq	r0, r3
 40c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 410:	00000000 	andeq	r0, r0, r0
 414:	00009c00 	andeq	r9, r0, r0, lsl #24
 418:	0000a400 	andeq	sl, r0, r0, lsl #8
 41c:	50000100 	andpl	r0, r0, r0, lsl #2
 420:	000000a4 	andeq	r0, r0, r4, lsr #1
 424:	000000c8 	andeq	r0, r0, r8, asr #1
 428:	01700003 	cmneq	r0, r3
 42c:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 430:	00000000 	andeq	r0, r0, r0
 434:	0000c800 	andeq	ip, r0, r0, lsl #16
 438:	0000dc00 	andeq	sp, r0, r0, lsl #24
 43c:	50000100 	andpl	r0, r0, r0, lsl #2
 440:	000000dc 	ldrdeq	r0, [r0], -ip
 444:	00000116 	andeq	r0, r0, r6, lsl r1
 448:	01700003 	cmneq	r0, r3
 44c:	0001169f 	muleq	r1, pc, r6	; <UNPREDICTABLE>
 450:	00015400 	andeq	r5, r1, r0, lsl #8
 454:	f3000400 	vshl.u8	d0, d0, d0
 458:	549f5001 	ldrpl	r5, [pc], #1	; 460 <MSP_SIZE+0x60>
 45c:	6c000001 	stcvs	0, cr0, [r0], {1}
 460:	01000001 	tsteq	r0, r1
 464:	016c5000 	cmneq	ip, r0
 468:	01740000 	cmneq	r4, r0
 46c:	00030000 	andeq	r0, r3, r0
 470:	749f0170 	ldrvc	r0, [pc], #368	; 478 <MSP_SIZE+0x78>
 474:	90000001 	andls	r0, r0, r1
 478:	04000001 	streq	r0, [r0], #-1
 47c:	5001f300 	andpl	pc, r1, r0, lsl #6
 480:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 484:	00000000 	andeq	r0, r0, r0
 488:	0000c800 	andeq	ip, r0, r0, lsl #16
 48c:	00010c00 	andeq	r0, r1, r0, lsl #24
 490:	51000100 	mrspl	r0, (UNDEF: 16)
 494:	0000010c 	andeq	r0, r0, ip, lsl #2
 498:	00000154 	andeq	r0, r0, r4, asr r1
 49c:	01f30004 	mvnseq	r0, r4
 4a0:	01549f51 	cmpeq	r4, r1, asr pc
 4a4:	01580000 	cmpeq	r8, r0
 4a8:	00010000 	andeq	r0, r1, r0
 4ac:	00015851 	andeq	r5, r1, r1, asr r8
 4b0:	00019000 	andeq	r9, r1, r0
 4b4:	f3000400 	vshl.u8	d0, d0, d0
 4b8:	009f5101 	addseq	r5, pc, r1, lsl #2
 4bc:	00000000 	andeq	r0, r0, r0
 4c0:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
 4c4:	30000000 	andcc	r0, r0, r0
 4c8:	01000001 	tsteq	r0, r1
 4cc:	01305200 	teqeq	r0, r0, lsl #4
 4d0:	01540000 	cmpeq	r4, r0
 4d4:	00040000 	andeq	r0, r4, r0
 4d8:	9f5201f3 	svcls	0x005201f3
 4dc:	00000154 	andeq	r0, r0, r4, asr r1
 4e0:	00000170 	andeq	r0, r0, r0, ror r1
 4e4:	70520001 	subsvc	r0, r2, r1
 4e8:	90000001 	andls	r0, r0, r1
 4ec:	04000001 	streq	r0, [r0], #-1
 4f0:	5201f300 	andpl	pc, r1, #0, 6
 4f4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 4f8:	00000000 	andeq	r0, r0, r0
 4fc:	0000c800 	andeq	ip, r0, r0, lsl #16
 500:	00012e00 	andeq	r2, r1, r0, lsl #28
 504:	53000100 	movwpl	r0, #256	; 0x100
 508:	0000012e 	andeq	r0, r0, lr, lsr #2
 50c:	00000154 	andeq	r0, r0, r4, asr r1
 510:	01f30004 	mvnseq	r0, r4
 514:	01549f53 	cmpeq	r4, r3, asr pc
 518:	015e0000 	cmpeq	lr, r0
 51c:	00010000 	andeq	r0, r1, r0
 520:	00015e53 	andeq	r5, r1, r3, asr lr
 524:	00019000 	andeq	r9, r1, r0
 528:	f3000400 	vshl.u8	d0, d0, d0
 52c:	009f5301 	addseq	r5, pc, r1, lsl #6
 530:	00000000 	andeq	r0, r0, r0
 534:	da000000 	ble	53c <MSP_SIZE+0x13c>
 538:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
 53c:	01000001 	tsteq	r0, r1
 540:	010e5700 	tsteq	lr, r0, lsl #14
 544:	01160000 	tsteq	r6, r0
 548:	00030000 	andeq	r0, r3, r0
 54c:	169f0b70 			; <UNDEFINED> instruction: 0x169f0b70
 550:	54000001 	strpl	r0, [r0], #-1
 554:	06000001 	streq	r0, [r0], -r1
 558:	5001f300 	andpl	pc, r1, r0, lsl #6
 55c:	009f0a23 	addseq	r0, pc, r3, lsr #20
 560:	00000000 	andeq	r0, r0, r0
 564:	4c000000 	stcmi	0, cr0, [r0], {-0}
 568:	54000001 	strpl	r0, [r0], #-1
 56c:	06000001 	streq	r0, [r0], -r1
 570:	5001f300 	andpl	pc, r1, r0, lsl #6
 574:	009f0a23 	addseq	r0, pc, r3, lsr #20
 578:	00000000 	andeq	r0, r0, r0
 57c:	5a000000 	bpl	584 <__RW_SIZE__>
 580:	72000001 	andvc	r0, r0, #1
 584:	01000001 	tsteq	r0, r1
 588:	01725100 	cmneq	r2, r0, lsl #2
 58c:	01740000 	cmneq	r4, r0
 590:	00030000 	andeq	r0, r3, r0
 594:	749f0b70 	ldrvc	r0, [pc], #2928	; 59c <__RW_SIZE__+0x18>
 598:	90000001 	andls	r0, r0, r1
 59c:	06000001 	streq	r0, [r0], -r1
 5a0:	5001f300 	andpl	pc, r1, r0, lsl #6
 5a4:	009f0a23 	addseq	r0, pc, r3, lsr #20
 5a8:	00000000 	andeq	r0, r0, r0
 5ac:	90000000 	andls	r0, r0, r0
 5b0:	96000001 	strls	r0, [r0], -r1
 5b4:	01000001 	tsteq	r0, r1
 5b8:	01965000 	orrseq	r5, r6, r0
 5bc:	01a00000 	moveq	r0, r0
 5c0:	00030000 	andeq	r0, r3, r0
 5c4:	009f0170 	addseq	r0, pc, r0, ror r1	; <UNPREDICTABLE>
 5c8:	00000000 	andeq	r0, r0, r0
 5cc:	a0000000 	andge	r0, r0, r0
 5d0:	ae000001 	cdpge	0, 0, cr0, cr0, cr1, {0}
 5d4:	01000001 	tsteq	r0, r1
 5d8:	01ae5000 			; <UNDEFINED> instruction: 0x01ae5000
 5dc:	01ba0000 			; <UNDEFINED> instruction: 0x01ba0000
 5e0:	00030000 	andeq	r0, r3, r0
 5e4:	009f0172 	addseq	r0, pc, r2, ror r1	; <UNPREDICTABLE>
 5e8:	00000000 	andeq	r0, r0, r0
 5ec:	b4000000 	strlt	r0, [r0], #-0
 5f0:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
 5f4:	01000001 	tsteq	r0, r1
 5f8:	01385000 	teqeq	r8, r0
 5fc:	01580000 	cmpeq	r8, r0
 600:	00040000 	andeq	r0, r4, r0
 604:	9f5001f3 	svcls	0x005001f3
	...
 610:	000000b8 	strheq	r0, [r0], -r8
 614:	000000e6 	andeq	r0, r0, r6, ror #1
 618:	9f470002 	svcls	0x00470002
	...
 624:	00000030 	andeq	r0, r0, r0, lsr r0
 628:	0000003c 	andeq	r0, r0, ip, lsr r0
 62c:	3c500001 	mrrccc	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
 630:	40000000 	andmi	r0, r0, r0
 634:	04000000 	streq	r0, [r0], #-0
 638:	20007000 	andcs	r7, r0, r0
 63c:	0000409f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 640:	00004c00 	andeq	r4, r0, r0, lsl #24
 644:	f3000400 	vshl.u8	d0, d0, d0
 648:	009f5001 	addseq	r5, pc, r1
	...
 654:	46000000 	strmi	r0, [r0], -r0
 658:	02000000 	andeq	r0, r0, #0
 65c:	469f3000 	ldrmi	r3, [pc], r0
 660:	4a000000 	bmi	668 <__RW_SIZE__+0xe4>
 664:	03000000 	movweq	r0, #0
 668:	9f787300 	svcls	0x00787300
 66c:	0000004a 	andeq	r0, r0, sl, asr #32
 670:	0000004c 	andeq	r0, r0, ip, asr #32
 674:	79730003 	ldmdbvc	r3!, {r0, r1}^
 678:	00004c9f 	muleq	r0, pc, ip	; <UNPREDICTABLE>
 67c:	00005400 	andeq	r5, r0, r0, lsl #8
 680:	72000600 	andvc	r0, r0, #0, 12
 684:	1c370600 	ldcne	6, cr0, [r7], #-0
 688:	0000549f 	muleq	r0, pc, r4	; <UNPREDICTABLE>
 68c:	00005900 	andeq	r5, r0, r0, lsl #18
 690:	73000300 	movwvc	r0, #768	; 0x300
 694:	006c9f78 	rsbeq	r9, ip, r8, ror pc
 698:	007a0000 	rsbseq	r0, sl, r0
 69c:	00010000 	andeq	r0, r1, r0
 6a0:	00007a54 	andeq	r7, r0, r4, asr sl
 6a4:	00007d00 	andeq	r7, r0, r0, lsl #26
 6a8:	51000100 	mrspl	r0, (UNDEF: 16)
 6ac:	0000007d 	andeq	r0, r0, sp, ror r0
 6b0:	0000007e 	andeq	r0, r0, lr, ror r0
 6b4:	7f740003 	svcvc	0x00740003
 6b8:	00007e9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
 6bc:	00009800 	andeq	r9, r0, r0, lsl #16
 6c0:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
 6d0:	00000014 	andeq	r0, r0, r4, lsl r0
 6d4:	14500001 	ldrbne	r0, [r0], #-1
 6d8:	1a000000 	bne	6e0 <__RW_SIZE__+0x15c>
 6dc:	01000000 	mrseq	r0, (UNDEF: 0)
 6e0:	001a5200 	andseq	r5, sl, r0, lsl #4
 6e4:	001c0000 	andseq	r0, ip, r0
 6e8:	00030000 	andeq	r0, r3, r0
 6ec:	1c9f7972 	ldcne	9, cr7, [pc], {114}	; 0x72
 6f0:	32000000 	andcc	r0, r0, #0
 6f4:	04000000 	streq	r0, [r0], #-0
 6f8:	5001f300 	andpl	pc, r1, r0, lsl #6
 6fc:	0000329f 	muleq	r0, pc, r2	; <UNPREDICTABLE>
 700:	00003c00 	andeq	r3, r0, r0, lsl #24
 704:	50000100 	andpl	r0, r0, r0, lsl #2
 708:	0000003c 	andeq	r0, r0, ip, lsr r0
 70c:	00000044 	andeq	r0, r0, r4, asr #32
 710:	00520001 	subseq	r0, r2, r1
 714:	00000000 	andeq	r0, r0, r0
 718:	18000000 	stmdane	r0, {}	; <UNPREDICTABLE>
 71c:	2c000000 	stccs	0, cr0, [r0], {-0}
 720:	01000000 	mrseq	r0, (UNDEF: 0)
 724:	00005000 	andeq	r5, r0, r0
 728:	00000000 	andeq	r0, r0, r0
 72c:	00200000 	eoreq	r0, r0, r0
 730:	00320000 	eorseq	r0, r2, r0
 734:	00010000 	andeq	r0, r1, r0
 738:	00000052 	andeq	r0, r0, r2, asr r0
	...
 744:	00000e00 	andeq	r0, r0, r0, lsl #28
 748:	50000100 	andpl	r0, r0, r0, lsl #2
 74c:	0000000e 	andeq	r0, r0, lr
 750:	00000034 	andeq	r0, r0, r4, lsr r0
 754:	34560001 	ldrbcc	r0, [r6], #-1
 758:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
 75c:	04000000 	streq	r0, [r0], #-0
 760:	5001f300 	andpl	pc, r1, r0, lsl #6
 764:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
 770:	00000e00 	andeq	r0, r0, r0, lsl #28
 774:	51000100 	mrspl	r0, (UNDEF: 16)
 778:	0000000e 	andeq	r0, r0, lr
 77c:	00000034 	andeq	r0, r0, r4, lsr r0
 780:	34570001 	ldrbcc	r0, [r7], #-1
 784:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
 788:	04000000 	streq	r0, [r0], #-0
 78c:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
 790:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
	...
 79c:	00000e00 	andeq	r0, r0, r0, lsl #28
 7a0:	30000200 	andcc	r0, r0, r0, lsl #4
 7a4:	00000e9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
 7a8:	00002600 	andeq	r2, r0, r0, lsl #12
 7ac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
 7b0:	00000026 	andeq	r0, r0, r6, lsr #32
 7b4:	00000029 	andeq	r0, r0, r9, lsr #32
 7b8:	29520001 	ldmdbcs	r2, {r0}^
 7bc:	2a000000 	bcs	7c4 <__RW_SIZE__+0x240>
 7c0:	03000000 	movweq	r0, #0
 7c4:	9f7f7400 	svcls	0x007f7400
 7c8:	0000002a 	andeq	r0, r0, sl, lsr #32
 7cc:	00000034 	andeq	r0, r0, r4, lsr r0
 7d0:	34540001 	ldrbcc	r0, [r4], #-1
 7d4:	38000000 	stmdacc	r0, {}	; <UNPREDICTABLE>
 7d8:	01000000 	mrseq	r0, (UNDEF: 0)
 7dc:	00005300 	andeq	r5, r0, r0, lsl #6
 7e0:	00000000 	andeq	r0, r0, r0
 7e4:	007c0000 	rsbseq	r0, ip, r0
 7e8:	00820000 	addeq	r0, r2, r0
 7ec:	00010000 	andeq	r0, r1, r0
 7f0:	00008250 	andeq	r8, r0, r0, asr r2
 7f4:	0000fe00 	andeq	pc, r0, r0, lsl #28
 7f8:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
 7fc:	000000fe 	strdeq	r0, [r0], -lr
 800:	0000016e 	andeq	r0, r0, lr, ror #2
 804:	01f30004 	mvnseq	r0, r4
 808:	016e9f50 	cmneq	lr, r0, asr pc
 80c:	01a60000 			; <UNDEFINED> instruction: 0x01a60000
 810:	00010000 	andeq	r0, r1, r0
 814:	00000054 	andeq	r0, r0, r4, asr r0
 818:	00000000 	andeq	r0, r0, r0
 81c:	00007c00 	andeq	r7, r0, r0, lsl #24
 820:	00008f00 	andeq	r8, r0, r0, lsl #30
 824:	51000100 	mrspl	r0, (UNDEF: 16)
 828:	0000008f 	andeq	r0, r0, pc, lsl #1
 82c:	000001a6 	andeq	r0, r0, r6, lsr #3
 830:	00550001 	subseq	r0, r5, r1
 834:	00000000 	andeq	r0, r0, r0
 838:	7c000000 	stcvc	0, cr0, [r0], {-0}
 83c:	8f000000 	svchi	0x00000000
 840:	01000000 	mrseq	r0, (UNDEF: 0)
 844:	008f5200 	addeq	r5, pc, r0, lsl #4
 848:	01a60000 			; <UNDEFINED> instruction: 0x01a60000
 84c:	00010000 	andeq	r0, r1, r0
 850:	00000056 	andeq	r0, r0, r6, asr r0
 854:	00000000 	andeq	r0, r0, r0
 858:	00009000 	andeq	r9, r0, r0
 85c:	0000fe00 	andeq	pc, r0, r0, lsl #28
 860:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
 864:	000000fe 	strdeq	r0, [r0], -lr
 868:	0000016e 	andeq	r0, r0, lr, ror #2
 86c:	01f30004 	mvnseq	r0, r4
 870:	016e9f50 	cmneq	lr, r0, asr pc
 874:	01a60000 			; <UNDEFINED> instruction: 0x01a60000
 878:	00010000 	andeq	r0, r1, r0
 87c:	00000054 	andeq	r0, r0, r4, asr r0
 880:	00000000 	andeq	r0, r0, r0
 884:	0001a800 	andeq	sl, r1, r0, lsl #16
 888:	0001ac00 	andeq	sl, r1, r0, lsl #24
 88c:	50000100 	andpl	r0, r0, r0, lsl #2
 890:	000001ac 	andeq	r0, r0, ip, lsr #3
 894:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 898:	01f30004 	mvnseq	r0, r4
 89c:	00009f50 	andeq	r9, r0, r0, asr pc
 8a0:	00000000 	andeq	r0, r0, r0
 8a4:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
 8a8:	01b50000 			; <UNDEFINED> instruction: 0x01b50000
 8ac:	00010000 	andeq	r0, r1, r0
 8b0:	0001b551 	andeq	fp, r1, r1, asr r5
 8b4:	0001b800 	andeq	fp, r1, r0, lsl #16
 8b8:	f3000400 	vshl.u8	d0, d0, d0
 8bc:	009f5101 	addseq	r5, pc, r1, lsl #2
 8c0:	00000000 	andeq	r0, r0, r0
 8c4:	a8000000 	stmdage	r0, {}	; <UNPREDICTABLE>
 8c8:	b5000001 	strlt	r0, [r0, #-1]
 8cc:	01000001 	tsteq	r0, r1
 8d0:	01b55200 			; <UNDEFINED> instruction: 0x01b55200
 8d4:	01b80000 			; <UNDEFINED> instruction: 0x01b80000
 8d8:	00040000 	andeq	r0, r4, r0
 8dc:	9f5201f3 	svcls	0x005201f3
	...
 8e8:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
 8ec:	000001bc 			; <UNDEFINED> instruction: 0x000001bc
 8f0:	bc500001 	mrrclt	0, 0, r0, r0, cr1	; <UNPREDICTABLE>
 8f4:	c8000001 	stmdagt	r0, {r0}
 8f8:	04000001 	streq	r0, [r0], #-1
 8fc:	5001f300 	andpl	pc, r1, r0, lsl #6
 900:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 904:	00000000 	andeq	r0, r0, r0
 908:	0001b800 	andeq	fp, r1, r0, lsl #16
 90c:	0001c500 	andeq	ip, r1, r0, lsl #10
 910:	51000100 	mrspl	r0, (UNDEF: 16)
 914:	000001c5 	andeq	r0, r0, r5, asr #3
 918:	000001c8 	andeq	r0, r0, r8, asr #3
 91c:	01f30004 	mvnseq	r0, r4
 920:	00009f51 	andeq	r9, r0, r1, asr pc
 924:	00000000 	andeq	r0, r0, r0
 928:	01b80000 			; <UNDEFINED> instruction: 0x01b80000
 92c:	01c50000 	biceq	r0, r5, r0
 930:	00010000 	andeq	r0, r1, r0
 934:	0001c552 	andeq	ip, r1, r2, asr r5
 938:	0001c800 	andeq	ip, r1, r0, lsl #16
 93c:	f3000400 	vshl.u8	d0, d0, d0
 940:	009f5201 	addseq	r5, pc, r1, lsl #4
 944:	00000000 	andeq	r0, r0, r0
 948:	c8000000 	stmdagt	r0, {}	; <UNPREDICTABLE>
 94c:	cc000001 	stcgt	0, cr0, [r0], {1}
 950:	01000001 	tsteq	r0, r1
 954:	01cc5000 	biceq	r5, ip, r0
 958:	01d80000 	bicseq	r0, r8, r0
 95c:	00040000 	andeq	r0, r4, r0
 960:	9f5001f3 	svcls	0x005001f3
	...
 96c:	000001c8 	andeq	r0, r0, r8, asr #3
 970:	000001d5 	ldrdeq	r0, [r0], -r5
 974:	d5510001 	ldrble	r0, [r1, #-1]
 978:	d8000001 	stmdale	r0, {r0}
 97c:	04000001 	streq	r0, [r0], #-1
 980:	5101f300 	mrspl	pc, SP_irq	; <UNPREDICTABLE>
 984:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 988:	00000000 	andeq	r0, r0, r0
 98c:	0001c800 	andeq	ip, r1, r0, lsl #16
 990:	0001d500 	andeq	sp, r1, r0, lsl #10
 994:	52000100 	andpl	r0, r0, #0, 2
 998:	000001d5 	ldrdeq	r0, [r0], -r5
 99c:	000001d8 	ldrdeq	r0, [r0], -r8
 9a0:	01f30004 	mvnseq	r0, r4
 9a4:	00009f52 	andeq	r9, r0, r2, asr pc
 9a8:	00000000 	andeq	r0, r0, r0
 9ac:	02700000 	rsbseq	r0, r0, #0
 9b0:	02860000 	addeq	r0, r6, #0
 9b4:	00010000 	andeq	r0, r1, r0
 9b8:	00028650 	andeq	r8, r2, r0, asr r6
 9bc:	0002c000 	andeq	ip, r2, r0
 9c0:	55000100 	strpl	r0, [r0, #-256]	; 0xffffff00
 9c4:	000002c0 	andeq	r0, r0, r0, asr #5
 9c8:	000002c5 	andeq	r0, r0, r5, asr #5
 9cc:	c5500001 	ldrbgt	r0, [r0, #-1]
 9d0:	c8000002 	stmdagt	r0, {r1}
 9d4:	01000002 	tsteq	r0, r2
 9d8:	00005500 	andeq	r5, r0, r0, lsl #10
 9dc:	00000000 	andeq	r0, r0, r0
 9e0:	02d20000 	sbcseq	r0, r2, #0
 9e4:	02fc0000 	rscseq	r0, ip, #0
 9e8:	00050000 	andeq	r0, r5, r0
 9ec:	1a3f0074 	bne	fc0bc4 <__RW_SIZE__+0xfc0640>
 9f0:	00030e9f 	muleq	r3, pc, lr	; <UNPREDICTABLE>
 9f4:	00032200 	andeq	r2, r3, r0, lsl #4
 9f8:	74000500 	strvc	r0, [r0], #-1280	; 0xfffffb00
 9fc:	9f1a3f00 	svcls	0x001a3f00
	...
 a08:	00000308 	andeq	r0, r0, r8, lsl #6
 a0c:	0000030e 	andeq	r0, r0, lr, lsl #6
 a10:	9f3b0002 	svcls	0x003b0002
	...
 a1c:	00000330 	andeq	r0, r0, r0, lsr r3
 a20:	0000035a 	andeq	r0, r0, sl, asr r3
 a24:	00740005 	rsbseq	r0, r4, r5
 a28:	6c9f1a3f 	vldmiavs	pc, {s2-s64}
 a2c:	80000003 	andhi	r0, r0, r3
 a30:	05000003 	streq	r0, [r0, #-3]
 a34:	3f007400 	svccc	0x00007400
 a38:	00009f1a 	andeq	r9, r0, sl, lsl pc
 a3c:	00000000 	andeq	r0, r0, r0
 a40:	03660000 	cmneq	r6, #0
 a44:	036c0000 	cmneq	ip, #0
 a48:	00020000 	andeq	r0, r2, r0
 a4c:	00009f3c 	andeq	r9, r0, ip, lsr pc
 a50:	00000000 	andeq	r0, r0, r0
 a54:	038c0000 	orreq	r0, ip, #0
 a58:	03960000 	orrseq	r0, r6, #0
 a5c:	00050000 	andeq	r0, r5, r0
 a60:	1a3f0074 	bne	fc0c38 <__RW_SIZE__+0xfc06b4>
 a64:	0003ca9f 	muleq	r3, pc, sl	; <UNPREDICTABLE>
 a68:	0003de00 	andeq	sp, r3, r0, lsl #28
 a6c:	74000500 	strvc	r0, [r0], #-1280	; 0xfffffb00
 a70:	9f1a3f00 	svcls	0x001a3f00
	...
 a7c:	000003c4 	andeq	r0, r0, r4, asr #7
 a80:	000003ca 	andeq	r0, r0, sl, asr #7
 a84:	9f3d0002 	svcls	0x003d0002
	...
 a90:	000003ec 	andeq	r0, r0, ip, ror #7
 a94:	00000418 	andeq	r0, r0, r8, lsl r4
 a98:	00740005 	rsbseq	r0, r4, r5
 a9c:	2a9f1a3f 	bcs	fe7c73a0 <MSP_BASE+0xde7c23a0>
 aa0:	3e000004 	cdpcc	0, 0, cr0, cr0, cr4, {0}
 aa4:	05000004 	streq	r0, [r0, #-4]
 aa8:	3f007400 	svccc	0x00007400
 aac:	00009f1a 	andeq	r9, r0, sl, lsl pc
 ab0:	00000000 	andeq	r0, r0, r0
 ab4:	04240000 	strteq	r0, [r4], #-0
 ab8:	042a0000 	strteq	r0, [sl], #-0
 abc:	00020000 	andeq	r0, r2, r0
 ac0:	00009f3e 	andeq	r9, r0, lr, lsr pc
 ac4:	00000000 	andeq	r0, r0, r0
 ac8:	044c0000 	strbeq	r0, [ip], #-0
 acc:	04560000 	ldrbeq	r0, [r6], #-0
 ad0:	00050000 	andeq	r0, r5, r0
 ad4:	1a3f0074 	bne	fc0cac <__RW_SIZE__+0xfc0728>
 ad8:	00048a9f 	muleq	r4, pc, sl	; <UNPREDICTABLE>
 adc:	00049e00 	andeq	r9, r4, r0, lsl #28
 ae0:	74000500 	strvc	r0, [r0], #-1280	; 0xfffffb00
 ae4:	9f1a3f00 	svcls	0x001a3f00
	...
 af0:	00000484 	andeq	r0, r0, r4, lsl #9
 af4:	0000048a 	andeq	r0, r0, sl, lsl #9
 af8:	9f3f0002 	svcls	0x003f0002
	...
 b04:	000004ac 	andeq	r0, r0, ip, lsr #9
 b08:	000004d8 	ldrdeq	r0, [r0], -r8
 b0c:	00740005 	rsbseq	r0, r4, r5
 b10:	ea9f1a3f 	b	fe7c7414 <MSP_BASE+0xde7c2414>
 b14:	fe000004 	cdp2	0, 0, cr0, cr0, cr4, {0}
 b18:	05000004 	streq	r0, [r0, #-4]
 b1c:	3f007400 	svccc	0x00007400
 b20:	00009f1a 	andeq	r9, r0, sl, lsl pc
 b24:	00000000 	andeq	r0, r0, r0
 b28:	04e40000 	strbteq	r0, [r4], #0
 b2c:	04ea0000 	strbteq	r0, [sl], #0
 b30:	00020000 	andeq	r0, r2, r0
 b34:	00009f40 	andeq	r9, r0, r0, asr #30
 b38:	00000000 	andeq	r0, r0, r0
 b3c:	050c0000 	streq	r0, [ip, #-0]
 b40:	05160000 	ldreq	r0, [r6, #-0]
 b44:	00050000 	andeq	r0, r5, r0
 b48:	1a3f0074 	bne	fc0d20 <__RW_SIZE__+0xfc079c>
 b4c:	00054a9f 	muleq	r5, pc, sl	; <UNPREDICTABLE>
 b50:	00055e00 	andeq	r5, r5, r0, lsl #28
 b54:	74000500 	strvc	r0, [r0], #-1280	; 0xfffffb00
 b58:	9f1a3f00 	svcls	0x001a3f00
	...
 b64:	00000544 	andeq	r0, r0, r4, asr #10
 b68:	0000054a 	andeq	r0, r0, sl, asr #10
 b6c:	9f410002 	svcls	0x00410002
	...
 b7c:	00000011 	andeq	r0, r0, r1, lsl r0
 b80:	11500001 	cmpne	r0, r1
 b84:	48000000 	stmdami	r0, {}	; <UNPREDICTABLE>
 b88:	04000000 	streq	r0, [r0], #-0
 b8c:	5001f300 	andpl	pc, r1, r0, lsl #6
 b90:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 b94:	00000000 	andeq	r0, r0, r0
 b98:	00008000 	andeq	r8, r0, r0
 b9c:	00009100 	andeq	r9, r0, r0, lsl #2
 ba0:	50000100 	andpl	r0, r0, r0, lsl #2
 ba4:	00000091 	muleq	r0, r1, r0
 ba8:	000000c8 	andeq	r0, r0, r8, asr #1
 bac:	01f30004 	mvnseq	r0, r4
 bb0:	00009f50 	andeq	r9, r0, r0, asr pc
 bb4:	00000000 	andeq	r0, r0, r0
 bb8:	00680000 	rsbeq	r0, r8, r0
 bbc:	00960000 	addseq	r0, r6, r0
 bc0:	00010000 	andeq	r0, r1, r0
 bc4:	00009650 	andeq	r9, r0, r0, asr r6
 bc8:	00014c00 	andeq	r4, r1, r0, lsl #24
 bcc:	f3000400 	vshl.u8	d0, d0, d0
 bd0:	009f5001 	addseq	r5, pc, r1
 bd4:	00000000 	andeq	r0, r0, r0
 bd8:	b6000000 	strlt	r0, [r0], -r0
 bdc:	bc000000 	stclt	0, cr0, [r0], {-0}
 be0:	02000000 	andeq	r0, r0, #0
 be4:	bc9f3000 	ldclt	0, cr3, [pc], {0}
 be8:	e8000000 	stmda	r0, {}	; <UNPREDICTABLE>
 bec:	01000000 	mrseq	r0, (UNDEF: 0)
 bf0:	00005100 	andeq	r5, r0, r0, lsl #2
 bf4:	00000000 	andeq	r0, r0, r0
 bf8:	014c0000 	mrseq	r0, (UNDEF: 76)
 bfc:	01520000 	cmpeq	r2, r0
 c00:	00010000 	andeq	r0, r1, r0
 c04:	00015250 	andeq	r5, r1, r0, asr r2
 c08:	0001ae00 	andeq	sl, r1, r0, lsl #28
 c0c:	f3000400 	vshl.u8	d0, d0, d0
 c10:	009f5001 	addseq	r5, pc, r1
 c14:	00000000 	andeq	r0, r0, r0
 c18:	f4000000 	vst4.8	{d0-d3}, [r0], r0
 c1c:	f8000001 			; <UNDEFINED> instruction: 0xf8000001
 c20:	01000001 	tsteq	r0, r1
 c24:	01f85000 	mvnseq	r5, r0
 c28:	020c0000 	andeq	r0, ip, #0
 c2c:	00040000 	andeq	r0, r4, r0
 c30:	9f5001f3 	svcls	0x005001f3
	...
 c3c:	00000258 	andeq	r0, r0, r8, asr r2
 c40:	00000269 	andeq	r0, r0, r9, ror #4
 c44:	69500001 	ldmdbvs	r0, {r0}^
 c48:	b0000002 	andlt	r0, r0, r2
 c4c:	04000002 	streq	r0, [r0], #-2
 c50:	5001f300 	andpl	pc, r1, r0, lsl #6
 c54:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 c58:	00000000 	andeq	r0, r0, r0
 c5c:	0002d400 	andeq	sp, r2, r0, lsl #8
 c60:	00033400 	andeq	r3, r3, r0, lsl #8
 c64:	50000100 	andpl	r0, r0, r0, lsl #2
 c68:	00000334 	andeq	r0, r0, r4, lsr r3
 c6c:	0000037c 	andeq	r0, r0, ip, ror r3
 c70:	01f30004 	mvnseq	r0, r4
 c74:	00009f50 	andeq	r9, r0, r0, asr pc
 c78:	00000000 	andeq	r0, r0, r0
 c7c:	02d40000 	sbcseq	r0, r4, #0
 c80:	02e40000 	rsceq	r0, r4, #0
 c84:	00010000 	andeq	r0, r1, r0
 c88:	0002e451 	andeq	lr, r2, r1, asr r4
 c8c:	00030c00 	andeq	r0, r3, r0, lsl #24
 c90:	f3000400 	vshl.u8	d0, d0, d0
 c94:	0c9f5101 	ldfeqs	f5, [pc], {1}
 c98:	18000003 	stmdane	r0, {r0, r1}
 c9c:	01000003 	tsteq	r0, r3
 ca0:	03185100 	tsteq	r8, #0, 2
 ca4:	037c0000 	cmneq	ip, #0
 ca8:	00040000 	andeq	r0, r4, r0
 cac:	9f5101f3 	svcls	0x005101f3
	...
 cb8:	000002d8 	ldrdeq	r0, [r0], -r8
 cbc:	0000030c 	andeq	r0, r0, ip, lsl #6
 cc0:	9f4e0002 	svcls	0x004e0002
	...
 cd0:	00000039 	andeq	r0, r0, r9, lsr r0
 cd4:	39500001 	ldmdbcc	r0, {r0}^
 cd8:	b8000000 	stmdalt	r0, {}	; <UNPREDICTABLE>
 cdc:	04000000 	streq	r0, [r0], #-0
 ce0:	5001f300 	andpl	pc, r1, r0, lsl #6
 ce4:	0000009f 	muleq	r0, pc, r0	; <UNPREDICTABLE>
 ce8:	00000000 	andeq	r0, r0, r0
 cec:	00005800 	andeq	r5, r0, r0, lsl #16
 cf0:	0000b000 	andeq	fp, r0, r0
 cf4:	54000600 	strpl	r0, [r0], #-1536	; 0xfffffa00
 cf8:	93550493 	cmpls	r5, #-1828716544	; 0x93000000
 cfc:	00000004 	andeq	r0, r0, r4
 d00:	00000000 	andeq	r0, r0, r0
 d04:	00005e00 	andeq	r5, r0, r0, lsl #28
 d08:	00006100 	andeq	r6, r0, r0, lsl #2
 d0c:	50000100 	andpl	r0, r0, r0, lsl #2
 d10:	00000061 	andeq	r0, r0, r1, rrx
 d14:	0000008a 	andeq	r0, r0, sl, lsl #1
 d18:	8a560001 	bhi	1580d24 <__RW_SIZE__+0x15807a0>
 d1c:	8e000000 	cdphi	0, 0, cr0, cr0, cr0, {0}
 d20:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
 d24:	34007000 	strcc	r7, [r0], #-0
 d28:	22007625 	andcs	r7, r0, #38797312	; 0x2500000
 d2c:	00008e9f 	muleq	r0, pc, lr	; <UNPREDICTABLE>
 d30:	0000b000 	andeq	fp, r0, r0
 d34:	56000100 	strpl	r0, [r0], -r0, lsl #2
	...
 d40:	0000008a 	andeq	r0, r0, sl, lsl #1
 d44:	00000092 	muleq	r0, r2, r0
 d48:	00700005 	rsbseq	r0, r0, r5
 d4c:	929f1a3f 	addsls	r1, pc, #258048	; 0x3f000
 d50:	96000000 	strls	r0, [r0], -r0
 d54:	01000000 	mrseq	r0, (UNDEF: 0)
 d58:	00005000 	andeq	r5, r0, r0
 d5c:	00000000 	andeq	r0, r0, r0
 d60:	00f40000 	rscseq	r0, r4, r0
 d64:	01040000 	mrseq	r0, (UNDEF: 4)
 d68:	00010000 	andeq	r0, r1, r0
 d6c:	00010450 	andeq	r0, r1, r0, asr r4
 d70:	00011c00 	andeq	r1, r1, r0, lsl #24
 d74:	70000300 	andvc	r0, r0, r0, lsl #6
 d78:	011c9f01 	tsteq	ip, r1, lsl #30
 d7c:	01200000 	teqeq	r0, r0
 d80:	00010000 	andeq	r0, r1, r0
 d84:	00012450 	andeq	r2, r1, r0, asr r4
 d88:	00013600 	andeq	r3, r1, r0, lsl #12
 d8c:	70000300 	andvc	r0, r0, r0, lsl #6
 d90:	00009f01 	andeq	r9, r0, r1, lsl #30
 d94:	00000000 	andeq	r0, r0, r0
 d98:	01040000 	mrseq	r0, (UNDEF: 4)
 d9c:	011c0000 	tsteq	ip, r0
 da0:	00010000 	andeq	r0, r1, r0
 da4:	00012454 	andeq	r2, r1, r4, asr r4
 da8:	00013600 	andeq	r3, r1, r0, lsl #12
 dac:	54000100 	strpl	r0, [r0], #-256	; 0xffffff00
	...
 db8:	0000014e 	andeq	r0, r0, lr, asr #2
 dbc:	0000015a 	andeq	r0, r0, sl, asr r1
 dc0:	c0910004 	addsgt	r0, r1, r4
 dc4:	015a9f7d 	cmpeq	sl, sp, ror pc
 dc8:	01600000 	cmneq	r0, r0
 dcc:	00010000 	andeq	r0, r1, r0
 dd0:	00016054 	andeq	r6, r1, r4, asr r0
 dd4:	00017800 	andeq	r7, r1, r0, lsl #16
 dd8:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
 ddc:	01789f01 	cmneq	r8, r1, lsl #30
 de0:	017c0000 	cmneq	ip, r0
 de4:	00010000 	andeq	r0, r1, r0
 de8:	00018654 	andeq	r8, r1, r4, asr r6
 dec:	00019800 	andeq	r9, r1, r0, lsl #16
 df0:	74000300 	strvc	r0, [r0], #-768	; 0xfffffd00
 df4:	00009f01 	andeq	r9, r0, r1, lsl #30
 df8:	00000000 	andeq	r0, r0, r0
 dfc:	01600000 	cmneq	r0, r0
 e00:	01780000 	cmneq	r8, r0
 e04:	00010000 	andeq	r0, r1, r0
 e08:	00018650 	andeq	r8, r1, r0, asr r6
 e0c:	00019800 	andeq	r9, r1, r0, lsl #16
 e10:	50000100 	andpl	r0, r0, r0, lsl #2
	...
 e1c:	000001c8 	andeq	r0, r0, r8, asr #3
 e20:	000001e6 	andeq	r0, r0, r6, ror #3
 e24:	e6500001 	ldrb	r0, [r0], -r1
 e28:	ee000001 	cdp	0, 0, cr0, cr0, cr1, {0}
 e2c:	04000001 	streq	r0, [r0], #-1
 e30:	5001f300 	andpl	pc, r1, r0, lsl #6
 e34:	0001ee9f 	muleq	r1, pc, lr	; <UNPREDICTABLE>
 e38:	0001f000 	andeq	pc, r1, r0
 e3c:	50000100 	andpl	r0, r0, r0, lsl #2
 e40:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 e44:	0000020a 	andeq	r0, r0, sl, lsl #4
 e48:	01f30004 	mvnseq	r0, r4
 e4c:	00009f50 	andeq	r9, r0, r0, asr pc
 e50:	00000000 	andeq	r0, r0, r0
 e54:	01e80000 	mvneq	r0, r0
 e58:	01ee0000 	mvneq	r0, r0
 e5c:	00030000 	andeq	r0, r3, r0
 e60:	009f2508 	addseq	r2, pc, r8, lsl #10
 e64:	00000000 	andeq	r0, r0, r0
 e68:	Address 0x00000e68 is out of bounds.


Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	08003244 	stmdaeq	r0, {r2, r6, r9, ip, sp}
   4:	080032e6 	stmdaeq	r0, {r1, r2, r5, r6, r7, r9, ip, sp}
	...
  10:	000000de 	ldrdeq	r0, [r0], -lr
  14:	000000e2 	andeq	r0, r0, r2, ror #1
  18:	000000e6 	andeq	r0, r0, r6, ror #1
  1c:	000000ea 	andeq	r0, r0, sl, ror #1
  20:	0000010c 	andeq	r0, r0, ip, lsl #2
  24:	0000010e 	andeq	r0, r0, lr, lsl #2
  28:	0000011c 	andeq	r0, r0, ip, lsl r1
  2c:	0000011e 	andeq	r0, r0, lr, lsl r1
  30:	00000148 	andeq	r0, r0, r8, asr #2
  34:	0000014c 	andeq	r0, r0, ip, asr #2
	...
  40:	0000015a 	andeq	r0, r0, sl, asr r1
  44:	00000162 	andeq	r0, r0, r2, ror #2
  48:	00000170 	andeq	r0, r0, r0, ror r1
  4c:	00000172 	andeq	r0, r0, r2, ror r1
  50:	00000174 	andeq	r0, r0, r4, ror r1
  54:	0000017a 	andeq	r0, r0, sl, ror r1
  58:	0000017e 	andeq	r0, r0, lr, ror r1
  5c:	00000184 	andeq	r0, r0, r4, lsl #3
  60:	00000186 	andeq	r0, r0, r6, lsl #3
  64:	0000018a 	andeq	r0, r0, sl, lsl #3
	...
  70:	000000b8 	strheq	r0, [r0], -r8
  74:	000000c4 	andeq	r0, r0, r4, asr #1
  78:	000000c8 	andeq	r0, r0, r8, asr #1
  7c:	000000cc 	andeq	r0, r0, ip, asr #1
	...
  88:	0000012e 	andeq	r0, r0, lr, lsr #2
  8c:	00000132 	andeq	r0, r0, r2, lsr r1
  90:	00000138 	andeq	r0, r0, r8, lsr r1
  94:	00000140 	andeq	r0, r0, r0, asr #2
  98:	00000144 	andeq	r0, r0, r4, asr #2
  9c:	00000148 	andeq	r0, r0, r8, asr #2
	...
  a8:	00000002 	andeq	r0, r0, r2
  ac:	00000028 	andeq	r0, r0, r8, lsr #32
  b0:	0000002c 	andeq	r0, r0, ip, lsr #32
  b4:	0000002e 	andeq	r0, r0, lr, lsr #32
  b8:	00000032 	andeq	r0, r0, r2, lsr r0
  bc:	00000034 	andeq	r0, r0, r4, lsr r0
	...
  c8:	00000096 	muleq	r0, r6, r0
  cc:	00000098 	muleq	r0, r8, r0
  d0:	000000a6 	andeq	r0, r0, r6, lsr #1
  d4:	000000c0 	andeq	r0, r0, r0, asr #1
	...
  e0:	00000090 	muleq	r0, r0, r0
  e4:	0000011e 	andeq	r0, r0, lr, lsl r1
  e8:	0000016e 	andeq	r0, r0, lr, ror #2
  ec:	000001a6 	andeq	r0, r0, r6, lsr #3
	...
  f8:	000002ca 	andeq	r0, r0, sl, asr #5
  fc:	000002ec 	andeq	r0, r0, ip, ror #5
 100:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 104:	000002fc 	strdeq	r0, [r0], -ip
 108:	00000304 	andeq	r0, r0, r4, lsl #6
 10c:	00000308 	andeq	r0, r0, r8, lsl #6
 110:	0000030e 	andeq	r0, r0, lr, lsl #6
 114:	00000322 	andeq	r0, r0, r2, lsr #6
	...
 120:	000002ec 	andeq	r0, r0, ip, ror #5
 124:	000002f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 128:	000002fc 	strdeq	r0, [r0], -ip
 12c:	00000304 	andeq	r0, r0, r4, lsl #6
 130:	00000308 	andeq	r0, r0, r8, lsl #6
 134:	0000030e 	andeq	r0, r0, lr, lsl #6
	...
 140:	00000326 	andeq	r0, r0, r6, lsr #6
 144:	0000034a 	andeq	r0, r0, sl, asr #6
 148:	0000034e 	andeq	r0, r0, lr, asr #6
 14c:	0000035a 	andeq	r0, r0, sl, asr r3
 150:	00000362 	andeq	r0, r0, r2, ror #6
 154:	00000366 	andeq	r0, r0, r6, ror #6
 158:	0000036c 	andeq	r0, r0, ip, ror #6
 15c:	00000380 	andeq	r0, r0, r0, lsl #7
	...
 168:	0000034a 	andeq	r0, r0, sl, asr #6
 16c:	0000034e 	andeq	r0, r0, lr, asr #6
 170:	0000035a 	andeq	r0, r0, sl, asr r3
 174:	00000362 	andeq	r0, r0, r2, ror #6
 178:	00000366 	andeq	r0, r0, r6, ror #6
 17c:	0000036c 	andeq	r0, r0, ip, ror #6
	...
 188:	00000382 	andeq	r0, r0, r2, lsl #7
 18c:	000003a6 	andeq	r0, r0, r6, lsr #7
 190:	000003aa 	andeq	r0, r0, sl, lsr #7
 194:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
 198:	000003c0 	andeq	r0, r0, r0, asr #7
 19c:	000003c4 	andeq	r0, r0, r4, asr #7
 1a0:	000003ca 	andeq	r0, r0, sl, asr #7
 1a4:	000003de 	ldrdeq	r0, [r0], -lr
	...
 1b0:	000003a6 	andeq	r0, r0, r6, lsr #7
 1b4:	000003aa 	andeq	r0, r0, sl, lsr #7
 1b8:	000003b8 			; <UNDEFINED> instruction: 0x000003b8
 1bc:	000003c0 	andeq	r0, r0, r0, asr #7
 1c0:	000003c4 	andeq	r0, r0, r4, asr #7
 1c4:	000003ca 	andeq	r0, r0, sl, asr #7
	...
 1d0:	000003e2 	andeq	r0, r0, r2, ror #7
 1d4:	00000406 	andeq	r0, r0, r6, lsl #8
 1d8:	0000040a 	andeq	r0, r0, sl, lsl #8
 1dc:	00000418 	andeq	r0, r0, r8, lsl r4
 1e0:	00000420 	andeq	r0, r0, r0, lsr #8
 1e4:	00000424 	andeq	r0, r0, r4, lsr #8
 1e8:	0000042a 	andeq	r0, r0, sl, lsr #8
 1ec:	0000043e 	andeq	r0, r0, lr, lsr r4
	...
 1f8:	00000406 	andeq	r0, r0, r6, lsl #8
 1fc:	0000040a 	andeq	r0, r0, sl, lsl #8
 200:	00000418 	andeq	r0, r0, r8, lsl r4
 204:	00000420 	andeq	r0, r0, r0, lsr #8
 208:	00000424 	andeq	r0, r0, r4, lsr #8
 20c:	0000042a 	andeq	r0, r0, sl, lsr #8
	...
 218:	00000442 	andeq	r0, r0, r2, asr #8
 21c:	00000466 	andeq	r0, r0, r6, ror #8
 220:	0000046a 	andeq	r0, r0, sl, ror #8
 224:	00000478 	andeq	r0, r0, r8, ror r4
 228:	00000480 	andeq	r0, r0, r0, lsl #9
 22c:	00000484 	andeq	r0, r0, r4, lsl #9
 230:	0000048a 	andeq	r0, r0, sl, lsl #9
 234:	0000049e 	muleq	r0, lr, r4
	...
 240:	00000466 	andeq	r0, r0, r6, ror #8
 244:	0000046a 	andeq	r0, r0, sl, ror #8
 248:	00000478 	andeq	r0, r0, r8, ror r4
 24c:	00000480 	andeq	r0, r0, r0, lsl #9
 250:	00000484 	andeq	r0, r0, r4, lsl #9
 254:	0000048a 	andeq	r0, r0, sl, lsl #9
	...
 260:	000004a2 	andeq	r0, r0, r2, lsr #9
 264:	000004c6 	andeq	r0, r0, r6, asr #9
 268:	000004ca 	andeq	r0, r0, sl, asr #9
 26c:	000004d8 	ldrdeq	r0, [r0], -r8
 270:	000004e0 	andeq	r0, r0, r0, ror #9
 274:	000004e4 	andeq	r0, r0, r4, ror #9
 278:	000004ea 	andeq	r0, r0, sl, ror #9
 27c:	000004fe 	strdeq	r0, [r0], -lr
	...
 288:	000004c6 	andeq	r0, r0, r6, asr #9
 28c:	000004ca 	andeq	r0, r0, sl, asr #9
 290:	000004d8 	ldrdeq	r0, [r0], -r8
 294:	000004e0 	andeq	r0, r0, r0, ror #9
 298:	000004e4 	andeq	r0, r0, r4, ror #9
 29c:	000004ea 	andeq	r0, r0, sl, ror #9
	...
 2a8:	00000502 	andeq	r0, r0, r2, lsl #10
 2ac:	00000526 	andeq	r0, r0, r6, lsr #10
 2b0:	0000052a 	andeq	r0, r0, sl, lsr #10
 2b4:	00000538 	andeq	r0, r0, r8, lsr r5
 2b8:	00000540 	andeq	r0, r0, r0, asr #10
 2bc:	00000544 	andeq	r0, r0, r4, asr #10
 2c0:	0000054a 	andeq	r0, r0, sl, asr #10
 2c4:	0000055e 	andeq	r0, r0, lr, asr r5
	...
 2d0:	00000526 	andeq	r0, r0, r6, lsr #10
 2d4:	0000052a 	andeq	r0, r0, sl, lsr #10
 2d8:	00000538 	andeq	r0, r0, r8, lsr r5
 2dc:	00000540 	andeq	r0, r0, r0, asr #10
 2e0:	00000544 	andeq	r0, r0, r4, asr #10
 2e4:	0000054a 	andeq	r0, r0, sl, asr #10
	...
 2f0:	00000598 	muleq	r0, r8, r5
 2f4:	0000059c 	muleq	r0, ip, r5
 2f8:	000005a6 	andeq	r0, r0, r6, lsr #11
 2fc:	000005ae 	andeq	r0, r0, lr, lsr #11
 300:	000005b2 			; <UNDEFINED> instruction: 0x000005b2
 304:	000005b6 			; <UNDEFINED> instruction: 0x000005b6
	...
 310:	000005f8 	strdeq	r0, [r0], -r8
 314:	000005fc 	strdeq	r0, [r0], -ip
 318:	00000606 	andeq	r0, r0, r6, lsl #12
 31c:	0000060a 	andeq	r0, r0, sl, lsl #12
 320:	0000060e 	andeq	r0, r0, lr, lsl #12
 324:	00000612 	andeq	r0, r0, r2, lsl r6
 328:	00000618 	andeq	r0, r0, r8, lsl r6
 32c:	0000061c 	andeq	r0, r0, ip, lsl r6
	...
 338:	00000660 	andeq	r0, r0, r0, ror #12
 33c:	00000664 	andeq	r0, r0, r4, ror #12
 340:	00000670 	andeq	r0, r0, r0, ror r6
 344:	00000676 	andeq	r0, r0, r6, ror r6
 348:	0000067a 	andeq	r0, r0, sl, ror r6
 34c:	0000067e 	andeq	r0, r0, lr, ror r6
	...
 358:	000002d8 	ldrdeq	r0, [r0], -r8
 35c:	000002e4 	andeq	r0, r0, r4, ror #5
 360:	000002e8 	andeq	r0, r0, r8, ror #5
 364:	000002ec 	andeq	r0, r0, ip, ror #5
	...
 370:	0000033e 	andeq	r0, r0, lr, lsr r3
 374:	00000342 	andeq	r0, r0, r2, asr #6
 378:	0000034c 	andeq	r0, r0, ip, asr #6
 37c:	00000350 	andeq	r0, r0, r0, asr r3
 380:	00000358 	andeq	r0, r0, r8, asr r3
 384:	0000035c 	andeq	r0, r0, ip, asr r3
 388:	0000035e 	andeq	r0, r0, lr, asr r3
 38c:	00000362 	andeq	r0, r0, r2, ror #6
	...
 398:	000000fa 	strdeq	r0, [r0], -sl
 39c:	00000118 	andeq	r0, r0, r8, lsl r1
 3a0:	00000124 	andeq	r0, r0, r4, lsr #2
 3a4:	00000136 	andeq	r0, r0, r6, lsr r1
	...
 3b0:	0000014e 	andeq	r0, r0, lr, asr #2
 3b4:	0000017c 	andeq	r0, r0, ip, ror r1
 3b8:	00000186 	andeq	r0, r0, r6, lsl #3
 3bc:	00000198 	muleq	r0, r8, r1
	...
 3c8:	00000154 	andeq	r0, r0, r4, asr r1
 3cc:	00000174 	andeq	r0, r0, r4, ror r1
 3d0:	00000186 	andeq	r0, r0, r6, lsl #3
 3d4:	00000198 	muleq	r0, r8, r1
	...
 3e0:	000001d4 	ldrdeq	r0, [r0], -r4
 3e4:	000001d8 	ldrdeq	r0, [r0], -r8
 3e8:	000001e0 	andeq	r0, r0, r0, ror #3
 3ec:	000001e6 	andeq	r0, r0, r6, ror #3
 3f0:	000001e8 	andeq	r0, r0, r8, ror #3
 3f4:	000001ee 	andeq	r0, r0, lr, ror #3
	...
 400:	000001f0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 404:	000001f4 	strdeq	r0, [r0], -r4
 408:	000001f6 	strdeq	r0, [r0], -r6
 40c:	000001fc 	strdeq	r0, [r0], -ip
 410:	00000202 	andeq	r0, r0, r2, lsl #4
 414:	00000206 	andeq	r0, r0, r6, lsl #4
	...
